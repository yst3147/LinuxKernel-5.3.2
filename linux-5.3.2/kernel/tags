!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCT_TIMEOUT	acct.c	77;"	d	file:
ACTION_ONLY	seccomp.c	253;"	d	file:
ACTION_SAVE	trace/trace_events_hist.c	/^	ACTION_SAVE = 1,$/;"	e	enum:action_id	file:
ACTION_SNAPSHOT	trace/trace_events_hist.c	/^	ACTION_SNAPSHOT,$/;"	e	enum:action_id	file:
ACTION_TRACE	trace/trace_events_hist.c	/^	ACTION_TRACE,$/;"	e	enum:action_id	file:
ACTIVE_CACHELINE_MAX_OVERLAP	dma/debug.c	451;"	d	file:
ACTIVE_NODE_FRACTION	sched/fair.c	1333;"	d	file:
ACTUAL_NR_IRQS	irq/proc.c	449;"	d	file:
ADDR_FETCH_TYPE	trace/trace_probe.h	177;"	d
AFFINITY	irq/proc.c	/^	AFFINITY,$/;"	e	enum:__anon76	file:
AFFINITY_LIST	irq/proc.c	/^	AFFINITY_LIST,$/;"	e	enum:__anon76	file:
ALU	bpf/core.c	1325;"	d	file:
ALU	bpf/core.c	1347;"	d	file:
ARCH_MIN_MMSTRUCT_ALIGN	fork.c	2662;"	d	file:
ARCH_MIN_TASKALIGN	fork.c	791;"	d	file:
ARCH_SHF_SMALL	module.c	62;"	d	file:
ARCH_ZONE_DMA_BITS	dma/direct.c	23;"	d	file:
ARG1	bpf/core.c	54;"	d	file:
ARRAY_CREATE_FLAG_MASK	bpf/arraymap.c	16;"	d	file:
ASSIGN_FETCH_TYPE	trace/trace_probe.h	189;"	d
ASSIGN_FETCH_TYPE_ALIAS	trace/trace_probe.h	193;"	d
ASSIGN_FETCH_TYPE_END	trace/trace_probe.h	196;"	d
ASSIGN_OPS_HASH	trace/fgraph.c	19;"	d	file:
ASSIGN_OPS_HASH	trace/fgraph.c	23;"	d	file:
ASYNC_COOKIE_MAX	async.c	61;"	d	file:
AUDITSC_FAILURE	auditsc.c	84;"	d	file:
AUDITSC_INVALID	auditsc.c	82;"	d	file:
AUDITSC_SUCCESS	auditsc.c	83;"	d	file:
AUDIT_AUX_IPCPERM	auditsc.c	104;"	d	file:
AUDIT_AUX_PIDS	auditsc.c	107;"	d	file:
AUDIT_BACKLOG_WAIT_TIME	audit.c	121;"	d	file:
AUDIT_BUFSIZ	audit.c	186;"	d	file:
AUDIT_BUILD_CONTEXT	audit.h	/^	AUDIT_BUILD_CONTEXT,	\/* Create the per-task audit_context,$/;"	e	enum:audit_state
AUDIT_DISABLED	audit.c	67;"	d	file:
AUDIT_DISABLED	audit.h	/^	AUDIT_DISABLED,		\/* Do not create per-task audit_context.$/;"	e	enum:audit_state
AUDIT_FS_EVENTS	audit_fsnotify.c	38;"	d	file:
AUDIT_FS_WATCH	audit_watch.c	55;"	d	file:
AUDIT_INITIALIZED	audit.c	69;"	d	file:
AUDIT_INODE_BUCKETS	audit.h	205;"	d
AUDIT_NAMES	audit.h	18;"	d
AUDIT_NAME_FULL	audit.h	214;"	d
AUDIT_RECORD_CONTEXT	audit.h	/^	AUDIT_RECORD_CONTEXT	\/* Create the per-task audit_context,$/;"	e	enum:audit_state
AUDIT_UNINITIALIZED	audit.c	68;"	d	file:
AX	bpf/core.c	53;"	d	file:
BANNER	trace/trace_hwlat.c	52;"	d	file:
BASE_DEF	time/timer.c	189;"	d	file:
BASE_DEF	time/timer.c	193;"	d	file:
BASE_STD	time/timer.c	188;"	d	file:
BASE_STD	time/timer.c	192;"	d	file:
BENCHMARK_EVENT_STRLEN	trace/trace_benchmark.h	13;"	d
BITS_PER_BYTE_MASK	bpf/btf.c	161;"	d	file:
BITS_PER_BYTE_MASKED	bpf/btf.c	162;"	d	file:
BITS_PER_U128	bpf/btf.c	160;"	d	file:
BITS_ROUNDDOWN_BYTES	bpf/btf.c	163;"	d	file:
BITS_ROUNDUP_BYTES	bpf/btf.c	164;"	d	file:
BIT_MASK_DESCR	irq/debugfs.c	16;"	d	file:
BLK_TC_PREFLUSH	trace/blktrace.c	203;"	d	file:
BLK_TC_RAHEAD	trace/blktrace.c	202;"	d	file:
BLK_TRACE_DEVICE_ATTR	trace/blktrace.c	1640;"	d	file:
BM_BITS_PER_BLOCK	power/snapshot.c	339;"	d	file:
BM_BLOCK_MASK	power/snapshot.c	341;"	d	file:
BM_BLOCK_SHIFT	power/snapshot.c	340;"	d	file:
BM_END_OF_MAP	power/snapshot.c	337;"	d	file:
BM_ENTRIES_PER_LEVEL	power/snapshot.c	387;"	d	file:
BM_RTREE_LEVEL_MASK	power/snapshot.c	393;"	d	file:
BM_RTREE_LEVEL_SHIFT	power/snapshot.c	389;"	d	file:
BM_RTREE_LEVEL_SHIFT	power/snapshot.c	391;"	d	file:
BPF_BTF_GET_FD_BY_ID_LAST_FIELD	bpf/syscall.c	2675;"	d	file:
BPF_BTF_LOAD_LAST_FIELD	bpf/syscall.c	2662;"	d	file:
BPF_BUILD_ID	bpf/stackmap.c	152;"	d	file:
BPF_CALL_0	bpf/core.c	/^BPF_CALL_0(bpf_user_rnd_u32)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_get_current_cgroup_id)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_get_current_pid_tgid)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_get_current_uid_gid)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_get_numa_node_id)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_get_smp_processor_id)$/;"	f
BPF_CALL_0	bpf/helpers.c	/^BPF_CALL_0(bpf_ktime_get_ns)$/;"	f
BPF_CALL_0	trace/bpf_trace.c	/^BPF_CALL_0(bpf_get_current_task)$/;"	f
BPF_CALL_1	bpf/helpers.c	/^notrace BPF_CALL_1(bpf_spin_lock, struct bpf_spin_lock *, lock)$/;"	f
BPF_CALL_1	bpf/helpers.c	/^notrace BPF_CALL_1(bpf_spin_unlock, struct bpf_spin_lock *, lock)$/;"	f
BPF_CALL_1	trace/bpf_trace.c	/^BPF_CALL_1(bpf_send_signal, u32, sig)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_get_current_comm, char *, buf, u32, size)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_get_local_storage, struct bpf_map *, map, u64, flags)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_map_delete_elem, struct bpf_map *, map, void *, key)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_map_lookup_elem, struct bpf_map *, map, void *, key)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_map_peek_elem, struct bpf_map *, map, void *, value)$/;"	f
BPF_CALL_2	bpf/helpers.c	/^BPF_CALL_2(bpf_map_pop_elem, struct bpf_map *, map, void *, value)$/;"	f
BPF_CALL_2	trace/bpf_trace.c	/^BPF_CALL_2(bpf_current_task_under_cgroup, struct bpf_map *, map, u32, idx)$/;"	f
BPF_CALL_2	trace/bpf_trace.c	/^BPF_CALL_2(bpf_override_return, struct pt_regs *, regs, unsigned long, rc)$/;"	f
BPF_CALL_2	trace/bpf_trace.c	/^BPF_CALL_2(bpf_perf_event_read, struct bpf_map *, map, u64, flags)$/;"	f
BPF_CALL_3	bpf/cgroup.c	/^BPF_CALL_3(bpf_sysctl_get_current_value, struct bpf_sysctl_kern *, ctx,$/;"	f
BPF_CALL_3	bpf/cgroup.c	/^BPF_CALL_3(bpf_sysctl_get_new_value, struct bpf_sysctl_kern *, ctx, char *, buf,$/;"	f
BPF_CALL_3	bpf/cgroup.c	/^BPF_CALL_3(bpf_sysctl_set_new_value, struct bpf_sysctl_kern *, ctx,$/;"	f
BPF_CALL_3	bpf/helpers.c	/^BPF_CALL_3(bpf_map_push_elem, struct bpf_map *, map, void *, value, u64, flags)$/;"	f
BPF_CALL_3	bpf/stackmap.c	/^BPF_CALL_3(bpf_get_stackid, struct pt_regs *, regs, struct bpf_map *, map,$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_get_stackid_raw_tp, struct bpf_raw_tracepoint_args *, args,$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_get_stackid_tp, void *, tp_buff, struct bpf_map *, map,$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_perf_prog_read_value, struct bpf_perf_event_data_kern *, ctx,$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_probe_read, void *, dst, u32, size, const void *, unsafe_ptr)$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_probe_read_str, void *, dst, u32, size,$/;"	f
BPF_CALL_3	trace/bpf_trace.c	/^BPF_CALL_3(bpf_probe_write_user, void *, unsafe_ptr, const void *, src,$/;"	f
BPF_CALL_4	bpf/cgroup.c	/^BPF_CALL_4(bpf_sysctl_get_name, struct bpf_sysctl_kern *, ctx, char *, buf,$/;"	f
BPF_CALL_4	bpf/helpers.c	/^BPF_CALL_4(bpf_map_update_elem, struct bpf_map *, map, void *, key,$/;"	f
BPF_CALL_4	bpf/helpers.c	/^BPF_CALL_4(bpf_strtol, const char *, buf, size_t, buf_len, u64, flags,$/;"	f
BPF_CALL_4	bpf/helpers.c	/^BPF_CALL_4(bpf_strtoul, const char *, buf, size_t, buf_len, u64, flags,$/;"	f
BPF_CALL_4	bpf/stackmap.c	/^BPF_CALL_4(bpf_get_stack, struct pt_regs *, regs, void *, buf, u32, size,$/;"	f
BPF_CALL_4	trace/bpf_trace.c	/^BPF_CALL_4(bpf_get_stack_raw_tp, struct bpf_raw_tracepoint_args *, args,$/;"	f
BPF_CALL_4	trace/bpf_trace.c	/^BPF_CALL_4(bpf_get_stack_tp, void *, tp_buff, void *, buf, u32, size,$/;"	f
BPF_CALL_4	trace/bpf_trace.c	/^BPF_CALL_4(bpf_perf_event_read_value, struct bpf_map *, map, u64, flags,$/;"	f
BPF_CALL_5	trace/bpf_trace.c	/^BPF_CALL_5(bpf_perf_event_output, struct pt_regs *, regs, struct bpf_map *, map,$/;"	f
BPF_CALL_5	trace/bpf_trace.c	/^BPF_CALL_5(bpf_perf_event_output_raw_tp, struct bpf_raw_tracepoint_args *, args,$/;"	f
BPF_CALL_5	trace/bpf_trace.c	/^BPF_CALL_5(bpf_perf_event_output_tp, void *, tp_buff, struct bpf_map *, map,$/;"	f
BPF_CALL_5	trace/bpf_trace.c	/^BPF_CALL_5(bpf_trace_printk, char *, fmt, u32, fmt_size, u64, arg1,$/;"	f
BPF_CGROUP_MAX_PROGS	bpf/cgroup.c	279;"	d	file:
BPF_COMPLEXITY_LIMIT_JMP_SEQ	bpf/verifier.c	171;"	d	file:
BPF_COMPLEXITY_LIMIT_STATES	bpf/verifier.c	172;"	d	file:
BPF_F_ATTACH_MASK	bpf/syscall.c	1870;"	d	file:
BPF_INSN_2_LBL	bpf/core.c	1304;"	d	file:
BPF_INSN_2_LBL	bpf/core.c	1315;"	d	file:
BPF_INSN_2_TBL	bpf/core.c	1274;"	d	file:
BPF_INSN_2_TBL	bpf/core.c	1289;"	d	file:
BPF_INSN_3_LBL	bpf/core.c	1305;"	d	file:
BPF_INSN_3_LBL	bpf/core.c	1314;"	d	file:
BPF_INSN_3_TBL	bpf/core.c	1275;"	d	file:
BPF_INSN_3_TBL	bpf/core.c	1288;"	d	file:
BPF_INSN_MAP	bpf/core.c	1136;"	d	file:
BPF_LOCAL_LIST_T_OFFSET	bpf/bpf_lru_list.h	13;"	d
BPF_LRU_LIST_T_ACTIVE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_ACTIVE,$/;"	e	enum:bpf_lru_list_type
BPF_LRU_LIST_T_FREE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_FREE,$/;"	e	enum:bpf_lru_list_type
BPF_LRU_LIST_T_INACTIVE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_INACTIVE,$/;"	e	enum:bpf_lru_list_type
BPF_LRU_LOCAL_LIST_T_FREE	bpf/bpf_lru_list.h	/^	BPF_LRU_LOCAL_LIST_T_FREE,$/;"	e	enum:bpf_lru_list_type
BPF_LRU_LOCAL_LIST_T_PENDING	bpf/bpf_lru_list.h	/^	BPF_LRU_LOCAL_LIST_T_PENDING,$/;"	e	enum:bpf_lru_list_type
BPF_MAIN_FUNC	bpf/verifier.c	1064;"	d	file:
BPF_MAP_CREATE_LAST_FIELD	bpf/syscall.c	545;"	d	file:
BPF_MAP_DELETE_ELEM_LAST_FIELD	bpf/syscall.c	972;"	d	file:
BPF_MAP_FREEZE_LAST_FIELD	bpf/syscall.c	1150;"	d	file:
BPF_MAP_GET_FD_BY_ID_LAST_FIELD	bpf/syscall.c	2163;"	d	file:
BPF_MAP_GET_NEXT_KEY_LAST_FIELD	bpf/syscall.c	1022;"	d	file:
BPF_MAP_LOOKUP_AND_DELETE_ELEM_LAST_FIELD	bpf/syscall.c	1088;"	d	file:
BPF_MAP_LOOKUP_ELEM_LAST_FIELD	bpf/syscall.c	724;"	d	file:
BPF_MAP_PTR	bpf/verifier.c	177;"	d	file:
BPF_MAP_PTR_POISON	bpf/verifier.c	175;"	d	file:
BPF_MAP_PTR_UNPRIV	bpf/verifier.c	174;"	d	file:
BPF_MAP_TYPE	bpf/syscall.c	1183;"	d	file:
BPF_MAP_TYPE	bpf/syscall.c	1186;"	d	file:
BPF_MAP_TYPE	bpf/syscall.c	46;"	d	file:
BPF_MAP_TYPE	bpf/syscall.c	50;"	d	file:
BPF_MAP_TYPE	bpf/verifier.c	28;"	d	file:
BPF_MAP_TYPE	bpf/verifier.c	31;"	d	file:
BPF_MAP_UPDATE_ELEM_LAST_FIELD	bpf/syscall.c	859;"	d	file:
BPF_MAX_REFCNT	bpf/syscall.c	656;"	d	file:
BPF_OBJ_FLAG_MASK	bpf/syscall.c	34;"	d	file:
BPF_OBJ_GET_INFO_BY_FD_LAST_FIELD	bpf/syscall.c	2631;"	d	file:
BPF_OBJ_GET_NEXT_ID_LAST_FIELD	bpf/syscall.c	2103;"	d	file:
BPF_OBJ_LAST_FIELD	bpf/syscall.c	1747;"	d	file:
BPF_PROG_ATTACH_LAST_FIELD	bpf/syscall.c	1868;"	d	file:
BPF_PROG_DETACH_LAST_FIELD	bpf/syscall.c	1967;"	d	file:
BPF_PROG_GET_FD_BY_ID_LAST_FIELD	bpf/syscall.c	2131;"	d	file:
BPF_PROG_LOAD_LAST_FIELD	bpf/syscall.c	1607;"	d	file:
BPF_PROG_QUERY_LAST_FIELD	bpf/syscall.c	2028;"	d	file:
BPF_PROG_TEST_RUN_LAST_FIELD	bpf/syscall.c	2071;"	d	file:
BPF_PROG_TYPE	bpf/syscall.c	1181;"	d	file:
BPF_PROG_TYPE	bpf/syscall.c	1185;"	d	file:
BPF_PROG_TYPE	bpf/syscall.c	45;"	d	file:
BPF_PROG_TYPE	bpf/syscall.c	49;"	d	file:
BPF_PROG_TYPE	bpf/verifier.c	26;"	d	file:
BPF_PROG_TYPE	bpf/verifier.c	30;"	d	file:
BPF_R0	bpf/core.c	37;"	d	file:
BPF_R1	bpf/core.c	38;"	d	file:
BPF_R10	bpf/core.c	47;"	d	file:
BPF_R2	bpf/core.c	39;"	d	file:
BPF_R3	bpf/core.c	40;"	d	file:
BPF_R4	bpf/core.c	41;"	d	file:
BPF_R5	bpf/core.c	42;"	d	file:
BPF_R6	bpf/core.c	43;"	d	file:
BPF_R7	bpf/core.c	44;"	d	file:
BPF_R8	bpf/core.c	45;"	d	file:
BPF_R9	bpf/core.c	46;"	d	file:
BPF_RAW_TRACEPOINT_OPEN_LAST_FIELD	bpf/syscall.c	1791;"	d	file:
BPF_STRTOX_BASE_MASK	bpf/helpers.c	362;"	d	file:
BPF_TASK_FD_QUERY_LAST_FIELD	bpf/syscall.c	2735;"	d	file:
BPF_TRACE_DEFN_x	trace/bpf_trace.c	1338;"	d	file:
BPF_TRACE_MAX_PROGS	trace/bpf_trace.c	1168;"	d	file:
BPF_TYPE_MAP	bpf/inode.c	/^	BPF_TYPE_MAP,$/;"	e	enum:bpf_type	file:
BPF_TYPE_PROG	bpf/inode.c	/^	BPF_TYPE_PROG,$/;"	e	enum:bpf_type	file:
BPF_TYPE_UNSPEC	bpf/inode.c	/^	BPF_TYPE_UNSPEC	= 0,$/;"	e	enum:bpf_type	file:
BRANCH	bpf/verifier.c	/^	BRANCH = 2,$/;"	e	enum:__anon66	file:
BRANCH_FLAGS	trace/trace.h	1200;"	d
BRANCH_FLAGS	trace/trace.h	1203;"	d
BTF_INFO_MASK	bpf/btf.c	167;"	d	file:
BTF_INT_MASK	bpf/btf.c	168;"	d	file:
BTF_MAX_SIZE	bpf/btf.c	176;"	d	file:
BTF_STR_OFFSET_VALID	bpf/btf.c	170;"	d	file:
BTF_TYPE_ID_VALID	bpf/btf.c	169;"	d	file:
BUFSZ	sysctl_binary.c	41;"	d	file:
BUF_MAX_DATA_SIZE	trace/ring_buffer.c	370;"	d	file:
BUF_PAGE_HDR_SIZE	trace/ring_buffer.c	125;"	d	file:
BUF_PAGE_SIZE	trace/ring_buffer.c	367;"	d	file:
BUF_THREAD_ID_SIZE	debug/gdbstub.c	406;"	d	file:
BUILD_LOCK_OPS	locking/spinlock.c	67;"	d	file:
BUSY_WORKER_HASH_ORDER	workqueue.c	/^	BUSY_WORKER_HASH_ORDER	= 6,		\/* 64 pointers *\/$/;"	e	enum:__anon17	file:
BW_SHIFT	sched/sched.h	1840;"	d
BW_UNIT	sched/sched.h	1841;"	d
BYTES_TO_BITS	trace/trace_probe.c	456;"	d	file:
C	trace/trace.c	1319;"	d	file:
C	trace/trace.c	1320;"	d	file:
C	trace/trace.h	1263;"	d
C	trace/trace.h	1264;"	d
C	trace/trace.h	1276;"	d
C	trace/trace.h	1277;"	d
C	trace/trace_events_filter.c	35;"	d	file:
C	trace/trace_events_filter.c	36;"	d	file:
C	trace/trace_events_filter.c	40;"	d	file:
C	trace/trace_events_filter.c	41;"	d	file:
C	trace/trace_events_filter.c	72;"	d	file:
C	trace/trace_events_filter.c	73;"	d	file:
C	trace/trace_events_filter.c	77;"	d	file:
C	trace/trace_events_filter.c	78;"	d	file:
C	trace/trace_events_hist.c	66;"	d	file:
C	trace/trace_events_hist.c	67;"	d	file:
C	trace/trace_events_hist.c	71;"	d	file:
C	trace/trace_events_hist.c	72;"	d	file:
C	trace/trace_probe.c	16;"	d	file:
C	trace/trace_probe.c	17;"	d	file:
C	trace/trace_probe.h	398;"	d
C	trace/trace_probe.h	399;"	d
CACHELINES_PER_PAGE	dma/debug.c	453;"	d	file:
CACHELINE_PER_PAGE_SHIFT	dma/debug.c	452;"	d	file:
CALLER_SAVED_REGS	bpf/verifier.c	850;"	d	file:
CAP_BSET	umh.c	34;"	d	file:
CAP_PI	umh.c	35;"	d	file:
CFLAGS_REMOVE_clock.o	sched/Makefile	/^CFLAGS_REMOVE_clock.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_core.o	events/Makefile	/^CFLAGS_REMOVE_core.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_irq_work.o	Makefile	/^CFLAGS_REMOVE_irq_work.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_lockdep.o	locking/Makefile	/^CFLAGS_REMOVE_lockdep.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_lockdep_proc.o	locking/Makefile	/^CFLAGS_REMOVE_lockdep_proc.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_mutex-debug.o	locking/Makefile	/^CFLAGS_REMOVE_mutex-debug.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_REMOVE_rtmutex-debug.o	locking/Makefile	/^CFLAGS_REMOVE_rtmutex-debug.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_core.o	sched/Makefile	/^CFLAGS_core.o := $(PROFILING) -fno-omit-frame-pointer$/;"	m
CFLAGS_kcov.o	Makefile	/^CFLAGS_kcov.o := $(call cc-option, -fno-conserve-stack -fno-stack-protector)$/;"	m
CFLAGS_sys_ni.o	Makefile	/^CFLAGS_sys_ni.o = $(DISABLE_LTO)$/;"	m
CFLAGS_trace_benchmark.o	trace/Makefile	/^CFLAGS_trace_benchmark.o := -I$(src)$/;"	m
CFLAGS_trace_events_filter.o	trace/Makefile	/^CFLAGS_trace_events_filter.o := -I$(src)$/;"	m
CFLAGS_trace_kprobe_selftest.o	trace/Makefile	/^CFLAGS_trace_kprobe_selftest.o = $(CC_FLAGS_FTRACE)$/;"	m
CFLAGS_trace_selftest_dynamic.o	trace/Makefile	/^CFLAGS_trace_selftest_dynamic.o = $(CC_FLAGS_FTRACE)$/;"	m
CGROUP_FILE_NAME_MAX	cgroup/cgroup.c	65;"	d	file:
CGROUP_FILE_NOTIFY_MIN_INTV	cgroup/cgroup.c	68;"	d	file:
CGROUP_FILE_PROCS	cgroup/cgroup-v1.c	/^	CGROUP_FILE_PROCS,$/;"	e	enum:cgroup_filetype	file:
CGROUP_FILE_TASKS	cgroup/cgroup-v1.c	/^	CGROUP_FILE_TASKS,$/;"	e	enum:cgroup_filetype	file:
CGROUP_FREEZER_ONLINE	cgroup/legacy_freezer.c	/^	CGROUP_FREEZER_ONLINE	= (1 << 0), \/* freezer is fully online *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING	cgroup/legacy_freezer.c	/^	CGROUP_FREEZING		= CGROUP_FREEZING_SELF | CGROUP_FREEZING_PARENT,$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING_PARENT	cgroup/legacy_freezer.c	/^	CGROUP_FREEZING_PARENT	= (1 << 2), \/* the parent freezer is freezing *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING_SELF	cgroup/legacy_freezer.c	/^	CGROUP_FREEZING_SELF	= (1 << 1), \/* this freezer is freezing *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FROZEN	cgroup/legacy_freezer.c	/^	CGROUP_FROZEN		= (1 << 3), \/* this and its descendants frozen *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_MGCTX_INIT	cgroup/cgroup-internal.h	139;"	d
CGROUP_PIDLIST_DESTROY_DELAY	cgroup/cgroup-v1.c	29;"	d	file:
CGROUP_TASKSET_INIT	cgroup/cgroup-internal.h	132;"	d
CG_SOCKOPT_ACCESS_FIELD	bpf/cgroup.c	1468;"	d	file:
CHAINHASH_BITS	locking/lockdep.c	351;"	d	file:
CHAINHASH_SIZE	locking/lockdep.c	352;"	d	file:
CHECK_ATTR	bpf/syscall.c	460;"	d	file:
CHECK_META	bpf/btf.c	/^	CHECK_META,$/;"	e	enum:verifier_phase	file:
CHECK_OFFSET	signal.c	4503;"	d	file:
CHECK_OFFSET	signal.c	4542;"	d	file:
CHECK_TYPE	bpf/btf.c	/^	CHECK_TYPE,$/;"	e	enum:verifier_phase	file:
CLASSHASH_BITS	locking/lockdep.c	340;"	d	file:
CLASSHASH_SIZE	locking/lockdep.c	341;"	d	file:
CMA_SIZE_MBYTES	dma/contiguous.c	28;"	d	file:
CMA_SIZE_MBYTES	dma/contiguous.c	30;"	d	file:
CMD_BUFLEN	debug/kdb/kdb_io.c	29;"	d	file:
CMD_BUFLEN	debug/kdb/kdb_main.c	812;"	d	file:
CMD_PREFIX	trace/trace.c	6913;"	d	file:
COMPAT_SYSCALL_DEFINE1	signal.c	/^COMPAT_SYSCALL_DEFINE1(sigpending, compat_old_sigset_t __user *, set32)$/;"	f
COMPAT_SYSCALL_DEFINE1	sys.c	/^COMPAT_SYSCALL_DEFINE1(sysinfo, struct compat_sysinfo __user *, info)$/;"	f
COMPAT_SYSCALL_DEFINE1	sys.c	/^COMPAT_SYSCALL_DEFINE1(times, struct compat_tms __user *, tbuf)$/;"	f
COMPAT_SYSCALL_DEFINE1	sysctl_binary.c	/^COMPAT_SYSCALL_DEFINE1(sysctl, struct compat_sysctl_args __user *, args)$/;"	f
COMPAT_SYSCALL_DEFINE2	futex.c	/^COMPAT_SYSCALL_DEFINE2(set_robust_list,$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(rt_sigpending, compat_sigset_t __user *, uset,$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(rt_sigsuspend, compat_sigset_t __user *, unewset, compat_size_t, sigsetsize)$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(sigaltstack,$/;"	f
COMPAT_SYSCALL_DEFINE2	sys.c	/^COMPAT_SYSCALL_DEFINE2(getrlimit, unsigned int, resource,$/;"	f
COMPAT_SYSCALL_DEFINE2	sys.c	/^COMPAT_SYSCALL_DEFINE2(getrusage, int, who, struct compat_rusage __user *, ru)$/;"	f
COMPAT_SYSCALL_DEFINE2	sys.c	/^COMPAT_SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,$/;"	f
COMPAT_SYSCALL_DEFINE2	sys.c	/^COMPAT_SYSCALL_DEFINE2(setrlimit, unsigned int, resource,$/;"	f
COMPAT_SYSCALL_DEFINE2	time/itimer.c	/^COMPAT_SYSCALL_DEFINE2(getitimer, int, which,$/;"	f
COMPAT_SYSCALL_DEFINE2	time/time.c	/^COMPAT_SYSCALL_DEFINE2(gettimeofday, struct old_timeval32 __user *, tv,$/;"	f
COMPAT_SYSCALL_DEFINE2	time/time.c	/^COMPAT_SYSCALL_DEFINE2(settimeofday, struct old_timeval32 __user *, tv,$/;"	f
COMPAT_SYSCALL_DEFINE3	compat.c	/^COMPAT_SYSCALL_DEFINE3(sched_getaffinity, compat_pid_t,  pid, unsigned int, len,$/;"	f
COMPAT_SYSCALL_DEFINE3	compat.c	/^COMPAT_SYSCALL_DEFINE3(sched_setaffinity, compat_pid_t, pid,$/;"	f
COMPAT_SYSCALL_DEFINE3	compat.c	/^COMPAT_SYSCALL_DEFINE3(sigprocmask, int, how,$/;"	f
COMPAT_SYSCALL_DEFINE3	futex.c	/^COMPAT_SYSCALL_DEFINE3(get_robust_list, int, pid,$/;"	f
COMPAT_SYSCALL_DEFINE3	signal.c	/^COMPAT_SYSCALL_DEFINE3(rt_sigqueueinfo,$/;"	f
COMPAT_SYSCALL_DEFINE3	signal.c	/^COMPAT_SYSCALL_DEFINE3(sigaction, int, sig,$/;"	f
COMPAT_SYSCALL_DEFINE3	time/itimer.c	/^COMPAT_SYSCALL_DEFINE3(setitimer, int, which,$/;"	f
COMPAT_SYSCALL_DEFINE3	time/posix-timers.c	/^COMPAT_SYSCALL_DEFINE3(timer_create, clockid_t, which_clock,$/;"	f
COMPAT_SYSCALL_DEFINE4	exit.c	/^COMPAT_SYSCALL_DEFINE4(wait4,$/;"	f
COMPAT_SYSCALL_DEFINE4	kexec.c	/^COMPAT_SYSCALL_DEFINE4(kexec_load, compat_ulong_t, entry,$/;"	f
COMPAT_SYSCALL_DEFINE4	ptrace.c	/^COMPAT_SYSCALL_DEFINE4(ptrace, compat_long_t, request, compat_long_t, pid,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigaction, int, sig,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigprocmask, int, how, compat_sigset_t __user *, nset,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigtimedwait_time32, compat_sigset_t __user *, uthese,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigtimedwait_time64, compat_sigset_t __user *, uthese,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_tgsigqueueinfo,$/;"	f
COMPAT_SYSCALL_DEFINE5	exit.c	/^COMPAT_SYSCALL_DEFINE5(waitid,$/;"	f
COMPAT_SYS_NI	time/posix-stubs.c	37;"	d	file:
COND_JMP	bpf/core.c	1491;"	d	file:
COND_JMP	bpf/core.c	1527;"	d	file:
COND_SYSCALL	sys_ni.c	26;"	d	file:
COND_SYSCALL_COMPAT	sys_ni.c	30;"	d	file:
CONT	bpf/core.c	1318;"	d	file:
CONT_JMP	bpf/core.c	1319;"	d	file:
COPY	trace/bpf_trace.c	1331;"	d	file:
COPY_CHUNK_SIZE	module.c	2833;"	d	file:
COPY_STATE_FN	bpf/verifier.c	538;"	d	file:
COPY_STATE_FN	bpf/verifier.c	557;"	d	file:
CPUACCT_STAT_NSTATS	sched/cpuacct.c	/^	CPUACCT_STAT_NSTATS,$/;"	e	enum:cpuacct_stat_index	file:
CPUACCT_STAT_SYSTEM	sched/cpuacct.c	/^	CPUACCT_STAT_SYSTEM,	\/* ... kernel mode *\/$/;"	e	enum:cpuacct_stat_index	file:
CPUACCT_STAT_USER	sched/cpuacct.c	/^	CPUACCT_STAT_USER,	\/* ... user mode *\/$/;"	e	enum:cpuacct_stat_index	file:
CPUMAP_BATCH	bpf/cpumap.c	247;"	d	file:
CPUPRI_IDLE	sched/cpupri.h	6;"	d
CPUPRI_INVALID	sched/cpupri.h	5;"	d
CPUPRI_NORMAL	sched/cpupri.h	7;"	d
CPUPRI_NR_PRIORITIES	sched/cpupri.h	3;"	d
CPU_DONT_CARE	taskstats.c	/^	CPU_DONT_CARE$/;"	e	enum:actions	file:
CPU_MAP_BULK_SIZE	bpf/cpumap.c	40;"	d	file:
CQ_MASK	locking/lockdep.c	1267;"	d	file:
CREATE_COOLDOWN	workqueue.c	/^	CREATE_COOLDOWN		= HZ,		\/* time to breath after fail *\/$/;"	e	enum:__anon17	file:
CREATE_TRACE_POINTS	bpf/core.c	2112;"	d	file:
CREATE_TRACE_POINTS	cgroup/cgroup.c	62;"	d	file:
CREATE_TRACE_POINTS	context_tracking.c	25;"	d	file:
CREATE_TRACE_POINTS	cpu.c	36;"	d	file:
CREATE_TRACE_POINTS	dma/swiotlb.c	49;"	d	file:
CREATE_TRACE_POINTS	fork.c	107;"	d	file:
CREATE_TRACE_POINTS	irq/matrix.c	39;"	d	file:
CREATE_TRACE_POINTS	locking/lockdep.c	62;"	d	file:
CREATE_TRACE_POINTS	module.c	58;"	d	file:
CREATE_TRACE_POINTS	printk/printk.c	56;"	d	file:
CREATE_TRACE_POINTS	rcu/update.c	44;"	d	file:
CREATE_TRACE_POINTS	rseq.c	18;"	d	file:
CREATE_TRACE_POINTS	sched/core.c	23;"	d	file:
CREATE_TRACE_POINTS	sched/core.c	7555;"	d	file:
CREATE_TRACE_POINTS	signal.c	50;"	d	file:
CREATE_TRACE_POINTS	softirq.c	29;"	d	file:
CREATE_TRACE_POINTS	time/alarmtimer.c	32;"	d	file:
CREATE_TRACE_POINTS	time/timer.c	55;"	d	file:
CREATE_TRACE_POINTS	trace/power-traces.c	14;"	d	file:
CREATE_TRACE_POINTS	trace/rpm-traces.c	15;"	d	file:
CREATE_TRACE_POINTS	trace/trace_benchmark.c	7;"	d	file:
CREATE_TRACE_POINTS	trace/trace_events_filter.c	2099;"	d	file:
CREATE_TRACE_POINTS	trace/trace_preemptirq.c	15;"	d	file:
CREATE_TRACE_POINTS	workqueue.c	359;"	d	file:
CSD_FLAG_LOCK	smp.c	/^	CSD_FLAG_LOCK		= 0x01,$/;"	e	enum:__anon82	file:
CSD_FLAG_SYNCHRONOUS	smp.c	/^	CSD_FLAG_SYNCHRONOUS	= 0x02,$/;"	e	enum:__anon82	file:
CSS_SET_HASH_BITS	cgroup/cgroup.c	918;"	d	file:
CS_CPU_EXCLUSIVE	cgroup/cpuset.c	/^	CS_CPU_EXCLUSIVE,$/;"	e	enum:__anon10	file:
CS_MEMORY_MIGRATE	cgroup/cpuset.c	/^	CS_MEMORY_MIGRATE,$/;"	e	enum:__anon10	file:
CS_MEM_EXCLUSIVE	cgroup/cpuset.c	/^	CS_MEM_EXCLUSIVE,$/;"	e	enum:__anon10	file:
CS_MEM_HARDWALL	cgroup/cpuset.c	/^	CS_MEM_HARDWALL,$/;"	e	enum:__anon10	file:
CS_NAME_LEN	time/timekeeping.h	30;"	d
CS_ONLINE	cgroup/cpuset.c	/^	CS_ONLINE,$/;"	e	enum:__anon10	file:
CS_SCHED_LOAD_BALANCE	cgroup/cpuset.c	/^	CS_SCHED_LOAD_BALANCE,$/;"	e	enum:__anon10	file:
CS_SPREAD_PAGE	cgroup/cpuset.c	/^	CS_SPREAD_PAGE,$/;"	e	enum:__anon10	file:
CS_SPREAD_SLAB	cgroup/cpuset.c	/^	CS_SPREAD_SLAB,$/;"	e	enum:__anon10	file:
CTL_DIR	sysctl_binary.c	34;"	d	file:
CTL_DNADR	sysctl_binary.c	39;"	d	file:
CTL_INT	sysctl_binary.c	36;"	d	file:
CTL_STR	sysctl_binary.c	35;"	d	file:
CTL_ULONG	sysctl_binary.c	37;"	d	file:
CTL_UUID	sysctl_binary.c	38;"	d	file:
CTRL_N	debug/kdb/kdb_main.c	1097;"	d	file:
CTRL_P	debug/kdb/kdb_main.c	1096;"	d	file:
CTX	bpf/core.c	55;"	d	file:
C_A_D	reboot.c	/^int C_A_D = 1;$/;"	v
DAEMON	debug/kdb/kdb_support.c	559;"	d	file:
DATAOF_TRACE_ENTRY	trace/trace_uprobe.c	33;"	d	file:
DATA_CNT	trace/trace_events_filter.c	2174;"	d	file:
DATA_REC	trace/trace_events_filter.c	2102;"	d	file:
DATA_REC	trace/trace_events_filter.c	2169;"	d	file:
DBG_PASS_EVENT	debug/debug_core.h	61;"	d
DBG_SWITCH_CPU_EVENT	debug/debug_core.h	63;"	d
DCPU_IS_SLAVE	debug/debug_core.h	35;"	d
DCPU_NEXT_MASTER	debug/debug_core.h	34;"	d
DCPU_SSTEP	debug/debug_core.h	36;"	d
DCPU_WANT_MASTER	debug/debug_core.h	33;"	d
DEBUG	dma/contiguous.c	14;"	d	file:
DEBUG	power/process.c	10;"	d	file:
DEBUG	trace/trace_mmiotrace.c	8;"	d	file:
DEBUGFS_FILENAME	time/test_udelay.c	21;"	d	file:
DEBUG_RWSEMS_WARN_ON	locking/rwsem.c	106;"	d	file:
DEBUG_RWSEMS_WARN_ON	locking/rwsem.c	115;"	d	file:
DEBUG_SHIFT	trace/ring_buffer.c	742;"	d	file:
DECLARE_BASIC_PRINT_TYPE_FUNC	trace/trace_probe.h	149;"	d
DECLARE_TASKLET	backtracetest.c	/^static DECLARE_TASKLET(backtrace_tasklet, &backtrace_test_irq_callback, 0);$/;"	v	file:
DEFAULT_CPU_TIME_MAX_PERCENT	events/core.c	412;"	d	file:
DEFAULT_DMA_COHERENT_POOL_SIZE	dma/remap.c	98;"	d	file:
DEFAULT_FETCH_TYPE	trace/trace_probe.h	172;"	d
DEFAULT_FETCH_TYPE_STR	trace/trace_probe.h	173;"	d
DEFAULT_ITERATIONS	time/test_udelay.c	19;"	d	file:
DEFAULT_LAT_THRESHOLD	trace/trace_hwlat.c	55;"	d	file:
DEFAULT_MAX_RCU_BLIMIT	rcu/tree.c	405;"	d	file:
DEFAULT_MAX_SAMPLE_RATE	events/core.c	410;"	d	file:
DEFAULT_RCU_BLIMIT	rcu/tree.c	404;"	d	file:
DEFAULT_RCU_QHIMARK	rcu/tree.c	407;"	d	file:
DEFAULT_RCU_QLOMARK	rcu/tree.c	409;"	d	file:
DEFAULT_REBOOT_MODE	reboot.c	/^enum reboot_mode reboot_mode DEFAULT_REBOOT_MODE;$/;"	v	typeref:enum:reboot_mode
DEFAULT_REBOOT_MODE	reboot.c	30;"	d	file:
DEFAULT_REBOOT_MODE	reboot.c	32;"	d	file:
DEFAULT_SAMPLE_PERIOD_NS	events/core.c	411;"	d	file:
DEFAULT_SAMPLE_WIDTH	trace/trace_hwlat.c	54;"	d	file:
DEFAULT_SAMPLE_WINDOW	trace/trace_hwlat.c	53;"	d	file:
DEFAULT_SRCU_EXP_HOLDOFF	rcu/srcutree.c	33;"	d	file:
DEFAULT_SYS_FILTER_MESSAGE	trace/trace_events_filter.c	17;"	d	file:
DEFINE_BASIC_PRINT_TYPE_FUNC	trace/trace_probe.c	33;"	d	file:
DEFINE_BPF_PROG_RUN	bpf/core.c	1567;"	d	file:
DEFINE_BPF_PROG_RUN_ARGS	bpf/core.c	1579;"	d	file:
DEFINE_CGROUP_MGCTX	cgroup/cgroup-internal.h	146;"	d
DEFINE_COMPARISON_PRED	trace/trace_events_filter.c	590;"	d	file:
DEFINE_EQUALITY_PRED	trace/trace_events_filter.c	629;"	d	file:
DEFINE_FIELD	trace/trace_probe.h	43;"	d
DEFINE_FIELD	trace/trace_probe.h	44;"	d
DEFINE_HIST_FIELD_FN	trace/trace_events_hist.c	248;"	d	file:
DEFINE_OUTPUT_COPY	events/internal.h	155;"	d
DEFINE_TRACING_MAP_CMP_FN	trace/tracing_map.c	148;"	d	file:
DEFINE_WW_MUTEX	locking/locktorture.c	/^static DEFINE_WW_MUTEX(torture_ww_mutex_0, &torture_ww_class);$/;"	v	file:
DEFINE_WW_MUTEX	locking/locktorture.c	/^static DEFINE_WW_MUTEX(torture_ww_mutex_1, &torture_ww_class);$/;"	v	file:
DEFINE_WW_MUTEX	locking/locktorture.c	/^static DEFINE_WW_MUTEX(torture_ww_mutex_2, &torture_ww_class);$/;"	v	file:
DEF_NOT_SUBREG	bpf/verifier.c	1040;"	d	file:
DEQUEUE_MOVE	sched/sched.h	1670;"	d
DEQUEUE_NOCLOCK	sched/sched.h	1671;"	d
DEQUEUE_SAVE	sched/sched.h	1669;"	d
DEQUEUE_SLEEP	sched/sched.h	1668;"	d
DEREGISTER	taskstats.c	/^	DEREGISTER,$/;"	e	enum:actions	file:
DETACH_GROUP	events/core.c	2056;"	d	file:
DEVKMSG_LOG_MASK_DEFAULT	printk/printk.c	115;"	d	file:
DEVKMSG_LOG_MASK_LOCK	printk/printk.c	/^	DEVKMSG_LOG_MASK_LOCK           = BIT(__DEVKMSG_LOG_BIT_LOCK),$/;"	e	enum:devkmsg_log_masks	file:
DEVKMSG_LOG_MASK_OFF	printk/printk.c	/^	DEVKMSG_LOG_MASK_OFF            = BIT(__DEVKMSG_LOG_BIT_OFF),$/;"	e	enum:devkmsg_log_masks	file:
DEVKMSG_LOG_MASK_ON	printk/printk.c	/^	DEVKMSG_LOG_MASK_ON             = BIT(__DEVKMSG_LOG_BIT_ON),$/;"	e	enum:devkmsg_log_masks	file:
DEV_CREATE_FLAG_MASK	bpf/devmap.c	46;"	d	file:
DEV_MAP_BULK_SIZE	bpf/devmap.c	49;"	d	file:
DISABLE_BRANCH_PROFILING	kcov.c	4;"	d	file:
DISABLE_BRANCH_PROFILING	locking/lockdep.c	29;"	d	file:
DISABLE_EVENT_STR	trace/trace.h	1615;"	d
DISABLE_EVENT_STR	trace/trace_events.c	2510;"	d	file:
DISABLE_HIST_STR	trace/trace.h	1617;"	d
DISCOVERED	bpf/verifier.c	/^	DISCOVERED = 0x10,$/;"	e	enum:__anon66	file:
DL_MAX_TRIES	sched/deadline.c	1822;"	d	file:
DL_SCALE	sched/sched.h	144;"	d
DMA_DEBUG_DYNAMIC_ENTRIES	dma/debug.c	36;"	d	file:
DMA_DEBUG_STACKTRACE_ENTRIES	dma/debug.c	51;"	d	file:
DO_ATTACH	sched/fair.c	3589;"	d	file:
DO_ATTACH	sched/fair.c	3835;"	d	file:
DST	bpf/core.c	50;"	d	file:
DST_OP	bpf/verifier.c	/^	DST_OP,		\/* register is used as destination operand *\/$/;"	e	enum:reg_arg_type	file:
DST_OP_NO_MARK	bpf/verifier.c	/^	DST_OP_NO_MARK	\/* same as above, check only, don't mark *\/$/;"	e	enum:reg_arg_type	file:
DYNTICK_IRQ_NONIDLE	rcu/rcu.h	16;"	d
DYN_FTRACE_TEST_NAME	trace/trace.h	810;"	d
DYN_FTRACE_TEST_NAME	trace/trace_selftest_dynamic.c	/^noinline __noclone int DYN_FTRACE_TEST_NAME(void)$/;"	f
DYN_FTRACE_TEST_NAME2	trace/trace.h	812;"	d
DYN_FTRACE_TEST_NAME2	trace/trace_selftest_dynamic.c	/^noinline __noclone int DYN_FTRACE_TEST_NAME2(void)$/;"	f
EFFECTIVE	irq/proc.c	/^	EFFECTIVE,$/;"	e	enum:__anon76	file:
EFFECTIVE_LIST	irq/proc.c	/^	EFFECTIVE_LIST,$/;"	e	enum:__anon76	file:
EMA_ALPHA_SHIFT	irq/timings.c	264;"	d	file:
EMA_ALPHA_VAL	irq/timings.c	263;"	d	file:
EMPTY_HASH	trace/ftrace.c	1044;"	d	file:
EM_MAX_COMPLEXITY	sched/topology.c	339;"	d	file:
ENABLE_EVENT_STR	trace/trace.h	1614;"	d
ENABLE_EVENT_STR	trace/trace_events.c	2509;"	d	file:
ENABLE_HIST_STR	trace/trace.h	1616;"	d
ENERGY_UTIL	sched/sched.h	/^	ENERGY_UTIL,$/;"	e	enum:schedutil_type
ENQUEUE_HEAD	sched/sched.h	1678;"	d
ENQUEUE_MIGRATED	sched/sched.h	1681;"	d
ENQUEUE_MIGRATED	sched/sched.h	1683;"	d
ENQUEUE_MOVE	sched/sched.h	1675;"	d
ENQUEUE_NOCLOCK	sched/sched.h	1676;"	d
ENQUEUE_REPLENISH	sched/sched.h	1679;"	d
ENQUEUE_RESTORE	sched/sched.h	1674;"	d
ENQUEUE_WAKEUP	sched/sched.h	1673;"	d
ENTRIES_PER_PAGE	trace/ftrace.c	1106;"	d	file:
ENTRY_SIZE	trace/ftrace.c	1105;"	d	file:
ENTRY_SIZE	trace/trace_event_perf.c	447;"	d	file:
ENTRY_SIZE	trace/trace_event_perf.c	464;"	d	file:
ERRORS	trace/trace_events_filter.c	/^enum { ERRORS };$/;"	e	enum:__anon30	file:
ERRORS	trace/trace_events_filter.c	52;"	d	file:
ERRORS	trace/trace_events_hist.c	/^enum { ERRORS };$/;"	e	enum:__anon45	file:
ERRORS	trace/trace_events_hist.c	25;"	d	file:
ERRORS	trace/trace_probe.h	/^enum { ERRORS };$/;"	e	enum:__anon24
ERRORS	trace/trace_probe.h	348;"	d
ERRORS	trace/trace_probe.h	349;"	d
ESCAPE_DELAY	debug/kdb/kdb_io.c	55;"	d	file:
ESCAPE_UDELAY	debug/kdb/kdb_io.c	54;"	d	file:
EVAL1	bpf/core.c	1595;"	d	file:
EVAL2	bpf/core.c	1596;"	d	file:
EVAL3	bpf/core.c	1597;"	d	file:
EVAL4	bpf/core.c	1598;"	d	file:
EVAL5	bpf/core.c	1599;"	d	file:
EVAL6	bpf/core.c	1600;"	d	file:
EVENT_ALL	events/core.c	/^	EVENT_ALL = EVENT_FLEXIBLE | EVENT_PINNED,$/;"	e	enum:event_type_t	file:
EVENT_BUF_SIZE	trace/trace_events.c	853;"	d	file:
EVENT_CMD_FL_NEEDS_REC	trace/trace.h	/^	EVENT_CMD_FL_NEEDS_REC		= 2,$/;"	e	enum:event_command_flags
EVENT_CMD_FL_POST_TRIGGER	trace/trace.h	/^	EVENT_CMD_FL_POST_TRIGGER	= 1,$/;"	e	enum:event_command_flags
EVENT_COUNT	locking/qspinlock_stat.h	18;"	d
EVENT_CPU	events/core.c	/^	EVENT_CPU = 0x8,$/;"	e	enum:event_type_t	file:
EVENT_DROPPED	trace/ring_buffer_benchmark.c	/^	EVENT_DROPPED,$/;"	e	enum:event_status	file:
EVENT_FLEXIBLE	events/core.c	/^	EVENT_FLEXIBLE = 0x1,$/;"	e	enum:event_type_t	file:
EVENT_FOUND	trace/ring_buffer_benchmark.c	/^	EVENT_FOUND,$/;"	e	enum:event_status	file:
EVENT_HASHSIZE	trace/trace_output.c	17;"	d	file:
EVENT_PINNED	events/core.c	/^	EVENT_PINNED = 0x2,$/;"	e	enum:event_type_t	file:
EVENT_TIME	events/core.c	/^	EVENT_TIME = 0x4,$/;"	e	enum:event_type_t	file:
EXPLORED	bpf/verifier.c	/^	EXPLORED = 0x20,$/;"	e	enum:__anon66	file:
EXPSIZE	acct.c	312;"	d	file:
EXPSIZE2	acct.c	353;"	d	file:
EXP_10s	sched/psi.c	162;"	d	file:
EXP_300s	sched/psi.c	164;"	d	file:
EXP_60s	sched/psi.c	163;"	d	file:
FALLTHROUGH	bpf/verifier.c	/^	FALLTHROUGH = 1,$/;"	e	enum:__anon66	file:
FAULTED_SIZE	trace/trace.c	6343;"	d	file:
FAULTED_STR	trace/trace.c	6342;"	d	file:
FAULT_SIZE_ID	trace/trace.c	6421;"	d	file:
FETCH_INSN_MAX	trace/trace_probe.h	128;"	d
FETCH_NOP_SYMBOL	trace/trace_probe.h	/^	FETCH_NOP_SYMBOL,	\/* Unresolved Symbol holder *\/$/;"	e	enum:fetch_op
FETCH_OP_ARG	trace/trace_probe.h	/^	FETCH_OP_ARG,		\/* Function argument : .param *\/$/;"	e	enum:fetch_op
FETCH_OP_COMM	trace/trace_probe.h	/^	FETCH_OP_COMM,		\/* Current comm *\/$/;"	e	enum:fetch_op
FETCH_OP_DEREF	trace/trace_probe.h	/^	FETCH_OP_DEREF,		\/* Dereference: .offset *\/$/;"	e	enum:fetch_op
FETCH_OP_END	trace/trace_probe.h	/^	FETCH_OP_END,$/;"	e	enum:fetch_op
FETCH_OP_FOFFS	trace/trace_probe.h	/^	FETCH_OP_FOFFS,		\/* File offset: .immediate *\/$/;"	e	enum:fetch_op
FETCH_OP_IMM	trace/trace_probe.h	/^	FETCH_OP_IMM,		\/* Immediate : .immediate *\/$/;"	e	enum:fetch_op
FETCH_OP_LP_ARRAY	trace/trace_probe.h	/^	FETCH_OP_LP_ARRAY,	\/* Array: .param = loop count *\/$/;"	e	enum:fetch_op
FETCH_OP_MOD_BF	trace/trace_probe.h	/^	FETCH_OP_MOD_BF,	\/* Bitfield: .basesize, .lshift, .rshift *\/$/;"	e	enum:fetch_op
FETCH_OP_NOP	trace/trace_probe.h	/^	FETCH_OP_NOP = 0,$/;"	e	enum:fetch_op
FETCH_OP_REG	trace/trace_probe.h	/^	FETCH_OP_REG,		\/* Register : .param = offset *\/$/;"	e	enum:fetch_op
FETCH_OP_RETVAL	trace/trace_probe.h	/^	FETCH_OP_RETVAL,	\/* Return value *\/$/;"	e	enum:fetch_op
FETCH_OP_STACK	trace/trace_probe.h	/^	FETCH_OP_STACK,		\/* Stack : .param = index *\/$/;"	e	enum:fetch_op
FETCH_OP_STACKP	trace/trace_probe.h	/^	FETCH_OP_STACKP,	\/* Stack pointer *\/$/;"	e	enum:fetch_op
FETCH_OP_ST_MEM	trace/trace_probe.h	/^	FETCH_OP_ST_MEM,	\/* Mem: .offset, .size *\/$/;"	e	enum:fetch_op
FETCH_OP_ST_RAW	trace/trace_probe.h	/^	FETCH_OP_ST_RAW,	\/* Raw: .size *\/$/;"	e	enum:fetch_op
FETCH_OP_ST_STRING	trace/trace_probe.h	/^	FETCH_OP_ST_STRING,	\/* String: .offset, .size *\/$/;"	e	enum:fetch_op
FETCH_OP_ST_UMEM	trace/trace_probe.h	/^	FETCH_OP_ST_UMEM,	\/* Mem: .offset, .size *\/$/;"	e	enum:fetch_op
FETCH_OP_ST_USTRING	trace/trace_probe.h	/^	FETCH_OP_ST_USTRING,	\/* User String: .offset, .size *\/$/;"	e	enum:fetch_op
FETCH_OP_UDEREF	trace/trace_probe.h	/^	FETCH_OP_UDEREF,	\/* User-space Dereference: .offset *\/$/;"	e	enum:fetch_op
FETCH_TOKEN_COMM	trace/trace_probe.h	129;"	d
FGRAPH_FLAGS	trace/trace.h	1193;"	d
FGRAPH_FLAGS	trace/trace.h	1196;"	d
FIELD_OP_MINUS	trace/trace_events_hist.c	/^	FIELD_OP_MINUS,$/;"	e	enum:field_op_id	file:
FIELD_OP_NONE	trace/trace_events_hist.c	/^	FIELD_OP_NONE,$/;"	e	enum:field_op_id	file:
FIELD_OP_PLUS	trace/trace_events_hist.c	/^	FIELD_OP_PLUS,$/;"	e	enum:field_op_id	file:
FIELD_OP_UNARY_MINUS	trace/trace_events_hist.c	/^	FIELD_OP_UNARY_MINUS,$/;"	e	enum:field_op_id	file:
FIELD_STRING_FUNC	trace/trace_probe.h	41;"	d
FIELD_STRING_IP	trace/trace_probe.h	39;"	d
FIELD_STRING_RETIP	trace/trace_probe.h	40;"	d
FILE_CPULIST	cgroup/cpuset.c	/^	FILE_CPULIST,$/;"	e	enum:__anon11	file:
FILE_CPU_EXCLUSIVE	cgroup/cpuset.c	/^	FILE_CPU_EXCLUSIVE,$/;"	e	enum:__anon11	file:
FILE_EFFECTIVE_CPULIST	cgroup/cpuset.c	/^	FILE_EFFECTIVE_CPULIST,$/;"	e	enum:__anon11	file:
FILE_EFFECTIVE_MEMLIST	cgroup/cpuset.c	/^	FILE_EFFECTIVE_MEMLIST,$/;"	e	enum:__anon11	file:
FILE_MEMLIST	cgroup/cpuset.c	/^	FILE_MEMLIST,$/;"	e	enum:__anon11	file:
FILE_MEMORY_MIGRATE	cgroup/cpuset.c	/^	FILE_MEMORY_MIGRATE,$/;"	e	enum:__anon11	file:
FILE_MEMORY_PRESSURE	cgroup/cpuset.c	/^	FILE_MEMORY_PRESSURE,$/;"	e	enum:__anon11	file:
FILE_MEMORY_PRESSURE_ENABLED	cgroup/cpuset.c	/^	FILE_MEMORY_PRESSURE_ENABLED,$/;"	e	enum:__anon11	file:
FILE_MEM_EXCLUSIVE	cgroup/cpuset.c	/^	FILE_MEM_EXCLUSIVE,$/;"	e	enum:__anon11	file:
FILE_MEM_HARDWALL	cgroup/cpuset.c	/^	FILE_MEM_HARDWALL,$/;"	e	enum:__anon11	file:
FILE_PARTITION_ROOT	cgroup/cpuset.c	/^	FILE_PARTITION_ROOT,$/;"	e	enum:__anon11	file:
FILE_SCHED_LOAD_BALANCE	cgroup/cpuset.c	/^	FILE_SCHED_LOAD_BALANCE,$/;"	e	enum:__anon11	file:
FILE_SCHED_RELAX_DOMAIN_LEVEL	cgroup/cpuset.c	/^	FILE_SCHED_RELAX_DOMAIN_LEVEL,$/;"	e	enum:__anon11	file:
FILE_SPREAD_PAGE	cgroup/cpuset.c	/^	FILE_SPREAD_PAGE,$/;"	e	enum:__anon11	file:
FILE_SPREAD_SLAB	cgroup/cpuset.c	/^	FILE_SPREAD_SLAB,$/;"	e	enum:__anon11	file:
FILE_SUBPARTS_CPULIST	cgroup/cpuset.c	/^	FILE_SUBPARTS_CPULIST,$/;"	e	enum:__anon11	file:
FILTER	trace/trace_events_filter.c	2119;"	d	file:
FILTER	trace/trace_events_filter.c	2124;"	d	file:
FILTER	trace/trace_events_filter.c	2125;"	d	file:
FILTER	trace/trace_events_filter.c	2130;"	d	file:
FILTER	trace/trace_events_filter.c	2131;"	d	file:
FILTER	trace/trace_events_filter.c	2137;"	d	file:
FILTER	trace/trace_events_filter.c	2138;"	d	file:
FILTER	trace/trace_events_filter.c	2143;"	d	file:
FILTER	trace/trace_events_filter.c	2144;"	d	file:
FILTER	trace/trace_events_filter.c	2149;"	d	file:
FILTER	trace/trace_events_filter.c	2150;"	d	file:
FILTER	trace/trace_events_filter.c	2155;"	d	file:
FILTER	trace/trace_events_filter.c	2156;"	d	file:
FILTER	trace/trace_events_filter.c	2161;"	d	file:
FILTER	trace/trace_events_filter.c	2162;"	d	file:
FILTER	trace/trace_events_filter.c	2170;"	d	file:
FILTER_PRED_FOLD	trace/trace.h	1483;"	d
FILTER_PRED_INVALID	trace/trace.h	1481;"	d
FILTER_PRED_IS_RIGHT	trace/trace.h	1482;"	d
FLAGS_CLOCKRT	futex.c	184;"	d	file:
FLAGS_FILL_END	trace/trace_functions_graph.c	/^	FLAGS_FILL_END   = 3 << TRACE_GRAPH_PRINT_FILL_SHIFT,$/;"	e	enum:__anon42	file:
FLAGS_FILL_FULL	trace/trace_functions_graph.c	/^	FLAGS_FILL_FULL  = 1 << TRACE_GRAPH_PRINT_FILL_SHIFT,$/;"	e	enum:__anon42	file:
FLAGS_FILL_START	trace/trace_functions_graph.c	/^	FLAGS_FILL_START = 2 << TRACE_GRAPH_PRINT_FILL_SHIFT,$/;"	e	enum:__anon42	file:
FLAGS_HAS_TIMEOUT	futex.c	185;"	d	file:
FLAGS_SHARED	futex.c	176;"	d	file:
FLAGS_SHARED	futex.c	182;"	d	file:
FM_COEF	cgroup/cpuset.c	1972;"	d	file:
FM_MAXCNT	cgroup/cpuset.c	1974;"	d	file:
FM_MAXTICKS	cgroup/cpuset.c	1973;"	d	file:
FM_SCALE	cgroup/cpuset.c	1975;"	d	file:
FNV32_OFFSET	sysctl_binary.c	1359;"	d	file:
FNV32_PRIME	sysctl_binary.c	1360;"	d	file:
FORMAT_FIELD_SEPERATOR	trace/trace_events.c	/^	FORMAT_FIELD_SEPERATOR	= 2,$/;"	e	enum:__anon44	file:
FORMAT_HEADER	trace/trace_events.c	/^	FORMAT_HEADER		= 1,$/;"	e	enum:__anon44	file:
FORMAT_PRINTFMT	trace/trace_events.c	/^	FORMAT_PRINTFMT		= 3,$/;"	e	enum:__anon44	file:
FP	bpf/core.c	52;"	d	file:
FREQUENCY_UTIL	sched/sched.h	/^	FREQUENCY_UTIL,$/;"	e	enum:schedutil_type
FTRACE_BUFF_MAX	trace/ftrace.c	3047;"	d	file:
FTRACE_CMP_TYPE	trace/trace.h	364;"	d
FTRACE_CTX_FIELDS	trace/trace_entries.h	120;"	d
FTRACE_ENTRY	trace/trace.h	1900;"	d
FTRACE_ENTRY	trace/trace.h	1901;"	d
FTRACE_ENTRY	trace/trace.h	70;"	d
FTRACE_ENTRY	trace/trace.h	71;"	d
FTRACE_ENTRY	trace/trace_export.c	133;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	134;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	193;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	194;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	62;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	63;"	d	file:
FTRACE_ENTRY_DUP	trace/trace.h	1904;"	d
FTRACE_ENTRY_DUP	trace/trace.h	1905;"	d
FTRACE_ENTRY_DUP	trace/trace.h	77;"	d
FTRACE_ENTRY_DUP	trace/trace.h	78;"	d
FTRACE_ENTRY_DUP	trace/trace_export.c	75;"	d	file:
FTRACE_ENTRY_DUP	trace/trace_export.c	76;"	d	file:
FTRACE_ENTRY_PACKED	trace/trace.h	1908;"	d
FTRACE_ENTRY_PACKED	trace/trace.h	1909;"	d
FTRACE_ENTRY_PACKED	trace/trace.h	86;"	d
FTRACE_ENTRY_PACKED	trace/trace.h	87;"	d
FTRACE_ENTRY_REG	trace/trace.h	80;"	d
FTRACE_ENTRY_REG	trace/trace.h	81;"	d
FTRACE_ENTRY_REG	trace/trace_export.c	170;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	171;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	31;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	32;"	d	file:
FTRACE_FILTER_SIZE	trace/ftrace.c	4891;"	d	file:
FTRACE_FUNC_HASHSIZE	trace/ftrace.c	65;"	d	file:
FTRACE_GRAPH_EMPTY	trace/ftrace.c	5087;"	d	file:
FTRACE_HASH_BITS	trace/ftrace.c	64;"	d	file:
FTRACE_HASH_DEFAULT_BITS	trace/ftrace.c	66;"	d	file:
FTRACE_HASH_FL_MOD	trace/trace.h	/^	FTRACE_HASH_FL_MOD	= (1 << 0),$/;"	e	enum:__anon36
FTRACE_HASH_MAX_BITS	trace/ftrace.c	67;"	d	file:
FTRACE_KSTACK_ENTRIES	trace/trace.c	2764;"	d	file:
FTRACE_KSTACK_NESTING	trace/trace.c	2762;"	d	file:
FTRACE_MODIFY_ENABLE_FL	trace/ftrace.c	/^	FTRACE_MODIFY_ENABLE_FL		= (1 << 0),$/;"	e	enum:__anon43	file:
FTRACE_MODIFY_MAY_SLEEP_FL	trace/ftrace.c	/^	FTRACE_MODIFY_MAY_SLEEP_FL	= (1 << 1),$/;"	e	enum:__anon43	file:
FTRACE_NO_PIDS	trace/ftrace.c	6483;"	d	file:
FTRACE_PROFILE_HASH_BITS	trace/ftrace.c	425;"	d	file:
FTRACE_PROFILE_HASH_SIZE	trace/ftrace.c	426;"	d	file:
FTRACE_STACK_ENTRIES	trace/trace_entries.h	169;"	d
FTRACE_STACK_SKIP	trace/trace_functions.c	388;"	d	file:
FTRACE_STACK_SKIP	trace/trace_functions.c	399;"	d	file:
FTRACE_WARN_ON	trace/ftrace.c	47;"	d	file:
FTRACE_WARN_ON_ONCE	trace/ftrace.c	55;"	d	file:
FULLSTOP_DONTSTOP	torture.c	49;"	d	file:
FULLSTOP_RMMOD	torture.c	51;"	d	file:
FULLSTOP_SHUTDOWN	torture.c	50;"	d	file:
FUNCTION_DEFAULT_FLAGS	trace/trace.h	1210;"	d
FUNCTION_DEFAULT_FLAGS	trace/trace.h	1213;"	d
FUNCTION_FLAGS	trace/trace.h	1207;"	d
FUNCTION_FLAGS	trace/trace.h	1212;"	d
FUTEX_READ	futex.c	/^	FUTEX_READ,$/;"	e	enum:futex_access	file:
FUTEX_WRITE	futex.c	/^	FUTEX_WRITE$/;"	e	enum:futex_access	file:
FWD_CBS_HIST_DIV	rcu/rcutorture.c	1660;"	d	file:
F_STRUCT	trace/trace.h	67;"	d
F_STRUCT	trace/trace.h	68;"	d
F_STRUCT	trace/trace_export.c	56;"	d	file:
F_STRUCT	trace/trace_export.c	57;"	d	file:
F_printk	trace/trace_export.c	167;"	d	file:
F_printk	trace/trace_export.c	168;"	d	file:
F_printk	trace/trace_export.c	59;"	d	file:
F_printk	trace/trace_export.c	60;"	d	file:
GCOV_ADD	gcov/gcov.h	/^	GCOV_ADD,$/;"	e	enum:gcov_action
GCOV_COUNTERS	gcov/gcc_3_4.c	25;"	d	file:
GCOV_COUNTERS	gcov/gcc_4_7.c	23;"	d	file:
GCOV_COUNTERS	gcov/gcc_4_7.c	25;"	d	file:
GCOV_COUNTERS	gcov/gcc_4_7.c	27;"	d	file:
GCOV_COUNTERS	gcov/gcc_4_7.c	29;"	d	file:
GCOV_DATA_MAGIC	gcov/gcov.h	26;"	d
GCOV_H	gcov/gcov.h	16;"	d
GCOV_PROFILE	trace/Makefile	/^GCOV_PROFILE := y$/;"	m
GCOV_REMOVE	gcov/gcov.h	/^	GCOV_REMOVE,$/;"	e	enum:gcov_action
GCOV_TAG_COUNTER_BASE	gcov/gcov.h	28;"	d
GCOV_TAG_FOR_COUNTER	gcov/gcov.h	29;"	d
GCOV_TAG_FUNCTION	gcov/gcov.h	27;"	d
GCOV_TAG_FUNCTION_LENGTH	gcov/gcc_4_7.c	32;"	d	file:
GET_ENDIAN	sys.c	95;"	d	file:
GET_FPEMU_CTL	sys.c	86;"	d	file:
GET_FPEXC_CTL	sys.c	92;"	d	file:
GET_FP_MODE	sys.c	113;"	d	file:
GET_TSC_CTL	sys.c	101;"	d	file:
GET_UNALIGN_CTL	sys.c	80;"	d	file:
GFP_IMAGE	power/snapshot.c	1505;"	d	file:
GFP_KDB	debug/kdb/kdb_private.h	236;"	d
GFP_TRACE	trace/trace_events.c	40;"	d	file:
GP_ENTER	rcu/sync.c	/^enum { GP_IDLE = 0, GP_ENTER, GP_PASSED, GP_EXIT, GP_REPLAY };$/;"	e	enum:__anon64	file:
GP_EXIT	rcu/sync.c	/^enum { GP_IDLE = 0, GP_ENTER, GP_PASSED, GP_EXIT, GP_REPLAY };$/;"	e	enum:__anon64	file:
GP_IDLE	rcu/sync.c	/^enum { GP_IDLE = 0, GP_ENTER, GP_PASSED, GP_EXIT, GP_REPLAY };$/;"	e	enum:__anon64	file:
GP_PASSED	rcu/sync.c	/^enum { GP_IDLE = 0, GP_ENTER, GP_PASSED, GP_EXIT, GP_REPLAY };$/;"	e	enum:__anon64	file:
GP_REPLAY	rcu/sync.c	/^enum { GP_IDLE = 0, GP_ENTER, GP_PASSED, GP_EXIT, GP_REPLAY };$/;"	e	enum:__anon64	file:
GRAPH_FILTER_FUNCTION	trace/ftrace.c	/^	GRAPH_FILTER_FUNCTION,$/;"	e	enum:graph_filter_type	file:
GRAPH_FILTER_NOTRACE	trace/ftrace.c	/^	GRAPH_FILTER_NOTRACE	= 0,$/;"	e	enum:graph_filter_type	file:
GRAPH_MAX_FUNC_TEST	trace/trace_selftest.c	722;"	d	file:
GRAPH_TRACER_FLAGS	trace/trace_irqsoff.c	240;"	d	file:
GRAPH_TRACER_FLAGS	trace/trace_sched_wakeup.c	182;"	d	file:
HANDLER_ONCHANGE	trace/trace_events_hist.c	/^	HANDLER_ONCHANGE,$/;"	e	enum:handler_id	file:
HANDLER_ONMATCH	trace/trace_events_hist.c	/^	HANDLER_ONMATCH = 1,$/;"	e	enum:handler_id	file:
HANDLER_ONMAX	trace/trace_events_hist.c	/^	HANDLER_ONMAX,$/;"	e	enum:handler_id	file:
HARDIRQ_VERBOSE	locking/lockdep.c	405;"	d	file:
HARDIRQ_VERBOSE	locking/lockdep.c	408;"	d	file:
HARDIRQ_verbose	locking/lockdep.c	/^static int HARDIRQ_verbose(struct lock_class *class)$/;"	f	file:
HASH_FN_MASK	dma/debug.c	32;"	d	file:
HASH_FN_SHIFT	dma/debug.c	31;"	d	file:
HASH_SIZE	audit_tree.c	/^enum {HASH_SIZE = 128};$/;"	e	enum:__anon16	file:
HASH_SIZE	dma/debug.c	30;"	d	file:
HAVE_RT_PUSH_IPI	sched/sched.h	580;"	d
HIBERNATE_SIG	power/swap.c	37;"	d	file:
HIBERNATION_FIRST	power/hibernate.c	61;"	d	file:
HIBERNATION_INVALID	power/hibernate.c	/^	HIBERNATION_INVALID,$/;"	e	enum:__anon88	file:
HIBERNATION_MAX	power/hibernate.c	60;"	d	file:
HIBERNATION_PLATFORM	power/hibernate.c	/^	HIBERNATION_PLATFORM,$/;"	e	enum:__anon88	file:
HIBERNATION_REBOOT	power/hibernate.c	/^	HIBERNATION_REBOOT,$/;"	e	enum:__anon88	file:
HIBERNATION_SHUTDOWN	power/hibernate.c	/^	HIBERNATION_SHUTDOWN,$/;"	e	enum:__anon88	file:
HIBERNATION_SUSPEND	power/hibernate.c	/^	HIBERNATION_SUSPEND,$/;"	e	enum:__anon88	file:
HIBERNATION_TEST_RESUME	power/hibernate.c	/^	HIBERNATION_TEST_RESUME,$/;"	e	enum:__anon88	file:
HIGHPRI_NICE_LEVEL	workqueue.c	/^	HIGHPRI_NICE_LEVEL	= MIN_NICE,$/;"	e	enum:__anon17	file:
HIST_ACTIONS_MAX	trace/trace_events_hist.c	85;"	d	file:
HIST_FIELDS_MAX	trace/trace_events_hist.c	84;"	d	file:
HIST_FIELD_FL_ALIAS	trace/trace_events_hist.c	/^	HIST_FIELD_FL_ALIAS		= 1 << 16,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_CPU	trace/trace_events_hist.c	/^	HIST_FIELD_FL_CPU		= 1 << 15,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_EXECNAME	trace/trace_events_hist.c	/^	HIST_FIELD_FL_EXECNAME		= 1 << 6,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_EXPR	trace/trace_events_hist.c	/^	HIST_FIELD_FL_EXPR		= 1 << 13,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_HEX	trace/trace_events_hist.c	/^	HIST_FIELD_FL_HEX		= 1 << 3,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_HITCOUNT	trace/trace_events_hist.c	/^	HIST_FIELD_FL_HITCOUNT		= 1 << 0,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_KEY	trace/trace_events_hist.c	/^	HIST_FIELD_FL_KEY		= 1 << 1,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_LOG2	trace/trace_events_hist.c	/^	HIST_FIELD_FL_LOG2		= 1 << 9,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_STACKTRACE	trace/trace_events_hist.c	/^	HIST_FIELD_FL_STACKTRACE	= 1 << 8,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_STRING	trace/trace_events_hist.c	/^	HIST_FIELD_FL_STRING		= 1 << 2,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_SYM	trace/trace_events_hist.c	/^	HIST_FIELD_FL_SYM		= 1 << 4,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_SYM_OFFSET	trace/trace_events_hist.c	/^	HIST_FIELD_FL_SYM_OFFSET	= 1 << 5,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_SYSCALL	trace/trace_events_hist.c	/^	HIST_FIELD_FL_SYSCALL		= 1 << 7,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_TIMESTAMP	trace/trace_events_hist.c	/^	HIST_FIELD_FL_TIMESTAMP		= 1 << 10,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_TIMESTAMP_USECS	trace/trace_events_hist.c	/^	HIST_FIELD_FL_TIMESTAMP_USECS	= 1 << 11,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_VAR	trace/trace_events_hist.c	/^	HIST_FIELD_FL_VAR		= 1 << 12,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_FL_VAR_REF	trace/trace_events_hist.c	/^	HIST_FIELD_FL_VAR_REF		= 1 << 14,$/;"	e	enum:hist_field_flags	file:
HIST_FIELD_OPERANDS_MAX	trace/trace_events_hist.c	83;"	d	file:
HIST_KEY_SIZE_MAX	trace/trace_events_hist.c	282;"	d	file:
HIST_STACKTRACE_DEPTH	trace/trace_events_hist.c	277;"	d	file:
HIST_STACKTRACE_SIZE	trace/trace_events_hist.c	278;"	d	file:
HIST_STACKTRACE_SKIP	trace/trace_events_hist.c	279;"	d	file:
HITCOUNT_IDX	trace/trace_events_hist.c	281;"	d	file:
HP_THREAD_ACTIVE	smpboot.c	/^	HP_THREAD_ACTIVE,$/;"	e	enum:__anon81	file:
HP_THREAD_NONE	smpboot.c	/^	HP_THREAD_NONE = 0,$/;"	e	enum:__anon81	file:
HP_THREAD_PARKED	smpboot.c	/^	HP_THREAD_PARKED,$/;"	e	enum:__anon81	file:
HRTIMER_ACTIVE_ALL	time/hrtimer.c	58;"	d	file:
HRTIMER_ACTIVE_HARD	time/hrtimer.c	56;"	d	file:
HRTIMER_ACTIVE_SOFT	time/hrtimer.c	57;"	d	file:
HTAB_CREATE_FLAG_MASK	bpf/hashtab.c	16;"	d	file:
HUNG_TASK_LOCK_BREAK	hung_task.c	39;"	d	file:
IDLE	debug/kdb/kdb_support.c	558;"	d	file:
IDLE_WORKER_TIMEOUT	workqueue.c	/^	IDLE_WORKER_TIMEOUT	= 300 * HZ,	\/* keep idle ones for 5 mins *\/$/;"	e	enum:__anon17	file:
IDX_INVALID	sched/cpudeadline.h	3;"	d
ID_MAP_SIZE	bpf/verifier.c	6679;"	d	file:
IF_ACT_FILTER	events/core.c	/^	IF_ACT_FILTER,$/;"	e	enum:__anon8	file:
IF_ACT_NONE	events/core.c	/^	IF_ACT_NONE = -1,$/;"	e	enum:__anon8	file:
IF_ACT_START	events/core.c	/^	IF_ACT_START,$/;"	e	enum:__anon8	file:
IF_ACT_STOP	events/core.c	/^	IF_ACT_STOP,$/;"	e	enum:__anon8	file:
IF_ASSIGN	trace/trace.h	367;"	d
IF_ASSIGN	trace/trace.h	368;"	d
IF_SRC_FILE	events/core.c	/^	IF_SRC_FILE,$/;"	e	enum:__anon8	file:
IF_SRC_FILEADDR	events/core.c	/^	IF_SRC_FILEADDR,$/;"	e	enum:__anon8	file:
IF_SRC_KERNEL	events/core.c	/^	IF_SRC_KERNEL,$/;"	e	enum:__anon8	file:
IF_SRC_KERNELADDR	events/core.c	/^	IF_SRC_KERNELADDR,$/;"	e	enum:__anon8	file:
IF_STATE_ACTION	events/core.c	/^	IF_STATE_ACTION = 0,$/;"	e	enum:__anon9	file:
IF_STATE_END	events/core.c	/^	IF_STATE_END,$/;"	e	enum:__anon9	file:
IF_STATE_SOURCE	events/core.c	/^	IF_STATE_SOURCE,$/;"	e	enum:__anon9	file:
IMM	bpf/core.c	56;"	d	file:
INIT_OFFSET_MASK	module.c	77;"	d	file:
INIT_OPS_HASH	trace/ftrace.c	70;"	d	file:
INIT_OPS_HASH	trace/ftrace.c	74;"	d	file:
INVALID_PHYS_ADDR	dma/swiotlb.c	101;"	d	file:
INVALID_RCU_FLAVOR	rcu/rcu.h	/^	INVALID_RCU_FLAVOR$/;"	e	enum:rcutorture_type
INVERT	trace/trace_events_filter.c	/^	INVERT		= 1,$/;"	e	enum:__anon31	file:
IOWAIT_BOOST_MIN	sched/cpufreq_schedutil.c	16;"	d	file:
IO_TLB_DEFAULT_SIZE	dma/swiotlb.c	155;"	d	file:
IO_TLB_MIN_SLABS	dma/swiotlb.c	62;"	d	file:
IP_FMT	trace/trace_output.c	363;"	d	file:
IP_FMT	trace/trace_output.c	365;"	d	file:
IRQF_MODIFY_MASK	irq/settings.h	34;"	d
IRQF_MODIFY_MASK	irq/settings.h	35;"	d
IRQS_AUTODETECT	irq/internals.h	/^	IRQS_AUTODETECT		= 0x00000001,$/;"	e	enum:__anon78
IRQS_NMI	irq/internals.h	/^	IRQS_NMI		= 0x00002000,$/;"	e	enum:__anon78
IRQS_ONESHOT	irq/internals.h	/^	IRQS_ONESHOT		= 0x00000020,$/;"	e	enum:__anon78
IRQS_PENDING	irq/internals.h	/^	IRQS_PENDING		= 0x00000200,$/;"	e	enum:__anon78
IRQS_POLL_INPROGRESS	irq/internals.h	/^	IRQS_POLL_INPROGRESS	= 0x00000008,$/;"	e	enum:__anon78
IRQS_REPLAY	irq/internals.h	/^	IRQS_REPLAY		= 0x00000040,$/;"	e	enum:__anon78
IRQS_SPURIOUS_DISABLED	irq/internals.h	/^	IRQS_SPURIOUS_DISABLED	= 0x00000002,$/;"	e	enum:__anon78
IRQS_SUSPENDED	irq/internals.h	/^	IRQS_SUSPENDED		= 0x00000800,$/;"	e	enum:__anon78
IRQS_TIMINGS	irq/internals.h	/^	IRQS_TIMINGS		= 0x00001000,$/;"	e	enum:__anon78
IRQS_WAITING	irq/internals.h	/^	IRQS_WAITING		= 0x00000080,$/;"	e	enum:__anon78
IRQTF_AFFINITY	irq/internals.h	/^	IRQTF_AFFINITY,$/;"	e	enum:__anon77
IRQTF_FORCED_THREAD	irq/internals.h	/^	IRQTF_FORCED_THREAD,$/;"	e	enum:__anon77
IRQTF_RUNTHREAD	irq/internals.h	/^	IRQTF_RUNTHREAD,$/;"	e	enum:__anon77
IRQTF_WARNED	irq/internals.h	/^	IRQTF_WARNED,$/;"	e	enum:__anon77
IRQ_ATTR_RO	irq/irqdesc.c	143;"	d	file:
IRQ_BITMAP_BITS	irq/internals.h	15;"	d
IRQ_BITMAP_BITS	irq/internals.h	17;"	d
IRQ_DISABLE_UNLAZY	irq/settings.h	33;"	d
IRQ_GET_DESC_CHECK_GLOBAL	irq/internals.h	160;"	d
IRQ_GET_DESC_CHECK_PERCPU	irq/internals.h	161;"	d
IRQ_IS_POLLED	irq/settings.h	32;"	d
IRQ_LEVEL	irq/settings.h	25;"	d
IRQ_MATRIX_SIZE	irq/matrix.c	11;"	d	file:
IRQ_NESTED_THREAD	irq/settings.h	30;"	d
IRQ_NOAUTOEN	irq/settings.h	29;"	d
IRQ_NOPROBE	irq/settings.h	26;"	d
IRQ_NOREQUEST	irq/settings.h	27;"	d
IRQ_NORESEND	irq/internals.h	75;"	d
IRQ_NOTHREAD	irq/settings.h	28;"	d
IRQ_NO_BALANCING	irq/settings.h	24;"	d
IRQ_PER_CPU	irq/settings.h	23;"	d
IRQ_PER_CPU_DEVID	irq/settings.h	31;"	d
IRQ_RESEND	irq/internals.h	74;"	d
IRQ_STARTUP_ABORT	irq/chip.c	/^	IRQ_STARTUP_ABORT,$/;"	e	enum:__anon80	file:
IRQ_STARTUP_MANAGED	irq/chip.c	/^	IRQ_STARTUP_MANAGED,$/;"	e	enum:__anon80	file:
IRQ_STARTUP_NORMAL	irq/chip.c	/^	IRQ_STARTUP_NORMAL,$/;"	e	enum:__anon80	file:
IRQ_START_COND	irq/internals.h	78;"	d
IRQ_START_FORCE	irq/internals.h	77;"	d
IRQ_TIMINGS_MASK	irq/internals.h	290;"	d
IRQ_TIMINGS_SHIFT	irq/internals.h	288;"	d
IRQ_TIMINGS_SIZE	irq/internals.h	289;"	d
IS_FD_ARRAY	bpf/syscall.c	27;"	d	file:
IS_FD_HASH	bpf/syscall.c	31;"	d	file:
IS_FD_MAP	bpf/syscall.c	32;"	d	file:
IS_LOCAL_LIST_TYPE	bpf/bpf_lru_list.c	20;"	d	file:
ITER_STRIDE	gcov/clang.c	379;"	d	file:
ITER_STRIDE	gcov/gcc_4_7.c	366;"	d	file:
IT_ID_NOT_SET	time/posix-timers.c	451;"	d	file:
IT_ID_SET	time/posix-timers.c	450;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	28;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	30;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	32;"	d	file:
K	debug/kdb/kdb_main.c	2549;"	d	file:
KASAN_SANITIZE_kcov.o	Makefile	/^KASAN_SANITIZE_kcov.o := n$/;"	m
KASAN_SANITIZE_snapshot.o	power/Makefile	/^KASAN_SANITIZE_snapshot.o	:= n$/;"	m
KASAN_SANITIZE_stackleak.o	Makefile	/^KASAN_SANITIZE_stackleak.o := n$/;"	m
KB	tsacct.c	113;"	d	file:
KB	tsacct.c	77;"	d	file:
KBD_DATA_REG	debug/kdb/kdb_keyboard.c	20;"	d	file:
KBD_STATUS_REG	debug/kdb/kdb_keyboard.c	19;"	d	file:
KBD_STAT_MOUSE_OBF	debug/kdb/kdb_keyboard.c	25;"	d	file:
KBD_STAT_OBF	debug/kdb/kdb_keyboard.c	24;"	d	file:
KBUILD_CFLAGS	trace/Makefile	/^KBUILD_CFLAGS = $(subst $(CC_FLAGS_FTRACE),,$(ORIG_CFLAGS))$/;"	m
KB_MASK	tsacct.c	79;"	d	file:
KCOV_INSTRUMENT	locking/Makefile	/^KCOV_INSTRUMENT		:= n$/;"	m
KCOV_INSTRUMENT	rcu/Makefile	/^KCOV_INSTRUMENT := n$/;"	m
KCOV_INSTRUMENT	sched/Makefile	/^KCOV_INSTRUMENT := n$/;"	m
KCOV_INSTRUMENT_extable.o	Makefile	/^KCOV_INSTRUMENT_extable.o := n$/;"	m
KCOV_INSTRUMENT_kcov.o	Makefile	/^KCOV_INSTRUMENT_kcov.o := n$/;"	m
KCOV_INSTRUMENT_module.o	Makefile	/^KCOV_INSTRUMENT_module.o := n$/;"	m
KCOV_INSTRUMENT_softirq.o	Makefile	/^KCOV_INSTRUMENT_softirq.o := n$/;"	m
KCOV_INSTRUMENT_stackleak.o	Makefile	/^KCOV_INSTRUMENT_stackleak.o := n$/;"	m
KCOV_WORDS_PER_CMP	kcov.c	27;"	d	file:
KDBCMD_BC	debug/kdb/kdb_bp.c	388;"	d	file:
KDBCMD_BD	debug/kdb/kdb_bp.c	390;"	d	file:
KDBCMD_BE	debug/kdb/kdb_bp.c	389;"	d	file:
KDBMSG	debug/kdb/kdb_main.c	103;"	d	file:
KDBMSG	debug/kdb/kdb_main.c	135;"	d	file:
KDB_BASE_CMD_MAX	debug/kdb/kdb_main.c	90;"	d	file:
KDB_CMD_CPU	debug/kdb/kdb_private.h	20;"	d
KDB_CMD_GO	debug/kdb/kdb_private.h	19;"	d
KDB_CMD_HISTORY_COUNT	debug/kdb/kdb_main.c	811;"	d	file:
KDB_CMD_KGDB	debug/kdb/kdb_private.h	22;"	d
KDB_CMD_SS	debug/kdb/kdb_private.h	21;"	d
KDB_DB_BPT	debug/kdb/kdb_private.h	/^	KDB_DB_BPT,	\/* Breakpoint *\/$/;"	e	enum:__anon50
KDB_DB_NOBPT	debug/kdb/kdb_private.h	/^	KDB_DB_NOBPT	\/* Spurious breakpoint *\/$/;"	e	enum:__anon50
KDB_DB_SS	debug/kdb/kdb_private.h	/^	KDB_DB_SS,	\/* Single-step trap *\/$/;"	e	enum:__anon50
KDB_DB_SSBPT	debug/kdb/kdb_private.h	/^	KDB_DB_SSBPT,	\/* Single step over breakpoint *\/$/;"	e	enum:__anon50
KDB_DEBUG	debug/kdb/kdb_private.h	34;"	d
KDB_DEBUG_FLAG_AR	debug/kdb/kdb_private.h	27;"	d
KDB_DEBUG_FLAG_ARA	debug/kdb/kdb_private.h	28;"	d
KDB_DEBUG_FLAG_BB	debug/kdb/kdb_private.h	29;"	d
KDB_DEBUG_FLAG_BB_SUMM	debug/kdb/kdb_private.h	26;"	d
KDB_DEBUG_FLAG_BP	debug/kdb/kdb_private.h	25;"	d
KDB_DEBUG_FLAG_MASK	debug/kdb/kdb_private.h	31;"	d
KDB_DEBUG_FLAG_SHIFT	debug/kdb/kdb_private.h	32;"	d
KDB_DEBUG_FLAG_STATE	debug/kdb/kdb_private.h	30;"	d
KDB_DEBUG_STATE	debug/kdb/kdb_private.h	36;"	d
KDB_ENVBUFSIZE	debug/kdb/kdb_main.c	269;"	d	file:
KDB_GREPPING_FLAG_SEARCH	debug/kdb/kdb_private.h	198;"	d
KDB_GREP_STRLEN	debug/kdb/kdb_private.h	200;"	d
KDB_MAXBPT	debug/kdb/kdb_private.h	69;"	d
KDB_PCU	debug/kdb/kdb_main.c	2596;"	d	file:
KDB_PCU	debug/kdb/kdb_main.c	2622;"	d	file:
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	41;"	d
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	53;"	d
KDB_SP_DEFAULT	debug/kdb/kdb_private.h	223;"	d
KDB_SP_NEWLINE	debug/kdb/kdb_private.h	222;"	d
KDB_SP_PAREN	debug/kdb/kdb_private.h	219;"	d
KDB_SP_SPACEA	debug/kdb/kdb_private.h	218;"	d
KDB_SP_SPACEB	debug/kdb/kdb_private.h	217;"	d
KDB_SP_SYMSIZE	debug/kdb/kdb_private.h	221;"	d
KDB_SP_VALUE	debug/kdb/kdb_private.h	220;"	d
KDB_STATE	debug/kdb/kdb_private.h	148;"	d
KDB_STATE_ARCH	debug/kdb/kdb_private.h	145;"	d
KDB_STATE_CLEAR	debug/kdb/kdb_private.h	150;"	d
KDB_STATE_CMD	debug/kdb/kdb_private.h	122;"	d
KDB_STATE_DOING_KGDB	debug/kdb/kdb_private.h	143;"	d
KDB_STATE_DOING_SS	debug/kdb/kdb_private.h	126;"	d
KDB_STATE_GO1	debug/kdb/kdb_private.h	139;"	d
KDB_STATE_GO_SWITCH	debug/kdb/kdb_private.h	133;"	d
KDB_STATE_HOLD_CPU	debug/kdb/kdb_private.h	125;"	d
KDB_STATE_IP_ADJUSTED	debug/kdb/kdb_private.h	137;"	d
KDB_STATE_KDB	debug/kdb/kdb_private.h	120;"	d
KDB_STATE_KDB_CONTROL	debug/kdb/kdb_private.h	123;"	d
KDB_STATE_KEXEC	debug/kdb/kdb_private.h	142;"	d
KDB_STATE_KEYBOARD	debug/kdb/kdb_private.h	140;"	d
KDB_STATE_KGDB_TRANS	debug/kdb/kdb_private.h	144;"	d
KDB_STATE_LEAVING	debug/kdb/kdb_private.h	121;"	d
KDB_STATE_PAGER	debug/kdb/kdb_private.h	132;"	d
KDB_STATE_RECURSE	debug/kdb/kdb_private.h	136;"	d
KDB_STATE_REENTRY	debug/kdb/kdb_private.h	130;"	d
KDB_STATE_SET	debug/kdb/kdb_private.h	149;"	d
KDB_STATE_SSBPT	debug/kdb/kdb_private.h	127;"	d
KDB_STATE_SUPPRESS	debug/kdb/kdb_private.h	131;"	d
KDB_STATE_WAIT_IPI	debug/kdb/kdb_private.h	135;"	d
KDB_TSK	debug/kdb/kdb_private.h	225;"	d
KDB_TSKREGS	debug/kdb/kdb_private.h	226;"	d
KDB_WORD_SIZE	debug/kdb/kdb_private.h	257;"	d
KERNEL_ATTR_RO	ksysfs.c	23;"	d	file:
KERNEL_ATTR_RW	ksysfs.c	26;"	d	file:
KERN_TRACE	trace/trace.c	8805;"	d	file:
KEYHASH_BITS	locking/lockdep.c	146;"	d	file:
KEYHASH_SIZE	locking/lockdep.c	147;"	d	file:
KGDB_MAX_THREAD_QUERY	debug/gdbstub.c	42;"	d	file:
KIMAGE_NO_DEST	kexec_core.c	141;"	d	file:
KPARAM_MUTEX	params.c	22;"	d	file:
KPARAM_MUTEX	params.c	24;"	d	file:
KPROBE_EVENT_SYSTEM	trace/trace_kprobe.c	22;"	d	file:
KPROBE_HASH_BITS	kprobes.c	44;"	d	file:
KPROBE_INSN_PAGE_SIZE	kprobes.c	92;"	d	file:
KPROBE_TABLE_SIZE	kprobes.c	45;"	d	file:
KRETPROBE_MAXACTIVE_MAX	trace/trace_kprobe.c	23;"	d	file:
KTHREAD_BITS	kthread.c	/^enum KTHREAD_BITS {$/;"	g	file:
KTHREAD_IS_PER_CPU	kthread.c	/^	KTHREAD_IS_PER_CPU = 0,$/;"	e	enum:KTHREAD_BITS	file:
KTHREAD_SHOULD_PARK	kthread.c	/^	KTHREAD_SHOULD_PARK,$/;"	e	enum:KTHREAD_BITS	file:
KTHREAD_SHOULD_STOP	kthread.c	/^	KTHREAD_SHOULD_STOP,$/;"	e	enum:KTHREAD_BITS	file:
LBF_ALL_PINNED	sched/fair.c	7129;"	d	file:
LBF_DST_PINNED	sched/fair.c	7131;"	d	file:
LBF_NEED_BREAK	sched/fair.c	7130;"	d	file:
LBF_NOHZ_AGAIN	sched/fair.c	7134;"	d	file:
LBF_NOHZ_STATS	sched/fair.c	7133;"	d	file:
LBF_SOME_PINNED	sched/fair.c	7132;"	d	file:
LDST	bpf/core.c	1529;"	d	file:
LDST	bpf/core.c	1544;"	d	file:
LEN_OR_ZERO	trace/trace_events_hist.c	918;"	d	file:
LEN_OR_ZERO	trace/trace_events_hist.c	934;"	d	file:
LEN_OR_ZERO	trace/trace_probe.c	784;"	d	file:
LEN_OR_ZERO	trace/trace_probe.c	843;"	d	file:
LEN_OR_ZERO	trace/trace_syscalls.c	214;"	d	file:
LEN_OR_ZERO	trace/trace_syscalls.c	229;"	d	file:
LINKED_PAGE_DATA_SIZE	power/snapshot.c	119;"	d	file:
LINUX_KEXEC_INTERNAL_H	kexec_internal.h	3;"	d
LINUX_UID16_H	uid16.h	3;"	d
LOAD_AVG_MAX	sched/sched-pelt.h	14;"	d
LOAD_AVG_PERIOD	sched/sched-pelt.h	13;"	d
LOCAL_FREE_LIST_IDX	bpf/bpf_lru_list.c	18;"	d	file:
LOCAL_FREE_TARGET	bpf/bpf_lru_list.c	10;"	d	file:
LOCAL_LIST_IDX	bpf/bpf_lru_list.c	17;"	d	file:
LOCAL_NR_SCANS	bpf/bpf_lru_list.c	11;"	d	file:
LOCAL_PENDING_LIST_IDX	bpf/bpf_lru_list.c	19;"	d	file:
LOCAL_STORAGE_CREATE_FLAG_MASK	bpf/local_storage.c	16;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	2029;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	2032;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	2036;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	2039;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	3197;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	3200;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	507;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	509;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	554;"	d	file:
LOCKDEP_STATE	locking/lockdep.c	558;"	d	file:
LOCKDEP_STATE	locking/lockdep_internals.h	14;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	20;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	35;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	41;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	45;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	49;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	51;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	55;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	57;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	61;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	63;"	d
LOCKDEP_STATE	locking/lockdep_internals.h	67;"	d
LOCKEVENT_reset_cnts	locking/lock_events.h	/^	LOCKEVENT_reset_cnts = lockevent_num,$/;"	e	enum:lock_events
LOCKF_ENABLED_IRQ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_ENABLED_IRQ =$/;"	v
LOCKF_ENABLED_IRQ_ALL	locking/lockdep_internals.h	69;"	d
LOCKF_ENABLED_IRQ_READ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_ENABLED_IRQ_READ =$/;"	v
LOCKF_IRQ	locking/lockdep_internals.h	72;"	d
LOCKF_IRQ_READ	locking/lockdep_internals.h	73;"	d
LOCKF_USED_IN_IRQ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_USED_IN_IRQ =$/;"	v
LOCKF_USED_IN_IRQ_ALL	locking/lockdep_internals.h	70;"	d
LOCKF_USED_IN_IRQ_READ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_USED_IN_IRQ_READ =$/;"	v
LOCK_EVENT	locking/lock_events.c	26;"	d	file:
LOCK_EVENT	locking/lock_events.c	27;"	d	file:
LOCK_EVENT	locking/lock_events_list.h	17;"	d
LOCK_EVENTS_DIR	locking/lock_events.c	29;"	d	file:
LOCK_USAGE_CHARS	locking/lockdep_internals.h	114;"	d
LOCK_USAGE_DIR_MASK	locking/lockdep_internals.h	26;"	d
LOCK_USAGE_READ_MASK	locking/lockdep_internals.h	25;"	d
LOCK_USAGE_STATES	locking/lockdep_internals.h	/^	LOCK_USAGE_STATES$/;"	e	enum:lock_usage_bit
LOCK_USAGE_STATE_MASK	locking/lockdep_internals.h	27;"	d
LOCK_USED	locking/lockdep_internals.h	/^	LOCK_USED,$/;"	e	enum:lock_usage_bit
LOG_ALIGN	printk/printk.c	446;"	d	file:
LOG_BUF_LEN_MAX	printk/printk.c	448;"	d	file:
LOG_CONT	printk/printk.c	/^	LOG_CONT	= 8,	\/* text is a fragment of a continuation line *\/$/;"	e	enum:log_flags	file:
LOG_FACILITY	printk/printk.c	443;"	d	file:
LOG_LEVEL	printk/printk.c	442;"	d	file:
LOG_LINE_MAX	printk/printk.c	2055;"	d	file:
LOG_LINE_MAX	printk/printk.c	440;"	d	file:
LOG_NEWLINE	printk/printk.c	/^	LOG_NEWLINE	= 2,	\/* text ended with a newline *\/$/;"	e	enum:log_flags	file:
LPM_CREATE_FLAG_MASK	bpf/lpm_trie.c	537;"	d	file:
LPM_DATA_SIZE_MAX	bpf/lpm_trie.c	526;"	d	file:
LPM_DATA_SIZE_MIN	bpf/lpm_trie.c	527;"	d	file:
LPM_KEY_SIZE	bpf/lpm_trie.c	533;"	d	file:
LPM_KEY_SIZE_MAX	bpf/lpm_trie.c	534;"	d	file:
LPM_KEY_SIZE_MIN	bpf/lpm_trie.c	535;"	d	file:
LPM_TREE_NODE_FLAG_IM	bpf/lpm_trie.c	19;"	d	file:
LPM_VAL_SIZE_MAX	bpf/lpm_trie.c	529;"	d	file:
LPM_VAL_SIZE_MIN	bpf/lpm_trie.c	531;"	d	file:
LVL_BITS	time/timer.c	164;"	d	file:
LVL_CLK_DIV	time/timer.c	152;"	d	file:
LVL_CLK_MASK	time/timer.c	153;"	d	file:
LVL_CLK_SHIFT	time/timer.c	151;"	d	file:
LVL_DEPTH	time/timer.c	171;"	d	file:
LVL_DEPTH	time/timer.c	173;"	d	file:
LVL_GRAN	time/timer.c	155;"	d	file:
LVL_MASK	time/timer.c	166;"	d	file:
LVL_OFFS	time/timer.c	167;"	d	file:
LVL_SHIFT	time/timer.c	154;"	d	file:
LVL_SIZE	time/timer.c	165;"	d	file:
LVL_START	time/timer.c	161;"	d	file:
LZO_CMP_PAGES	power/swap.c	514;"	d	file:
LZO_CMP_SIZE	power/swap.c	516;"	d	file:
LZO_HEADER	power/swap.c	507;"	d	file:
LZO_MAX_RD_PAGES	power/swap.c	523;"	d	file:
LZO_MIN_RD_PAGES	power/swap.c	522;"	d	file:
LZO_THREADS	power/swap.c	519;"	d	file:
LZO_UNC_PAGES	power/swap.c	510;"	d	file:
LZO_UNC_SIZE	power/swap.c	511;"	d	file:
MANTSIZE	acct.c	311;"	d	file:
MANTSIZE2	acct.c	352;"	d	file:
MAP_ERR_CHECKED	dma/debug.c	/^	MAP_ERR_CHECKED,$/;"	e	enum:map_err_types	file:
MAP_ERR_CHECK_NOT_APPLICABLE	dma/debug.c	/^	MAP_ERR_CHECK_NOT_APPLICABLE,$/;"	e	enum:map_err_types	file:
MAP_ERR_NOT_CHECKED	dma/debug.c	/^	MAP_ERR_NOT_CHECKED,$/;"	e	enum:map_err_types	file:
MAP_PAGE_ENTRIES	power/swap.c	61;"	d	file:
MARK	trace/trace_output.c	491;"	d	file:
MARK	trace/trace_output.c	492;"	d	file:
MARK	trace/trace_output.c	505;"	d	file:
MASK_DECLARE_1	cpu.c	2262;"	d	file:
MASK_DECLARE_2	cpu.c	2263;"	d	file:
MASK_DECLARE_4	cpu.c	2264;"	d	file:
MASK_DECLARE_8	cpu.c	2265;"	d	file:
MASK_SHIFT	time/hrtimer.c	55;"	d	file:
MASK_TC_BIT	trace/blktrace.c	206;"	d	file:
MATCH_END_ONLY	trace/trace.h	/^	MATCH_END_ONLY,$/;"	e	enum:regex_type
MATCH_FRONT_ONLY	trace/trace.h	/^	MATCH_FRONT_ONLY,$/;"	e	enum:regex_type
MATCH_FULL	trace/trace.h	/^	MATCH_FULL = 0,$/;"	e	enum:regex_type
MATCH_GLOB	trace/trace.h	/^	MATCH_GLOB,$/;"	e	enum:regex_type
MATCH_INDEX	trace/trace.h	/^	MATCH_INDEX,$/;"	e	enum:regex_type
MATCH_MIDDLE_ONLY	trace/trace.h	/^	MATCH_MIDDLE_ONLY,$/;"	e	enum:regex_type
MAXARGC	debug/kdb/kdb_main.c	909;"	d	file:
MAXEXP2	acct.c	355;"	d	file:
MAXFRACT	acct.c	313;"	d	file:
MAXFRACT2	acct.c	354;"	d	file:
MAXLR	latencytop.c	61;"	d	file:
MAXRESERVE	resource.c	1485;"	d	file:
MAX_ARCH_HEADER_SIZE	power/power.h	25;"	d
MAX_ARGSTR_LEN	trace/trace_probe.h	33;"	d
MAX_ARG_NAME_LEN	trace/trace_probe.h	35;"	d
MAX_ARRAY_LEN	trace/trace_probe.h	197;"	d
MAX_ARRAY_LEN	trace/trace_probe.h	34;"	d
MAX_CIRCULAR_QUEUE_SIZE	locking/lockdep.c	1266;"	d	file:
MAX_CMDLINECONSOLES	printk/printk.c	268;"	d	file:
MAX_EVENT_NAME_LEN	trace/trace.h	1877;"	d
MAX_EXECVE_AUDIT_LEN	auditsc.c	88;"	d	file:
MAX_FILTER_PRED	trace/trace.h	1492;"	d
MAX_FUNCINFO_REC_SIZE	bpf/verifier.c	6398;"	d	file:
MAX_FWD_CB_JIFFIES	rcu/rcutorture.c	1657;"	d	file:
MAX_IDLE_WORKERS_RATIO	workqueue.c	/^	MAX_IDLE_WORKERS_RATIO	= 4,		\/* 1\/4 of busy can be idle *\/$/;"	e	enum:__anon17	file:
MAX_INSNS_PER_PATH	seccomp.c	138;"	d	file:
MAX_INTERRUPTS	events/core.c	2240;"	d	file:
MAX_IORES_LEVEL	resource.c	/^enum { MAX_IORES_LEVEL = 5 };$/;"	e	enum:__anon14	file:
MAX_KMOD_ALL_BUSY_TIMEOUT	kmod.c	57;"	d	file:
MAX_KMOD_CONCURRENT	kmod.c	43;"	d	file:
MAX_KPROBE_CMDLINE_SIZE	trace/trace_kprobe.c	24;"	d	file:
MAX_LINEINFO_REC_SIZE	bpf/verifier.c	6518;"	d	file:
MAX_LOCKDEP_CHAINS	locking/lockdep_internals.h	107;"	d
MAX_LOCKDEP_CHAINS_BITS	locking/lockdep_internals.h	93;"	d
MAX_LOCKDEP_CHAINS_BITS	locking/lockdep_internals.h	98;"	d
MAX_LOCKDEP_CHAIN_HLOCKS	locking/lockdep_internals.h	109;"	d
MAX_LOCKDEP_ENTRIES	locking/lockdep_internals.h	92;"	d
MAX_LOCKDEP_ENTRIES	locking/lockdep_internals.h	96;"	d
MAX_LOG_TAKE_PART	printk/printk.c	572;"	d	file:
MAX_MEAS	rcu/rcuperf.c	121;"	d	file:
MAX_NAMELEN	irq/proc.c	290;"	d	file:
MAX_NAMELEN	irq/proc.c	326;"	d	file:
MAX_NAMELEN	irq/proc.c	328;"	d	file:
MAX_NAMELEN	irq/proc.c	407;"	d	file:
MAX_NODES	locking/qspinlock.c	68;"	d	file:
MAX_OBJ_NUM	padata.c	36;"	d	file:
MAX_PACKET_OFF	bpf/verifier.c	2236;"	d	file:
MAX_PID_NS_LEVEL	pid_namespace.c	30;"	d	file:
MAX_PINNED_INTERVAL	sched/fair.c	8727;"	d	file:
MAX_PROCTITLE_AUDIT_LEN	auditsc.c	91;"	d	file:
MAX_READERS_WAKEUP	locking/rwsem.c	383;"	d	file:
MAX_RESOLVE_DEPTH	bpf/btf.c	242;"	d	file:
MAX_SCAN_WINDOW	sched/fair.c	1127;"	d	file:
MAX_SHARES	sched/sched.h	410;"	d
MAX_SOFTIRQ_RESTART	softirq.c	214;"	d	file:
MAX_SOFTIRQ_TIME	softirq.c	213;"	d	file:
MAX_STACK_ENTRIES	livepatch/transition.c	17;"	d	file:
MAX_STACK_TRACE_ENTRIES	locking/lockdep_internals.h	104;"	d
MAX_STACK_TRACE_ENTRIES	locking/lockdep_internals.h	94;"	d
MAX_STRING_SIZE	trace/trace_probe.h	36;"	d
MAX_TAI_OFFSET	time/ntp.c	46;"	d	file:
MAX_TASKS_SHOWN_PER_CSS	cgroup/debug.c	113;"	d	file:
MAX_THREADS	fork.c	118;"	d	file:
MAX_TICKADJ	time/ntp.c	43;"	d	file:
MAX_TICKADJ_SCALED	time/ntp.c	44;"	d	file:
MAX_TRACER_SIZE	trace/trace.c	165;"	d	file:
MAX_TRACE_ARGS	trace/trace_probe.h	32;"	d
MAX_UPROBE_XOL_SLOTS	events/uprobes.c	33;"	d	file:
MAX_WORK	async.c	60;"	d	file:
MAYDAY_INITIAL_TIMEOUT	workqueue.c	/^	MAYDAY_INITIAL_TIMEOUT  = HZ \/ 100 >= 2 ? HZ \/ 100 : 2,$/;"	e	enum:__anon17	file:
MAYDAY_INTERVAL	workqueue.c	/^	MAYDAY_INTERVAL		= HZ \/ 10,	\/* and then every 100ms *\/$/;"	e	enum:__anon17	file:
MB	tsacct.c	114;"	d	file:
MB	tsacct.c	78;"	d	file:
MEMBARRIER_CMD_BITMASK	sched/membarrier.c	21;"	d	file:
MEMBARRIER_PRIVATE_EXPEDITED_SYNC_CORE_BITMASK	sched/membarrier.c	14;"	d	file:
MEMBARRIER_PRIVATE_EXPEDITED_SYNC_CORE_BITMASK	sched/membarrier.c	18;"	d	file:
MIN_BPF_FUNCINFO_SIZE	bpf/verifier.c	6397;"	d	file:
MIN_BPF_LINEINFO_SIZE	bpf/verifier.c	6516;"	d	file:
MIN_DELTA_LIMIT	time/clockevents.c	194;"	d	file:
MIN_FWD_CBS_LAUNDERED	rcu/rcutorture.c	1659;"	d	file:
MIN_FWD_CB_LAUNDERS	rcu/rcutorture.c	1658;"	d	file:
MIN_MEAS	rcu/rcuperf.c	122;"	d	file:
MIN_SHARES	sched/sched.h	409;"	d
MIN_THREADS	fork.c	113;"	d	file:
MISSING_QUOTE	trace/trace_events_filter.c	/^	MISSING_QUOTE		= -3,$/;"	e	enum:__anon32	file:
MODINFO_ATTR	module.c	761;"	d	file:
MODULE_FLAGS_BUF_SIZE	module.c	4202;"	d	file:
MODULE_PARAM_PREFIX	debug/kdb/kdb_main.c	50;"	d	file:
MODULE_PARAM_PREFIX	debug/kdb/kdb_main.c	51;"	d	file:
MODULE_PARAM_PREFIX	rcu/tree.c	65;"	d	file:
MODULE_PARAM_PREFIX	rcu/tree.c	67;"	d	file:
MODULE_PARAM_PREFIX	rcu/update.c	49;"	d	file:
MODULE_PARAM_PREFIX	rcu/update.c	51;"	d	file:
MODULE_REF_BASE	module.c	798;"	d	file:
MOD_TIMER_PENDING_ONLY	time/timer.c	941;"	d	file:
MOD_TIMER_REDUCE	time/timer.c	942;"	d	file:
MPX_DISABLE_MANAGEMENT	sys.c	110;"	d	file:
MPX_ENABLE_MANAGEMENT	sys.c	107;"	d	file:
MSG_FORMAT_DEFAULT	printk/printk.c	/^	MSG_FORMAT_DEFAULT	= 0,$/;"	e	enum:con_msg_format_flags	file:
MSG_FORMAT_SYSLOG	printk/printk.c	/^	MSG_FORMAT_SYSLOG	= (1 << 0),$/;"	e	enum:con_msg_format_flags	file:
MULTI_STOP_DISABLE_IRQ	stop_machine.c	/^	MULTI_STOP_DISABLE_IRQ,$/;"	e	enum:multi_stop_state	file:
MULTI_STOP_EXIT	stop_machine.c	/^	MULTI_STOP_EXIT,$/;"	e	enum:multi_stop_state	file:
MULTI_STOP_NONE	stop_machine.c	/^	MULTI_STOP_NONE,$/;"	e	enum:multi_stop_state	file:
MULTI_STOP_PREPARE	stop_machine.c	/^	MULTI_STOP_PREPARE,$/;"	e	enum:multi_stop_state	file:
MULTI_STOP_RUN	stop_machine.c	/^	MULTI_STOP_RUN,$/;"	e	enum:multi_stop_state	file:
MUTEX_FLAGS	locking/mutex.c	66;"	d	file:
MUTEX_FLAG_HANDOFF	locking/mutex.c	63;"	d	file:
MUTEX_FLAG_PICKUP	locking/mutex.c	64;"	d	file:
MUTEX_FLAG_WAITERS	locking/mutex.c	62;"	d	file:
NAME_MAX_LEN	dma/debug.c	127;"	d	file:
NESTED_BITS	trace/ring_buffer.c	2720;"	d	file:
NICE_0_LOAD	sched/sched.h	137;"	d
NICE_0_LOAD_SHIFT	sched/sched.h	119;"	d
NICE_0_LOAD_SHIFT	sched/sched.h	123;"	d
NMI_WATCHDOG_DEFAULT	watchdog.c	34;"	d	file:
NMI_WATCHDOG_DEFAULT	watchdog.c	37;"	d	file:
NO	trace/trace_events_filter.c	2111;"	d	file:
NO	trace/trace_events_filter.c	2172;"	d	file:
NOHZ_BALANCE_KICK	sched/sched.h	2161;"	d
NOHZ_BALANCE_KICK_BIT	sched/sched.h	2158;"	d
NOHZ_KICK_MASK	sched/sched.h	2164;"	d
NOHZ_MODE_HIGHRES	time/tick-sched.h	/^	NOHZ_MODE_HIGHRES,$/;"	e	enum:tick_nohz_mode
NOHZ_MODE_INACTIVE	time/tick-sched.h	/^	NOHZ_MODE_INACTIVE,$/;"	e	enum:tick_nohz_mode
NOHZ_MODE_LOWRES	time/tick-sched.h	/^	NOHZ_MODE_LOWRES,$/;"	e	enum:tick_nohz_mode
NOHZ_STATS_KICK	sched/sched.h	2162;"	d
NOHZ_STATS_KICK_BIT	sched/sched.h	2159;"	d
NOT_VISITED	bpf/btf.c	/^	NOT_VISITED,$/;"	e	enum:visit_state	file:
NO_CMDLINE_MAP	trace/trace.c	1913;"	d	file:
NR	bpf/cgroup.c	200;"	d	file:
NR_ACCUMULATED_SAMPLES	events/core.c	488;"	d	file:
NR_BASES	time/timer.c	187;"	d	file:
NR_BASES	time/timer.c	191;"	d	file:
NR_BPF_LRU_LIST_COUNT	bpf/bpf_lru_list.h	11;"	d
NR_BPF_LRU_LIST_T	bpf/bpf_lru_list.h	10;"	d
NR_BPF_LRU_LOCAL_LIST_T	bpf/bpf_lru_list.h	12;"	d
NR_CACHED_STACKS	fork.c	182;"	d	file:
NR_NUMA_HINT_FAULT_BUCKETS	sched/fair.c	1251;"	d	file:
NR_NUMA_HINT_FAULT_STATS	sched/fair.c	1248;"	d	file:
NR_NUMA_HINT_FAULT_TYPES	sched/fair.c	1245;"	d	file:
NR_PROFILE_GRP	profile.c	41;"	d	file:
NR_PROFILE_HIT	profile.c	40;"	d	file:
NR_STD_WORKER_POOLS	workqueue.c	/^	NR_STD_WORKER_POOLS	= 2,		\/* # standard pools per cpu *\/$/;"	e	enum:__anon17	file:
NR_TO_INIT	trace/ftrace.c	1109;"	d	file:
NS_TO_JIFFIES	sched/sched.h	102;"	d
NUMA_BACKPLANE	sched/sched.h	/^	NUMA_BACKPLANE,$/;"	e	enum:numa_topology_type
NUMA_CPU	sched/sched.h	/^	NUMA_CPU,$/;"	e	enum:numa_faults_stats
NUMA_CPUBUF	sched/sched.h	/^	NUMA_CPUBUF$/;"	e	enum:numa_faults_stats
NUMA_DIRECT	sched/sched.h	/^	NUMA_DIRECT,$/;"	e	enum:numa_topology_type
NUMA_GLUELESS_MESH	sched/sched.h	/^	NUMA_GLUELESS_MESH,$/;"	e	enum:numa_topology_type
NUMA_MEM	sched/sched.h	/^	NUMA_MEM = 0,$/;"	e	enum:numa_faults_stats
NUMA_MEMBUF	sched/sched.h	/^	NUMA_MEMBUF,$/;"	e	enum:numa_faults_stats
NUMA_PERIOD_SLOTS	sched/fair.c	1965;"	d	file:
NUMA_PERIOD_THRESHOLD	sched/fair.c	1966;"	d	file:
NUM_BINS	time/timekeeping_debug.c	18;"	d	file:
N_LAUNDERS_HIST	rcu/rcutorture.c	1665;"	d	file:
OBJ_TREE	gcov/gcov.h	/^		OBJ_TREE,$/;"	e	enum:gcov_link::__anon20
OFFSET	dma/swiotlb.c	52;"	d	file:
OPS	trace/trace_events_filter.c	/^enum filter_op_ids { OPS };$/;"	e	enum:filter_op_ids	file:
OPS	trace/trace_events_filter.c	24;"	d	file:
OPTIMIZE_DELAY	kprobes.c	465;"	d	file:
OPT_ERR	bpf/inode.c	/^	OPT_ERR,$/;"	e	enum:__anon68	file:
OPT_MODE	bpf/inode.c	/^	OPT_MODE,$/;"	e	enum:__anon68	file:
ORIG_CFLAGS	trace/Makefile	/^ORIG_CFLAGS := $(KBUILD_CFLAGS)$/;"	m
OWNER_NONSPINNABLE	locking/rwsem.c	/^	OWNER_NONSPINNABLE	= 1 << 3,$/;"	e	enum:owner_state	file:
OWNER_NULL	locking/rwsem.c	/^	OWNER_NULL		= 1 << 0,$/;"	e	enum:owner_state	file:
OWNER_READER	locking/rwsem.c	/^	OWNER_READER		= 1 << 2,$/;"	e	enum:owner_state	file:
OWNER_SPINNABLE	locking/rwsem.c	699;"	d	file:
OWNER_WRITER	locking/rwsem.c	/^	OWNER_WRITER		= 1 << 1,$/;"	e	enum:owner_state	file:
Opt_all	cgroup/cgroup-v1.c	/^	Opt_all,$/;"	e	enum:cgroup1_param	file:
Opt_clone_children	cgroup/cgroup-v1.c	/^	Opt_clone_children,$/;"	e	enum:cgroup1_param	file:
Opt_cpuset_v2_mode	cgroup/cgroup-v1.c	/^	Opt_cpuset_v2_mode,$/;"	e	enum:cgroup1_param	file:
Opt_memory_localevents	cgroup/cgroup.c	/^	Opt_memory_localevents,$/;"	e	enum:cgroup2_param	file:
Opt_name	cgroup/cgroup-v1.c	/^	Opt_name,$/;"	e	enum:cgroup1_param	file:
Opt_none	cgroup/cgroup-v1.c	/^	Opt_none,$/;"	e	enum:cgroup1_param	file:
Opt_noprefix	cgroup/cgroup-v1.c	/^	Opt_noprefix,$/;"	e	enum:cgroup1_param	file:
Opt_nsdelegate	cgroup/cgroup.c	/^	Opt_nsdelegate,$/;"	e	enum:cgroup2_param	file:
Opt_release_agent	cgroup/cgroup-v1.c	/^	Opt_release_agent,$/;"	e	enum:cgroup1_param	file:
Opt_xattr	cgroup/cgroup-v1.c	/^	Opt_xattr,$/;"	e	enum:cgroup1_param	file:
P	sched/debug.c	379;"	d	file:
P	sched/debug.c	415;"	d	file:
P	sched/debug.c	571;"	d	file:
P	sched/debug.c	588;"	d	file:
P	sched/debug.c	630;"	d	file:
P	sched/debug.c	649;"	d	file:
P	sched/debug.c	659;"	d	file:
P	sched/debug.c	667;"	d	file:
P	sched/debug.c	701;"	d	file:
P	sched/debug.c	713;"	d	file:
P	sched/debug.c	718;"	d	file:
P	sched/debug.c	728;"	d	file:
P	sched/debug.c	815;"	d	file:
P	sched/debug.c	868;"	d	file:
P	sched/debug.c	965;"	d	file:
P	time/timer_list.c	140;"	d	file:
P	time/timer_list.c	155;"	d	file:
P	time/timer_list.c	159;"	d	file:
P	time/timer_list.c	186;"	d	file:
P64	sched/debug.c	653;"	d	file:
P64	sched/debug.c	656;"	d	file:
PAC_RESET_KEYS	sys.c	125;"	d	file:
PADATA_ATTR_RO	padata.c	955;"	d	file:
PADATA_ATTR_RW	padata.c	952;"	d	file:
PAGES_FOR_IO	power/power.h	48;"	d
PAGE_BUDDY_MAPCOUNT_VALUE	crash_core.c	461;"	d	file:
PAGE_COUNT	kexec_core.c	142;"	d	file:
PAGE_OFFLINE_MAPCOUNT_VALUE	crash_core.c	465;"	d	file:
PANIC_BLINK_SPD	panic.c	36;"	d	file:
PANIC_PRINT_ALL_PRINTK_MSG	panic.c	55;"	d	file:
PANIC_PRINT_FTRACE_INFO	panic.c	54;"	d	file:
PANIC_PRINT_LOCK_INFO	panic.c	53;"	d	file:
PANIC_PRINT_MEM_INFO	panic.c	51;"	d	file:
PANIC_PRINT_TASK_INFO	panic.c	50;"	d	file:
PANIC_PRINT_TIMER_INFO	panic.c	52;"	d	file:
PANIC_TIMER_STEP	panic.c	35;"	d	file:
PARAM_MAX_STACK	trace/trace_probe.c	260;"	d	file:
PBES_PER_LINKED_PAGE	power/snapshot.c	2438;"	d	file:
PENDING	signal.c	152;"	d	file:
PERCPU_FREE_TARGET	bpf/bpf_lru_list.c	13;"	d	file:
PERCPU_NR_SCANS	bpf/bpf_lru_list.c	14;"	d	file:
PERFOUT_STRING	rcu/rcuperf.c	47;"	d	file:
PERF_AUX_GFP	events/ring_buffer.c	565;"	d	file:
PERF_CGROUP_SWIN	events/core.c	786;"	d	file:
PERF_CGROUP_SWOUT	events/core.c	785;"	d	file:
PERF_CPU_HRTIMER	events/core.c	1061;"	d	file:
PERF_FLAG	rcu/rcuperf.c	46;"	d	file:
PERF_FLAG_ALL	events/core.c	345;"	d	file:
PERF_FORMAT_TOTAL_TIMES	events/core.c	6204;"	d	file:
PERF_PROBE_CONFIG_IS_RETPROBE	events/core.c	/^	PERF_PROBE_CONFIG_IS_RETPROBE = 1U << 0,  \/* [k,u]retprobe *\/$/;"	e	enum:perf_probe_config	file:
PERF_SAMPLE_BRANCH_PERM_PLM	events/core.c	353;"	d	file:
PERF_UPROBE_REF_CTR_OFFSET_BITS	events/core.c	/^	PERF_UPROBE_REF_CTR_OFFSET_BITS = 32,$/;"	e	enum:perf_probe_config	file:
PERF_UPROBE_REF_CTR_OFFSET_SHIFT	events/core.c	/^	PERF_UPROBE_REF_CTR_OFFSET_SHIFT = 64 - PERF_UPROBE_REF_CTR_OFFSET_BITS,$/;"	e	enum:perf_probe_config	file:
PER_RCU_NODE_PERIOD	rcu/tree.c	182;"	d	file:
PG_ANY	power/snapshot.c	136;"	d	file:
PG_SAFE	power/snapshot.c	137;"	d	file:
PG_UNSAFE_CLEAR	power/snapshot.c	138;"	d	file:
PG_UNSAFE_KEEP	power/snapshot.c	139;"	d	file:
PIDLIST_TOO_LARGE	cgroup/cgroup-v1.c	201;"	d	file:
PIDS_MAX	cgroup/pids.c	37;"	d	file:
PIDS_MAX_STR	cgroup/pids.c	38;"	d	file:
PID_BUF_SIZE	trace/trace.c	476;"	d	file:
PKEY_ID_PGP	module_signing.c	/^	PKEY_ID_PGP,		\/* OpenPGP generated key ID *\/$/;"	e	enum:pkey_id_type	file:
PKEY_ID_PKCS7	module_signing.c	/^	PKEY_ID_PKCS7,		\/* Signature in PKCS#7 message *\/$/;"	e	enum:pkey_id_type	file:
PKEY_ID_X509	module_signing.c	/^	PKEY_ID_X509,		\/* X.509 arbitrary subjectKeyIdentifier *\/$/;"	e	enum:pkey_id_type	file:
PN	sched/debug.c	381;"	d	file:
PN	sched/debug.c	413;"	d	file:
PN	sched/debug.c	575;"	d	file:
PN	sched/debug.c	586;"	d	file:
PN	sched/debug.c	638;"	d	file:
PN	sched/debug.c	650;"	d	file:
PN	sched/debug.c	703;"	d	file:
PN	sched/debug.c	712;"	d	file:
PN	sched/debug.c	720;"	d	file:
PN	sched/debug.c	727;"	d	file:
PN	sched/debug.c	817;"	d	file:
PN	sched/debug.c	874;"	d	file:
PN	sched/debug.c	962;"	d	file:
PN_SCHEDSTAT	sched/debug.c	382;"	d	file:
PN_SCHEDSTAT	sched/debug.c	412;"	d	file:
PN_SCHEDSTAT	sched/debug.c	876;"	d	file:
PN_SCHEDSTAT	sched/debug.c	961;"	d	file:
POLL_SPURIOUS_IRQ_INTERVAL	irq/spurious.c	19;"	d	file:
POOL_DISASSOCIATED	workqueue.c	/^	POOL_DISASSOCIATED	= 1 << 2,	\/* cpu can't serve workers *\/$/;"	e	enum:__anon17	file:
POOL_MANAGER_ACTIVE	workqueue.c	/^	POOL_MANAGER_ACTIVE	= 1 << 0,	\/* being managed *\/$/;"	e	enum:__anon17	file:
PPS_INTCOUNT	time/ntp.c	99;"	d	file:
PPS_INTMAX	time/ntp.c	98;"	d	file:
PPS_INTMIN	time/ntp.c	97;"	d	file:
PPS_MAXWANDER	time/ntp.c	102;"	d	file:
PPS_POPCORN	time/ntp.c	96;"	d	file:
PPS_VALID	time/ntp.c	95;"	d	file:
PREALLOC_DMA_DEBUG_ENTRIES	dma/debug.c	34;"	d	file:
PREDICTION_BUFFER_SIZE	irq/timings.c	270;"	d	file:
PREDICTION_FACTOR	irq/timings.c	268;"	d	file:
PREDICTION_MAX	irq/timings.c	269;"	d	file:
PREDICTION_PERIOD_MAX	irq/timings.c	267;"	d	file:
PREDICTION_PERIOD_MIN	irq/timings.c	266;"	d	file:
PRED_FUNC_MAX	trace/trace_events_filter.c	50;"	d	file:
PRED_FUNC_START	trace/trace_events_filter.c	49;"	d	file:
PREFIX_MAX	printk/printk.c	2056;"	d	file:
PREFIX_MAX	printk/printk.c	436;"	d	file:
PREFIX_MAX	printk/printk.c	438;"	d	file:
PRINTK_NMI_CONTEXT_MASK	printk/internal.h	11;"	d
PRINTK_NMI_DIRECT_CONTEXT_MASK	printk/internal.h	10;"	d
PRINTK_PENDING_OUTPUT	printk/printk.c	2934;"	d	file:
PRINTK_PENDING_WAKEUP	printk/printk.c	2933;"	d	file:
PRINTK_SAFE_CONTEXT_MASK	printk/internal.h	9;"	d
PRINT_TYPE_FMT_NAME	trace/trace_probe.h	146;"	d
PRINT_TYPE_FUNC_NAME	trace/trace_probe.h	145;"	d
PROCESS_AND	trace/trace_events_filter.c	/^	PROCESS_AND	= 2,$/;"	e	enum:__anon31	file:
PROCESS_CLOCK	time/posix-cpu-timers.c	1380;"	d	file:
PROCESS_OR	trace/trace_events_filter.c	/^	PROCESS_OR	= 4,$/;"	e	enum:__anon31	file:
PROFILES_PER_PAGE	trace/ftrace.c	415;"	d	file:
PROFILE_GRPSHIFT	profile.c	38;"	d	file:
PROFILE_GRPSZ	profile.c	39;"	d	file:
PROFILE_RECORDS_SIZE	trace/ftrace.c	412;"	d	file:
PROG_NAME	bpf/core.c	1566;"	d	file:
PROG_NAME_ARGS	bpf/core.c	1578;"	d	file:
PROG_NAME_LIST	bpf/core.c	1610;"	d	file:
PROG_NAME_LIST	bpf/core.c	1618;"	d	file:
PROG_NAME_LIST	bpf/core.c	1619;"	d	file:
PROG_NAME_LIST	bpf/core.c	1626;"	d	file:
PRS_DISABLED	cgroup/cpuset.c	178;"	d	file:
PRS_ENABLED	cgroup/cpuset.c	179;"	d	file:
PRS_ERROR	cgroup/cpuset.c	180;"	d	file:
PSI_FREQ	sched/psi.c	161;"	d	file:
PU	sched/debug.c	573;"	d	file:
PU	sched/debug.c	587;"	d	file:
PU	sched/debug.c	598;"	d	file:
PU	sched/debug.c	611;"	d	file:
PV_HE_MIN	locking/qspinlock_paravirt.h	177;"	d
PV_HE_PER_LINE	locking/qspinlock_paravirt.h	176;"	d
PV_PREV_CHECK_MASK	locking/qspinlock_paravirt.h	38;"	d
P_SCHEDSTAT	sched/debug.c	380;"	d	file:
P_SCHEDSTAT	sched/debug.c	414;"	d	file:
P_SCHEDSTAT	sched/debug.c	870;"	d	file:
P_SCHEDSTAT	sched/debug.c	964;"	d	file:
P_ns	time/timer_list.c	143;"	d	file:
P_ns	time/timer_list.c	156;"	d	file:
P_ns	time/timer_list.c	162;"	d	file:
P_ns	time/timer_list.c	187;"	d	file:
QUEUE_STACK_CREATE_FLAG_MASK	bpf/queue_stack_maps.c	13;"	d	file:
RATIO_SHIFT	sched/sched.h	1842;"	d
RAW_DATA_MAX_SIZE	trace/trace.c	6406;"	d	file:
RB_ALIGNMENT	trace/ring_buffer.c	128;"	d	file:
RB_ALIGN_DATA	trace/ring_buffer.c	/^	unsigned char	 data[] RB_ALIGN_DATA;	\/* data of buffer page *\/$/;"	m	struct:buffer_data_page	file:
RB_ALIGN_DATA	trace/ring_buffer.c	131;"	d	file:
RB_BUFFER_OFF	trace/ring_buffer.c	123;"	d	file:
RB_CTX_IRQ	trace/ring_buffer.c	/^	RB_CTX_IRQ,$/;"	e	enum:__anon28	file:
RB_CTX_MAX	trace/ring_buffer.c	/^	RB_CTX_MAX$/;"	e	enum:__anon28	file:
RB_CTX_NMI	trace/ring_buffer.c	/^	RB_CTX_NMI,$/;"	e	enum:__anon28	file:
RB_CTX_NORMAL	trace/ring_buffer.c	/^	RB_CTX_NORMAL,$/;"	e	enum:__anon28	file:
RB_CTX_SOFTIRQ	trace/ring_buffer.c	/^	RB_CTX_SOFTIRQ,$/;"	e	enum:__anon28	file:
RB_EVNT_HDR_SIZE	trace/ring_buffer.c	127;"	d	file:
RB_EVNT_MIN_SIZE	trace/ring_buffer.c	130;"	d	file:
RB_FLAG_MASK	trace/ring_buffer.c	844;"	d	file:
RB_LEN_TIME_EXTEND	trace/ring_buffer.c	/^	RB_LEN_TIME_EXTEND = 8,$/;"	e	enum:__anon27	file:
RB_LEN_TIME_STAMP	trace/ring_buffer.c	/^	RB_LEN_TIME_STAMP =  8,$/;"	e	enum:__anon27	file:
RB_MAX_SMALL_DATA	trace/ring_buffer.c	129;"	d	file:
RB_MISSED_EVENTS	trace/ring_buffer.c	298;"	d	file:
RB_MISSED_FLAGS	trace/ring_buffer.c	302;"	d	file:
RB_MISSED_STORED	trace/ring_buffer.c	300;"	d	file:
RB_PAGE_HEAD	trace/ring_buffer.c	840;"	d	file:
RB_PAGE_MOVED	trace/ring_buffer.c	847;"	d	file:
RB_PAGE_NORMAL	trace/ring_buffer.c	839;"	d	file:
RB_PAGE_UPDATE	trace/ring_buffer.c	841;"	d	file:
RB_TEST_BUFFER_SIZE	trace/ring_buffer.c	4945;"	d	file:
RB_WARN_ON	trace/ring_buffer.c	726;"	d	file:
RB_WRITE_INTCNT	trace/ring_buffer.c	340;"	d	file:
RB_WRITE_MASK	trace/ring_buffer.c	339;"	d	file:
RCUPERF_SHUTDOWN	rcu/rcuperf.c	74;"	d	file:
RCUPERF_SHUTDOWN	rcu/rcuperf.c	76;"	d	file:
RCUTORTURE_MAX_EXTEND	rcu/rcutorture.c	64;"	d	file:
RCUTORTURE_RDR_BH	rcu/rcutorture.c	57;"	d	file:
RCUTORTURE_RDR_IRQ	rcu/rcutorture.c	58;"	d	file:
RCUTORTURE_RDR_MASK	rcu/rcutorture.c	56;"	d	file:
RCUTORTURE_RDR_MAX_LOOPS	rcu/rcutorture.c	67;"	d	file:
RCUTORTURE_RDR_MAX_SEGS	rcu/rcutorture.c	69;"	d	file:
RCUTORTURE_RDR_NBITS	rcu/rcutorture.c	63;"	d	file:
RCUTORTURE_RDR_PREEMPT	rcu/rcutorture.c	59;"	d	file:
RCUTORTURE_RDR_RBH	rcu/rcutorture.c	60;"	d	file:
RCUTORTURE_RDR_RCU	rcu/rcutorture.c	62;"	d	file:
RCUTORTURE_RDR_SCHED	rcu/rcutorture.c	61;"	d	file:
RCUTORTURE_RDR_SHIFT	rcu/rcutorture.c	55;"	d	file:
RCU_ABBR	rcu/tree.h	382;"	d
RCU_ABBR	rcu/tree.h	385;"	d
RCU_BOOST_DELAY_JIFFIES	rcu/tree_plugin.h	1122;"	d
RCU_DYNTICK_CTRL_CTR	rcu/tree.c	76;"	d	file:
RCU_DYNTICK_CTRL_MASK	rcu/tree.c	75;"	d	file:
RCU_EXP_BLKD	rcu/tree_plugin.h	100;"	d
RCU_EXP_TASKS	rcu/tree_plugin.h	98;"	d
RCU_FLAVOR	rcu/rcu.h	/^	RCU_FLAVOR,$/;"	e	enum:rcutorture_type
RCU_GP_BLKD	rcu/tree_plugin.h	99;"	d
RCU_GP_CLEANED	rcu/tree.h	359;"	d
RCU_GP_CLEANUP	rcu/tree.h	358;"	d
RCU_GP_DOING_FQS	rcu/tree.h	357;"	d
RCU_GP_DONE_GPS	rcu/tree.h	353;"	d
RCU_GP_FLAG_FQS	rcu/tree.h	348;"	d
RCU_GP_FLAG_INIT	rcu/tree.h	347;"	d
RCU_GP_IDLE	rcu/tree.h	351;"	d
RCU_GP_INIT	rcu/tree.h	355;"	d
RCU_GP_ONOFF	rcu/tree.h	354;"	d
RCU_GP_TASKS	rcu/tree_plugin.h	97;"	d
RCU_GP_WAIT_FQS	rcu/tree.h	356;"	d
RCU_GP_WAIT_GPS	rcu/tree.h	352;"	d
RCU_IDLE_GP_DELAY	rcu/tree_plugin.h	1306;"	d
RCU_IDLE_LAZY_GP_DELAY	rcu/tree_plugin.h	1307;"	d
RCU_JIFFIES_FQS_DIV	rcu/tree.h	252;"	d
RCU_JIFFIES_TILL_FORCE_QS	rcu/tree.h	248;"	d
RCU_KTHREAD_MAX	rcu/tree.h	36;"	d
RCU_KTHREAD_OFFCPU	rcu/tree.h	34;"	d
RCU_KTHREAD_RUNNING	rcu/tree.h	32;"	d
RCU_KTHREAD_STOPPED	rcu/tree.h	31;"	d
RCU_KTHREAD_WAITING	rcu/tree.h	33;"	d
RCU_KTHREAD_YIELDING	rcu/tree.h	35;"	d
RCU_NAME	rcu/tree.h	389;"	d
RCU_NAME	rcu/tree.h	393;"	d
RCU_NAME_RAW	rcu/tree.h	383;"	d
RCU_NAME_RAW	rcu/tree.h	386;"	d
RCU_NEST_BIAS	rcu/tree_plugin.h	358;"	d
RCU_NEST_NMAX	rcu/tree_plugin.h	359;"	d
RCU_NEST_PMAX	rcu/tree_plugin.h	360;"	d
RCU_NOCB_WAKE	rcu/tree.h	245;"	d
RCU_NOCB_WAKE_FORCE	rcu/tree.h	246;"	d
RCU_NOCB_WAKE_NOT	rcu/tree.h	244;"	d
RCU_SCHEDULER_INACTIVE	rcu/rcu.h	442;"	d
RCU_SCHEDULER_INIT	rcu/rcu.h	443;"	d
RCU_SCHEDULER_RUNNING	rcu/rcu.h	444;"	d
RCU_SEQ_CTR_SHIFT	rcu/rcu.h	23;"	d
RCU_SEQ_STATE_MASK	rcu/rcu.h	24;"	d
RCU_STALL_DELAY_DELTA	rcu/tree_stall.h	18;"	d
RCU_STALL_DELAY_DELTA	rcu/tree_stall.h	20;"	d
RCU_STALL_RAT_DELAY	rcu/tree.h	256;"	d
RCU_TASKS_FLAVOR	rcu/rcu.h	/^	RCU_TASKS_FLAVOR,$/;"	e	enum:rcutorture_type
RCU_TASK_STALL_TIMEOUT	rcu/update.c	471;"	d	file:
RCU_TORTURE_PIPE_LEN	rcu/rcutorture.c	133;"	d	file:
RCU_TRIVIAL_FLAVOR	rcu/rcu.h	/^	RCU_TRIVIAL_FLAVOR,$/;"	e	enum:rcutorture_type
RDMACG_MAX_STR	cgroup/rdma.c	18;"	d	file:
RDMACG_RESOURCE_TYPE_MAX	cgroup/rdma.c	/^	RDMACG_RESOURCE_TYPE_MAX,$/;"	e	enum:rdmacg_file_type	file:
RDMACG_RESOURCE_TYPE_STAT	cgroup/rdma.c	/^	RDMACG_RESOURCE_TYPE_STAT,$/;"	e	enum:rdmacg_file_type	file:
REALLOC_STATE_FN	bpf/verifier.c	559;"	d	file:
REALLOC_STATE_FN	bpf/verifier.c	597;"	d	file:
RECORD_CMDLINE	trace/trace_sched_switch.c	16;"	d	file:
RECORD_COUNT	gcov/gcc_3_4.c	435;"	d	file:
RECORD_COUNT_LEN	gcov/gcc_3_4.c	434;"	d	file:
RECORD_COUNT_TAG	gcov/gcc_3_4.c	433;"	d	file:
RECORD_FILE_MAGIC	gcov/gcc_3_4.c	426;"	d	file:
RECORD_FUNCTION_CHECK	gcov/gcc_3_4.c	432;"	d	file:
RECORD_FUNCTION_IDENT	gcov/gcc_3_4.c	431;"	d	file:
RECORD_FUNCTION_TAG	gcov/gcc_3_4.c	429;"	d	file:
RECORD_FUNCTON_TAG_LEN	gcov/gcc_3_4.c	430;"	d	file:
RECORD_GCOV_VERSION	gcov/gcc_3_4.c	427;"	d	file:
RECORD_TGID	trace/trace_sched_switch.c	17;"	d	file:
RECORD_TIME_STAMP	gcov/gcc_3_4.c	428;"	d	file:
REDUCE_FLS	events/core.c	3531;"	d	file:
REGISTER	taskstats.c	/^	REGISTER,$/;"	e	enum:actions	file:
REPEAT	trace/bpf_trace.c	1328;"	d	file:
REPEAT_1	trace/bpf_trace.c	1316;"	d	file:
REPEAT_10	trace/bpf_trace.c	1325;"	d	file:
REPEAT_11	trace/bpf_trace.c	1326;"	d	file:
REPEAT_12	trace/bpf_trace.c	1327;"	d	file:
REPEAT_2	trace/bpf_trace.c	1317;"	d	file:
REPEAT_3	trace/bpf_trace.c	1318;"	d	file:
REPEAT_4	trace/bpf_trace.c	1319;"	d	file:
REPEAT_5	trace/bpf_trace.c	1320;"	d	file:
REPEAT_6	trace/bpf_trace.c	1321;"	d	file:
REPEAT_7	trace/bpf_trace.c	1322;"	d	file:
REPEAT_8	trace/bpf_trace.c	1323;"	d	file:
REPEAT_9	trace/bpf_trace.c	1324;"	d	file:
RESCUER_NICE_LEVEL	workqueue.c	/^	RESCUER_NICE_LEVEL	= MIN_NICE,$/;"	e	enum:__anon17	file:
RESERVED_PIDS	pid.c	62;"	d	file:
RESOLVED	bpf/btf.c	/^	RESOLVED,$/;"	e	enum:visit_state	file:
RESOLVE_PTR	bpf/btf.c	/^	RESOLVE_PTR,	\/* Resolving for Pointer *\/$/;"	e	enum:resolve_mode	file:
RESOLVE_STRUCT_OR_ARRAY	bpf/btf.c	/^	RESOLVE_STRUCT_OR_ARRAY,	\/* Resolving for struct\/union$/;"	e	enum:resolve_mode	file:
RESOLVE_TBD	bpf/btf.c	/^	RESOLVE_TBD,	\/* To Be Determined *\/$/;"	e	enum:resolve_mode	file:
RESUME	acct.c	75;"	d	file:
RETRY_TASK	sched/sched.h	1686;"	d
RINGBUF_TYPE_DATA	trace/ring_buffer.c	134;"	d	file:
RING_BUFFER_WRITABLE	events/internal.h	11;"	d
ROOT_TASK_GROUP_LOAD	sched/sched.h	399;"	d
RQCF_ACT_SKIP	sched/sched.h	1074;"	d
RQCF_REQ_SKIP	sched/sched.h	1073;"	d
RQCF_UPDATED	sched/sched.h	1075;"	d
RSEQ_CS_PREEMPT_MIGRATE_FLAGS	rseq.c	21;"	d	file:
RTWS_ASYNC	rcu/rcuperf.c	114;"	d	file:
RTWS_BARRIER	rcu/rcuperf.c	115;"	d	file:
RTWS_COND_GET	rcu/rcutorture.c	171;"	d	file:
RTWS_COND_SYNC	rcu/rcutorture.c	172;"	d	file:
RTWS_DEF_FREE	rcu/rcutorture.c	169;"	d	file:
RTWS_DELAY	rcu/rcutorture.c	167;"	d	file:
RTWS_EXP_SYNC	rcu/rcuperf.c	116;"	d	file:
RTWS_EXP_SYNC	rcu/rcutorture.c	170;"	d	file:
RTWS_FIXED_DELAY	rcu/rcutorture.c	166;"	d	file:
RTWS_IDLE	rcu/rcuperf.c	118;"	d	file:
RTWS_INIT	rcu/rcuperf.c	113;"	d	file:
RTWS_REPLACE	rcu/rcutorture.c	168;"	d	file:
RTWS_STOPPING	rcu/rcuperf.c	119;"	d	file:
RTWS_STOPPING	rcu/rcutorture.c	175;"	d	file:
RTWS_STUTTER	rcu/rcutorture.c	174;"	d	file:
RTWS_SYNC	rcu/rcuperf.c	117;"	d	file:
RTWS_SYNC	rcu/rcutorture.c	173;"	d	file:
RT_MAX_TRIES	sched/rt.c	1612;"	d	file:
RT_MUTEX_FULL_CHAINWALK	locking/rtmutex_common.h	/^	RT_MUTEX_FULL_CHAINWALK,$/;"	e	enum:rtmutex_chainwalk
RT_MUTEX_HAS_WAITERS	locking/rtmutex_common.h	106;"	d
RT_MUTEX_MIN_CHAINWALK	locking/rtmutex_common.h	/^	RT_MUTEX_MIN_CHAINWALK,$/;"	e	enum:rtmutex_chainwalk
RUNNING	debug/kdb/kdb_support.c	557;"	d	file:
RUNNING_HELPERS_TIMEOUT	umh.c	231;"	d	file:
RUNTIME_INF	sched/sched.h	149;"	d
RUN_TIME	trace/ring_buffer_benchmark.c	22;"	d	file:
RWLOCK_BUG_ON	locking/spinlock_debug.c	153;"	d	file:
RWSEM_FLAG_HANDOFF	locking/rwsem.c	156;"	d	file:
RWSEM_FLAG_READFAIL	locking/rwsem.c	157;"	d	file:
RWSEM_FLAG_WAITERS	locking/rwsem.c	155;"	d	file:
RWSEM_LOCK_MASK	locking/rwsem.c	163;"	d	file:
RWSEM_NONSPINNABLE	locking/rwsem.c	102;"	d	file:
RWSEM_OWNER_FLAGS_MASK	locking/rwsem.c	103;"	d	file:
RWSEM_RD_NONSPINNABLE	locking/rwsem.c	100;"	d	file:
RWSEM_READER_BIAS	locking/rwsem.c	160;"	d	file:
RWSEM_READER_MASK	locking/rwsem.c	161;"	d	file:
RWSEM_READER_OWNED	locking/rwsem.c	99;"	d	file:
RWSEM_READER_SHIFT	locking/rwsem.c	159;"	d	file:
RWSEM_READ_FAILED_MASK	locking/rwsem.c	164;"	d	file:
RWSEM_WAITING_FOR_READ	locking/rwsem.c	/^	RWSEM_WAITING_FOR_READ$/;"	e	enum:rwsem_waiter_type	file:
RWSEM_WAITING_FOR_WRITE	locking/rwsem.c	/^	RWSEM_WAITING_FOR_WRITE,$/;"	e	enum:rwsem_waiter_type	file:
RWSEM_WAIT_TIMEOUT	locking/rwsem.c	375;"	d	file:
RWSEM_WAKE_ANY	locking/rwsem.c	/^	RWSEM_WAKE_ANY,		\/* Wake whatever's at head of wait list *\/$/;"	e	enum:rwsem_wake_type	file:
RWSEM_WAKE_READERS	locking/rwsem.c	/^	RWSEM_WAKE_READERS,	\/* Wake readers only *\/$/;"	e	enum:rwsem_wake_type	file:
RWSEM_WAKE_READ_OWNED	locking/rwsem.c	/^	RWSEM_WAKE_READ_OWNED	\/* Waker thread holds the read lock *\/$/;"	e	enum:rwsem_wake_type	file:
RWSEM_WRITER_LOCKED	locking/rwsem.c	154;"	d	file:
RWSEM_WRITER_MASK	locking/rwsem.c	162;"	d	file:
RWSEM_WR_NONSPINNABLE	locking/rwsem.c	101;"	d	file:
SAFE_LOG_BUF_LEN	printk/printk_safe.c	32;"	d	file:
SARG	trace/bpf_trace.c	1330;"	d	file:
SAVED_CMDLINES_DEFAULT	trace/trace.c	1912;"	d	file:
SCHEDSTAT_VERSION	sched/stats.c	13;"	d	file:
SCHED_FEAT	sched/core.c	47;"	d	file:
SCHED_FEAT	sched/core.c	52;"	d	file:
SCHED_FEAT	sched/debug.c	50;"	d	file:
SCHED_FEAT	sched/debug.c	57;"	d	file:
SCHED_FEAT	sched/debug.c	78;"	d	file:
SCHED_FEAT	sched/debug.c	85;"	d	file:
SCHED_FEAT	sched/sched.h	1539;"	d
SCHED_FEAT	sched/sched.h	1547;"	d
SCHED_FEAT	sched/sched.h	1557;"	d
SCHED_FEAT	sched/sched.h	1564;"	d
SCHED_FEAT	sched/sched.h	1576;"	d
SCHED_FEAT	sched/sched.h	1581;"	d
SCHED_FLAG_SUGOV	sched/sched.h	204;"	d
SCHED_WARN_ON	sched/sched.h	79;"	d
SCHED_WARN_ON	sched/sched.h	81;"	d
SECCOMP_LOG_ALLOW	seccomp.c	623;"	d	file:
SECCOMP_LOG_ERRNO	seccomp.c	620;"	d	file:
SECCOMP_LOG_KILL_PROCESS	seccomp.c	617;"	d	file:
SECCOMP_LOG_KILL_THREAD	seccomp.c	618;"	d	file:
SECCOMP_LOG_LOG	seccomp.c	622;"	d	file:
SECCOMP_LOG_TRACE	seccomp.c	621;"	d	file:
SECCOMP_LOG_TRAP	seccomp.c	619;"	d	file:
SECCOMP_LOG_USER_NOTIF	seccomp.c	624;"	d	file:
SECCOMP_NOTIFY_INIT	seccomp.c	/^	SECCOMP_NOTIFY_INIT,$/;"	e	enum:notify_state	file:
SECCOMP_NOTIFY_REPLIED	seccomp.c	/^	SECCOMP_NOTIFY_REPLIED,$/;"	e	enum:notify_state	file:
SECCOMP_NOTIFY_SENT	seccomp.c	/^	SECCOMP_NOTIFY_SENT,$/;"	e	enum:notify_state	file:
SECCOMP_RET_ALLOW_NAME	seccomp.c	1576;"	d	file:
SECCOMP_RET_ERRNO_NAME	seccomp.c	1572;"	d	file:
SECCOMP_RET_KILL_PROCESS_NAME	seccomp.c	1569;"	d	file:
SECCOMP_RET_KILL_THREAD_NAME	seccomp.c	1570;"	d	file:
SECCOMP_RET_LOG_NAME	seccomp.c	1575;"	d	file:
SECCOMP_RET_TRACE_NAME	seccomp.c	1574;"	d	file:
SECCOMP_RET_TRAP_NAME	seccomp.c	1571;"	d	file:
SECCOMP_RET_USER_NOTIF_NAME	seccomp.c	1573;"	d	file:
SECS_PER_DAY	time/ntp.c	42;"	d	file:
SECS_PER_DAY	time/timeconv.c	68;"	d	file:
SECS_PER_HOUR	time/timeconv.c	67;"	d	file:
SEQ_PUT_FIELD	trace/trace_output.h	35;"	d
SEQ_PUT_HEX_FIELD	trace/trace_output.h	38;"	d
SEQ_printf	sched/debug.c	17;"	d	file:
SEQ_printf	time/timer_list.c	/^static void SEQ_printf(struct seq_file *m, const char *fmt, ...)$/;"	f	file:
SETPARAM_POLICY	sched/core.c	4481;"	d	file:
SET_ENDIAN	sys.c	98;"	d	file:
SET_FPEMU_CTL	sys.c	83;"	d	file:
SET_FPEXC_CTL	sys.c	89;"	d	file:
SET_FP_MODE	sys.c	116;"	d	file:
SET_SYSCTL	sched/fair.c	173;"	d	file:
SET_SYSCTL	sched/fair.c	178;"	d	file:
SET_TSC_CTL	sys.c	104;"	d	file:
SET_UNALIGN_CTL	sys.c	77;"	d	file:
SF_CRC32_MODE	power/power.h	170;"	d
SF_NOCOMPRESS_MODE	power/power.h	169;"	d
SF_PLATFORM_MODE	power/power.h	168;"	d
SG_OVERLOAD	sched/sched.h	714;"	d
SG_OVERUTILIZED	sched/sched.h	715;"	d
SHOW_AVAILABLE_TRIGGERS	trace/trace_events_trigger.c	112;"	d	file:
SIGNALS_TIMEOUT	livepatch/transition.c	20;"	d	file:
SIZEOF_TRACE_ENTRY	trace/trace_uprobe.c	29;"	d	file:
SIZEOF_TRACE_KPROBE	trace/trace_kprobe.c	82;"	d	file:
SIZEOF_TRACE_UPROBE	trace/trace_uprobe.c	92;"	d	file:
SKEW_PREFIX	gcov/fs.c	349;"	d	file:
SKIP_AGE_LOAD	sched/fair.c	3588;"	d	file:
SKIP_AGE_LOAD	sched/fair.c	3834;"	d	file:
SLABS_PER_PAGE	dma/swiotlb.c	55;"	d	file:
SLEEP_TIME	trace/ring_buffer_benchmark.c	23;"	d	file:
SLOT_CLEAN	kprobes.c	/^	SLOT_CLEAN = 0,$/;"	e	enum:kprobe_slot_state	file:
SLOT_DIRTY	kprobes.c	/^	SLOT_DIRTY = 1,$/;"	e	enum:kprobe_slot_state	file:
SLOT_USED	kprobes.c	/^	SLOT_USED = 2,$/;"	e	enum:kprobe_slot_state	file:
SMALLIMP	sched/fair.c	1623;"	d	file:
SMPBOOT_H	smpboot.h	3;"	d
SNAPSHOT_MINOR	power/user.c	30;"	d	file:
SOFTIRQ_NOW_MASK	softirq.c	84;"	d	file:
SOFTIRQ_VERBOSE	locking/lockdep.c	406;"	d	file:
SOFTIRQ_VERBOSE	locking/lockdep.c	409;"	d	file:
SOFTIRQ_verbose	locking/lockdep.c	/^static int SOFTIRQ_verbose(struct lock_class *class)$/;"	f	file:
SPARE_PAGES	power/power.h	54;"	d
SPIN_BUG_ON	locking/spinlock_debug.c	78;"	d	file:
SPLIT_NS	sched/debug.c	48;"	d	file:
SPURIOUS_DEFERRED	irq/spurious.c	269;"	d	file:
SRC	bpf/core.c	51;"	d	file:
SRCU_FLAVOR	rcu/rcu.h	/^	SRCU_FLAVOR,$/;"	e	enum:rcutorture_type
SRCU_INTERVAL	rcu/srcutree.c	349;"	d	file:
SRCU_RETRY_CHECK_DELAY	rcu/srcutree.c	433;"	d	file:
SRC_OP	bpf/verifier.c	/^	SRC_OP,		\/* register is used as source operand *\/$/;"	e	enum:reg_arg_type	file:
SRC_TREE	gcov/gcov.h	/^		SRC_TREE,$/;"	e	enum:gcov_link::__anon20
STACK_CREATE_FLAG_MASK	bpf/stackmap.c	14;"	d	file:
STACK_ERR_BUF_SIZE	livepatch/transition.c	18;"	d	file:
STACK_FLAGS	trace/trace.h	1218;"	d
STACK_FLAGS	trace/trace.h	1221;"	d
STACK_SKIP	trace/trace.c	2581;"	d	file:
STACK_SKIP	trace/trace_events_trigger.c	1145;"	d	file:
STACK_SKIP	trace/trace_events_trigger.c	1154;"	d	file:
STACK_SKIP	trace/trace_functions.c	164;"	d	file:
STACK_SKIP	trace/trace_functions.c	172;"	d	file:
STACK_TRACE_ENTRIES	trace/trace_stack.c	21;"	d	file:
STANDARD_PARAM_DEF	params.c	208;"	d	file:
STATE_RCU_HEAD_QUEUED	rcu/rcu.h	168;"	d
STATE_RCU_HEAD_READY	rcu/rcu.h	167;"	d
STRESS_ALL	locking/test-ww_mutex.c	522;"	d	file:
STRESS_INORDER	locking/test-ww_mutex.c	519;"	d	file:
STRESS_ONE	locking/test-ww_mutex.c	521;"	d	file:
STRESS_REORDER	locking/test-ww_mutex.c	520;"	d	file:
STRICT_READ_CHECKS	locking/lockdep.c	3194;"	d	file:
STR_VAR_LEN_MAX	trace/trace_events_hist.c	23;"	d	file:
SUBSYS	cgroup/cgroup.c	120;"	d	file:
SUBSYS	cgroup/cgroup.c	124;"	d	file:
SUBSYS	cgroup/cgroup.c	127;"	d	file:
SUBSYS	cgroup/cgroup.c	131;"	d	file:
SUBSYS	cgroup/cgroup.c	134;"	d	file:
SUBSYS	cgroup/cgroup.c	140;"	d	file:
SUBSYS	cgroup/cgroup.c	142;"	d	file:
SUBSYS	cgroup/cgroup.c	146;"	d	file:
SUBSYS	cgroup/cgroup.c	148;"	d	file:
SUBSYS	cgroup/cgroup.c	152;"	d	file:
SUFFIX_HIGH	crash_core.c	144;"	d	file:
SUFFIX_LOW	crash_core.c	145;"	d	file:
SUFFIX_NULL	crash_core.c	146;"	d	file:
SUSPEND	acct.c	76;"	d	file:
SUSPEND_CONSOLE	power/console.c	16;"	d	file:
SVE_GET_VL	sys.c	122;"	d	file:
SVE_SET_VL	sys.c	119;"	d	file:
SYNCHRONOUS_MASK	signal.c	204;"	d	file:
SYNTH_FIELDS_MAX	trace/trace_events_hist.c	21;"	d	file:
SYNTH_SYSTEM	trace/trace_events_hist.c	20;"	d	file:
SYSCALL_DEFINE0	fork.c	/^SYSCALL_DEFINE0(fork)$/;"	f
SYSCALL_DEFINE0	fork.c	/^SYSCALL_DEFINE0(vfork)$/;"	f
SYSCALL_DEFINE0	sched/core.c	/^SYSCALL_DEFINE0(sched_yield)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(pause)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(restart_syscall)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(sgetmask)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getegid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(geteuid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getgid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getpgrp)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getpid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getppid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(gettid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getuid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(setsid)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getegid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(geteuid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getgid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getuid16)$/;"	f
SYSCALL_DEFINE1	acct.c	/^SYSCALL_DEFINE1(acct, const char __user *, name)$/;"	f
SYSCALL_DEFINE1	exec_domain.c	/^SYSCALL_DEFINE1(personality, unsigned int, personality)$/;"	f
SYSCALL_DEFINE1	exit.c	/^SYSCALL_DEFINE1(exit, int, error_code)$/;"	f
SYSCALL_DEFINE1	exit.c	/^SYSCALL_DEFINE1(exit_group, int, error_code)$/;"	f
SYSCALL_DEFINE1	fork.c	/^SYSCALL_DEFINE1(set_tid_address, int __user *, tidptr)$/;"	f
SYSCALL_DEFINE1	fork.c	/^SYSCALL_DEFINE1(unshare, unsigned long, unshare_flags)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(nice, int, increment)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_get_priority_max, int, policy)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_get_priority_min, int, policy)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(sigpending, old_sigset_t __user *, uset)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(sigsuspend, old_sigset_t, mask)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(ssetmask, int, newmask)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(getpgid, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(getsid, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setfsgid, gid_t, gid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setfsuid, uid_t, uid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setgid, gid_t, gid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setuid, uid_t, uid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(sysinfo, struct sysinfo __user *, info)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(times, struct tms __user *, tbuf)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(umask, int, mask)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sysctl_binary.c	/^SYSCALL_DEFINE1(sysctl, struct __sysctl_args __user *, args)$/;"	f
SYSCALL_DEFINE1	time/itimer.c	/^SYSCALL_DEFINE1(alarm, unsigned int, seconds)$/;"	f
SYSCALL_DEFINE1	time/posix-timers.c	/^SYSCALL_DEFINE1(timer_delete, timer_t, timer_id)$/;"	f
SYSCALL_DEFINE1	time/posix-timers.c	/^SYSCALL_DEFINE1(timer_getoverrun, timer_t, timer_id)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(adjtimex, struct __kernel_timex __user *, txc_p)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(adjtimex_time32, struct old_timex32 __user *, utp)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(stime, time_t __user *, tptr)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(stime32, old_time32_t __user *, tptr)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(time, time_t __user *, tloc)$/;"	f
SYSCALL_DEFINE1	time/time.c	/^SYSCALL_DEFINE1(time32, old_time32_t __user *, tloc)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setfsgid16, old_gid_t, gid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setfsuid16, old_uid_t, uid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setgid16, old_gid_t, gid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setuid16, old_uid_t, uid)$/;"	f
SYSCALL_DEFINE2	capability.c	/^SYSCALL_DEFINE2(capget, cap_user_header_t, header, cap_user_data_t, dataptr)$/;"	f
SYSCALL_DEFINE2	capability.c	/^SYSCALL_DEFINE2(capset, cap_user_header_t, header, const cap_user_data_t, data)$/;"	f
SYSCALL_DEFINE2	fork.c	/^SYSCALL_DEFINE2(clone3, struct clone_args __user *, uargs, size_t, size)$/;"	f
SYSCALL_DEFINE2	futex.c	/^SYSCALL_DEFINE2(set_robust_list, struct robust_list_head __user *, head,$/;"	f
SYSCALL_DEFINE2	groups.c	/^SYSCALL_DEFINE2(getgroups, int, gidsetsize, gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	groups.c	/^SYSCALL_DEFINE2(setgroups, int, gidsetsize, gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	module.c	/^SYSCALL_DEFINE2(delete_module, const char __user *, name_user,$/;"	f
SYSCALL_DEFINE2	nsproxy.c	/^SYSCALL_DEFINE2(setns, int, fd, int, nstype)$/;"	f
SYSCALL_DEFINE2	pid.c	/^SYSCALL_DEFINE2(pidfd_open, pid_t, pid, unsigned int, flags)$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_rr_get_interval_time32, pid_t, pid,$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)$/;"	f
SYSCALL_DEFINE2	sched/membarrier.c	/^SYSCALL_DEFINE2(membarrier, int, cmd, int, flags)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(kill, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(rt_sigpending, sigset_t __user *, uset, size_t, sigsetsize)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(rt_sigsuspend, sigset_t __user *, unewset, size_t, sigsetsize)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(sigaltstack,const stack_t __user *,uss, stack_t __user *,uoss)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(signal, int, sig, __sighandler_t, handler)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(tkill, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(gethostname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getpriority, int, which, int, who)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getrlimit, unsigned int, resource, struct rlimit __user *, rlim)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setdomainname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(sethostname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setpgid, pid_t, pid, pid_t, pgid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setregid, gid_t, rgid, gid_t, egid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setreuid, uid_t, ruid, uid_t, euid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setrlimit, unsigned int, resource, struct rlimit __user *, rlim)$/;"	f
SYSCALL_DEFINE2	time/hrtimer.c	/^SYSCALL_DEFINE2(nanosleep, struct __kernel_timespec __user *, rqtp,$/;"	f
SYSCALL_DEFINE2	time/hrtimer.c	/^SYSCALL_DEFINE2(nanosleep_time32, struct old_timespec32 __user *, rqtp,$/;"	f
SYSCALL_DEFINE2	time/itimer.c	/^SYSCALL_DEFINE2(getitimer, int, which, struct itimerval __user *, value)$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_getres, const clockid_t, which_clock, struct __kernel_timespec __user *, tp)$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_getres_time32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_gettime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_gettime32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_settime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-stubs.c	/^SYSCALL_DEFINE2(clock_settime32, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_adjtime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_adjtime32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_getres, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_getres_time32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_gettime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_gettime32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_settime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(clock_settime32, clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(timer_gettime, timer_t, timer_id,$/;"	f
SYSCALL_DEFINE2	time/posix-timers.c	/^SYSCALL_DEFINE2(timer_gettime32, timer_t, timer_id,$/;"	f
SYSCALL_DEFINE2	time/time.c	/^SYSCALL_DEFINE2(gettimeofday, struct timeval __user *, tv,$/;"	f
SYSCALL_DEFINE2	time/time.c	/^SYSCALL_DEFINE2(settimeofday, struct timeval __user *, tv,$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(getgroups16, int, gidsetsize, old_gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setgroups16, int, gidsetsize, old_gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setregid16, old_gid_t, rgid, old_gid_t, egid)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setreuid16, old_uid_t, ruid, old_uid_t, euid)$/;"	f
SYSCALL_DEFINE3	bpf/syscall.c	/^SYSCALL_DEFINE3(bpf, int, cmd, union bpf_attr __user *, uattr, unsigned int, size)$/;"	f
SYSCALL_DEFINE3	exit.c	/^SYSCALL_DEFINE3(waitpid, pid_t, pid, int __user *, stat_addr, int, options)$/;"	f
SYSCALL_DEFINE3	futex.c	/^SYSCALL_DEFINE3(get_robust_list, int, pid,$/;"	f
SYSCALL_DEFINE3	module.c	/^SYSCALL_DEFINE3(finit_module, int, fd, const char __user *, uargs, int, flags)$/;"	f
SYSCALL_DEFINE3	module.c	/^SYSCALL_DEFINE3(init_module, void __user *, umod,$/;"	f
SYSCALL_DEFINE3	printk/printk.c	/^SYSCALL_DEFINE3(syslog, int, type, char __user *, buf, int, len)$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy, struct sched_param __user *, param)$/;"	f
SYSCALL_DEFINE3	seccomp.c	/^SYSCALL_DEFINE3(seccomp, unsigned int, op, unsigned int, flags,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(rt_sigqueueinfo, pid_t, pid, int, sig,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigaction, int, sig,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigprocmask, int, how, old_sigset_t __user *, nset,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigsuspend, int, unused1, int, unused2, old_sigset_t, mask)$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(tgkill, pid_t, tgid, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getcpu, unsigned __user *, cpup, unsigned __user *, nodep,$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getresgid, gid_t __user *, rgidp, gid_t __user *, egidp, gid_t __user *, sgidp)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getresuid, uid_t __user *, ruidp, uid_t __user *, euidp, uid_t __user *, suidp)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setresgid, gid_t, rgid, gid_t, egid, gid_t, sgid)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setresuid, uid_t, ruid, uid_t, euid, uid_t, suid)$/;"	f
SYSCALL_DEFINE3	time/itimer.c	/^SYSCALL_DEFINE3(setitimer, int, which, struct itimerval __user *, value,$/;"	f
SYSCALL_DEFINE3	time/posix-timers.c	/^SYSCALL_DEFINE3(timer_create, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(chown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(fchown16, unsigned int, fd, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(getresgid16, old_gid_t __user *, rgidp, old_gid_t __user *, egidp, old_gid_t __user *, sgidp)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(getresuid16, old_uid_t __user *, ruidp, old_uid_t __user *, euidp, old_uid_t __user *, suidp)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(lchown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(setresgid16, old_gid_t, rgid, old_gid_t, egid, old_gid_t, sgid)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(setresuid16, old_uid_t, ruid, old_uid_t, euid, old_uid_t, suid)$/;"	f
SYSCALL_DEFINE4	exit.c	/^SYSCALL_DEFINE4(wait4, pid_t, upid, int __user *, stat_addr,$/;"	f
SYSCALL_DEFINE4	kexec.c	/^SYSCALL_DEFINE4(kexec_load, unsigned long, entry, unsigned long, nr_segments,$/;"	f
SYSCALL_DEFINE4	ptrace.c	/^SYSCALL_DEFINE4(ptrace, long, request, long, pid, unsigned long, addr,$/;"	f
SYSCALL_DEFINE4	reboot.c	/^SYSCALL_DEFINE4(reboot, int, magic1, int, magic2, unsigned int, cmd,$/;"	f
SYSCALL_DEFINE4	rseq.c	/^SYSCALL_DEFINE4(rseq, struct rseq __user *, rseq, u32, rseq_len,$/;"	f
SYSCALL_DEFINE4	sched/core.c	/^SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(pidfd_send_signal, int, pidfd, int, sig,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigaction, int, sig,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigprocmask, int, how, sigset_t __user *, nset,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigtimedwait, const sigset_t __user *, uthese,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigtimedwait_time32, const sigset_t __user *, uthese,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_tgsigqueueinfo, pid_t, tgid, pid_t, pid, int, sig,$/;"	f
SYSCALL_DEFINE4	sys.c	/^SYSCALL_DEFINE4(prlimit64, pid_t, pid, unsigned int, resource,$/;"	f
SYSCALL_DEFINE4	time/posix-stubs.c	/^SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,$/;"	f
SYSCALL_DEFINE4	time/posix-stubs.c	/^SYSCALL_DEFINE4(clock_nanosleep_time32, clockid_t, which_clock, int, flags,$/;"	f
SYSCALL_DEFINE4	time/posix-timers.c	/^SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,$/;"	f
SYSCALL_DEFINE4	time/posix-timers.c	/^SYSCALL_DEFINE4(clock_nanosleep_time32, clockid_t, which_clock, int, flags,$/;"	f
SYSCALL_DEFINE4	time/posix-timers.c	/^SYSCALL_DEFINE4(timer_settime, timer_t, timer_id, int, flags,$/;"	f
SYSCALL_DEFINE4	time/posix-timers.c	/^SYSCALL_DEFINE4(timer_settime32, timer_t, timer_id, int, flags,$/;"	f
SYSCALL_DEFINE5	events/core.c	/^SYSCALL_DEFINE5(perf_event_open,$/;"	f
SYSCALL_DEFINE5	exit.c	/^SYSCALL_DEFINE5(waitid, int, which, pid_t, upid, struct siginfo __user *,$/;"	f
SYSCALL_DEFINE5	fork.c	/^SYSCALL_DEFINE5(clone, unsigned long, clone_flags, unsigned long, newsp,$/;"	f
SYSCALL_DEFINE5	kcmp.c	/^SYSCALL_DEFINE5(kcmp, pid_t, pid1, pid_t, pid2, int, type,$/;"	f
SYSCALL_DEFINE5	kexec_file.c	/^SYSCALL_DEFINE5(kexec_file_load, int, kernel_fd, int, initrd_fd,$/;"	f
SYSCALL_DEFINE5	sys.c	/^SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3,$/;"	f
SYSCALL_DEFINE6	futex.c	/^SYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val,$/;"	f
SYSCALL_DEFINE6	futex.c	/^SYSCALL_DEFINE6(futex_time32, u32 __user *, uaddr, int, op, u32, val,$/;"	f
SYSCALL_FIELD	trace/trace_syscalls.c	201;"	d	file:
SYSCTL_WRITES_LEGACY	sysctl.c	/^	SYSCTL_WRITES_LEGACY		= -1,$/;"	e	enum:sysctl_writes_mode	file:
SYSCTL_WRITES_STRICT	sysctl.c	/^	SYSCTL_WRITES_STRICT		= 1,$/;"	e	enum:sysctl_writes_mode	file:
SYSCTL_WRITES_WARN	sysctl.c	/^	SYSCTL_WRITES_WARN		= 0,$/;"	e	enum:sysctl_writes_mode	file:
SYS_NI	time/posix-stubs.c	33;"	d	file:
TASKSTATS_CPUMASK_MAXLEN	taskstats.c	29;"	d	file:
TASK_MOVE_GROUP	sched/sched.h	1749;"	d
TASK_ON_RQ_MIGRATING	sched/sched.h	89;"	d
TASK_ON_RQ_QUEUED	sched/sched.h	88;"	d
TASK_SET_GROUP	sched/sched.h	1748;"	d
TASK_TOMBSTONE	events/core.c	167;"	d	file:
TEST_CORE	power/power.h	/^	TEST_CORE,$/;"	e	enum:__anon89
TEST_CPUS	power/power.h	/^	TEST_CPUS,$/;"	e	enum:__anon89
TEST_DEVICES	power/power.h	/^	TEST_DEVICES,$/;"	e	enum:__anon89
TEST_ERROR	trace/ring_buffer_benchmark.c	67;"	d	file:
TEST_FIRST	power/power.h	240;"	d
TEST_FREEZER	power/power.h	/^	TEST_FREEZER,$/;"	e	enum:__anon89
TEST_MAX	power/power.h	241;"	d
TEST_MTX_CTX	locking/test-ww_mutex.c	28;"	d	file:
TEST_MTX_SPIN	locking/test-ww_mutex.c	26;"	d	file:
TEST_MTX_TRY	locking/test-ww_mutex.c	27;"	d	file:
TEST_NONE	power/power.h	/^	TEST_NONE,$/;"	e	enum:__anon89
TEST_PLATFORM	power/power.h	/^	TEST_PLATFORM,$/;"	e	enum:__anon89
TEST_SUSPEND_SECONDS	power/suspend_test.c	21;"	d	file:
THREAD_CLOCK	time/posix-cpu-timers.c	1381;"	d	file:
TICKDEV_MODE_ONESHOT	time/tick-sched.h	/^	TICKDEV_MODE_ONESHOT,$/;"	e	enum:tick_device_mode
TICKDEV_MODE_PERIODIC	time/tick-sched.h	/^	TICKDEV_MODE_PERIODIC,$/;"	e	enum:tick_device_mode
TICK_DO_TIMER_BOOT	time/tick-internal.h	14;"	d
TICK_DO_TIMER_NONE	time/tick-internal.h	13;"	d
TIMEOUT	locking/test-ww_mutex.c	50;"	d	file:
TIMEOUT	locking/test-ww_mutex.c	95;"	d	file:
TIMER_RETRY	time/posix-timers.h	2;"	d
TK_ADV_FREQ	time/timekeeping.c	/^	TK_ADV_FREQ$/;"	e	enum:timekeeping_adv_mode	file:
TK_ADV_TICK	time/timekeeping.c	/^	TK_ADV_TICK,$/;"	e	enum:timekeeping_adv_mode	file:
TK_CLEAR_NTP	time/timekeeping.c	30;"	d	file:
TK_CLOCK_WAS_SET	time/timekeeping.c	32;"	d	file:
TK_MIRROR	time/timekeeping.c	31;"	d	file:
TMPBUFLEN	sysctl.c	2180;"	d	file:
TMPBUFLEN	sysctl.c	2273;"	d	file:
TNUM	bpf/tnum.c	12;"	d	file:
TOO_MANY_CLOSE	trace/trace_events_filter.c	/^	TOO_MANY_CLOSE		= -1,$/;"	e	enum:__anon32	file:
TOO_MANY_OPEN	trace/trace_events_filter.c	/^	TOO_MANY_OPEN		= -2,$/;"	e	enum:__anon32	file:
TOPOLOGY_SD_FLAGS	sched/topology.c	1306;"	d	file:
TOP_LEVEL_TRACE_FLAGS	trace/trace.c	259;"	d	file:
TORTURE_RANDOM_ADD	torture.c	299;"	d	file:
TORTURE_RANDOM_MULT	torture.c	298;"	d	file:
TORTURE_RANDOM_REFRESH	torture.c	300;"	d	file:
TPARG_FL_FENTRY	trace/trace_probe.h	319;"	d
TPARG_FL_KERNEL	trace/trace_probe.h	318;"	d
TPARG_FL_MASK	trace/trace_probe.h	320;"	d
TPARG_FL_RETURN	trace/trace_probe.h	317;"	d
TPS	rcu/rcu.h	256;"	d
TP_FLAG_PROFILE	trace/trace_probe.h	57;"	d
TP_FLAG_TRACE	trace/trace_probe.h	56;"	d
TRACER_IRQS_OFF	trace/trace_irqsoff.c	/^	TRACER_IRQS_OFF		= (1 << 1),$/;"	e	enum:__anon41	file:
TRACER_OPT	trace/trace.h	435;"	d
TRACER_PREEMPT_OFF	trace/trace_irqsoff.c	/^	TRACER_PREEMPT_OFF	= (1 << 2),$/;"	e	enum:__anon41	file:
TRACE_ARRAY_FL_GLOBAL	trace/trace.h	/^	TRACE_ARRAY_FL_GLOBAL	= (1 << 0)$/;"	e	enum:__anon34
TRACE_BLK	trace/trace.h	/^	TRACE_BLK,$/;"	e	enum:trace_type
TRACE_BLK_OPT_CGNAME	trace/blktrace.c	39;"	d	file:
TRACE_BLK_OPT_CGROUP	trace/blktrace.c	38;"	d	file:
TRACE_BLK_OPT_CLASSIC	trace/blktrace.c	37;"	d	file:
TRACE_BPRINT	trace/trace.h	/^	TRACE_BPRINT,$/;"	e	enum:trace_type
TRACE_BPUTS	trace/trace.h	/^	TRACE_BPUTS,$/;"	e	enum:trace_type
TRACE_BRANCH	trace/trace.h	/^	TRACE_BRANCH,$/;"	e	enum:trace_type
TRACE_BRANCH_BIT	trace/trace.h	/^	TRACE_BRANCH_BIT,$/;"	e	enum:__anon35
TRACE_BUFFER_BIT	trace/trace.h	/^	TRACE_BUFFER_BIT,$/;"	e	enum:__anon35
TRACE_BUFFER_IRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_IRQ_BIT,$/;"	e	enum:__anon35
TRACE_BUFFER_NMI_BIT	trace/trace.h	/^	TRACE_BUFFER_NMI_BIT,$/;"	e	enum:__anon35
TRACE_BUFFER_SIRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_SIRQ_BIT,$/;"	e	enum:__anon35
TRACE_BUF_SIZE	trace/trace.h	140;"	d
TRACE_BUF_SIZE_DEFAULT	trace/trace.c	622;"	d	file:
TRACE_CGROUP_PATH	cgroup/cgroup-internal.h	28;"	d
TRACE_CGROUP_PATH_LEN	cgroup/cgroup-internal.h	12;"	d
TRACE_CONTEXT_BITS	trace/trace.h	610;"	d
TRACE_CONTEXT_MASK	trace/trace.h	618;"	d
TRACE_CTX	trace/trace.h	/^	TRACE_CTX,$/;"	e	enum:trace_type
TRACE_DEFAULT_FLAGS	trace/trace.c	251;"	d	file:
TRACE_FILE_SIZE	trace/trace_entries.h	320;"	d
TRACE_FLAGS	trace/trace.h	/^	TRACE_FLAGS$/;"	e	enum:trace_iterator_bits
TRACE_FLAGS	trace/trace.h	/^enum trace_iterator_flags { TRACE_FLAGS };$/;"	e	enum:trace_iterator_flags
TRACE_FLAGS	trace/trace.h	1231;"	d
TRACE_FLAGS_MAX_SIZE	trace/trace.h	184;"	d
TRACE_FLAG_HARDIRQ	trace/trace.h	/^	TRACE_FLAG_HARDIRQ		= 0x08,$/;"	e	enum:trace_flag_type
TRACE_FLAG_IRQS_NOSUPPORT	trace/trace.h	/^	TRACE_FLAG_IRQS_NOSUPPORT	= 0x02,$/;"	e	enum:trace_flag_type
TRACE_FLAG_IRQS_OFF	trace/trace.h	/^	TRACE_FLAG_IRQS_OFF		= 0x01,$/;"	e	enum:trace_flag_type
TRACE_FLAG_NEED_RESCHED	trace/trace.h	/^	TRACE_FLAG_NEED_RESCHED		= 0x04,$/;"	e	enum:trace_flag_type
TRACE_FLAG_NMI	trace/trace.h	/^	TRACE_FLAG_NMI			= 0x40,$/;"	e	enum:trace_flag_type
TRACE_FLAG_PREEMPT_RESCHED	trace/trace.h	/^	TRACE_FLAG_PREEMPT_RESCHED	= 0x20,$/;"	e	enum:trace_flag_type
TRACE_FLAG_SOFTIRQ	trace/trace.h	/^	TRACE_FLAG_SOFTIRQ		= 0x10,$/;"	e	enum:trace_flag_type
TRACE_FN	trace/trace.h	/^	TRACE_FN,$/;"	e	enum:trace_type
TRACE_FTRACE_BIT	trace/trace.h	/^	TRACE_FTRACE_BIT,$/;"	e	enum:__anon35
TRACE_FTRACE_IRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_IRQ_BIT,$/;"	e	enum:__anon35
TRACE_FTRACE_MAX	trace/trace.h	613;"	d
TRACE_FTRACE_NMI_BIT	trace/trace.h	/^	TRACE_FTRACE_NMI_BIT,$/;"	e	enum:__anon35
TRACE_FTRACE_SIRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_SIRQ_BIT,$/;"	e	enum:__anon35
TRACE_FTRACE_START	trace/trace.h	612;"	d
TRACE_FUNC_OPT_STACK	trace/trace_functions.c	/^	TRACE_FUNC_OPT_STACK	= 0x1,$/;"	e	enum:__anon25	file:
TRACE_FUNC_SIZE	trace/trace_entries.h	319;"	d
TRACE_GRAPH_BIT	trace/trace.h	/^	TRACE_GRAPH_BIT,$/;"	e	enum:__anon35
TRACE_GRAPH_DEPTH_END_BIT	trace/trace.h	/^	TRACE_GRAPH_DEPTH_END_BIT,$/;"	e	enum:__anon35
TRACE_GRAPH_DEPTH_START_BIT	trace/trace.h	/^	TRACE_GRAPH_DEPTH_START_BIT,$/;"	e	enum:__anon35
TRACE_GRAPH_ENT	trace/trace.h	/^	TRACE_GRAPH_ENT,$/;"	e	enum:trace_type
TRACE_GRAPH_GRAPH_TIME	trace/trace.h	907;"	d
TRACE_GRAPH_INDENT	trace/trace_functions_graph.c	40;"	d	file:
TRACE_GRAPH_NOTRACE_BIT	trace/trace.h	/^	TRACE_GRAPH_NOTRACE_BIT,$/;"	e	enum:__anon35
TRACE_GRAPH_PRINT_ABS_TIME	trace/trace.h	902;"	d
TRACE_GRAPH_PRINT_CPU	trace/trace.h	898;"	d
TRACE_GRAPH_PRINT_DURATION	trace/trace.h	901;"	d
TRACE_GRAPH_PRINT_FILL_MASK	trace/trace.h	909;"	d
TRACE_GRAPH_PRINT_FILL_SHIFT	trace/trace.h	908;"	d
TRACE_GRAPH_PRINT_IRQS	trace/trace.h	904;"	d
TRACE_GRAPH_PRINT_OVERHEAD	trace/trace.h	899;"	d
TRACE_GRAPH_PRINT_OVERRUN	trace/trace.h	897;"	d
TRACE_GRAPH_PRINT_PROC	trace/trace.h	900;"	d
TRACE_GRAPH_PRINT_REL_TIME	trace/trace.h	903;"	d
TRACE_GRAPH_PRINT_TAIL	trace/trace.h	905;"	d
TRACE_GRAPH_PROCINFO_LENGTH	trace/trace_functions_graph.c	343;"	d	file:
TRACE_GRAPH_RET	trace/trace.h	/^	TRACE_GRAPH_RET,$/;"	e	enum:trace_type
TRACE_GRAPH_SLEEP_TIME	trace/trace.h	906;"	d
TRACE_HWLAT	trace/trace.h	/^	TRACE_HWLAT,$/;"	e	enum:trace_type
TRACE_INCLUDE_FILE	trace/trace_benchmark.h	36;"	d
TRACE_INCLUDE_FILE	trace/trace_benchmark.h	39;"	d
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	46;"	d
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	48;"	d
TRACE_INCLUDE_PATH	trace/trace_benchmark.h	37;"	d
TRACE_INCLUDE_PATH	trace/trace_benchmark.h	38;"	d
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	45;"	d
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	47;"	d
TRACE_INTERNAL_BIT	trace/trace.h	/^	TRACE_INTERNAL_BIT,$/;"	e	enum:__anon35
TRACE_INTERNAL_IRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_IRQ_BIT,$/;"	e	enum:__anon35
TRACE_INTERNAL_NMI_BIT	trace/trace.h	/^	TRACE_INTERNAL_NMI_BIT,$/;"	e	enum:__anon35
TRACE_INTERNAL_SIRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_SIRQ_BIT,$/;"	e	enum:__anon35
TRACE_IRQ_BIT	trace/trace.h	/^	TRACE_IRQ_BIT,$/;"	e	enum:__anon35
TRACE_ITER_FUNC_FORK	trace/trace.h	1214;"	d
TRACE_ITER_LAST_BIT	trace/trace.h	/^	TRACE_ITER_LAST_BIT$/;"	e	enum:trace_iterator_bits
TRACE_ITER_SYM_MASK	trace/trace.h	1285;"	d
TRACE_LIST_MAX	trace/trace.h	616;"	d
TRACE_LIST_START	trace/trace.h	615;"	d
TRACE_MAX_PRINT	trace/trace.c	8798;"	d	file:
TRACE_MMIO_MAP	trace/trace.h	/^	TRACE_MMIO_MAP,$/;"	e	enum:trace_type
TRACE_MMIO_RW	trace/trace.h	/^	TRACE_MMIO_RW,$/;"	e	enum:trace_type
TRACE_NOP_OPT_ACCEPT	trace/trace_nop.c	/^	TRACE_NOP_OPT_ACCEPT = 0x1,$/;"	e	enum:__anon26	file:
TRACE_NOP_OPT_REFUSE	trace/trace_nop.c	/^	TRACE_NOP_OPT_REFUSE = 0x2$/;"	e	enum:__anon26	file:
TRACE_PRINT	trace/trace.h	/^	TRACE_PRINT,$/;"	e	enum:trace_type
TRACE_RAW_DATA	trace/trace.h	/^	TRACE_RAW_DATA,$/;"	e	enum:trace_type
TRACE_SELFTEST_REGS_FOUND	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_FOUND,$/;"	e	enum:__anon33	file:
TRACE_SELFTEST_REGS_NOT_FOUND	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_NOT_FOUND,$/;"	e	enum:__anon33	file:
TRACE_SELFTEST_REGS_START	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_START,$/;"	e	enum:__anon33	file:
TRACE_SEQ_BUF_LEFT	trace/trace_seq.c	31;"	d	file:
TRACE_SEQ_BUF_USED	trace/trace_seq.c	34;"	d	file:
TRACE_STACK	trace/trace.h	/^	TRACE_STACK,$/;"	e	enum:trace_type
TRACE_SYSTEM	trace/trace_benchmark.h	2;"	d
TRACE_SYSTEM	trace/trace_benchmark.h	3;"	d
TRACE_SYSTEM	trace/trace_events.c	31;"	d	file:
TRACE_SYSTEM	trace/trace_events.c	32;"	d	file:
TRACE_SYSTEM	trace/trace_events_filter_test.h	2;"	d
TRACE_SYSTEM	trace/trace_events_filter_test.h	3;"	d
TRACE_SYSTEM	trace/trace_export.c	24;"	d	file:
TRACE_SYSTEM	trace/trace_export.c	25;"	d	file:
TRACE_USER_STACK	trace/trace.h	/^	TRACE_USER_STACK,$/;"	e	enum:trace_type
TRACE_WAKE	trace/trace.h	/^	TRACE_WAKE,$/;"	e	enum:trace_type
TRACING_LOG_ERRS_MAX	trace/trace.c	6910;"	d	file:
TRACING_LOG_LOC_MAX	trace/trace.c	6911;"	d	file:
TRACING_MAP_ARRAY_ELT	trace/tracing_map.h	173;"	d
TRACING_MAP_BITS_DEFAULT	trace/tracing_map.h	5;"	d
TRACING_MAP_BITS_MAX	trace/tracing_map.h	6;"	d
TRACING_MAP_BITS_MIN	trace/tracing_map.h	7;"	d
TRACING_MAP_ELT	trace/tracing_map.h	180;"	d
TRACING_MAP_ENTRY	trace/tracing_map.h	177;"	d
TRACING_MAP_FIELDS_MAX	trace/tracing_map.h	11;"	d
TRACING_MAP_KEYS_MAX	trace/tracing_map.h	9;"	d
TRACING_MAP_SORT_KEYS_MAX	trace/tracing_map.h	14;"	d
TRACING_MAP_VALS_MAX	trace/tracing_map.h	10;"	d
TRACING_MAP_VARS_MAX	trace/tracing_map.h	13;"	d
TS_DELTA_TEST	trace/ring_buffer.c	274;"	d	file:
TS_MASK	trace/ring_buffer.c	273;"	d	file:
TS_SHIFT	trace/ring_buffer.c	272;"	d	file:
U64STR_SIZE	trace/trace_hwlat.c	50;"	d	file:
UCLAMP_BUCKET_DELTA	sched/core.c	786;"	d	file:
UCLAMP_FLAG_IDLE	sched/sched.h	874;"	d
UCOUNTS_HASHTABLE_BITS	ucount.c	11;"	d	file:
UCOUNT_ENTRY	ucount.c	55;"	d	file:
UIDHASH_BITS	user.c	78;"	d	file:
UIDHASH_MASK	user.c	80;"	d	file:
UIDHASH_SZ	user.c	79;"	d	file:
UINSNS_PER_PAGE	events/uprobes.c	32;"	d	file:
UNBOUND_POOL_HASH_ORDER	workqueue.c	/^	UNBOUND_POOL_HASH_ORDER	= 6,		\/* hashed by pool->attrs *\/$/;"	e	enum:__anon17	file:
UNICAST_RETRIES	audit.c	813;"	d	file:
UNPACK	trace/bpf_trace.c	1315;"	d	file:
UNRUNNABLE	debug/kdb/kdb_support.c	556;"	d	file:
UPDATES_PER_WINDOW	sched/psi.c	169;"	d	file:
UPDATE_TG	sched/fair.c	3587;"	d	file:
UPDATE_TG	sched/fair.c	3833;"	d	file:
UPROBES_HASH_SZ	events/uprobes.c	44;"	d	file:
UPROBE_COPY_INSN	events/uprobes.c	52;"	d	file:
UPROBE_EVENT_SYSTEM	trace/trace_uprobe.c	22;"	d	file:
UTIL_AVG_UNCHANGED	sched/pelt.h	27;"	d
VERBOSE	locking/lockdep.c	401;"	d	file:
VERBOSE_PERFOUT_ERRSTRING	rcu/rcuperf.c	51;"	d	file:
VERBOSE_PERFOUT_STRING	rcu/rcuperf.c	49;"	d	file:
VERY_VERBOSE	locking/lockdep.c	402;"	d	file:
VISITED	bpf/btf.c	/^	VISITED,$/;"	e	enum:visit_state	file:
WAITQUEUE_WALK_BREAK_CNT	sched/wait.c	55;"	d	file:
WAIT_TABLE_BITS	sched/wait_bit.c	7;"	d	file:
WAIT_TABLE_SIZE	sched/wait_bit.c	8;"	d	file:
WARNING_FREQ	time/timekeeping.c	177;"	d	file:
WARN_ONCE_HASH_BITS	sysctl_binary.c	1354;"	d	file:
WARN_ONCE_HASH_SIZE	sysctl_binary.c	1355;"	d	file:
WATCHDOG_DEFAULT	watchdog.c	33;"	d	file:
WATCHDOG_DEFAULT	watchdog.c	36;"	d	file:
WATCHDOG_INTERVAL	time/clocksource.c	124;"	d	file:
WATCHDOG_THRESHOLD	time/clocksource.c	125;"	d	file:
WEIGHT_IDLEPRIO	sched/sched.h	1643;"	d
WF_FORK	sched/sched.h	1631;"	d
WF_MIGRATED	sched/sched.h	1632;"	d
WF_SYNC	sched/sched.h	1630;"	d
WHEEL_SIZE	time/timer.c	184;"	d	file:
WHEEL_TIMEOUT_CUTOFF	time/timer.c	177;"	d	file:
WHEEL_TIMEOUT_MAX	time/timer.c	178;"	d	file:
WINDOW_MAX_US	sched/psi.c	168;"	d	file:
WINDOW_MIN_US	sched/psi.c	167;"	d	file:
WL_GC_COUNT_MAX	power/wakelock.c	85;"	d	file:
WL_GC_TIME_SEC	power/wakelock.c	86;"	d	file:
WMULT_CONST	sched/fair.c	186;"	d	file:
WMULT_IDLEPRIO	sched/sched.h	1644;"	d
WMULT_SHIFT	sched/fair.c	187;"	d	file:
WORKER_CPU_INTENSIVE	workqueue.c	/^	WORKER_CPU_INTENSIVE	= 1 << 6,	\/* cpu intensive *\/$/;"	e	enum:__anon17	file:
WORKER_DIE	workqueue.c	/^	WORKER_DIE		= 1 << 1,	\/* die die die *\/$/;"	e	enum:__anon17	file:
WORKER_IDLE	workqueue.c	/^	WORKER_IDLE		= 1 << 2,	\/* is idle *\/$/;"	e	enum:__anon17	file:
WORKER_NOT_RUNNING	workqueue.c	/^	WORKER_NOT_RUNNING	= WORKER_PREP | WORKER_CPU_INTENSIVE |$/;"	e	enum:__anon17	file:
WORKER_PREP	workqueue.c	/^	WORKER_PREP		= 1 << 3,	\/* preparing to run works *\/$/;"	e	enum:__anon17	file:
WORKER_REBOUND	workqueue.c	/^	WORKER_REBOUND		= 1 << 8,	\/* worker was rebound *\/$/;"	e	enum:__anon17	file:
WORKER_UNBOUND	workqueue.c	/^	WORKER_UNBOUND		= 1 << 7,	\/* worker is unbound *\/$/;"	e	enum:__anon17	file:
WQ_NAME_LEN	workqueue.c	/^	WQ_NAME_LEN		= 24,$/;"	e	enum:__anon17	file:
WRITER_FIRST	locking/rwsem.c	/^	WRITER_FIRST,		\/* Writer is first in wait list     *\/$/;"	e	enum:writer_wait_state	file:
WRITER_HANDOFF	locking/rwsem.c	/^	WRITER_HANDOFF		\/* Writer is first & handoff needed *\/$/;"	e	enum:writer_wait_state	file:
WRITER_NOT_FIRST	locking/rwsem.c	/^	WRITER_NOT_FIRST,	\/* Writer is not first in wait list *\/$/;"	e	enum:writer_wait_state	file:
WRITE_BUFSIZE	trace/trace.c	8977;"	d	file:
WRT_SYSCTL	sched/fair.c	648;"	d	file:
WRT_SYSCTL	sched/fair.c	653;"	d	file:
YES	trace/trace_events_filter.c	2110;"	d	file:
YES	trace/trace_events_filter.c	2171;"	d	file:
ZEROED_TRACE_FLAGS	trace/trace.c	263;"	d	file:
_ADDR_FETCH_TYPE	trace/trace_probe.h	176;"	d
_ASSIGN_FETCH_TYPE	trace/trace_probe.h	187;"	d
_CONSOLE_CMDLINE_H	printk/console_cmdline.h	3;"	d
_DEBUG_CORE_H_	debug/debug_core.h	12;"	d
_DEFAULT_FETCH_TYPE	trace/trace_probe.h	171;"	d
_GEN_PV_LOCK_SLOWPATH	locking/qspinlock.c	567;"	d	file:
_IRQF_MODIFY_MASK	irq/settings.h	/^	_IRQF_MODIFY_MASK	= IRQF_MODIFY_MASK,$/;"	e	enum:__anon79
_IRQ_DEFAULT_INIT_FLAGS	irq/settings.h	/^	_IRQ_DEFAULT_INIT_FLAGS	= IRQ_DEFAULT_INIT_FLAGS,$/;"	e	enum:__anon79
_IRQ_DESC_CHECK	irq/internals.h	157;"	d
_IRQ_DESC_PERCPU	irq/internals.h	158;"	d
_IRQ_DISABLE_UNLAZY	irq/settings.h	/^	_IRQ_DISABLE_UNLAZY	= IRQ_DISABLE_UNLAZY,$/;"	e	enum:__anon79
_IRQ_IS_POLLED	irq/settings.h	/^	_IRQ_IS_POLLED		= IRQ_IS_POLLED,$/;"	e	enum:__anon79
_IRQ_LEVEL	irq/settings.h	/^	_IRQ_LEVEL		= IRQ_LEVEL,$/;"	e	enum:__anon79
_IRQ_MOVE_PCNTXT	irq/settings.h	/^	_IRQ_MOVE_PCNTXT	= IRQ_MOVE_PCNTXT,$/;"	e	enum:__anon79
_IRQ_NESTED_THREAD	irq/settings.h	/^	_IRQ_NESTED_THREAD	= IRQ_NESTED_THREAD,$/;"	e	enum:__anon79
_IRQ_NOAUTOEN	irq/settings.h	/^	_IRQ_NOAUTOEN		= IRQ_NOAUTOEN,$/;"	e	enum:__anon79
_IRQ_NOPROBE	irq/settings.h	/^	_IRQ_NOPROBE		= IRQ_NOPROBE,$/;"	e	enum:__anon79
_IRQ_NOREQUEST	irq/settings.h	/^	_IRQ_NOREQUEST		= IRQ_NOREQUEST,$/;"	e	enum:__anon79
_IRQ_NOTHREAD	irq/settings.h	/^	_IRQ_NOTHREAD		= IRQ_NOTHREAD,$/;"	e	enum:__anon79
_IRQ_NO_BALANCING	irq/settings.h	/^	_IRQ_NO_BALANCING	= IRQ_NO_BALANCING,$/;"	e	enum:__anon79
_IRQ_PER_CPU	irq/settings.h	/^	_IRQ_PER_CPU		= IRQ_PER_CPU,$/;"	e	enum:__anon79
_IRQ_PER_CPU_DEVID	irq/settings.h	/^	_IRQ_PER_CPU_DEVID	= IRQ_PER_CPU_DEVID,$/;"	e	enum:__anon79
_KDBPRIVATE_H	debug/kdb/kdb_private.h	2;"	d
_KERNEL_EVENTS_INTERNAL_H	events/internal.h	3;"	d
_KERNEL_TIME_TIMEKEEPING_H	time/timekeeping.h	3;"	d
_KERNEL_WORKQUEUE_INTERNAL_H	workqueue_internal.h	9;"	d
_LINUX_KERNEL_FTRACE_INTERNAL_H	trace/ftrace_internal.h	3;"	d
_LINUX_KERNEL_TRACE_H	trace/trace.h	4;"	d
_LINUX_NTP_INTERNAL_H	time/ntp_internal.h	3;"	d
_LIVEPATCH_CORE_H	livepatch/core.h	3;"	d
_LIVEPATCH_PATCH_H	livepatch/patch.h	3;"	d
_LIVEPATCH_TRANSITION_H	livepatch/transition.h	3;"	d
_PRINTK_BRAILLE_H	printk/braille.h	3;"	d
_Q_LOCKED_PENDING_MASK	locking/qspinlock.c	138;"	d	file:
_Q_PENDING_LOOPS	locking/qspinlock.c	96;"	d	file:
_Q_SLOW_VAL	locking/qspinlock_paravirt.h	24;"	d
_TICK_SCHED_H	time/tick-sched.h	3;"	d
_TIMEKEEPING_INTERNAL_H	time/timekeeping_internal.h	3;"	d
_TRACE_BENCHMARK_H	trace/trace_benchmark.h	6;"	d
_TRACE_DYNEVENT_H	trace/trace_dynevent.h	7;"	d
_TRACE_TEST_H	trace/trace_events_filter_test.h	6;"	d
__ADDR_FETCH_TYPE	trace/trace_probe.h	175;"	d
__ASSIGN_FETCH_TYPE	trace/trace_probe.h	179;"	d
__BPF_ARG1_TP	trace/bpf_trace.c	300;"	d	file:
__BPF_ARG2_TP	trace/bpf_trace.c	307;"	d	file:
__BPF_ARG3_TP	trace/bpf_trace.c	314;"	d	file:
__BPF_DISASM_H__	bpf/disasm.h	7;"	d
__BPF_FUNC_STR_FN	bpf/disasm.c	10;"	d	file:
__BPF_FUNC_STR_FN	bpf/disasm.c	14;"	d	file:
__BPF_LRU_LIST_H_	bpf/bpf_lru_list.h	5;"	d
__BPF_TP	trace/bpf_trace.c	296;"	d	file:
__BPF_TP_EMIT	trace/bpf_trace.c	295;"	d	file:
__CGROUP_INTERNAL_H	cgroup/cgroup-internal.h	3;"	d
__DEFAULT_FETCH_TYPE	trace/trace_probe.h	170;"	d
__DEFINE_OUTPUT_COPY_BODY	events/internal.h	128;"	d
__DEVKMSG_LOG_BIT_LOCK	printk/printk.c	/^	__DEVKMSG_LOG_BIT_LOCK,$/;"	e	enum:devkmsg_log_bits	file:
__DEVKMSG_LOG_BIT_OFF	printk/printk.c	/^	__DEVKMSG_LOG_BIT_OFF,$/;"	e	enum:devkmsg_log_bits	file:
__DEVKMSG_LOG_BIT_ON	printk/printk.c	/^	__DEVKMSG_LOG_BIT_ON = 0,$/;"	e	enum:devkmsg_log_bits	file:
__DL_COM	trace/bpf_trace.c	1333;"	d	file:
__DL_SEM	trace/bpf_trace.c	1334;"	d	file:
__GENERATING_BOUNDS_H	bounds.c	8;"	d	file:
__HIBERNATION_AFTER_LAST	power/hibernate.c	/^	__HIBERNATION_AFTER_LAST$/;"	e	enum:__anon88	file:
__INTERNAL_RWSEM_H	locking/rwsem.h	4;"	d
__KERNEL_RTMUTEX_COMMON_H	locking/rtmutex_common.h	14;"	d
__LINUX_MCS_SPINLOCK_H	locking/mcs_spinlock.h	14;"	d
__LINUX_RCU_H	rcu/rcu.h	11;"	d
__LOCKF	locking/lockdep_internals.h	/^	__LOCKF(USED)$/;"	e	enum:__anon75
__LOCKF	locking/lockdep_internals.h	32;"	d
__LOCKING_LOCK_EVENTS_H	locking/lock_events.h	17;"	d
__LOG_BUF_LEN	printk/printk.c	447;"	d	file:
__LOG_CPU_MAX_BUF_LEN	printk/printk.c	1107;"	d	file:
__MAP_IN_MAP_H__	bpf/map_in_map.h	5;"	d
__P	sched/debug.c	814;"	d	file:
__P	sched/debug.c	866;"	d	file:
__P	sched/debug.c	966;"	d	file:
__PERCPU_FREELIST_H__	bpf/percpu_freelist.h	5;"	d
__PN	sched/debug.c	816;"	d	file:
__PN	sched/debug.c	872;"	d	file:
__PN	sched/debug.c	963;"	d	file:
__SCHED_FEAT_NR	sched/sched.h	/^	__SCHED_FEAT_NR,$/;"	e	enum:__anon86
__SEQ_0_11	trace/bpf_trace.c	1336;"	d	file:
__TEST_AFTER_LAST	power/power.h	/^	__TEST_AFTER_LAST$/;"	e	enum:__anon89
__TEST_MTX_LAST	locking/test-ww_mutex.c	29;"	d	file:
__TRACE_EVENTS_H	trace/trace_output.h	3;"	d
__TRACE_FIRST_TYPE	trace/trace.h	/^	__TRACE_FIRST_TYPE = 0,$/;"	e	enum:trace_type
__TRACE_LAST_TYPE	trace/trace.h	/^	__TRACE_LAST_TYPE,$/;"	e	enum:trace_type
__TRACE_STAT_H	trace/trace_stat.h	3;"	d
__TRACING_MAP_H	trace/tracing_map.h	3;"	d
__USAGE	locking/lockdep.c	499;"	d	file:
___P	irq/debug.h	47;"	d
___P	irq/debug.h	6;"	d
___PD	irq/debug.h	49;"	d
___PD	irq/debug.h	9;"	d
___PS	irq/debug.h	48;"	d
___PS	irq/debug.h	7;"	d
____bpf_prog_get	bpf/syscall.c	/^static struct bpf_prog *____bpf_prog_get(struct fd f)$/;"	f	file:
____cacheline_aligned	sched/fair.c	/^} nohz ____cacheline_aligned;$/;"	v	typeref:struct:__anon87	file:
____cacheline_aligned	sched/sched.h	/^		raw_spinlock_t	lock ____cacheline_aligned;$/;"	m	struct:cfs_rq::__anon83
____cacheline_aligned	sched/sched.h	/^	atomic_long_t		load_avg ____cacheline_aligned;$/;"	m	struct:task_group
____cacheline_aligned	sched/sched.h	/^	struct uclamp_rq	uclamp[UCLAMP_CNT] ____cacheline_aligned;$/;"	m	struct:rq	typeref:struct:rq::uclamp
____cacheline_aligned	sched/sched.h	/^	u64			clock_task ____cacheline_aligned;$/;"	m	struct:rq
____cacheline_aligned	time/sched_clock.c	/^static struct clock_data cd ____cacheline_aligned = {$/;"	v	typeref:struct:cd	file:
____cacheline_aligned	time/timekeeping.c	/^static struct tk_fast tk_fast_mono ____cacheline_aligned = {$/;"	v	typeref:struct:tk_fast_mono	file:
____cacheline_aligned	time/timekeeping.c	/^static struct tk_fast tk_fast_raw  ____cacheline_aligned = {$/;"	v	typeref:struct:tk_fast_raw	file:
____cacheline_aligned	time/timekeeping.c	/^} tk_core ____cacheline_aligned = {$/;"	v	typeref:struct:__anon49	file:
____cacheline_aligned	time/timer.c	/^} ____cacheline_aligned;$/;"	v	typeref:struct:timer_base
____cacheline_aligned	workqueue.c	/^	unsigned int		flags ____cacheline_aligned; \/* WQ: WQ_* flags *\/$/;"	m	struct:workqueue_struct	file:
____cacheline_aligned_in_smp	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock ____cacheline_aligned_in_smp;$/;"	m	struct:bpf_lru_list
____cacheline_aligned_in_smp	dma/debug.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:hash_bucket
____cacheline_aligned_in_smp	futex.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:futex_hash_bucket
____cacheline_aligned_in_smp	kprobes.c	/^	raw_spinlock_t lock ____cacheline_aligned_in_smp;$/;"	m	struct:__anon93	file:
____cacheline_aligned_in_smp	trace/trace_clock.c	/^} trace_clock_struct ____cacheline_aligned_in_smp =$/;"	v	typeref:struct:__anon37	file:
____cacheline_aligned_in_smp	workqueue.c	/^	atomic_t		nr_running ____cacheline_aligned_in_smp;$/;"	m	struct:worker_pool	file:
____cacheline_aligned_in_smp	workqueue.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:worker_pool
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t fqslock ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_node
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t ofl_lock ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_state
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	spinlock_t exp_lock ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_node
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	struct rcu_data *nocb_leader ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::nocb_leader
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	struct rcu_head *nocb_gp_head ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::nocb_gp_head
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	u8	boost ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_state
____cacheline_internodealigned_in_smp	rcu/tree.h	/^} ____cacheline_internodealigned_in_smp;$/;"	v	typeref:struct:rcu_node
___bpf_prog_run	bpf/core.c	/^static u64 __no_fgcse ___bpf_prog_run(u64 *regs, const struct bpf_insn *insn, u64 *stack)$/;"	f	file:
___might_sleep	sched/core.c	/^EXPORT_SYMBOL(___might_sleep);$/;"	v
___might_sleep	sched/core.c	/^void ___might_sleep(const char *file, int line, int preempt_offset)$/;"	f
___pcpu_freelist_push	bpf/percpu_freelist.c	/^static inline void ___pcpu_freelist_push(struct pcpu_freelist_head *head,$/;"	f	file:
___perf_sw_event	events/core.c	/^void ___perf_sw_event(u32 event_id, u64 nr, struct pt_regs *regs, u64 addr)$/;"	f
___update_load_avg	sched/pelt.c	/^___update_load_avg(struct sched_avg *sa, unsigned long load, unsigned long runnable)$/;"	f	file:
___update_load_sum	sched/pelt.c	/^___update_load_sum(u64 now, struct sched_avg *sa,$/;"	f	file:
__account_cfs_rq_runtime	sched/fair.c	/^static void __account_cfs_rq_runtime(struct cfs_rq *cfs_rq, u64 delta_exec)$/;"	f	file:
__account_scheduler_latency	latencytop.c	/^__account_scheduler_latency(struct task_struct *tsk, int usecs, int inter)$/;"	f
__acct_update_integrals	tsacct.c	/^static void __acct_update_integrals(struct task_struct *tsk,$/;"	f	file:
__accumulate_pelt_segments	sched/pelt.c	/^static u32 __accumulate_pelt_segments(u64 periods, u32 d1, u32 d3)$/;"	f	file:
__acquires	debug/kdb/kdb_support.c	/^	__acquires(dap_lock)$/;"	f
__acquires	kprobes.c	/^__acquires(hlist_lock)$/;"	f
__acquires	locking/locktorture.c	/^__acquires(torture_spinlock)$/;"	f
__acquires	locking/locktorture.c	/^__acquires(torture_ww_mutex_0)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_mutex_lock(void) __acquires(torture_mutex)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_percpu_rwsem_down_read(void) __acquires(pcpu_rwsem)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_percpu_rwsem_down_write(void) __acquires(pcpu_rwsem)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rtmutex_lock(void) __acquires(torture_rtmutex)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwlock_read_lock(void) __acquires(torture_rwlock)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwlock_read_lock_irq(void) __acquires(torture_rwlock)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwlock_write_lock(void) __acquires(torture_rwlock)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwlock_write_lock_irq(void) __acquires(torture_rwlock)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwsem_down_read(void) __acquires(torture_rwsem)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_rwsem_down_write(void) __acquires(torture_rwsem)$/;"	f
__acquires	locking/locktorture.c	/^static int torture_spin_lock_write_lock(void) __acquires(torture_spinlock)$/;"	f
__acquires	rcu/rcuperf.c	/^static int rcu_perf_read_lock(void) __acquires(RCU)$/;"	f
__acquires	rcu/rcuperf.c	/^static int srcu_perf_read_lock(void) __acquires(srcu_ctlp)$/;"	f
__acquires	rcu/rcutorture.c	/^static int rcu_torture_read_lock(void) __acquires(RCU)$/;"	f
__acquires	rcu/rcutorture.c	/^static int rcu_torture_read_lock_trivial(void) __acquires(RCU)$/;"	f
__acquires	rcu/rcutorture.c	/^static int srcu_torture_read_lock(void) __acquires(srcu_ctlp)$/;"	f
__acquires	resource.c	/^	__acquires(resource_lock)$/;"	f
__acquires	trace/ftrace.c	/^	__acquires(RCU)$/;"	f
__acquires	trace/trace_events.c	/^	__acquires(RCU)$/;"	f
__add_event_to_tracers	trace/trace_events.c	/^static void __add_event_to_tracers(struct trace_event_call *call)$/;"	f	file:
__add_hash_entry	trace/ftrace.c	/^static void __add_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
__add_preferred_console	printk/printk.c	/^static int __add_preferred_console(char *name, int idx, char *options,$/;"	f	file:
__add_rq_bw	sched/deadline.c	/^void __add_rq_bw(u64 dl_bw, struct dl_rq *dl_rq)$/;"	f	file:
__add_running_bw	sched/deadline.c	/^void __add_running_bw(u64 dl_bw, struct dl_rq *dl_rq)$/;"	f	file:
__adjust_resource	resource.c	/^static int __adjust_resource(struct resource *res, resource_size_t start,$/;"	f	file:
__alarm_init	time/alarmtimer.c	/^__alarm_init(struct alarm *alarm, enum alarmtimer_type type,$/;"	f	file:
__arm_kprobe	kprobes.c	/^static void __arm_kprobe(struct kprobe *p)$/;"	f	file:
__arm_kprobe	kprobes.c	933;"	d	file:
__array	trace/trace.h	58;"	d
__array	trace/trace.h	59;"	d
__array	trace/trace_export.c	101;"	d	file:
__array	trace/trace_export.c	102;"	d	file:
__array	trace/trace_export.c	158;"	d	file:
__array	trace/trace_export.c	159;"	d	file:
__array	trace/trace_export.c	47;"	d	file:
__array	trace/trace_export.c	48;"	d	file:
__array_desc	trace/trace.h	61;"	d
__array_desc	trace/trace.h	62;"	d
__array_desc	trace/trace_export.c	114;"	d	file:
__array_desc	trace/trace_export.c	115;"	d	file:
__array_desc	trace/trace_export.c	161;"	d	file:
__array_desc	trace/trace_export.c	162;"	d	file:
__array_desc	trace/trace_export.c	50;"	d	file:
__array_desc	trace/trace_export.c	51;"	d	file:
__atomic_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__atomic_notifier_call_chain);$/;"	v
__atomic_notifier_call_chain	notifier.c	/^NOKPROBE_SYMBOL(__atomic_notifier_call_chain);$/;"	v
__atomic_notifier_call_chain	notifier.c	/^int __atomic_notifier_call_chain(struct atomic_notifier_head *nh,$/;"	f
__audit_bprm	auditsc.c	/^void __audit_bprm(struct linux_binprm *bprm)$/;"	f
__audit_fanotify	auditsc.c	/^void __audit_fanotify(unsigned int response)$/;"	f
__audit_fd_pair	auditsc.c	/^void __audit_fd_pair(int fd1, int fd2)$/;"	f
__audit_file	auditsc.c	/^void __audit_file(const struct file *file)$/;"	f
__audit_free	auditsc.c	/^void __audit_free(struct task_struct *tsk)$/;"	f
__audit_getname	auditsc.c	/^void __audit_getname(struct filename *name)$/;"	f
__audit_inode	auditsc.c	/^void __audit_inode(struct filename *name, const struct dentry *dentry,$/;"	f
__audit_inode_child	auditsc.c	/^EXPORT_SYMBOL_GPL(__audit_inode_child);$/;"	v
__audit_inode_child	auditsc.c	/^void __audit_inode_child(struct inode *parent,$/;"	f
__audit_ipc_obj	auditsc.c	/^void __audit_ipc_obj(struct kern_ipc_perm *ipcp)$/;"	f
__audit_ipc_set_perm	auditsc.c	/^void __audit_ipc_set_perm(unsigned long qbytes, uid_t uid, gid_t gid, umode_t mode)$/;"	f
__audit_log_bprm_fcaps	auditsc.c	/^int __audit_log_bprm_fcaps(struct linux_binprm *bprm,$/;"	f
__audit_log_capset	auditsc.c	/^void __audit_log_capset(const struct cred *new, const struct cred *old)$/;"	f
__audit_log_kern_module	auditsc.c	/^void __audit_log_kern_module(char *name)$/;"	f
__audit_mmap_fd	auditsc.c	/^void __audit_mmap_fd(int fd, int flags)$/;"	f
__audit_mq_getsetattr	auditsc.c	/^void __audit_mq_getsetattr(mqd_t mqdes, struct mq_attr *mqstat)$/;"	f
__audit_mq_notify	auditsc.c	/^void __audit_mq_notify(mqd_t mqdes, const struct sigevent *notification)$/;"	f
__audit_mq_open	auditsc.c	/^void __audit_mq_open(int oflag, umode_t mode, struct mq_attr *attr)$/;"	f
__audit_mq_sendrecv	auditsc.c	/^void __audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio,$/;"	f
__audit_ntp_log	auditsc.c	/^void __audit_ntp_log(const struct audit_ntp_data *ad)$/;"	f
__audit_ptrace	auditsc.c	/^void __audit_ptrace(struct task_struct *t)$/;"	f
__audit_reusename	auditsc.c	/^__audit_reusename(const __user char *uptr)$/;"	f
__audit_sockaddr	auditsc.c	/^int __audit_sockaddr(int len, void *a)$/;"	f
__audit_socketcall	auditsc.c	/^int __audit_socketcall(int nargs, unsigned long *args)$/;"	f
__audit_syscall_entry	auditsc.c	/^void __audit_syscall_entry(int major, unsigned long a1, unsigned long a2,$/;"	f
__audit_syscall_exit	auditsc.c	/^void __audit_syscall_exit(int success, long return_code)$/;"	f
__audit_tk_injoffset	auditsc.c	/^void __audit_tk_injoffset(struct timespec64 offset)$/;"	f
__balance_callback	sched/core.c	/^static void __balance_callback(struct rq *rq)$/;"	f	file:
__bfs	locking/lockdep.c	/^static int __bfs(struct lock_list *source_entry,$/;"	f	file:
__bfs_backwards	locking/lockdep.c	/^static inline int __bfs_backwards(struct lock_list *src_entry,$/;"	f	file:
__bfs_forwards	locking/lockdep.c	/^static inline int __bfs_forwards(struct lock_list *src_entry,$/;"	f	file:
__blk_add_trace	trace/blktrace.c	/^static void __blk_add_trace(struct blk_trace *bt, sector_t sector, int bytes,$/;"	f	file:
__blk_trace_remove	trace/blktrace.c	/^static int __blk_trace_remove(struct request_queue *q)$/;"	f	file:
__blk_trace_setup	trace/blktrace.c	/^static int __blk_trace_setup(struct request_queue *q, char *name, dev_t dev,$/;"	f	file:
__blk_trace_startstop	trace/blktrace.c	/^static int __blk_trace_startstop(struct request_queue *q, int start)$/;"	f	file:
__blocking_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__blocking_notifier_call_chain);$/;"	v
__blocking_notifier_call_chain	notifier.c	/^int __blocking_notifier_call_chain(struct blocking_notifier_head *nh,$/;"	f
__boot_cpu_id	cpu.c	/^int __boot_cpu_id;$/;"	v
__bpf_address_lookup	bpf/core.c	/^const char *__bpf_address_lookup(unsigned long addr, unsigned long *size,$/;"	f
__bpf_call_base	bpf/core.c	/^EXPORT_SYMBOL_GPL(__bpf_call_base);$/;"	v
__bpf_call_base	bpf/core.c	/^noinline u64 __bpf_call_base(u64 r1, u64 r2, u64 r3, u64 r4, u64 r5)$/;"	f
__bpf_copy_key	bpf/syscall.c	/^static void *__bpf_copy_key(void __user *ukey, u64 key_size)$/;"	f	file:
__bpf_event_entry_free	bpf/arraymap.c	/^static void __bpf_event_entry_free(struct rcu_head *rcu)$/;"	f	file:
__bpf_lru_list_rotate	bpf/bpf_lru_list.c	/^static void __bpf_lru_list_rotate(struct bpf_lru *lru, struct bpf_lru_list *l)$/;"	f	file:
__bpf_lru_list_rotate_active	bpf/bpf_lru_list.c	/^static void __bpf_lru_list_rotate_active(struct bpf_lru *lru,$/;"	f	file:
__bpf_lru_list_rotate_inactive	bpf/bpf_lru_list.c	/^static void __bpf_lru_list_rotate_inactive(struct bpf_lru *lru,$/;"	f	file:
__bpf_lru_list_shrink	bpf/bpf_lru_list.c	/^static unsigned int __bpf_lru_list_shrink(struct bpf_lru *lru,$/;"	f	file:
__bpf_lru_list_shrink_inactive	bpf/bpf_lru_list.c	/^__bpf_lru_list_shrink_inactive(struct bpf_lru *lru,$/;"	f	file:
__bpf_lru_node_move	bpf/bpf_lru_list.c	/^static void __bpf_lru_node_move(struct bpf_lru_list *l,$/;"	f	file:
__bpf_lru_node_move_in	bpf/bpf_lru_list.c	/^static void __bpf_lru_node_move_in(struct bpf_lru_list *l,$/;"	f	file:
__bpf_lru_node_move_to_free	bpf/bpf_lru_list.c	/^static void __bpf_lru_node_move_to_free(struct bpf_lru_list *l,$/;"	f	file:
__bpf_map_get	bpf/syscall.c	/^struct bpf_map *__bpf_map_get(struct fd f)$/;"	f
__bpf_map_offload_destroy	bpf/offload.c	/^static void __bpf_map_offload_destroy(struct bpf_offloaded_map *offmap)$/;"	f	file:
__bpf_map_put	bpf/syscall.c	/^static void __bpf_map_put(struct bpf_map *map, bool do_idr_lock)$/;"	f	file:
__bpf_offload_dev_match	bpf/offload.c	/^static bool __bpf_offload_dev_match(struct bpf_prog *prog,$/;"	f	file:
__bpf_perf_event_output	trace/bpf_trace.c	/^__bpf_perf_event_output(struct pt_regs *regs, struct bpf_map *map,$/;"	f	file:
__bpf_probe_register	trace/bpf_trace.c	/^static int __bpf_probe_register(struct bpf_raw_event_map *btp, struct bpf_prog *prog)$/;"	f	file:
__bpf_prog_charge	bpf/syscall.c	/^int __bpf_prog_charge(struct user_struct *user, u32 pages)$/;"	f
__bpf_prog_free	bpf/core.c	/^void __bpf_prog_free(struct bpf_prog *fp)$/;"	f
__bpf_prog_get	bpf/syscall.c	/^static struct bpf_prog *__bpf_prog_get(u32 ufd, enum bpf_prog_type *attach_type,$/;"	f	file:
__bpf_prog_offload_destroy	bpf/offload.c	/^static void __bpf_prog_offload_destroy(struct bpf_prog *prog)$/;"	f	file:
__bpf_prog_put	bpf/syscall.c	/^static void __bpf_prog_put(struct bpf_prog *prog, bool do_idr_lock)$/;"	f	file:
__bpf_prog_put_rcu	bpf/syscall.c	/^static void __bpf_prog_put_rcu(struct rcu_head *rcu)$/;"	f	file:
__bpf_prog_ret0_warn	bpf/core.c	/^static unsigned int __bpf_prog_ret0_warn(const void *ctx,$/;"	f	file:
__bpf_prog_ret1	bpf/core.c	/^static unsigned int __bpf_prog_ret1(const void *ctx,$/;"	f	file:
__bpf_prog_uncharge	bpf/syscall.c	/^void __bpf_prog_uncharge(struct user_struct *user, u32 pages)$/;"	f
__bpf_spin_lock	bpf/helpers.c	/^static inline void __bpf_spin_lock(struct bpf_spin_lock *lock)$/;"	f	file:
__bpf_spin_unlock	bpf/helpers.c	/^static inline void __bpf_spin_unlock(struct bpf_spin_lock *lock)$/;"	f	file:
__bpf_strtoll	bpf/helpers.c	/^static int __bpf_strtoll(const char *buf, size_t buf_len, u64 flags,$/;"	f	file:
__bpf_strtoull	bpf/helpers.c	/^static int __bpf_strtoull(const char *buf, size_t buf_len, u64 flags,$/;"	f	file:
__bpf_trace_run	trace/bpf_trace.c	/^void __bpf_trace_run(struct bpf_prog *prog, u64 *args)$/;"	f	file:
__btf_name_by_offset	bpf/btf.c	/^static const char *__btf_name_by_offset(const struct btf *btf, u32 offset)$/;"	f	file:
__btf_name_char_ok	bpf/btf.c	/^static bool __btf_name_char_ok(char c, bool first, bool dot_ok)$/;"	f	file:
__btf_name_valid	bpf/btf.c	/^static bool __btf_name_valid(const struct btf *btf, u32 offset, bool dot_ok)$/;"	f	file:
__btf_new_fd	bpf/btf.c	/^static int __btf_new_fd(struct btf *btf)$/;"	f	file:
__btf_type_is_struct	bpf/btf.c	/^static bool __btf_type_is_struct(const struct btf_type *t)$/;"	f	file:
__btf_verifier_log	bpf/btf.c	/^__printf(2, 3) static void __btf_verifier_log(struct bpf_verifier_log *log,$/;"	f	file:
__btf_verifier_log_type	bpf/btf.c	/^__printf(4, 5) static void __btf_verifier_log_type(struct btf_verifier_env *env,$/;"	f	file:
__buffer_unlock_commit	trace/trace.c	/^__buffer_unlock_commit(struct ring_buffer *buffer, struct ring_buffer_event *event)$/;"	f	file:
__cacheline_aligned	bpf/core.c	/^static struct latch_tree_root bpf_tree __cacheline_aligned;$/;"	v	typeref:struct:bpf_tree	file:
__cacheline_aligned	module.c	/^} mod_tree __cacheline_aligned = {$/;"	v	typeref:struct:mod_tree_root	file:
__cacheline_aligned	sched/wait_bit.c	/^static wait_queue_head_t bit_wait_table[WAIT_TABLE_SIZE] __cacheline_aligned;$/;"	v	file:
__cacheline_aligned_in_smp	irq/irqdesc.c	/^struct irq_desc irq_desc[NR_IRQS] __cacheline_aligned_in_smp = {$/;"	v	typeref:struct:irq_desc
__cacheline_aligned_in_smp	softirq.c	/^static struct softirq_action softirq_vec[NR_SOFTIRQS] __cacheline_aligned_in_smp;$/;"	v	typeref:struct:softirq_vec	file:
__cacheline_aligned_in_smp	time/timer.c	/^__visible u64 jiffies_64 __cacheline_aligned_in_smp = INITIAL_JIFFIES;$/;"	v
__calc_delta	sched/fair.c	/^static u64 __calc_delta(u64 delta_exec, unsigned long weight, struct load_weight *lw)$/;"	f	file:
__call_rcu	rcu/tree.c	/^__call_rcu(struct rcu_head *head, rcu_callback_t func, int cpu, bool lazy)$/;"	f	file:
__call_rcu_core	rcu/tree.c	/^static void __call_rcu_core(struct rcu_data *rdp, struct rcu_head *head,$/;"	f	file:
__call_rcu_nocb	rcu/tree_plugin.h	/^static bool __call_rcu_nocb(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	f
__call_rcu_nocb_enqueue	rcu/tree_plugin.h	/^static void __call_rcu_nocb_enqueue(struct rcu_data *rdp,$/;"	f
__call_srcu	rcu/srcutree.c	/^static void __call_srcu(struct srcu_struct *ssp, struct rcu_head *rhp,$/;"	f	file:
__cancel_work	workqueue.c	/^static bool __cancel_work(struct work_struct *work, bool is_dwork)$/;"	f	file:
__cancel_work_timer	workqueue.c	/^static bool __cancel_work_timer(struct work_struct *work, bool is_dwork)$/;"	f	file:
__cant_sleep	sched/core.c	/^EXPORT_SYMBOL_GPL(__cant_sleep);$/;"	v
__cant_sleep	sched/core.c	/^void __cant_sleep(const char *file, int line, int preempt_offset)$/;"	f
__cap_empty_set	capability.c	/^EXPORT_SYMBOL(__cap_empty_set);$/;"	v
__cap_empty_set	capability.c	/^const kernel_cap_t __cap_empty_set = CAP_EMPTY_SET;$/;"	v
__cfs_bandwidth_used	sched/fair.c	/^static struct static_key __cfs_bandwidth_used;$/;"	v	typeref:struct:static_key	file:
__cfs_schedulable	sched/core.c	/^static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)$/;"	f	file:
__cgroup1_procs_write	cgroup/cgroup-v1.c	/^static ssize_t __cgroup1_procs_write(struct kernfs_open_file *of,$/;"	f	file:
__cgroup_account_cputime	cgroup/rstat.c	/^void __cgroup_account_cputime(struct cgroup *cgrp, u64 delta_exec)$/;"	f
__cgroup_account_cputime_field	cgroup/rstat.c	/^void __cgroup_account_cputime_field(struct cgroup *cgrp,$/;"	f
__cgroup_bpf_attach	bpf/cgroup.c	/^int __cgroup_bpf_attach(struct cgroup *cgrp, struct bpf_prog *prog,$/;"	f
__cgroup_bpf_check_dev_permission	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_check_dev_permission);$/;"	v
__cgroup_bpf_check_dev_permission	bpf/cgroup.c	/^int __cgroup_bpf_check_dev_permission(short dev_type, u32 major, u32 minor,$/;"	f
__cgroup_bpf_detach	bpf/cgroup.c	/^int __cgroup_bpf_detach(struct cgroup *cgrp, struct bpf_prog *prog,$/;"	f
__cgroup_bpf_prog_array_is_empty	bpf/cgroup.c	/^static bool __cgroup_bpf_prog_array_is_empty(struct cgroup *cgrp,$/;"	f	file:
__cgroup_bpf_query	bpf/cgroup.c	/^int __cgroup_bpf_query(struct cgroup *cgrp, const union bpf_attr *attr,$/;"	f
__cgroup_bpf_run_filter_getsockopt	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_getsockopt);$/;"	v
__cgroup_bpf_run_filter_getsockopt	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_getsockopt(struct sock *sk, int level,$/;"	f
__cgroup_bpf_run_filter_setsockopt	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_setsockopt);$/;"	v
__cgroup_bpf_run_filter_setsockopt	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_setsockopt(struct sock *sk, int *level,$/;"	f
__cgroup_bpf_run_filter_sk	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_sk);$/;"	v
__cgroup_bpf_run_filter_sk	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_sk(struct sock *sk,$/;"	f
__cgroup_bpf_run_filter_skb	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_skb);$/;"	v
__cgroup_bpf_run_filter_skb	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_skb(struct sock *sk,$/;"	f
__cgroup_bpf_run_filter_sock_addr	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_sock_addr);$/;"	v
__cgroup_bpf_run_filter_sock_addr	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_sock_addr(struct sock *sk,$/;"	f
__cgroup_bpf_run_filter_sock_ops	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_sock_ops);$/;"	v
__cgroup_bpf_run_filter_sock_ops	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_sock_ops(struct sock *sk,$/;"	f
__cgroup_bpf_run_filter_sysctl	bpf/cgroup.c	/^EXPORT_SYMBOL(__cgroup_bpf_run_filter_sysctl);$/;"	v
__cgroup_bpf_run_filter_sysctl	bpf/cgroup.c	/^int __cgroup_bpf_run_filter_sysctl(struct ctl_table_header *head,$/;"	f
__cgroup_procs_start	cgroup/cgroup.c	/^static void *__cgroup_procs_start(struct seq_file *s, loff_t *pos,$/;"	f	file:
__cgroup_task_count	cgroup/cgroup.c	/^int __cgroup_task_count(const struct cgroup *cgrp)$/;"	f
__chainhashfn	locking/lockdep.c	353;"	d	file:
__change_pid	pid.c	/^static void __change_pid(struct task_struct *task, enum pid_type type,$/;"	f	file:
__check_data_structures	locking/lockdep.c	/^static bool __check_data_structures(void)$/;"	f	file:
__check_map_access	bpf/verifier.c	/^static int __check_map_access(struct bpf_verifier_env *env, u32 regno, int off,$/;"	f	file:
__check_packet_access	bpf/verifier.c	/^static int __check_packet_access(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
__check_stack_boundary	bpf/verifier.c	/^static int __check_stack_boundary(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
__checkparam_dl	sched/deadline.c	/^bool __checkparam_dl(const struct sched_attr *attr)$/;"	f
__classhashfn	locking/lockdep.c	342;"	d	file:
__cleanup_nmi	irq/manage.c	/^static const void *__cleanup_nmi(unsigned int irq, struct irq_desc *desc)$/;"	f	file:
__cleanup_sighand	fork.c	/^void __cleanup_sighand(struct sighand_struct *sighand)$/;"	f
__clear_all_pkt_pointers	bpf/verifier.c	/^static void __clear_all_pkt_pointers(struct bpf_verifier_env *env,$/;"	f	file:
__clear_buddies_last	sched/fair.c	/^static void __clear_buddies_last(struct sched_entity *se)$/;"	f	file:
__clear_buddies_next	sched/fair.c	/^static void __clear_buddies_next(struct sched_entity *se)$/;"	f	file:
__clear_buddies_skip	sched/fair.c	/^static void __clear_buddies_skip(struct sched_entity *se)$/;"	f	file:
__clear_sched_clock_stable	sched/clock.c	/^static void __clear_sched_clock_stable(void)$/;"	f	file:
__clockevents_switch_state	time/clockevents.c	/^static int __clockevents_switch_state(struct clock_event_device *dev,$/;"	f	file:
__clockevents_try_unbind	time/clockevents.c	/^static int __clockevents_try_unbind(struct clock_event_device *ced, int cpu)$/;"	f	file:
__clockevents_unbind	time/clockevents.c	/^static void __clockevents_unbind(void *arg)$/;"	f	file:
__clockevents_update_freq	time/clockevents.c	/^int __clockevents_update_freq(struct clock_event_device *dev, u32 freq)$/;"	f
__clocksource_change_rating	time/clocksource.c	/^static void __clocksource_change_rating(struct clocksource *cs, int rating)$/;"	f	file:
__clocksource_register_scale	time/clocksource.c	/^EXPORT_SYMBOL_GPL(__clocksource_register_scale);$/;"	v
__clocksource_register_scale	time/clocksource.c	/^int __clocksource_register_scale(struct clocksource *cs, u32 scale, u32 freq)$/;"	f
__clocksource_select	time/clocksource.c	/^static void __clocksource_select(bool skipcur)$/;"	f	file:
__clocksource_suspend_select	time/clocksource.c	/^static void __clocksource_suspend_select(struct clocksource *cs)$/;"	f	file:
__clocksource_unstable	time/clocksource.c	/^static void __clocksource_unstable(struct clocksource *cs)$/;"	f	file:
__clocksource_update_freq_scale	time/clocksource.c	/^EXPORT_SYMBOL_GPL(__clocksource_update_freq_scale);$/;"	v
__clocksource_update_freq_scale	time/clocksource.c	/^void __clocksource_update_freq_scale(struct clocksource *cs, u32 scale, u32 freq)$/;"	f
__clocksource_watchdog_kthread	time/clocksource.c	/^static inline int __clocksource_watchdog_kthread(void) { return 0; }$/;"	f	file:
__clocksource_watchdog_kthread	time/clocksource.c	/^static int __clocksource_watchdog_kthread(void)$/;"	f	file:
__collect_expired_timers	time/timer.c	/^static int __collect_expired_timers(struct timer_base *base,$/;"	f	file:
__common_field	trace/trace_events.c	153;"	d	file:
__compat_get_timespec	compat.c	/^static int __compat_get_timespec(struct timespec *ts, const struct old_timespec32 __user *cts)$/;"	f	file:
__compat_get_timeval	compat.c	/^static int __compat_get_timeval(struct timeval *tv, const struct old_timeval32 __user *ctv)$/;"	f	file:
__compat_put_timespec	compat.c	/^static int __compat_put_timespec(const struct timespec *ts, struct old_timespec32 __user *cts)$/;"	f	file:
__compat_put_timeval	compat.c	/^static int __compat_put_timeval(const struct timeval *tv, struct old_timeval32 __user *ctv)$/;"	f	file:
__compat_save_altstack	signal.c	/^int __compat_save_altstack(compat_stack_t __user *uss, unsigned long sp)$/;"	f
__cond_resched_lock	sched/core.c	/^EXPORT_SYMBOL(__cond_resched_lock);$/;"	v
__cond_resched_lock	sched/core.c	/^int __cond_resched_lock(spinlock_t *lock)$/;"	f
__context_tracking_enter	context_tracking.c	/^EXPORT_SYMBOL_GPL(__context_tracking_enter);$/;"	v
__context_tracking_enter	context_tracking.c	/^NOKPROBE_SYMBOL(__context_tracking_enter);$/;"	v
__context_tracking_enter	context_tracking.c	/^void __context_tracking_enter(enum ctx_state state)$/;"	f
__context_tracking_exit	context_tracking.c	/^EXPORT_SYMBOL_GPL(__context_tracking_exit);$/;"	v
__context_tracking_exit	context_tracking.c	/^NOKPROBE_SYMBOL(__context_tracking_exit);$/;"	v
__context_tracking_exit	context_tracking.c	/^void __context_tracking_exit(enum ctx_state state)$/;"	f
__control_devkmsg	printk/printk.c	/^static int __control_devkmsg(char *str)$/;"	f	file:
__copy_insn	events/uprobes.c	/^static int __copy_insn(struct address_space *mapping, struct file *filp,$/;"	f	file:
__copy_siginfo_from_user	signal.c	/^static int __copy_siginfo_from_user(int signo, kernel_siginfo_t *to,$/;"	f	file:
__copy_siginfo_from_user32	signal.c	/^static int __copy_siginfo_from_user32(int signo, struct kernel_siginfo *to,$/;"	f	file:
__copy_siginfo_to_user32	signal.c	/^int __copy_siginfo_to_user32(struct compat_siginfo __user *to,$/;"	f
__cpu_active_mask	cpu.c	/^EXPORT_SYMBOL(__cpu_active_mask);$/;"	v
__cpu_hotplug_enable	cpu.c	/^static void __cpu_hotplug_enable(void)$/;"	f	file:
__cpu_map_entry_alloc	bpf/cpumap.c	/^static struct bpf_cpu_map_entry *__cpu_map_entry_alloc(u32 qsize, u32 cpu,$/;"	f	file:
__cpu_map_entry_free	bpf/cpumap.c	/^static void __cpu_map_entry_free(struct rcu_head *rcu)$/;"	f	file:
__cpu_map_entry_replace	bpf/cpumap.c	/^static void __cpu_map_entry_replace(struct bpf_cpu_map *cmap,$/;"	f	file:
__cpu_map_flush	bpf/cpumap.c	/^void __cpu_map_flush(struct bpf_map *map)$/;"	f
__cpu_map_lookup_elem	bpf/cpumap.c	/^struct bpf_cpu_map_entry *__cpu_map_lookup_elem(struct bpf_map *map, u32 key)$/;"	f
__cpu_map_ring_cleanup	bpf/cpumap.c	/^static void __cpu_map_ring_cleanup(struct ptr_ring *ring)$/;"	f	file:
__cpu_online_mask	cpu.c	/^EXPORT_SYMBOL(__cpu_online_mask);$/;"	v
__cpu_possible_mask	cpu.c	/^EXPORT_SYMBOL(__cpu_possible_mask);$/;"	v
__cpu_present_mask	cpu.c	/^EXPORT_SYMBOL(__cpu_present_mask);$/;"	v
__cpu_stop_queue_work	stop_machine.c	/^static void __cpu_stop_queue_work(struct cpu_stopper *stopper,$/;"	f	file:
__cpuacct_percpu_seq_show	sched/cpuacct.c	/^static int __cpuacct_percpu_seq_show(struct seq_file *m,$/;"	f	file:
__cpuhp_kick_ap	cpu.c	/^static void __cpuhp_kick_ap(struct cpuhp_cpu_state *st)$/;"	f	file:
__cpuhp_remove_state	cpu.c	/^EXPORT_SYMBOL(__cpuhp_remove_state);$/;"	v
__cpuhp_remove_state	cpu.c	/^void __cpuhp_remove_state(enum cpuhp_state state, bool invoke)$/;"	f
__cpuhp_remove_state_cpuslocked	cpu.c	/^EXPORT_SYMBOL(__cpuhp_remove_state_cpuslocked);$/;"	v
__cpuhp_remove_state_cpuslocked	cpu.c	/^void __cpuhp_remove_state_cpuslocked(enum cpuhp_state state, bool invoke)$/;"	f
__cpuhp_setup_state	cpu.c	/^EXPORT_SYMBOL(__cpuhp_setup_state);$/;"	v
__cpuhp_setup_state	cpu.c	/^int __cpuhp_setup_state(enum cpuhp_state state,$/;"	f
__cpuhp_setup_state_cpuslocked	cpu.c	/^EXPORT_SYMBOL(__cpuhp_setup_state_cpuslocked);$/;"	v
__cpuhp_setup_state_cpuslocked	cpu.c	/^int __cpuhp_setup_state_cpuslocked(enum cpuhp_state state,$/;"	f
__cpuhp_state_add_instance	cpu.c	/^EXPORT_SYMBOL_GPL(__cpuhp_state_add_instance);$/;"	v
__cpuhp_state_add_instance	cpu.c	/^int __cpuhp_state_add_instance(enum cpuhp_state state, struct hlist_node *node,$/;"	f
__cpuhp_state_add_instance_cpuslocked	cpu.c	/^int __cpuhp_state_add_instance_cpuslocked(enum cpuhp_state state,$/;"	f
__cpuhp_state_remove_instance	cpu.c	/^EXPORT_SYMBOL_GPL(__cpuhp_state_remove_instance);$/;"	v
__cpuhp_state_remove_instance	cpu.c	/^int __cpuhp_state_remove_instance(enum cpuhp_state state,$/;"	f
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_force_mask __cpumask_var_read_mostly;$/;"	v	file:
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_mask __cpumask_var_read_mostly;$/;"	v	file:
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_on __cpumask_var_read_mostly;$/;"	v	file:
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_oneshot_mask __cpumask_var_read_mostly;$/;"	v	file:
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_pending_mask __cpumask_var_read_mostly;$/;"	v	file:
__cpumask_var_read_mostly	time/tick-broadcast.c	/^static cpumask_var_t tmpmask __cpumask_var_read_mostly;$/;"	v	file:
__cpuset_memory_pressure_bump	cgroup/cpuset.c	/^void __cpuset_memory_pressure_bump(void)$/;"	f
__cpuset_node_allowed	cgroup/cpuset.c	/^bool __cpuset_node_allowed(int node, gfp_t gfp_mask)$/;"	f
__cpuusage_read	sched/cpuacct.c	/^static u64 __cpuusage_read(struct cgroup_subsys_state *css,$/;"	f	file:
__cq_dequeue	locking/lockdep.c	/^static inline struct lock_list * __cq_dequeue(struct circular_queue *cq)$/;"	f	file:
__cq_empty	locking/lockdep.c	/^static inline int __cq_empty(struct circular_queue *cq)$/;"	f	file:
__cq_enqueue	locking/lockdep.c	/^static inline int __cq_enqueue(struct circular_queue *cq, struct lock_list *elem)$/;"	f	file:
__cq_full	locking/lockdep.c	/^static inline int __cq_full(struct circular_queue *cq)$/;"	f	file:
__cq_get_elem_count	locking/lockdep.c	/^static inline unsigned int  __cq_get_elem_count(struct circular_queue *cq)$/;"	f	file:
__cq_init	locking/lockdep.c	/^static inline void __cq_init(struct circular_queue *cq)$/;"	f	file:
__crash_kexec	kexec_core.c	/^STACK_FRAME_NON_STANDARD(__crash_kexec);$/;"	v
__crash_kexec	kexec_core.c	/^void __noclone __crash_kexec(struct pt_regs *regs)$/;"	f
__create_synth_event	trace/trace_events_hist.c	/^static int __create_synth_event(int argc, const char *name, const char **argv)$/;"	f	file:
__create_val_field	trace/trace_events_hist.c	/^static int __create_val_field(struct hist_trigger_data *hist_data,$/;"	f	file:
__create_xol_area	events/uprobes.c	/^static struct xol_area *__create_xol_area(unsigned long vaddr)$/;"	f	file:
__debug_atomic_inc	locking/lockdep_internals.h	188;"	d
__debug_atomic_inc	locking/lockdep_internals.h	232;"	d
__delayacct_add_tsk	delayacct.c	/^int __delayacct_add_tsk(struct taskstats *d, struct task_struct *tsk)$/;"	f
__delayacct_blkio_end	delayacct.c	/^void __delayacct_blkio_end(struct task_struct *p)$/;"	f
__delayacct_blkio_start	delayacct.c	/^void __delayacct_blkio_start(void)$/;"	f
__delayacct_blkio_ticks	delayacct.c	/^__u64 __delayacct_blkio_ticks(struct task_struct *tsk)$/;"	f
__delayacct_freepages_end	delayacct.c	/^void __delayacct_freepages_end(void)$/;"	f
__delayacct_freepages_start	delayacct.c	/^void __delayacct_freepages_start(void)$/;"	f
__delayacct_thrashing_end	delayacct.c	/^void __delayacct_thrashing_end(void)$/;"	f
__delayacct_thrashing_start	delayacct.c	/^void __delayacct_thrashing_start(void)$/;"	f
__delayacct_tsk_init	delayacct.c	/^void __delayacct_tsk_init(struct task_struct *tsk)$/;"	f
__delayed_free_task	fork.c	/^static void __delayed_free_task(struct rcu_head *rhp)$/;"	f	file:
__delist_rt_entity	sched/rt.c	/^static void __delist_rt_entity(struct sched_rt_entity *rt_se, struct rt_prio_array *array)$/;"	f	file:
__dequeue_dl_entity	sched/deadline.c	/^static void __dequeue_dl_entity(struct sched_dl_entity *dl_se)$/;"	f	file:
__dequeue_entity	sched/fair.c	/^static void __dequeue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
__dequeue_rt_entity	sched/rt.c	/^static void __dequeue_rt_entity(struct sched_rt_entity *rt_se, unsigned int flags)$/;"	f	file:
__dequeue_signal	signal.c	/^static int __dequeue_signal(struct sigpending *pending, sigset_t *mask,$/;"	f	file:
__dequeue_task_dl	sched/deadline.c	/^static void __dequeue_task_dl(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
__destroy_hist_field	trace/trace_events_hist.c	/^static void __destroy_hist_field(struct hist_field *hist_field)$/;"	f	file:
__dev_map_entry_free	bpf/devmap.c	/^static void __dev_map_entry_free(struct rcu_head *rcu)$/;"	f	file:
__dev_map_flush	bpf/devmap.c	/^void __dev_map_flush(struct bpf_map *map)$/;"	f
__dev_map_lookup_elem	bpf/devmap.c	/^struct bpf_dtab_netdev *__dev_map_lookup_elem(struct bpf_map *map, u32 key)$/;"	f
__devm_irq_alloc_descs	irq/devres.c	/^EXPORT_SYMBOL_GPL(__devm_irq_alloc_descs);$/;"	v
__devm_irq_alloc_descs	irq/devres.c	/^int __devm_irq_alloc_descs(struct device *dev, int irq, unsigned int from,$/;"	f
__devm_release_region	resource.c	/^EXPORT_SYMBOL(__devm_release_region);$/;"	v
__devm_release_region	resource.c	/^void __devm_release_region(struct device *dev, struct resource *parent,$/;"	f
__devm_request_region	resource.c	/^EXPORT_SYMBOL(__devm_request_region);$/;"	v
__devm_request_region	resource.c	/^__devm_request_region(struct device *dev, struct resource *parent,$/;"	f
__disable_irq	irq/manage.c	/^void __disable_irq(struct irq_desc *desc)$/;"	f
__disable_irq_nosync	irq/manage.c	/^static int __disable_irq_nosync(unsigned int irq)$/;"	f	file:
__disable_kprobe	kprobes.c	/^static struct kprobe *__disable_kprobe(struct kprobe *p)$/;"	f	file:
__disable_runtime	sched/rt.c	/^static void __disable_runtime(struct rq *rq)$/;"	f	file:
__disable_trace_on_warning	trace/trace.c	/^int __disable_trace_on_warning;$/;"	v
__disarm_kprobe	kprobes.c	/^static void __disarm_kprobe(struct kprobe *p, bool reopt)$/;"	f	file:
__disarm_kprobe	kprobes.c	934;"	d	file:
__dl_add	sched/sched.h	/^void __dl_add(struct dl_bw *dl_b, u64 tsk_bw, int cpus)$/;"	f
__dl_clear_params	sched/deadline.c	/^void __dl_clear_params(struct task_struct *p)$/;"	f
__dl_overflow	sched/sched.h	/^bool __dl_overflow(struct dl_bw *dl_b, int cpus, u64 old_bw, u64 new_bw)$/;"	f
__dl_sub	sched/sched.h	/^void __dl_sub(struct dl_bw *dl_b, u64 tsk_bw, int cpus)$/;"	f
__dl_update	sched/sched.h	/^void __dl_update(struct dl_bw *dl_b, s64 bw)$/;"	f
__dma_alloc_from_coherent	dma/coherent.c	/^static void *__dma_alloc_from_coherent(struct dma_coherent_mem *mem,$/;"	f	file:
__dma_common_pages_remap	dma/remap.c	/^static struct vm_struct *__dma_common_pages_remap(struct page **pages,$/;"	f	file:
__dma_direct_alloc_pages	dma/direct.c	/^struct page *__dma_direct_alloc_pages(struct device *dev, size_t size,$/;"	f
__dma_direct_free_pages	dma/direct.c	/^void __dma_direct_free_pages(struct device *dev, size_t size, struct page *page)$/;"	f
__dma_direct_optimal_gfp_mask	dma/direct.c	/^static gfp_t __dma_direct_optimal_gfp_mask(struct device *dev, u64 dma_mask,$/;"	f	file:
__dma_entry_alloc	dma/debug.c	/^static struct dma_debug_entry *__dma_entry_alloc(void)$/;"	f	file:
__dma_entry_alloc_check_leak	dma/debug.c	/^void __dma_entry_alloc_check_leak(void)$/;"	f
__dma_mmap_from_coherent	dma/coherent.c	/^static int __dma_mmap_from_coherent(struct dma_coherent_mem *mem,$/;"	f	file:
__dma_release_from_coherent	dma/coherent.c	/^static int __dma_release_from_coherent(struct dma_coherent_mem *mem,$/;"	f	file:
__do_adjtimex	time/ntp.c	/^int __do_adjtimex(struct __kernel_timex *txc, const struct timespec64 *ts,$/;"	f
__do_proc_dointvec	sysctl.c	/^static int __do_proc_dointvec(void *tbl_data, struct ctl_table *table,$/;"	f	file:
__do_proc_douintvec	sysctl.c	/^static int __do_proc_douintvec(void *tbl_data, struct ctl_table *table,$/;"	f	file:
__do_proc_doulongvec_minmax	sysctl.c	/^static int __do_proc_doulongvec_minmax(void *data, struct ctl_table *table, int write,$/;"	f	file:
__do_softirq	softirq.c	/^asmlinkage __visible void __softirq_entry __do_softirq(void)$/;"	f
__down	locking/semaphore.c	/^static noinline void __sched __down(struct semaphore *sem)$/;"	f	file:
__down_common	locking/semaphore.c	/^static inline int __sched __down_common(struct semaphore *sem, long state,$/;"	f	file:
__down_interruptible	locking/semaphore.c	/^static noinline int __sched __down_interruptible(struct semaphore *sem)$/;"	f	file:
__down_killable	locking/semaphore.c	/^static noinline int __sched __down_killable(struct semaphore *sem)$/;"	f	file:
__down_read	locking/rwsem.c	/^inline void __down_read(struct rw_semaphore *sem)$/;"	f
__down_read_killable	locking/rwsem.c	/^static inline int __down_read_killable(struct rw_semaphore *sem)$/;"	f	file:
__down_read_trylock	locking/rwsem.c	/^static inline int __down_read_trylock(struct rw_semaphore *sem)$/;"	f	file:
__down_timeout	locking/semaphore.c	/^static noinline int __sched __down_timeout(struct semaphore *sem, long timeout)$/;"	f	file:
__down_trylock_console_sem	printk/printk.c	/^static int __down_trylock_console_sem(unsigned long ip)$/;"	f	file:
__down_write	locking/rwsem.c	/^static inline void __down_write(struct rw_semaphore *sem)$/;"	f	file:
__down_write_killable	locking/rwsem.c	/^static inline int __down_write_killable(struct rw_semaphore *sem)$/;"	f	file:
__down_write_trylock	locking/rwsem.c	/^static inline int __down_write_trylock(struct rw_semaphore *sem)$/;"	f	file:
__downgrade_write	locking/rwsem.c	/^static inline void __downgrade_write(struct rw_semaphore *sem)$/;"	f	file:
__dynamic_array	trace/trace.h	64;"	d
__dynamic_array	trace/trace.h	65;"	d
__dynamic_array	trace/trace_export.c	125;"	d	file:
__dynamic_array	trace/trace_export.c	126;"	d	file:
__dynamic_array	trace/trace_export.c	164;"	d	file:
__dynamic_array	trace/trace_export.c	165;"	d	file:
__dynamic_array	trace/trace_export.c	53;"	d	file:
__dynamic_array	trace/trace_export.c	54;"	d	file:
__empty_callchain	events/core.c	/^static struct perf_callchain_entry __empty_callchain = { .nr = 0, };$/;"	v	typeref:struct:perf_callchain_entry	file:
__enable_irq	irq/manage.c	/^void __enable_irq(struct irq_desc *desc)$/;"	f
__enable_runtime	sched/rt.c	/^static void __enable_runtime(struct rq *rq)$/;"	f	file:
__enable_trace_kprobe	trace/trace_kprobe.c	/^static inline int __enable_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
__enqueue_dl_entity	sched/deadline.c	/^static void __enqueue_dl_entity(struct sched_dl_entity *dl_se)$/;"	f	file:
__enqueue_entity	sched/fair.c	/^static void __enqueue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
__enqueue_rt_entity	sched/rt.c	/^static void __enqueue_rt_entity(struct sched_rt_entity *rt_se, unsigned int flags)$/;"	f	file:
__entry	trace/trace_export.c	149;"	d	file:
__entry	trace/trace_export.c	150;"	d	file:
__env	debug/kdb/kdb_main.c	/^static char *__env[] = {$/;"	v	file:
__event_trigger_test_discard	trace/trace.h	/^__event_trigger_test_discard(struct trace_event_file *file,$/;"	f
__exit_signal	exit.c	/^static void __exit_signal(struct task_struct *tsk)$/;"	f	file:
__exit_umh	umh.c	/^void __exit_umh(struct task_struct *tsk)$/;"	f
__field	trace/trace.h	49;"	d
__field	trace/trace.h	50;"	d
__field	trace/trace_export.c	152;"	d	file:
__field	trace/trace_export.c	153;"	d	file:
__field	trace/trace_export.c	41;"	d	file:
__field	trace/trace_export.c	42;"	d	file:
__field	trace/trace_export.c	82;"	d	file:
__field	trace/trace_export.c	83;"	d	file:
__field_desc	trace/trace.h	55;"	d
__field_desc	trace/trace.h	56;"	d
__field_desc	trace/trace_export.c	155;"	d	file:
__field_desc	trace/trace_export.c	156;"	d	file:
__field_desc	trace/trace_export.c	44;"	d	file:
__field_desc	trace/trace_export.c	45;"	d	file:
__field_desc	trace/trace_export.c	91;"	d	file:
__field_desc	trace/trace_export.c	92;"	d	file:
__field_struct	trace/trace.h	52;"	d
__field_struct	trace/trace.h	53;"	d
__field_struct	trace/trace_export.c	38;"	d	file:
__field_struct	trace/trace_export.c	39;"	d	file:
__find_event_field	trace/trace_events.c	/^__find_event_field(struct list_head *head, char *name)$/;"	f	file:
__find_event_file	trace/trace_events.c	/^__find_event_file(struct trace_array *tr, const char *system, const char *event)$/;"	f
__find_good_pkt_pointers	bpf/verifier.c	/^static void __find_good_pkt_pointers(struct bpf_func_state *state,$/;"	f	file:
__find_next_entry	trace/trace.c	/^__find_next_entry(struct trace_iterator *iter, int *ent_cpu,$/;"	f	file:
__find_resource	resource.c	/^static int __find_resource(struct resource *root, struct resource *old,$/;"	f	file:
__find_swevent_head	events/core.c	/^__find_swevent_head(struct swevent_hlist *hlist, u64 type, u32 event_id)$/;"	f	file:
__find_uprobe	events/uprobes.c	/^static struct uprobe *__find_uprobe(struct inode *inode, loff_t offset)$/;"	f	file:
__finish_swait	sched/swait.c	/^void __finish_swait(struct swait_queue_head *q, struct swait_queue *wait)$/;"	f
__fire_sched_in_preempt_notifiers	sched/core.c	/^static void __fire_sched_in_preempt_notifiers(struct task_struct *curr)$/;"	f	file:
__fire_sched_out_preempt_notifiers	sched/core.c	/^__fire_sched_out_preempt_notifiers(struct task_struct *curr,$/;"	f	file:
__flush_itimer_signals	signal.c	/^static void __flush_itimer_signals(struct sigpending *pending)$/;"	f	file:
__flush_work	workqueue.c	/^static bool __flush_work(struct work_struct *work, bool from_cancel)$/;"	f	file:
__fraction	power/snapshot.c	/^static unsigned long __fraction(u64 x, u64 multiplier, u64 base)$/;"	f	file:
__free_domain_allocs	sched/topology.c	/^static void __free_domain_allocs(struct s_data *d, enum s_alloc what,$/;"	f	file:
__free_filter	trace/trace_events_filter.c	/^static void __free_filter(struct event_filter *filter)$/;"	f	file:
__free_ftrace_hash_rcu	trace/ftrace.c	/^static void __free_ftrace_hash_rcu(struct rcu_head *rcu)$/;"	f	file:
__free_insn_slot	kprobes.c	/^void __free_insn_slot(struct kprobe_insn_cache *c,$/;"	f
__free_irq	irq/manage.c	/^static struct irqaction *__free_irq(struct irq_desc *desc, void *dev_id)$/;"	f	file:
__free_percpu_irq	irq/manage.c	/^static struct irqaction *__free_percpu_irq(unsigned int irq, void __percpu *dev_id)$/;"	f	file:
__free_subsystem_filter	trace/trace_events_filter.c	/^static inline void __free_subsystem_filter(struct trace_event_file *file)$/;"	f	file:
__free_zapped_classes	locking/lockdep.c	/^static void __free_zapped_classes(struct pending_free *pf)$/;"	f	file:
__ftrace_clear_event_pids	trace/trace_events.c	/^static void __ftrace_clear_event_pids(struct trace_array *tr)$/;"	f	file:
__ftrace_event_enable_disable	trace/trace_events.c	/^static int __ftrace_event_enable_disable(struct trace_event_file *file,$/;"	f	file:
__ftrace_function_set_filter	trace/trace_events_filter.c	/^static int __ftrace_function_set_filter(int filter, char *buf, int len,$/;"	f	file:
__ftrace_graph_entry	trace/fgraph.c	/^static trace_func_graph_ent_t __ftrace_graph_entry = ftrace_graph_entry_stub;$/;"	v	file:
__ftrace_graph_open	trace/ftrace.c	/^__ftrace_graph_open(struct inode *inode, struct file *file,$/;"	f	file:
__ftrace_hash_move	trace/ftrace.c	/^__ftrace_hash_move(struct ftrace_hash *src)$/;"	f	file:
__ftrace_hash_rec_update	trace/ftrace.c	/^static bool __ftrace_hash_rec_update(struct ftrace_ops *ops,$/;"	f	file:
__ftrace_hash_update_ipmodify	trace/ftrace.c	/^static int __ftrace_hash_update_ipmodify(struct ftrace_ops *ops,$/;"	f	file:
__ftrace_lookup_ip	trace/ftrace.c	/^__ftrace_lookup_ip(struct ftrace_hash *hash, unsigned long ip)$/;"	f	file:
__ftrace_modify_code	trace/ftrace.c	/^static int __ftrace_modify_code(void *data)$/;"	f	file:
__ftrace_ops_list_func	trace/ftrace.c	/^__ftrace_ops_list_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
__ftrace_replace_code	trace/ftrace.c	/^__ftrace_replace_code(struct dyn_ftrace *rec, bool enable)$/;"	f	file:
__ftrace_set_clr_event	trace/trace_events.c	/^static int __ftrace_set_clr_event(struct trace_array *tr, const char *match,$/;"	f	file:
__ftrace_set_clr_event_nolock	trace/trace_events.c	/^__ftrace_set_clr_event_nolock(struct trace_array *tr, const char *match,$/;"	f	file:
__ftrace_trace_stack	trace/trace.c	/^static inline void __ftrace_trace_stack(struct ring_buffer *buffer,$/;"	f	file:
__ftrace_trace_stack	trace/trace.c	/^static void __ftrace_trace_stack(struct ring_buffer *buffer,$/;"	f	file:
__ftrace_vbprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__ftrace_vbprintk);$/;"	v
__ftrace_vbprintk	trace/trace_printk.c	/^int __ftrace_vbprintk(unsigned long ip, const char *fmt, va_list ap)$/;"	f
__ftrace_vprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__ftrace_vprintk);$/;"	v
__ftrace_vprintk	trace/trace_printk.c	/^int __ftrace_vprintk(unsigned long ip, const char *fmt, va_list ap)$/;"	f
__func_get_name	bpf/disasm.c	/^static const char *__func_get_name(const struct bpf_insn_cbs *cbs,$/;"	f	file:
__func_imm_name	bpf/disasm.c	/^static const char *__func_imm_name(const struct bpf_insn_cbs *cbs,$/;"	f	file:
__g_next	trace/ftrace.c	/^__g_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
__gcov_exit	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_exit);$/;"	v
__gcov_exit	gcov/gcc_base.c	/^void __gcov_exit(void)$/;"	f
__gcov_flush	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_flush);$/;"	v
__gcov_flush	gcov/gcc_base.c	/^void __gcov_flush(void)$/;"	f
__gcov_init	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_init);$/;"	v
__gcov_init	gcov/gcc_base.c	/^void __gcov_init(struct gcov_info *info)$/;"	f
__gcov_merge_add	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_add);$/;"	v
__gcov_merge_add	gcov/gcc_base.c	/^void __gcov_merge_add(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_delta	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_delta);$/;"	v
__gcov_merge_delta	gcov/gcc_base.c	/^void __gcov_merge_delta(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_icall_topn	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_icall_topn);$/;"	v
__gcov_merge_icall_topn	gcov/gcc_base.c	/^void __gcov_merge_icall_topn(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_ior	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_ior);$/;"	v
__gcov_merge_ior	gcov/gcc_base.c	/^void __gcov_merge_ior(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_single	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_single);$/;"	v
__gcov_merge_single	gcov/gcc_base.c	/^void __gcov_merge_single(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_time_profile	gcov/gcc_base.c	/^EXPORT_SYMBOL(__gcov_merge_time_profile);$/;"	v
__gcov_merge_time_profile	gcov/gcc_base.c	/^void __gcov_merge_time_profile(gcov_type *counters, unsigned int n_counters)$/;"	f
__generic_field	trace/trace_events.c	146;"	d	file:
__get_cached_msi_msg	irq/msi.c	/^void __get_cached_msi_msg(struct msi_desc *entry, struct msi_msg *msg)$/;"	f
__get_cpu_context	events/core.c	/^__get_cpu_context(struct perf_event_context *ctx)$/;"	f	file:
__get_data_size	trace/trace_probe_tmpl.h	/^__get_data_size(struct trace_probe *tp, struct pt_regs *regs)$/;"	f
__get_insn_slot	kprobes.c	/^kprobe_opcode_t *__get_insn_slot(struct kprobe_insn_cache *c)$/;"	f
__get_key_name	locking/lockdep.c	/^const char * __get_key_name(struct lockdep_subclass_key *key, char *str)$/;"	f
__get_old_timespec32	time/time.c	/^static int __get_old_timespec32(struct timespec64 *ts64,$/;"	f	file:
__get_prog_inode	bpf/inode.c	/^static struct bpf_prog *__get_prog_inode(struct inode *inode, enum bpf_prog_type type)$/;"	f	file:
__get_safe_page	power/snapshot.c	/^static void *__get_safe_page(gfp_t gfp_mask)$/;"	f	file:
__get_seccomp_filter	seccomp.c	/^static void __get_seccomp_filter(struct seccomp_filter *filter)$/;"	f	file:
__get_system	trace/trace_events.c	/^static void __get_system(struct event_subsystem *system)$/;"	f	file:
__get_system_dir	trace/trace_events.c	/^static void __get_system_dir(struct trace_subsystem_dir *dir)$/;"	f	file:
__get_valid_kprobe	kprobes.c	/^static struct kprobe *__get_valid_kprobe(struct kprobe *p)$/;"	f	file:
__getparam_dl	sched/deadline.c	/^void __getparam_dl(struct task_struct *p, struct sched_attr *attr)$/;"	f
__group_send_sig_info	signal.c	/^__group_send_sig_info(int sig, struct kernel_siginfo *info, struct task_struct *p)$/;"	f
__gtod_offset	sched/clock.c	/^static __read_mostly u64 __gtod_offset;$/;"	v	file:
__handle_domain_irq	irq/irqdesc.c	/^int __handle_domain_irq(struct irq_domain *domain, unsigned int hwirq,$/;"	f
__handle_irq_event_percpu	irq/handle.c	/^irqreturn_t __handle_irq_event_percpu(struct irq_desc *desc, unsigned int *flags)$/;"	f
__hardpps	time/ntp.c	/^void __hardpps(const struct timespec64 *phase_ts, const struct timespec64 *raw_ts)$/;"	f
__hash_bucket_find	dma/debug.c	/^static struct dma_debug_entry *__hash_bucket_find(struct hash_bucket *bucket,$/;"	f	file:
__hrtick_restart	sched/core.c	/^static void __hrtick_restart(struct rq *rq)$/;"	f	file:
__hrtick_start	sched/core.c	/^static void __hrtick_start(void *arg)$/;"	f	file:
__hrtimer_get_next_event	time/hrtimer.c	/^__hrtimer_get_next_event(struct hrtimer_cpu_base *cpu_base, unsigned int active_mask)$/;"	f	file:
__hrtimer_get_remaining	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(__hrtimer_get_remaining);$/;"	v
__hrtimer_get_remaining	time/hrtimer.c	/^ktime_t __hrtimer_get_remaining(const struct hrtimer *timer, bool adjust)$/;"	f
__hrtimer_hres_active	time/hrtimer.c	/^static inline int __hrtimer_hres_active(struct hrtimer_cpu_base *cpu_base)$/;"	f	file:
__hrtimer_init	time/hrtimer.c	/^static void __hrtimer_init(struct hrtimer *timer, clockid_t clock_id,$/;"	f	file:
__hrtimer_next_event_base	time/hrtimer.c	/^static ktime_t __hrtimer_next_event_base(struct hrtimer_cpu_base *cpu_base,$/;"	f	file:
__hrtimer_peek_ahead_timers	time/hrtimer.c	/^static inline void __hrtimer_peek_ahead_timers(void) { }$/;"	f	file:
__hrtimer_peek_ahead_timers	time/hrtimer.c	/^static inline void __hrtimer_peek_ahead_timers(void)$/;"	f	file:
__hrtimer_run_queues	time/hrtimer.c	/^static void __hrtimer_run_queues(struct hrtimer_cpu_base *cpu_base, ktime_t now,$/;"	f	file:
__hrtimer_start_range_ns	time/hrtimer.c	/^static int __hrtimer_start_range_ns(struct hrtimer *timer, ktime_t tim,$/;"	f	file:
__htab_lru_map_lookup_elem	bpf/hashtab.c	/^static __always_inline void *__htab_lru_map_lookup_elem(struct bpf_map *map,$/;"	f	file:
__htab_lru_percpu_map_update_elem	bpf/hashtab.c	/^static int __htab_lru_percpu_map_update_elem(struct bpf_map *map, void *key,$/;"	f	file:
__htab_map_lookup_elem	bpf/hashtab.c	/^static void *__htab_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
__htab_percpu_map_update_elem	bpf/hashtab.c	/^static int __htab_percpu_map_update_elem(struct bpf_map *map, void *key,$/;"	f	file:
__init_rwsem	locking/rwsem.c	/^EXPORT_SYMBOL(__init_rwsem);$/;"	v
__init_rwsem	locking/rwsem.c	/^void __init_rwsem(struct rw_semaphore *sem, const char *name,$/;"	f
__init_srcu_struct	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(__init_srcu_struct);$/;"	v
__init_srcu_struct	rcu/srcutiny.c	/^int __init_srcu_struct(struct srcu_struct *ssp, const char *name,$/;"	f
__init_srcu_struct	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(__init_srcu_struct);$/;"	v
__init_srcu_struct	rcu/srcutree.c	/^int __init_srcu_struct(struct srcu_struct *ssp, const char *name,$/;"	f
__init_swait_queue_head	sched/swait.c	/^EXPORT_SYMBOL(__init_swait_queue_head);$/;"	v
__init_swait_queue_head	sched/swait.c	/^void __init_swait_queue_head(struct swait_queue_head *q, const char *name,$/;"	f
__init_waitqueue_head	sched/wait.c	/^EXPORT_SYMBOL(__init_waitqueue_head);$/;"	v
__init_waitqueue_head	sched/wait.c	/^void __init_waitqueue_head(struct wait_queue_head *wq_head, const char *name, struct lock_class_key *key)$/;"	f
__init_work	workqueue.c	/^EXPORT_SYMBOL_GPL(__init_work);$/;"	v
__init_work	workqueue.c	/^void __init_work(struct work_struct *work, int onstack)$/;"	f
__initdata	cgroup/cgroup.c	/^static u16 cgroup_disable_mask __initdata;$/;"	v	file:
__initdata	dma/coherent.c	/^static struct reserved_mem *dma_reserved_default_memory __initdata;$/;"	v	typeref:struct:dma_reserved_default_memory	file:
__initdata	dma/remap.c	/^static size_t atomic_pool_size __initdata = DEFAULT_DMA_COHERENT_POOL_SIZE;$/;"	v	file:
__initdata	irq/timings.c	/^static struct timings_intervals tis[] __initdata = {$/;"	v	typeref:struct:tis	file:
__initdata	irq/timings.c	/^static u64 intervals0[] __initdata = {$/;"	v	file:
__initdata	irq/timings.c	/^static u64 intervals1[] __initdata = {$/;"	v	file:
__initdata	irq/timings.c	/^static u64 intervals2[] __initdata = {$/;"	v	file:
__initdata	irq/timings.c	/^static u64 intervals3[] __initdata = {$/;"	v	file:
__initdata	irq/timings.c	/^static u64 intervals4[] __initdata = {$/;"	v	file:
__initdata	power/suspend_test.c	/^static char warn_bad_state[] __initdata =$/;"	v	file:
__initdata	power/suspend_test.c	/^static const char *test_state_label __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^bool ftrace_filter_param __initdata;$/;"	v
__initdata	trace/ftrace.c	/^static char ftrace_filter_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_graph_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_graph_notrace_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_notrace_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static struct tracer_stat function_stats __initdata = {$/;"	v	typeref:struct:function_stats	file:
__initdata	trace/ring_buffer.c	/^static bool rb_test_started __initdata;$/;"	v	file:
__initdata	trace/ring_buffer.c	/^static char rb_string[] __initdata =$/;"	v	file:
__initdata	trace/ring_buffer.c	/^static struct rb_test_data rb_data[NR_CPUS] __initdata;$/;"	v	typeref:struct:rb_data	file:
__initdata	trace/ring_buffer.c	/^static struct task_struct *rb_threads[NR_CPUS] __initdata;$/;"	v	typeref:struct:rb_threads	file:
__initdata	trace/trace.c	/^static char *trace_boot_clock __initdata;$/;"	v	file:
__initdata	trace/trace.c	/^static char bootup_tracer_buf[MAX_TRACER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace.c	/^static char trace_boot_clock_buf[MAX_TRACER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace.c	/^static char trace_boot_options_buf[MAX_TRACER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace_events.c	/^static char bootup_event_buf[COMMAND_LINE_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace_events.c	/^static struct ftrace_ops trace_ops __initdata  =$/;"	v	typeref:struct:trace_ops	file:
__initdata	trace/trace_events.c	/^static struct trace_event_file event_trace_file __initdata;$/;"	v	typeref:struct:event_trace_file	file:
__initdata	trace/trace_kprobe.c	/^static bool kprobe_boot_events_enabled __initdata;$/;"	v	file:
__initdata	trace/trace_kprobe.c	/^static char kprobe_boot_events_buf[COMMAND_LINE_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace_output.c	/^static struct trace_event *events[] __initdata = {$/;"	v	typeref:struct:events	file:
__initdata	trace/trace_selftest.c	/^static struct fgraph_ops fgraph_ops __initdata  = {$/;"	v	typeref:struct:fgraph_ops	file:
__initdata	trace/trace_stack.c	/^static char stack_trace_filter_buf[COMMAND_LINE_SIZE+1] __initdata;$/;"	v	file:
__insert_resource	resource.c	/^static struct resource * __insert_resource(struct resource *parent, struct resource *new)$/;"	f	file:
__insert_uprobe	events/uprobes.c	/^static struct uprobe *__insert_uprobe(struct uprobe *uprobe)$/;"	f	file:
__internal_add_timer	time/timer.c	/^__internal_add_timer(struct timer_base *base, struct timer_list *timer)$/;"	f	file:
__invalid_creds	cred.c	/^EXPORT_SYMBOL(__invalid_creds);$/;"	v
__invalid_creds	cred.c	/^void __invalid_creds(const struct cred *cred, const char *file, unsigned line)$/;"	f
__ipi_send_mask	irq/ipi.c	/^int __ipi_send_mask(struct irq_desc *desc, const struct cpumask *dest)$/;"	f
__ipi_send_single	irq/ipi.c	/^int __ipi_send_single(struct irq_desc *desc, unsigned int cpu)$/;"	f
__irq_alloc_descs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(__irq_alloc_descs);$/;"	v
__irq_alloc_descs	irq/irqdesc.c	/^__irq_alloc_descs(int irq, unsigned int from, unsigned int cnt, int node,$/;"	f
__irq_alloc_domain_generic_chips	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(__irq_alloc_domain_generic_chips);$/;"	v
__irq_alloc_domain_generic_chips	irq/generic-chip.c	/^int __irq_alloc_domain_generic_chips(struct irq_domain *d, int irqs_per_chip,$/;"	f
__irq_build_affinity_masks	irq/affinity.c	/^static int __irq_build_affinity_masks(unsigned int startvec,$/;"	f	file:
__irq_can_set_affinity	irq/manage.c	/^static bool __irq_can_set_affinity(struct irq_desc *desc)$/;"	f	file:
__irq_disable	irq/chip.c	/^static void __irq_disable(struct irq_desc *desc, bool mask)$/;"	f	file:
__irq_do_set_handler	irq/chip.c	/^__irq_do_set_handler(struct irq_desc *desc, irq_flow_handler_t handle,$/;"	f	file:
__irq_domain_activate_irq	irq/irqdomain.c	/^static int __irq_domain_activate_irq(struct irq_data *irqd, bool reserve)$/;"	f	file:
__irq_domain_add	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(__irq_domain_add);$/;"	v
__irq_domain_add	irq/irqdomain.c	/^struct irq_domain *__irq_domain_add(struct fwnode_handle *fwnode, int size,$/;"	f
__irq_domain_alloc_fwnode	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(__irq_domain_alloc_fwnode);$/;"	v
__irq_domain_alloc_fwnode	irq/irqdomain.c	/^struct fwnode_handle *__irq_domain_alloc_fwnode(unsigned int type, int id,$/;"	f
__irq_domain_alloc_irqs	irq/irqdomain.c	/^int __irq_domain_alloc_irqs(struct irq_domain *domain, int irq_base,$/;"	f
__irq_domain_deactivate_irq	irq/irqdomain.c	/^static void __irq_domain_deactivate_irq(struct irq_data *irq_data)$/;"	f	file:
__irq_get_desc_lock	irq/irqdesc.c	/^__irq_get_desc_lock(unsigned int irq, unsigned long *flags, bool bus,$/;"	f
__irq_get_domain_generic_chip	irq/generic-chip.c	/^__irq_get_domain_generic_chip(struct irq_domain *d, unsigned int hw_irq)$/;"	f	file:
__irq_get_irqchip_state	irq/manage.c	/^int __irq_get_irqchip_state(struct irq_data *data, enum irqchip_irq_state which,$/;"	f
__irq_move_irq	irq/migration.c	/^void __irq_move_irq(struct irq_data *idata)$/;"	f
__irq_put_desc_unlock	irq/irqdesc.c	/^void __irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags, bool bus)$/;"	f
__irq_set_affinity	irq/manage.c	/^int __irq_set_affinity(unsigned int irq, const struct cpumask *mask, bool force)$/;"	f
__irq_set_handler	irq/chip.c	/^EXPORT_SYMBOL_GPL(__irq_set_handler);$/;"	v
__irq_set_handler	irq/chip.c	/^__irq_set_handler(unsigned int irq, irq_flow_handler_t handle, int is_chained,$/;"	f
__irq_set_trigger	irq/manage.c	/^int __irq_set_trigger(struct irq_desc *desc, unsigned long flags)$/;"	f
__irq_startup	irq/chip.c	/^static int __irq_startup(struct irq_desc *desc)$/;"	f	file:
__irq_startup_managed	irq/chip.c	/^__irq_startup_managed(struct irq_desc *desc, struct cpumask *aff, bool force)$/;"	f	file:
__irq_timings_next_event	irq/timings.c	/^static u64 __irq_timings_next_event(struct irqt_stat *irqs, int irq, u64 now)$/;"	f	file:
__irq_timings_store	irq/timings.c	/^static __always_inline void __irq_timings_store(int irq, struct irqt_stat *irqs,$/;"	f	file:
__irq_wake_thread	irq/handle.c	/^void __irq_wake_thread(struct irq_desc *desc, struct irqaction *action)$/;"	f
__irq_work_queue_local	irq_work.c	/^static void __irq_work_queue_local(struct irq_work *work)$/;"	f	file:
__irqd_to_state	irq/internals.h	195;"	d
__irqd_to_state	irq/internals.h	250;"	d
__irqsoff_tracer_init	trace/trace_irqsoff.c	/^static int __irqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
__irqsoff_tracer_reset	trace/trace_irqsoff.c	/^static void __irqsoff_tracer_reset(struct trace_array *tr)$/;"	f	file:
__is_insn_slot_addr	kprobes.c	/^bool __is_insn_slot_addr(struct kprobe_insn_cache *c, unsigned long addr)$/;"	f
__is_module_percpu_address	module.c	/^bool __is_module_percpu_address(unsigned long addr, unsigned long *can_addr)$/;"	f
__is_pointer_value	bpf/verifier.c	/^static bool __is_pointer_value(bool allow_ptr_leaks,$/;"	f	file:
__is_ram	resource.c	/^static int __is_ram(unsigned long pfn, unsigned long nr_pages, void *arg)$/;"	f	file:
__isleap	time/timeconv.c	/^static int __isleap(long year)$/;"	f	file:
__jump_label_mod_text_reserved	jump_label.c	/^static int __jump_label_mod_text_reserved(void *start, void *end)$/;"	f	file:
__jump_label_mod_update	jump_label.c	/^static void __jump_label_mod_update(struct static_key *key)$/;"	f	file:
__jump_label_text_reserved	jump_label.c	/^static int __jump_label_text_reserved(struct jump_entry *iter_start,$/;"	f	file:
__jump_label_update	jump_label.c	/^static void __jump_label_update(struct static_key *key,$/;"	f	file:
__kernel_text_address	extable.c	/^int __kernel_text_address(unsigned long addr)$/;"	f
__kill_pgrp_info	signal.c	/^int __kill_pgrp_info(int sig, struct kernel_siginfo *info, struct pid *pgrp)$/;"	f
__klp_disable_patch	livepatch/core.c	/^static int __klp_disable_patch(struct klp_patch *patch)$/;"	f	file:
__klp_enable_patch	livepatch/core.c	/^static int __klp_enable_patch(struct klp_patch *patch)$/;"	f	file:
__klp_free_funcs	livepatch/core.c	/^static void __klp_free_funcs(struct klp_object *obj, bool nops_only)$/;"	f	file:
__klp_free_objects	livepatch/core.c	/^static void __klp_free_objects(struct klp_patch *patch, bool nops_only)$/;"	f	file:
__klp_shadow_get_or_alloc	livepatch/shadow.c	/^static void *__klp_shadow_get_or_alloc(void *obj, unsigned long id,$/;"	f	file:
__klp_unpatch_object	livepatch/patch.c	/^static void __klp_unpatch_object(struct klp_object *obj, bool nops_only)$/;"	f	file:
__klp_unpatch_objects	livepatch/patch.c	/^static void __klp_unpatch_objects(struct klp_patch *patch, bool nops_only)$/;"	f	file:
__kprobe_trace_func	trace/trace_kprobe.c	/^__kprobe_trace_func(struct trace_kprobe *tk, struct pt_regs *regs,$/;"	f	file:
__kretprobe_trace_func	trace/trace_kprobe.c	/^__kretprobe_trace_func(struct trace_kprobe *tk, struct kretprobe_instance *ri,$/;"	f	file:
__kstat_incr_irqs_this_cpu	irq/internals.h	/^static inline void __kstat_incr_irqs_this_cpu(struct irq_desc *desc)$/;"	f
__ksymtab	debug/kdb/kdb_private.h	/^typedef struct __ksymtab {$/;"	s
__kthread_bind	kthread.c	/^static void __kthread_bind(struct task_struct *p, unsigned int cpu, long state)$/;"	f	file:
__kthread_bind_mask	kthread.c	/^static void __kthread_bind_mask(struct task_struct *p, const struct cpumask *mask, long state)$/;"	f	file:
__kthread_cancel_work	kthread.c	/^static bool __kthread_cancel_work(struct kthread_work *work, bool is_dwork,$/;"	f	file:
__kthread_cancel_work_sync	kthread.c	/^static bool __kthread_cancel_work_sync(struct kthread_work *work, bool is_dwork)$/;"	f	file:
__kthread_create_on_node	kthread.c	/^struct task_struct *__kthread_create_on_node(int (*threadfn)(void *data),$/;"	f
__kthread_create_worker	kthread.c	/^__kthread_create_worker(int cpu, unsigned int flags,$/;"	f
__kthread_init_worker	kthread.c	/^EXPORT_SYMBOL_GPL(__kthread_init_worker);$/;"	v
__kthread_init_worker	kthread.c	/^void __kthread_init_worker(struct kthread_worker *worker,$/;"	f
__kthread_parkme	kthread.c	/^static void __kthread_parkme(struct kthread *self)$/;"	f	file:
__kthread_queue_delayed_work	kthread.c	/^void __kthread_queue_delayed_work(struct kthread_worker *worker,$/;"	f
__kthread_should_park	kthread.c	/^EXPORT_SYMBOL_GPL(__kthread_should_park);$/;"	v
__kthread_should_park	kthread.c	/^bool __kthread_should_park(struct task_struct *k)$/;"	f
__ktime_divns	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(__ktime_divns);$/;"	v
__ktime_divns	time/hrtimer.c	/^s64 __ktime_divns(const ktime_t kt, s64 div)$/;"	f
__ktime_get_fast_ns	time/timekeeping.c	/^static __always_inline u64 __ktime_get_fast_ns(struct tk_fast *tkf)$/;"	f	file:
__ktime_get_real_fast_ns	time/timekeeping.c	/^static __always_inline u64 __ktime_get_real_fast_ns(struct tk_fast *tkf)$/;"	f	file:
__ktime_get_real_seconds	time/timekeeping.c	/^time64_t __ktime_get_real_seconds(void)$/;"	f
__local_bh_disable_ip	softirq.c	/^EXPORT_SYMBOL(__local_bh_disable_ip);$/;"	v
__local_bh_disable_ip	softirq.c	/^void __local_bh_disable_ip(unsigned long ip, unsigned int cnt)$/;"	f
__local_bh_enable	softirq.c	/^static void __local_bh_enable(unsigned int cnt)$/;"	f	file:
__local_bh_enable_ip	softirq.c	/^EXPORT_SYMBOL(__local_bh_enable_ip);$/;"	v
__local_bh_enable_ip	softirq.c	/^void __local_bh_enable_ip(unsigned long ip, unsigned int cnt)$/;"	f
__local_list_add_pending	bpf/bpf_lru_list.c	/^static void __local_list_add_pending(struct bpf_lru *lru,$/;"	f	file:
__local_list_flush	bpf/bpf_lru_list.c	/^static void __local_list_flush(struct bpf_lru_list *l,$/;"	f	file:
__local_list_pop_free	bpf/bpf_lru_list.c	/^__local_list_pop_free(struct bpf_lru_locallist *loc_l)$/;"	f	file:
__local_list_pop_pending	bpf/bpf_lru_list.c	/^__local_list_pop_pending(struct bpf_lru *lru, struct bpf_lru_locallist *loc_l)$/;"	f	file:
__lock_acquire	locking/lockdep.c	/^static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,$/;"	f	file:
__lock_acquired	locking/lockdep.c	/^__lock_acquired(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_contended	locking/lockdep.c	/^__lock_contended(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_downgrade	locking/lockdep.c	/^static int __lock_downgrade(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_is_held	locking/lockdep.c	/^int __lock_is_held(const struct lockdep_map *lock, int read)$/;"	f	file:
__lock_pin_lock	locking/lockdep.c	/^static struct pin_cookie __lock_pin_lock(struct lockdep_map *lock)$/;"	f	file:
__lock_release	locking/lockdep.c	/^__lock_release(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_repin_lock	locking/lockdep.c	/^static void __lock_repin_lock(struct lockdep_map *lock, struct pin_cookie cookie)$/;"	f	file:
__lock_set_class	locking/lockdep.c	/^__lock_set_class(struct lockdep_map *lock, const char *name,$/;"	f	file:
__lock_task_sighand	signal.c	/^struct sighand_struct *__lock_task_sighand(struct task_struct *tsk,$/;"	f
__lock_timer	time/posix-timers.c	/^static struct k_itimer *__lock_timer(timer_t timer_id, unsigned long *flags)$/;"	f	file:
__lock_unpin_lock	locking/lockdep.c	/^static void __lock_unpin_lock(struct lockdep_map *lock, struct pin_cookie cookie)$/;"	f	file:
__lockdep_count_backward_deps	locking/lockdep.c	/^static unsigned long __lockdep_count_backward_deps(struct lock_list *this)$/;"	f	file:
__lockdep_count_forward_deps	locking/lockdep.c	/^static unsigned long __lockdep_count_forward_deps(struct lock_list *this)$/;"	f	file:
__lockdep_free_key_range	locking/lockdep.c	/^static void __lockdep_free_key_range(struct pending_free *pf, void *start,$/;"	f	file:
__lockdep_no_validate__	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(__lockdep_no_validate__);$/;"	v
__lockdep_no_validate__	locking/lockdep.c	/^struct lock_class_key __lockdep_no_validate__;$/;"	v	typeref:struct:lock_class_key
__lockdep_reset_lock	locking/lockdep.c	/^static void __lockdep_reset_lock(struct pending_free *pf,$/;"	f	file:
__lockevent_add	locking/lock_events.h	/^static inline void __lockevent_add(enum lock_events event, int inc)$/;"	f
__lockevent_inc	locking/lock_events.h	/^static inline void __lockevent_inc(enum lock_events event, bool cond)$/;"	f
__lockup_detector_cleanup	watchdog.c	/^static void __lockup_detector_cleanup(void)$/;"	f	file:
__mark_chain_precision	bpf/verifier.c	/^static int __mark_chain_precision(struct bpf_verifier_env *env, int regno,$/;"	f	file:
__mark_ptr_or_null_regs	bpf/verifier.c	/^static void __mark_ptr_or_null_regs(struct bpf_func_state *state, u32 id,$/;"	f	file:
__mark_reg_const_zero	bpf/verifier.c	/^static void __mark_reg_const_zero(struct bpf_reg_state *reg)$/;"	f	file:
__mark_reg_known	bpf/verifier.c	/^static void __mark_reg_known(struct bpf_reg_state *reg, u64 imm)$/;"	f	file:
__mark_reg_known_zero	bpf/verifier.c	/^static void __mark_reg_known_zero(struct bpf_reg_state *reg)$/;"	f	file:
__mark_reg_not_init	bpf/verifier.c	/^static void __mark_reg_not_init(struct bpf_reg_state *reg)$/;"	f	file:
__mark_reg_unbounded	bpf/verifier.c	/^static void __mark_reg_unbounded(struct bpf_reg_state *reg)$/;"	f	file:
__mark_reg_unknown	bpf/verifier.c	/^static void __mark_reg_unknown(struct bpf_reg_state *reg)$/;"	f	file:
__maybe_unused	sched/sched-pelt.h	/^static const u32 runnable_avg_yN_inv[] __maybe_unused = {$/;"	v
__might_sleep	sched/core.c	/^EXPORT_SYMBOL(__might_sleep);$/;"	v
__might_sleep	sched/core.c	/^void __might_sleep(const char *file, int line, int preempt_offset)$/;"	f
__migrate_swap_task	sched/core.c	/^static void __migrate_swap_task(struct task_struct *p, int cpu)$/;"	f	file:
__migrate_task	sched/core.c	/^static struct rq *__migrate_task(struct rq *rq, struct rq_flags *rf,$/;"	f	file:
__mmdrop	fork.c	/^EXPORT_SYMBOL_GPL(__mmdrop);$/;"	v
__mmdrop	fork.c	/^void __mmdrop(struct mm_struct *mm)$/;"	f
__mmiowb_state	locking/spinlock.c	/^EXPORT_PER_CPU_SYMBOL(__mmiowb_state);$/;"	v
__mmput	fork.c	/^static inline void __mmput(struct mm_struct *mm)$/;"	f	file:
__mod_timer	time/timer.c	/^__mod_timer(struct timer_list *timer, unsigned long expires, unsigned int options)$/;"	f	file:
__mod_tree_insert	module.c	/^static noinline void __mod_tree_insert(struct mod_tree_node *node)$/;"	f	file:
__mod_tree_remove	module.c	/^static void __mod_tree_remove(struct mod_tree_node *node)$/;"	f	file:
__mod_tree_size	module.c	/^static __always_inline unsigned long __mod_tree_size(struct latch_tree_node *n)$/;"	f	file:
__mod_tree_val	module.c	/^static __always_inline unsigned long __mod_tree_val(struct latch_tree_node *n)$/;"	f	file:
__mod_update_bounds	module.c	/^static void __mod_update_bounds(void *base, unsigned int size)$/;"	f	file:
__modify_bp_slot	events/hw_breakpoint.c	/^static int __modify_bp_slot(struct perf_event *bp, u64 old_type, u64 new_type)$/;"	f	file:
__modinit	params.c	566;"	d	file:
__modinit	params.c	568;"	d	file:
__module_address	module.c	/^EXPORT_SYMBOL_GPL(__module_address);$/;"	v
__module_address	module.c	/^struct module *__module_address(unsigned long addr)$/;"	f
__module_get	module.c	/^EXPORT_SYMBOL(__module_get);$/;"	v
__module_get	module.c	/^void __module_get(struct module *module)$/;"	f
__module_put_and_exit	module.c	/^EXPORT_SYMBOL(__module_put_and_exit);$/;"	v
__module_put_and_exit	module.c	/^void __noreturn __module_put_and_exit(struct module *mod, long code)$/;"	f
__module_text_address	module.c	/^EXPORT_SYMBOL_GPL(__module_text_address);$/;"	v
__module_text_address	module.c	/^struct module *__module_text_address(unsigned long addr)$/;"	f
__modver_version_show	params.c	/^ssize_t __modver_version_show(struct module_attribute *mattr,$/;"	f
__mon_yday	time/timeconv.c	/^static const unsigned short __mon_yday[2][13] = {$/;"	v	file:
__msecs_to_jiffies	time/time.c	/^EXPORT_SYMBOL(__msecs_to_jiffies);$/;"	v
__msecs_to_jiffies	time/time.c	/^unsigned long __msecs_to_jiffies(const unsigned int m)$/;"	f
__mutex_add_waiter	locking/mutex.c	/^__mutex_add_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f	file:
__mutex_clear_flag	locking/mutex.c	/^static inline void __mutex_clear_flag(struct mutex *lock, unsigned long flag)$/;"	f	file:
__mutex_handoff	locking/mutex.c	/^static void __mutex_handoff(struct mutex *lock, struct task_struct *task)$/;"	f	file:
__mutex_init	locking/mutex.c	/^EXPORT_SYMBOL(__mutex_init);$/;"	v
__mutex_init	locking/mutex.c	/^__mutex_init(struct mutex *lock, const char *name, struct lock_class_key *key)$/;"	f
__mutex_lock	locking/mutex.c	/^__mutex_lock(struct mutex *lock, long state, unsigned int subclass,$/;"	f	file:
__mutex_lock_common	locking/mutex.c	/^__mutex_lock_common(struct mutex *lock, long state, unsigned int subclass,$/;"	f	file:
__mutex_lock_interruptible_slowpath	locking/mutex.c	/^__mutex_lock_interruptible_slowpath(struct mutex *lock)$/;"	f	file:
__mutex_lock_killable_slowpath	locking/mutex.c	/^__mutex_lock_killable_slowpath(struct mutex *lock)$/;"	f	file:
__mutex_lock_slowpath	locking/mutex.c	/^__mutex_lock_slowpath(struct mutex *lock)$/;"	f	file:
__mutex_set_flag	locking/mutex.c	/^static inline void __mutex_set_flag(struct mutex *lock, unsigned long flag)$/;"	f	file:
__mutex_trylock	locking/mutex.c	/^static inline bool __mutex_trylock(struct mutex *lock)$/;"	f	file:
__mutex_trylock_fast	locking/mutex.c	/^static __always_inline bool __mutex_trylock_fast(struct mutex *lock)$/;"	f	file:
__mutex_trylock_or_owner	locking/mutex.c	/^static inline struct task_struct *__mutex_trylock_or_owner(struct mutex *lock)$/;"	f	file:
__mutex_unlock_fast	locking/mutex.c	/^static __always_inline bool __mutex_unlock_fast(struct mutex *lock)$/;"	f	file:
__mutex_unlock_slowpath	locking/mutex.c	/^static noinline void __sched __mutex_unlock_slowpath(struct mutex *lock, unsigned long ip)$/;"	f	file:
__mutex_waiter_is_first	locking/mutex.c	/^static inline bool __mutex_waiter_is_first(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f	file:
__need_more_worker	workqueue.c	/^static bool __need_more_worker(struct worker_pool *pool)$/;"	f	file:
__nenv	debug/kdb/kdb_main.c	/^static const int __nenv = ARRAY_SIZE(__env);$/;"	v	file:
__net_initdata	audit.c	/^static struct pernet_operations audit_net_ops __net_initdata = {$/;"	v	typeref:struct:audit_net_ops	file:
__next	trace/trace_stack.c	/^__next(struct seq_file *m, loff_t *pos)$/;"	f	file:
__next_base	time/hrtimer.c	/^__next_base(struct hrtimer_cpu_base *cpu_base, unsigned int *active)$/;"	f	file:
__next_timer_interrupt	time/timer.c	/^static unsigned long __next_timer_interrupt(struct timer_base *base)$/;"	f	file:
__nkdb_err	debug/kdb/kdb_main.c	/^static const int __nkdb_err = ARRAY_SIZE(kdbmsgs);$/;"	v	file:
__normal_prio	sched/core.c	/^static inline int __normal_prio(struct task_struct *p)$/;"	f	file:
__nosavedata	power/hibernate.c	/^__visible int in_suspend __nosavedata;$/;"	v
__note_gp_changes	rcu/tree.c	/^static bool __note_gp_changes(struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
__orderly_poweroff	reboot.c	/^static int __orderly_poweroff(bool force)$/;"	f	file:
__orderly_reboot	reboot.c	/^static int __orderly_reboot(void)$/;"	f	file:
__output_custom	events/internal.h	/^__output_custom(struct perf_output_handle *handle, perf_copy_f copy_func,$/;"	f
__owner_flags	locking/mutex.c	/^static inline unsigned long __owner_flags(unsigned long owner)$/;"	f	file:
__owner_task	locking/mutex.c	/^static inline struct task_struct *__owner_task(unsigned long owner)$/;"	f	file:
__packed	power/snapshot.c	/^} __packed;$/;"	v	typeref:struct:linked_page
__packed	power/swap.c	/^} __packed;$/;"	v	typeref:struct:swsusp_header
__packed	power/user.c	/^} __packed;$/;"	v	typeref:struct:compat_resume_swap_area
__pad	module_signing.c	/^	u8	__pad[3];$/;"	m	struct:module_signature	file:
__padata_add_cpu	padata.c	/^static int __padata_add_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
__padata_free	padata.c	/^static void __padata_free(struct padata_instance *pinst)$/;"	f	file:
__padata_list_init	padata.c	/^static void __padata_list_init(struct padata_list *pd_list)$/;"	f	file:
__padata_remove_cpu	padata.c	/^static int __padata_remove_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
__padata_set_cpumasks	padata.c	/^static int __padata_set_cpumasks(struct padata_instance *pinst,$/;"	f	file:
__padata_start	padata.c	/^static void __padata_start(struct padata_instance *pinst)$/;"	f	file:
__padata_stop	padata.c	/^static void __padata_stop(struct padata_instance *pinst)$/;"	f	file:
__parse_bitfield_probe_arg	trace/trace_probe.c	/^static int __parse_bitfield_probe_arg(const char *bf,$/;"	f	file:
__parse_crashkernel	crash_core.c	/^static int __init __parse_crashkernel(char *cmdline,$/;"	f	file:
__pause_named_trigger	trace/trace_events_trigger.c	/^static void __pause_named_trigger(struct event_trigger_data *data, bool pause)$/;"	f	file:
__pcpu_freelist_pop	bpf/percpu_freelist.c	/^struct pcpu_freelist_node *__pcpu_freelist_pop(struct pcpu_freelist *s)$/;"	f
__pcpu_freelist_push	bpf/percpu_freelist.c	/^void __pcpu_freelist_push(struct pcpu_freelist *s,$/;"	f
__percpu_down_read	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(__percpu_down_read);$/;"	v
__percpu_down_read	locking/percpu-rwsem.c	/^int __percpu_down_read(struct percpu_rw_semaphore *sem, int try)$/;"	f
__percpu_init_rwsem	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(__percpu_init_rwsem);$/;"	v
__percpu_init_rwsem	locking/percpu-rwsem.c	/^int __percpu_init_rwsem(struct percpu_rw_semaphore *sem,$/;"	f
__percpu_up_read	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(__percpu_up_read);$/;"	v
__percpu_up_read	locking/percpu-rwsem.c	/^void __percpu_up_read(struct percpu_rw_semaphore *sem)$/;"	f
__perf_addr_filters_adjust	events/core.c	/^static void __perf_addr_filters_adjust(struct perf_event *event, void *data)$/;"	f	file:
__perf_cgroup_move	events/core.c	/^static int __perf_cgroup_move(void *info)$/;"	f	file:
__perf_effective_state	events/core.c	/^__perf_effective_state(struct perf_event *event)$/;"	f	file:
__perf_event__output_id_sample	events/core.c	/^static void __perf_event__output_id_sample(struct perf_output_handle *handle,$/;"	f	file:
__perf_event_account_interrupt	events/core.c	/^__perf_event_account_interrupt(struct perf_event *event, int throttle)$/;"	f	file:
__perf_event_ctx_lock_double	events/core.c	/^__perf_event_ctx_lock_double(struct perf_event *group_leader,$/;"	f	file:
__perf_event_disable	events/core.c	/^static void __perf_event_disable(struct perf_event *event,$/;"	f	file:
__perf_event_enable	events/core.c	/^static void __perf_event_enable(struct perf_event *event,$/;"	f	file:
__perf_event_exit_context	events/core.c	/^static void __perf_event_exit_context(void *__info)$/;"	f	file:
__perf_event_header__init_id	events/core.c	/^static void __perf_event_header__init_id(struct perf_event_header *header,$/;"	f	file:
__perf_event_header_size	events/core.c	/^static void __perf_event_header_size(struct perf_event *event, u64 sample_type)$/;"	f	file:
__perf_event_init_context	events/core.c	/^static void __perf_event_init_context(struct perf_event_context *ctx)$/;"	f	file:
__perf_event_output	events/core.c	/^__perf_event_output(struct perf_event *event,$/;"	f	file:
__perf_event_output_stop	events/core.c	/^static void __perf_event_output_stop(struct perf_event *event, void *data)$/;"	f	file:
__perf_event_overflow	events/core.c	/^static int __perf_event_overflow(struct perf_event *event,$/;"	f	file:
__perf_event_period	events/core.c	/^static void __perf_event_period(struct perf_event *event,$/;"	f	file:
__perf_event_read	events/core.c	/^static void __perf_event_read(void *info)$/;"	f	file:
__perf_event_read_cpu	events/core.c	/^static int __perf_event_read_cpu(struct perf_event *event, int event_cpu)$/;"	f	file:
__perf_event_read_size	events/core.c	/^static void __perf_event_read_size(struct perf_event *event, int nr_siblings)$/;"	f	file:
__perf_event_read_value	events/core.c	/^static u64 __perf_event_read_value(struct perf_event *event, u64 *enabled, u64 *running)$/;"	f	file:
__perf_event_stop	events/core.c	/^static int __perf_event_stop(void *info)$/;"	f	file:
__perf_event_sync_stat	events/core.c	/^static void __perf_event_sync_stat(struct perf_event *event,$/;"	f	file:
__perf_event_task_sched_in	events/core.c	/^void __perf_event_task_sched_in(struct task_struct *prev,$/;"	f
__perf_event_task_sched_out	events/core.c	/^void __perf_event_task_sched_out(struct task_struct *task,$/;"	f
__perf_install_in_context	events/core.c	/^static int  __perf_install_in_context(void *info)$/;"	f	file:
__perf_mmap_to_page	events/ring_buffer.c	/^__perf_mmap_to_page(struct ring_buffer *rb, unsigned long pgoff)$/;"	f	file:
__perf_mux_hrtimer_init	events/core.c	/^static void __perf_mux_hrtimer_init(struct perf_cpu_context *cpuctx, int cpu)$/;"	f	file:
__perf_output_begin	events/ring_buffer.c	/^__perf_output_begin(struct perf_output_handle *handle,$/;"	f	file:
__perf_pmu_output_stop	events/core.c	/^static int __perf_pmu_output_stop(void *info)$/;"	f	file:
__perf_read	events/core.c	/^__perf_read(struct perf_event *event, char __user *buf, size_t count)$/;"	f	file:
__perf_read_group_add	events/core.c	/^static int __perf_read_group_add(struct perf_event *leader,$/;"	f	file:
__perf_remove_from_context	events/core.c	/^__perf_remove_from_context(struct perf_event *event,$/;"	f	file:
__perf_sw_event	events/core.c	/^void __perf_sw_event(u32 event_id, u64 nr, struct pt_regs *regs, u64 addr)$/;"	f
__perf_update_times	events/core.c	/^__perf_update_times(struct perf_event *event, u64 now, u64 *enabled, u64 *running)$/;"	f	file:
__pick_first_entity	sched/fair.c	/^struct sched_entity *__pick_first_entity(struct cfs_rq *cfs_rq)$/;"	f
__pick_last_entity	sched/fair.c	/^struct sched_entity *__pick_last_entity(struct cfs_rq *cfs_rq)$/;"	f
__pick_next_entity	sched/fair.c	/^static struct sched_entity *__pick_next_entity(struct sched_entity *se)$/;"	f	file:
__pm_notifier_call_chain	power/main.c	/^int __pm_notifier_call_chain(unsigned long val, int nr_to_call, int *nr_calls)$/;"	f
__pm_pr_dbg	power/main.c	/^void __pm_pr_dbg(bool defer, const char *fmt, ...)$/;"	f
__pm_qos_update_request	power/qos.c	/^static void __pm_qos_update_request(struct pm_qos_request *req,$/;"	f	file:
__pmu_filter_match	events/core.c	/^static inline int __pmu_filter_match(struct perf_event *event)$/;"	f	file:
__posix_timers_find	time/posix-timers.c	/^static struct k_itimer *__posix_timers_find(struct hlist_head *head,$/;"	f	file:
__prctl_check_order	sys.c	1924;"	d	file:
__prctl_check_order	sys.c	1934;"	d	file:
__prepare_optimized_kprobe	kprobes.c	/^void __prepare_optimized_kprobe(struct optimized_kprobe *op, struct kprobe *p)$/;"	f	file:
__prepare_to_swait	sched/swait.c	/^static void __prepare_to_swait(struct swait_queue_head *q, struct swait_queue *wait)$/;"	f	file:
__print_graph_headers_flags	trace/trace_functions_graph.c	/^static void __print_graph_headers_flags(struct trace_array *tr,$/;"	f	file:
__print_lock_name	locking/lockdep.c	/^static void __print_lock_name(struct lock_class *class)$/;"	f	file:
__printk_ratelimit	printk/printk.c	/^EXPORT_SYMBOL(__printk_ratelimit);$/;"	v
__printk_ratelimit	printk/printk.c	/^int __printk_ratelimit(const char *func)$/;"	f
__printk_safe_enter	printk/printk_safe.c	/^void __printk_safe_enter(void)$/;"	f
__printk_safe_exit	printk/printk_safe.c	/^void __printk_safe_exit(void)$/;"	f
__printk_safe_flush	printk/printk_safe.c	/^static void __printk_safe_flush(struct irq_work *work)$/;"	f	file:
__profile_flip_buffers	profile.c	/^static void __profile_flip_buffers(void *unused)$/;"	f	file:
__ptrace_detach	ptrace.c	/^static bool __ptrace_detach(struct task_struct *tracer, struct task_struct *p)$/;"	f	file:
__ptrace_link	ptrace.c	/^void __ptrace_link(struct task_struct *child, struct task_struct *new_parent,$/;"	f
__ptrace_may_access	ptrace.c	/^static int __ptrace_may_access(struct task_struct *task, unsigned int mode)$/;"	f	file:
__ptrace_unlink	ptrace.c	/^void __ptrace_unlink(struct task_struct *child)$/;"	f
__put_chunk	audit_tree.c	/^static void __put_chunk(struct rcu_head *rcu)$/;"	f	file:
__put_cred	cred.c	/^EXPORT_SYMBOL(__put_cred);$/;"	v
__put_cred	cred.c	/^void __put_cred(struct cred *cred)$/;"	f
__put_old_timespec32	time/time.c	/^static int __put_old_timespec32(const struct timespec64 *ts64,$/;"	f	file:
__put_seccomp_filter	seccomp.c	/^static void __put_seccomp_filter(struct seccomp_filter *orig)$/;"	f	file:
__put_system	trace/trace_events.c	/^static void __put_system(struct event_subsystem *system)$/;"	f	file:
__put_system_dir	trace/trace_events.c	/^static void __put_system_dir(struct trace_subsystem_dir *dir)$/;"	f	file:
__put_task_struct	fork.c	/^EXPORT_SYMBOL_GPL(__put_task_struct);$/;"	v
__put_task_struct	fork.c	/^void __put_task_struct(struct task_struct *tsk)$/;"	f
__put_user_ns	user_namespace.c	/^EXPORT_SYMBOL(__put_user_ns);$/;"	v
__put_user_ns	user_namespace.c	/^void __put_user_ns(struct user_namespace *ns)$/;"	f
__pv_init_lock_hash	locking/qspinlock_paravirt.h	/^void __init __pv_init_lock_hash(void)$/;"	f
__pv_init_node	locking/qspinlock.c	/^static __always_inline void __pv_init_node(struct mcs_spinlock *node) { }$/;"	f	file:
__pv_kick	locking/qspinlock_stat.h	/^static inline void __pv_kick(int cpu)$/;"	f
__pv_kick_node	locking/qspinlock.c	/^static __always_inline void __pv_kick_node(struct qspinlock *lock,$/;"	f	file:
__pv_queued_spin_unlock	locking/qspinlock_paravirt.h	/^__visible void __pv_queued_spin_unlock(struct qspinlock *lock)$/;"	f
__pv_queued_spin_unlock_slowpath	locking/qspinlock_paravirt.h	/^__pv_queued_spin_unlock_slowpath(struct qspinlock *lock, u8 locked)$/;"	f
__pv_wait	locking/qspinlock_stat.h	/^static inline void __pv_wait(u8 *ptr, u8 val)$/;"	f
__pv_wait_head_or_lock	locking/qspinlock.c	/^static __always_inline u32  __pv_wait_head_or_lock(struct qspinlock *lock,$/;"	f	file:
__pv_wait_node	locking/qspinlock.c	/^static __always_inline void __pv_wait_node(struct mcs_spinlock *node,$/;"	f	file:
__queue_delayed_work	workqueue.c	/^static void __queue_delayed_work(int cpu, struct workqueue_struct *wq,$/;"	f	file:
__queue_map_get	bpf/queue_stack_maps.c	/^static int __queue_map_get(struct bpf_map *map, void *value, bool delete)$/;"	f	file:
__queue_me	futex.c	/^static inline void __queue_me(struct futex_q *q, struct futex_hash_bucket *hb)$/;"	f	file:
__queue_work	workqueue.c	/^static void __queue_work(int cpu, struct workqueue_struct *wq,$/;"	f	file:
__raise_softirq_irqoff	softirq.c	/^void __raise_softirq_irqoff(unsigned int nr)$/;"	f
__randomize_layout	futex.c	/^} __randomize_layout;$/;"	v	typeref:struct:futex_pi_state
__randomize_layout	futex.c	/^} __randomize_layout;$/;"	v	typeref:struct:futex_q
__raw_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__raw_notifier_call_chain);$/;"	v
__raw_notifier_call_chain	notifier.c	/^int __raw_notifier_call_chain(struct raw_notifier_head *nh,$/;"	f
__raw_spin_lock_init	locking/spinlock_debug.c	/^EXPORT_SYMBOL(__raw_spin_lock_init);$/;"	v
__raw_spin_lock_init	locking/spinlock_debug.c	/^void __raw_spin_lock_init(raw_spinlock_t *lock, const char *name,$/;"	f
__rb_allocate_pages	trace/ring_buffer.c	/^static int __rb_allocate_pages(long nr_pages, struct list_head *pages, int cpu)$/;"	f	file:
__rb_free_aux	events/ring_buffer.c	/^static void __rb_free_aux(struct ring_buffer *rb)$/;"	f	file:
__rb_page_index	trace/ring_buffer.c	/^static __always_inline void *__rb_page_index(struct buffer_page *bpage, unsigned index)$/;"	f	file:
__rb_reserve_next	trace/ring_buffer.c	/^__rb_reserve_next(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
__rcu_read_lock	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(__rcu_read_lock);$/;"	v
__rcu_read_lock	rcu/tree_plugin.h	/^void __rcu_read_lock(void)$/;"	f
__rcu_read_unlock	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(__rcu_read_unlock);$/;"	v
__rcu_read_unlock	rcu/tree_plugin.h	/^void __rcu_read_unlock(void)$/;"	f
__rcu_reclaim	rcu/rcu.h	/^static inline bool __rcu_reclaim(const char *rn, struct rcu_head *head)$/;"	f
__read_mostly	audit_tree.c	/^static struct kmem_cache *audit_tree_mark_cachep __read_mostly;$/;"	v	typeref:struct:audit_tree_mark_cachep	file:
__read_mostly	bpf/core.c	/^int bpf_jit_enable   __read_mostly = IS_BUILTIN(CONFIG_BPF_JIT_ALWAYS_ON);$/;"	v
__read_mostly	bpf/core.c	/^int bpf_jit_harden   __read_mostly;$/;"	v
__read_mostly	bpf/core.c	/^int bpf_jit_kallsyms __read_mostly;$/;"	v
__read_mostly	bpf/core.c	/^long bpf_jit_limit   __read_mostly;$/;"	v
__read_mostly	bpf/syscall.c	/^int sysctl_unprivileged_bpf_disabled __read_mostly;$/;"	v
__read_mostly	cgroup/cgroup.c	/^bool cgroup_debug __read_mostly;$/;"	v
__read_mostly	cgroup/cgroup.c	/^static bool cgroup_sk_alloc_disabled __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cgroup.c	/^static bool use_task_css_set_links __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cgroup.c	/^static u16 have_canfork_callback __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cgroup.c	/^static u16 have_exit_callback __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cgroup.c	/^static u16 have_fork_callback __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cgroup.c	/^static u16 have_release_callback __read_mostly;$/;"	v	file:
__read_mostly	cgroup/cpuset.c	/^int cpuset_memory_pressure_enabled __read_mostly;$/;"	v
__read_mostly	cpu.c	/^enum cpuhp_smt_control cpu_smt_control __read_mostly = CPU_SMT_ENABLED;$/;"	v	typeref:enum:cpu_smt_control
__read_mostly	cpu.c	/^struct cpumask __cpu_active_mask __read_mostly;$/;"	v	typeref:struct:__cpu_active_mask
__read_mostly	cpu.c	/^struct cpumask __cpu_online_mask __read_mostly;$/;"	v	typeref:struct:__cpu_online_mask
__read_mostly	cpu.c	/^struct cpumask __cpu_possible_mask __read_mostly$/;"	v	typeref:struct:__cpu_possible_mask
__read_mostly	cpu.c	/^struct cpumask __cpu_possible_mask __read_mostly;$/;"	v	typeref:struct:__cpu_possible_mask
__read_mostly	cpu.c	/^struct cpumask __cpu_present_mask __read_mostly;$/;"	v	typeref:struct:__cpu_present_mask
__read_mostly	delayacct.c	/^int delayacct_on __read_mostly = 1;	\/* Delay accounting turned on\/off *\/$/;"	v
__read_mostly	dma/debug.c	/^static bool dma_debug_initialized __read_mostly;$/;"	v	file:
__read_mostly	dma/debug.c	/^static bool global_disable __read_mostly;$/;"	v	file:
__read_mostly	dma/debug.c	/^static char                  current_driver_name[NAME_MAX_LEN] __read_mostly;$/;"	v	file:
__read_mostly	dma/debug.c	/^static struct device_driver *current_driver                    __read_mostly;$/;"	v	typeref:struct:current_driver	file:
__read_mostly	dma/debug.c	/^static u32 show_all_errors __read_mostly;$/;"	v	file:
__read_mostly	events/callchain.c	/^int sysctl_perf_event_max_contexts_per_stack __read_mostly = PERF_MAX_CONTEXTS_PER_STACK;$/;"	v
__read_mostly	events/callchain.c	/^int sysctl_perf_event_max_stack __read_mostly = PERF_MAX_STACK_DEPTH;$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_cpu_time_max_percent __read_mostly = DEFAULT_CPU_TIME_MAX_PERCENT;$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_mlock __read_mostly = 512 + (PAGE_SIZE \/ 1024); \/* 'free' kiB per user *\/$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_paranoid __read_mostly = 2;$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_sample_rate __read_mostly	= DEFAULT_MAX_SAMPLE_RATE;$/;"	v
__read_mostly	events/core.c	/^static atomic_t nr_bpf_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_comm_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_freq_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_ksymbol_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_mmap_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_namespaces_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_switch_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_task_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static int max_samples_per_tick __read_mostly	= DIV_ROUND_UP(DEFAULT_MAX_SAMPLE_RATE, HZ);$/;"	v	file:
__read_mostly	events/core.c	/^static int perf_sample_allowed_ns __read_mostly =$/;"	v	file:
__read_mostly	events/core.c	/^static int perf_sample_period_ns __read_mostly	= DEFAULT_SAMPLE_PERIOD_NS;$/;"	v	file:
__read_mostly	fork.c	/^int arch_task_struct_size __read_mostly;$/;"	v
__read_mostly	irq/spurious.c	/^bool noirqdebug __read_mostly;$/;"	v
__read_mostly	irq/spurious.c	/^static int irqfixup __read_mostly;$/;"	v	file:
__read_mostly	kcmp.c	/^static unsigned long cookies[KCMP_TYPES][2] __read_mostly;$/;"	v	file:
__read_mostly	kprobes.c	/^static struct ftrace_ops kprobe_ftrace_ops __read_mostly = {$/;"	v	typeref:struct:kprobe_ftrace_ops	file:
__read_mostly	locking/qspinlock_paravirt.h	/^static unsigned int pv_lock_hash_bits __read_mostly;$/;"	v
__read_mostly	panic.c	/^int panic_on_warn __read_mostly;$/;"	v
__read_mostly	power/main.c	/^bool pm_debug_messages_on __read_mostly;$/;"	v
__read_mostly	printk/printk.c	/^atomic_t ignore_console_lock_warning __read_mostly = ATOMIC_INIT(0);$/;"	v
__read_mostly	printk/printk.c	/^int printk_delay_msec __read_mostly;$/;"	v
__read_mostly	printk/printk_safe.c	/^static int printk_safe_irq_ready __read_mostly;$/;"	v	file:
__read_mostly	profile.c	/^int prof_on __read_mostly;$/;"	v
__read_mostly	rcu/srcutiny.c	/^int rcu_scheduler_active __read_mostly;$/;"	v
__read_mostly	rcu/tree.c	/^int rcu_num_lvls __read_mostly = RCU_NUM_LVLS;$/;"	v
__read_mostly	rcu/tree.c	/^int rcu_num_nodes __read_mostly = NUM_RCU_NODES; \/* Total # rcu_nodes in use. *\/$/;"	v
__read_mostly	rcu/tree.c	/^int rcu_scheduler_active __read_mostly;$/;"	v
__read_mostly	rcu/tree.c	/^static int rcu_scheduler_fully_active __read_mostly;$/;"	v	file:
__read_mostly	rcu/tree_stall.h	/^int sysctl_panic_on_rcu_stall __read_mostly;$/;"	v
__read_mostly	rcu/update.c	/^int rcu_cpu_stall_suppress __read_mostly; \/* 1 = suppress stall warnings. *\/$/;"	v
__read_mostly	rcu/update.c	/^int rcu_cpu_stall_timeout __read_mostly = CONFIG_RCU_CPU_STALL_TIMEOUT;$/;"	v
__read_mostly	rcu/update.c	/^static int rcu_task_stall_timeout __read_mostly = RCU_TASK_STALL_TIMEOUT;$/;"	v	file:
__read_mostly	sched/core.c	/^bool sched_smp_initialized __read_mostly;$/;"	v
__read_mostly	sched/core.c	/^static struct kmem_cache *task_group_cache __read_mostly;$/;"	v	typeref:struct:task_group_cache	file:
__read_mostly	sched/fair.c	/^unsigned int sysctl_sched_child_runs_first __read_mostly;$/;"	v
__read_mostly	sched/psi.c	/^static int psi_bug __read_mostly;$/;"	v	file:
__read_mostly	sched/psi.c	/^static u64 psi_period __read_mostly;$/;"	v	file:
__read_mostly	signal.c	/^int print_fatal_signals __read_mostly;$/;"	v
__read_mostly	smp.c	/^unsigned int nr_cpu_ids __read_mostly = NR_CPUS;$/;"	v
__read_mostly	time/hrtimer.c	/^static bool hrtimer_hres_enabled __read_mostly  = true;$/;"	v	file:
__read_mostly	time/hrtimer.c	/^unsigned int hrtimer_resolution __read_mostly = LOW_RES_NSEC;$/;"	v
__read_mostly	time/tick-common.c	/^int tick_do_timer_cpu __read_mostly = TICK_DO_TIMER_BOOT;$/;"	v
__read_mostly	time/tick-common.c	/^static int tick_do_timer_boot_cpu __read_mostly = -1;$/;"	v	file:
__read_mostly	time/tick-sched.c	/^bool tick_nohz_enabled __read_mostly  = true;$/;"	v
__read_mostly	time/tick-sched.c	/^unsigned long tick_nohz_active  __read_mostly;$/;"	v
__read_mostly	trace/blktrace.c	/^static bool blk_tracer_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/blktrace.c	/^static struct tracer blk_tracer __read_mostly = {$/;"	v	typeref:struct:blk_tracer	file:
__read_mostly	trace/blktrace.c	/^static unsigned int blktrace_seq __read_mostly = 1;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^ftrace_func_t ftrace_trace_function __read_mostly = ftrace_stub;$/;"	v
__read_mostly	trace/ftrace.c	/^int ftrace_enabled __read_mostly;$/;"	v
__read_mostly	trace/ftrace.c	/^static int ftrace_disabled __read_mostly;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^static int ftrace_profile_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops ftrace_profile_ops __read_mostly = {$/;"	v	typeref:struct:ftrace_profile_ops	file:
__read_mostly	trace/ftrace.c	/^struct ftrace_ops *function_trace_op __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:function_trace_op
__read_mostly	trace/ftrace.c	/^struct ftrace_ops __rcu *ftrace_ops_list __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:ftrace_ops_list
__read_mostly	trace/ftrace.c	/^struct ftrace_ops ftrace_list_end __read_mostly = {$/;"	v	typeref:struct:ftrace_list_end
__read_mostly	trace/trace.c	/^static atomic_t trace_record_taskinfo_disabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace.c	/^static struct trace_export __rcu *ftrace_exports_list __read_mostly;$/;"	v	typeref:struct:ftrace_exports_list	file:
__read_mostly	trace/trace.c	/^static struct tracer		*trace_types __read_mostly;$/;"	v	typeref:struct:trace_types	file:
__read_mostly	trace/trace_branch.c	/^static int branch_tracing_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_branch.c	/^static struct tracer branch_trace __read_mostly =$/;"	v	typeref:struct:branch_trace	file:
__read_mostly	trace/trace_hwlat.c	/^static struct tracer hwlat_tracer __read_mostly =$/;"	v	typeref:struct:hwlat_tracer	file:
__read_mostly	trace/trace_irqsoff.c	/^static int				tracer_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_irqsoff.c	/^static int trace_type __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct trace_array		*irqsoff_trace __read_mostly;$/;"	v	typeref:struct:irqsoff_trace	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer irqsoff_tracer __read_mostly =$/;"	v	typeref:struct:irqsoff_tracer	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer preemptirqsoff_tracer __read_mostly =$/;"	v	typeref:struct:preemptirqsoff_tracer	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer preemptoff_tracer __read_mostly =$/;"	v	typeref:struct:preemptoff_tracer	file:
__read_mostly	trace/trace_mmiotrace.c	/^static struct tracer mmio_tracer __read_mostly =$/;"	v	typeref:struct:mmio_tracer	file:
__read_mostly	trace/trace_nop.c	/^struct tracer nop_trace __read_mostly =$/;"	v	typeref:struct:nop_trace
__read_mostly	trace/trace_output.c	/^static struct hlist_head event_hash[EVENT_HASHSIZE] __read_mostly;$/;"	v	typeref:struct:event_hash	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct tracer wakeup_dl_tracer __read_mostly =$/;"	v	typeref:struct:wakeup_dl_tracer	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct tracer wakeup_rt_tracer __read_mostly =$/;"	v	typeref:struct:wakeup_rt_tracer	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct tracer wakeup_tracer __read_mostly =$/;"	v	typeref:struct:wakeup_tracer	file:
__read_mostly	trace/trace_stack.c	/^static struct ftrace_ops trace_ops __read_mostly =$/;"	v	typeref:struct:trace_ops	file:
__read_mostly	user_namespace.c	/^static struct kmem_cache *user_ns_cachep __read_mostly;$/;"	v	typeref:struct:user_ns_cachep	file:
__read_mostly	watchdog.c	/^static bool softlockup_initialized __read_mostly;$/;"	v	file:
__read_mostly	watchdog.c	/^static struct cpumask watchdog_allowed_mask __read_mostly;$/;"	v	typeref:struct:watchdog_allowed_mask	file:
__read_mostly	watchdog.c	/^struct cpumask watchdog_cpumask __read_mostly;$/;"	v	typeref:struct:watchdog_cpumask
__read_mostly	watchdog_hld.c	/^static ktime_t watchdog_hrtimer_sample_threshold __read_mostly;$/;"	v	file:
__read_mostly	workqueue.c	/^struct workqueue_struct *system_freezable_power_efficient_wq __read_mostly;$/;"	v	typeref:struct:system_freezable_power_efficient_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_freezable_wq __read_mostly;$/;"	v	typeref:struct:system_freezable_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_highpri_wq __read_mostly;$/;"	v	typeref:struct:system_highpri_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_long_wq __read_mostly;$/;"	v	typeref:struct:system_long_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_power_efficient_wq __read_mostly;$/;"	v	typeref:struct:system_power_efficient_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_unbound_wq __read_mostly;$/;"	v	typeref:struct:system_unbound_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_wq __read_mostly;$/;"	v	typeref:struct:system_wq
__refill_cfs_bandwidth_runtime	sched/fair.c	/^void __refill_cfs_bandwidth_runtime(struct cfs_bandwidth *cfs_b)$/;"	f
__refrigerator	freezer.c	/^EXPORT_SYMBOL(__refrigerator);$/;"	v
__refrigerator	freezer.c	/^bool __refrigerator(bool check_kthr_stop)$/;"	f
__reg_bound_offset	bpf/verifier.c	/^static void __reg_bound_offset(struct bpf_reg_state *reg)$/;"	f	file:
__reg_combine_min_max	bpf/verifier.c	/^static void __reg_combine_min_max(struct bpf_reg_state *src_reg,$/;"	f	file:
__reg_deduce_bounds	bpf/verifier.c	/^static void __reg_deduce_bounds(struct bpf_reg_state *reg)$/;"	f	file:
__register_event	trace/trace_events.c	/^__register_event(struct trace_event_call *call, struct module *mod)$/;"	f	file:
__register_ftrace_function	trace/ftrace.c	/^int __register_ftrace_function(struct ftrace_ops *ops)$/;"	f
__register_nosave_region	power/snapshot.c	/^void __init __register_nosave_region(unsigned long start_pfn,$/;"	f
__register_trace_kprobe	trace/trace_kprobe.c	/^static int __register_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
__relay_reset	relay.c	/^static void __relay_reset(struct rchan_buf *buf, unsigned int init)$/;"	f	file:
__relay_set_buf_dentry	relay.c	/^static void __relay_set_buf_dentry(void *info)$/;"	f	file:
__release_bp_slot	events/hw_breakpoint.c	/^static void __release_bp_slot(struct perf_event *bp, u64 bp_type)$/;"	f	file:
__release_child_resources	resource.c	/^static void __release_child_resources(struct resource *r)$/;"	f	file:
__release_region	resource.c	/^EXPORT_SYMBOL(__release_region);$/;"	v
__release_region	resource.c	/^void __release_region(struct resource *parent, resource_size_t start,$/;"	f
__release_resource	resource.c	/^static int __release_resource(struct resource *old, bool release_child)$/;"	f	file:
__releases	kprobes.c	/^__releases(hlist_lock)$/;"	f
__releases	locking/locktorture.c	/^__releases(torture_rwlock)$/;"	f
__releases	locking/locktorture.c	/^__releases(torture_spinlock)$/;"	f
__releases	locking/locktorture.c	/^__releases(torture_ww_mutex_0)$/;"	f
__releases	locking/locktorture.c	/^static void torture_mutex_unlock(void) __releases(torture_mutex)$/;"	f
__releases	locking/locktorture.c	/^static void torture_percpu_rwsem_up_read(void) __releases(pcpu_rwsem)$/;"	f
__releases	locking/locktorture.c	/^static void torture_percpu_rwsem_up_write(void) __releases(pcpu_rwsem)$/;"	f
__releases	locking/locktorture.c	/^static void torture_rtmutex_unlock(void) __releases(torture_rtmutex)$/;"	f
__releases	locking/locktorture.c	/^static void torture_rwlock_read_unlock(void) __releases(torture_rwlock)$/;"	f
__releases	locking/locktorture.c	/^static void torture_rwlock_write_unlock(void) __releases(torture_rwlock)$/;"	f
__releases	locking/locktorture.c	/^static void torture_rwsem_up_read(void) __releases(torture_rwsem)$/;"	f
__releases	locking/locktorture.c	/^static void torture_rwsem_up_write(void) __releases(torture_rwsem)$/;"	f
__releases	locking/locktorture.c	/^static void torture_spin_lock_write_unlock(void) __releases(torture_spinlock)$/;"	f
__releases	rcu/rcuperf.c	/^static void rcu_perf_read_unlock(int idx) __releases(RCU)$/;"	f
__releases	rcu/rcuperf.c	/^static void srcu_perf_read_unlock(int idx) __releases(srcu_ctlp)$/;"	f
__releases	rcu/rcutorture.c	/^static void rcu_torture_read_unlock(int idx) __releases(RCU)$/;"	f
__releases	rcu/rcutorture.c	/^static void rcu_torture_read_unlock_trivial(int idx) __releases(RCU)$/;"	f
__releases	rcu/rcutorture.c	/^static void srcu_torture_read_unlock(int idx) __releases(srcu_ctlp)$/;"	f
__releases	resource.c	/^	__releases(resource_lock)$/;"	f
__releases	trace/ftrace.c	/^	__releases(RCU)$/;"	f
__releases	trace/trace_events.c	/^	__releases(RCU)$/;"	f
__remove_filter	trace/trace_events_filter.c	/^static inline void __remove_filter(struct trace_event_file *file)$/;"	f	file:
__remove_hrtimer	time/hrtimer.c	/^static void __remove_hrtimer(struct hrtimer *timer,$/;"	f	file:
__remove_instance	trace/trace.c	/^static int __remove_instance(struct trace_array *tr)$/;"	f	file:
__replace_page	events/uprobes.c	/^static int __replace_page(struct vm_area_struct *vma, unsigned long addr,$/;"	f	file:
__report_allowed	events/core.c	/^static u64 __report_allowed;$/;"	v	file:
__report_avg	events/core.c	/^static u64 __report_avg;$/;"	v	file:
__report_bad_irq	irq/spurious.c	/^static void __report_bad_irq(struct irq_desc *desc, irqreturn_t action_ret)$/;"	f	file:
__request_module	kmod.c	/^EXPORT_SYMBOL(__request_module);$/;"	v
__request_module	kmod.c	/^int __request_module(bool wait, const char *fmt, ...)$/;"	f
__request_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(__request_percpu_irq);$/;"	v
__request_percpu_irq	irq/manage.c	/^int __request_percpu_irq(unsigned int irq, irq_handler_t handler,$/;"	f
__request_region	resource.c	/^EXPORT_SYMBOL(__request_region);$/;"	v
__request_region	resource.c	/^struct resource * __request_region(struct resource *parent,$/;"	f
__request_resource	resource.c	/^static struct resource * __request_resource(struct resource *root, struct resource *new)$/;"	f	file:
__reserve_bp_slot	events/hw_breakpoint.c	/^static int __reserve_bp_slot(struct perf_event *bp, u64 bp_type)$/;"	f	file:
__reserve_region_with_split	resource.c	/^__reserve_region_with_split(struct resource *root, resource_size_t start,$/;"	f	file:
__reset_stat_session	trace/trace_stat.c	/^static void __reset_stat_session(struct stat_session *session)$/;"	f	file:
__return_cfs_rq_runtime	sched/fair.c	/^static void __return_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
__ring_buffer_alloc	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(__ring_buffer_alloc);$/;"	v
__ring_buffer_alloc	trace/ring_buffer.c	/^struct ring_buffer *__ring_buffer_alloc(unsigned long size, unsigned flags,$/;"	f
__ro_after_init	cpu.c	/^enum cpu_mitigations cpu_mitigations __ro_after_init = CPU_MITIGATIONS_AUTO;$/;"	v	typeref:enum:cpu_mitigations
__ro_after_init	dma/coherent.c	/^static struct dma_coherent_mem *dma_coherent_default_memory __ro_after_init;$/;"	v	typeref:struct:dma_coherent_default_memory	file:
__ro_after_init	dma/remap.c	/^static struct gen_pool *atomic_pool __ro_after_init;$/;"	v	typeref:struct:atomic_pool	file:
__ro_after_init	kheaders.c	/^static struct bin_attribute kheaders_attr __ro_after_init = {$/;"	v	typeref:struct:kheaders_attr	file:
__ro_after_init	ksysfs.c	/^static struct bin_attribute notes_attr __ro_after_init  = {$/;"	v	typeref:struct:notes_attr	file:
__ro_after_init	taskstats.c	/^static struct genl_family family __ro_after_init = {$/;"	v	typeref:struct:family	file:
__ro_after_init	utsname.c	/^static struct kmem_cache *uts_ns_cache __ro_after_init;$/;"	v	typeref:struct:uts_ns_cache	file:
__round_jiffies	time/timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies);$/;"	v
__round_jiffies	time/timer.c	/^unsigned long __round_jiffies(unsigned long j, int cpu)$/;"	f
__round_jiffies_relative	time/timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_relative);$/;"	v
__round_jiffies_relative	time/timer.c	/^unsigned long __round_jiffies_relative(unsigned long j, int cpu)$/;"	f
__round_jiffies_up	time/timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_up);$/;"	v
__round_jiffies_up	time/timer.c	/^unsigned long __round_jiffies_up(unsigned long j, int cpu)$/;"	f
__round_jiffies_up_relative	time/timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_up_relative);$/;"	v
__round_jiffies_up_relative	time/timer.c	/^unsigned long __round_jiffies_up_relative(unsigned long j, int cpu)$/;"	f
__rq_clock_broken	sched/sched.h	/^static inline u64 __rq_clock_broken(struct rq *rq)$/;"	f
__rseq_handle_notify_resume	rseq.c	/^void __rseq_handle_notify_resume(struct ksignal *ksig, struct pt_regs *regs)$/;"	f
__rt_effective_prio	sched/core.c	/^static inline int __rt_effective_prio(struct task_struct *pi_task, int prio)$/;"	f	file:
__rt_mutex_futex_trylock	locking/rtmutex.c	/^int __sched __rt_mutex_futex_trylock(struct rt_mutex *lock)$/;"	f
__rt_mutex_futex_unlock	locking/rtmutex.c	/^bool __sched __rt_mutex_futex_unlock(struct rt_mutex *lock,$/;"	f
__rt_mutex_init	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(__rt_mutex_init);$/;"	v
__rt_mutex_init	locking/rtmutex.c	/^void __rt_mutex_init(struct rt_mutex *lock, const char *name,$/;"	f
__rt_mutex_lock	locking/rtmutex.c	/^static inline void __rt_mutex_lock(struct rt_mutex *lock, unsigned int subclass)$/;"	f	file:
__rt_mutex_slowlock	locking/rtmutex.c	/^__rt_mutex_slowlock(struct rt_mutex *lock, int state,$/;"	f	file:
__rt_mutex_slowtrylock	locking/rtmutex.c	/^static inline int __rt_mutex_slowtrylock(struct rt_mutex *lock)$/;"	f	file:
__rt_mutex_start_proxy_lock	locking/rtmutex.c	/^int __rt_mutex_start_proxy_lock(struct rt_mutex *lock,$/;"	f
__rt_schedulable	sched/rt.c	/^static int __rt_schedulable(struct task_group *tg, u64 period, u64 runtime)$/;"	f	file:
__run_hrtimer	time/hrtimer.c	/^static void __run_hrtimer(struct hrtimer_cpu_base *cpu_base,$/;"	f	file:
__run_timers	time/timer.c	/^static inline void __run_timers(struct timer_base *base)$/;"	f	file:
__rwlock_init	locking/spinlock_debug.c	/^EXPORT_SYMBOL(__rwlock_init);$/;"	v
__rwlock_init	locking/spinlock_debug.c	/^void __rwlock_init(rwlock_t *lock, const char *name,$/;"	f
__rwsem_set_reader_owned	locking/rwsem.c	/^static inline void __rwsem_set_reader_owned(struct rw_semaphore *sem,$/;"	f	file:
__sanitizer_cov_trace_cmp1	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_cmp1);$/;"	v
__sanitizer_cov_trace_cmp1	kcov.c	/^void notrace __sanitizer_cov_trace_cmp1(u8 arg1, u8 arg2)$/;"	f
__sanitizer_cov_trace_cmp2	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_cmp2);$/;"	v
__sanitizer_cov_trace_cmp2	kcov.c	/^void notrace __sanitizer_cov_trace_cmp2(u16 arg1, u16 arg2)$/;"	f
__sanitizer_cov_trace_cmp4	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_cmp4);$/;"	v
__sanitizer_cov_trace_cmp4	kcov.c	/^void notrace __sanitizer_cov_trace_cmp4(u32 arg1, u32 arg2)$/;"	f
__sanitizer_cov_trace_cmp8	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_cmp8);$/;"	v
__sanitizer_cov_trace_cmp8	kcov.c	/^void notrace __sanitizer_cov_trace_cmp8(u64 arg1, u64 arg2)$/;"	f
__sanitizer_cov_trace_const_cmp1	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_const_cmp1);$/;"	v
__sanitizer_cov_trace_const_cmp1	kcov.c	/^void notrace __sanitizer_cov_trace_const_cmp1(u8 arg1, u8 arg2)$/;"	f
__sanitizer_cov_trace_const_cmp2	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_const_cmp2);$/;"	v
__sanitizer_cov_trace_const_cmp2	kcov.c	/^void notrace __sanitizer_cov_trace_const_cmp2(u16 arg1, u16 arg2)$/;"	f
__sanitizer_cov_trace_const_cmp4	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_const_cmp4);$/;"	v
__sanitizer_cov_trace_const_cmp4	kcov.c	/^void notrace __sanitizer_cov_trace_const_cmp4(u32 arg1, u32 arg2)$/;"	f
__sanitizer_cov_trace_const_cmp8	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_const_cmp8);$/;"	v
__sanitizer_cov_trace_const_cmp8	kcov.c	/^void notrace __sanitizer_cov_trace_const_cmp8(u64 arg1, u64 arg2)$/;"	f
__sanitizer_cov_trace_pc	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_pc);$/;"	v
__sanitizer_cov_trace_pc	kcov.c	/^void notrace __sanitizer_cov_trace_pc(void)$/;"	f
__sanitizer_cov_trace_switch	kcov.c	/^EXPORT_SYMBOL(__sanitizer_cov_trace_switch);$/;"	v
__sanitizer_cov_trace_switch	kcov.c	/^void notrace __sanitizer_cov_trace_switch(u64 val, u64 *cases)$/;"	f
__save_altstack	signal.c	/^int __save_altstack(stack_t __user *uss, unsigned long sp)$/;"	f
__scd_stamp	sched/clock.c	/^static void __scd_stamp(struct sched_clock_data *scd)$/;"	f	file:
__sched_clock_gtod_offset	sched/clock.c	/^static void __sched_clock_gtod_offset(void)$/;"	f	file:
__sched_clock_offset	sched/clock.c	/^__read_mostly u64 __sched_clock_offset;$/;"	v
__sched_clock_stable_early	sched/clock.c	/^static int __sched_clock_stable_early = 1;$/;"	v	file:
__sched_clock_work	sched/clock.c	/^static void __sched_clock_work(struct work_struct *work)$/;"	f	file:
__sched_fork	sched/core.c	/^static void __sched_fork(unsigned long clone_flags, struct task_struct *p)$/;"	f	file:
__sched_info_switch	sched/stats.h	/^__sched_info_switch(struct rq *rq, struct task_struct *prev, struct task_struct *next)$/;"	f
__sched_period	sched/fair.c	/^static u64 __sched_period(unsigned long nr_running)$/;"	f	file:
__sched_schedstats	sched/core.c	/^static bool __initdata __sched_schedstats = false;$/;"	v	file:
__sched_setscheduler	sched/core.c	/^static int __sched_setscheduler(struct task_struct *p,$/;"	f	file:
__schedstat_add	sched/stats.h	36;"	d
__schedstat_add	sched/stats.h	50;"	d
__schedstat_inc	sched/stats.h	34;"	d
__schedstat_inc	sched/stats.h	48;"	d
__schedstat_set	sched/stats.h	38;"	d
__schedstat_set	sched/stats.h	52;"	d
__schedule	sched/core.c	/^static void __sched notrace __schedule(bool preempt)$/;"	f	file:
__schedule_bug	sched/core.c	/^static noinline void __schedule_bug(struct task_struct *prev)$/;"	f	file:
__sdt_alloc	sched/topology.c	/^static int __sdt_alloc(const struct cpumask *cpu_map)$/;"	f	file:
__sdt_free	sched/topology.c	/^static void __sdt_free(const struct cpumask *cpu_map)$/;"	f	file:
__seccomp_filter	seccomp.c	/^static int __seccomp_filter(int this_syscall, const struct seccomp_data *sd,$/;"	f	file:
__secure_computing	seccomp.c	/^int __secure_computing(const struct seccomp_data *sd)$/;"	f
__secure_computing_strict	seccomp.c	/^static void __secure_computing_strict(int this_syscall)$/;"	f	file:
__select_bucket	bpf/hashtab.c	/^static inline struct bucket *__select_bucket(struct bpf_htab *htab, u32 hash)$/;"	f	file:
__send_signal	signal.c	/^static int __send_signal(int sig, struct kernel_siginfo *info, struct task_struct *t,$/;"	f	file:
__set_cpus_allowed_ptr	sched/core.c	/^static inline int __set_cpus_allowed_ptr(struct task_struct *p,$/;"	f	file:
__set_cpus_allowed_ptr	sched/core.c	/^static int __set_cpus_allowed_ptr(struct task_struct *p,$/;"	f	file:
__set_current_blocked	signal.c	/^void __set_current_blocked(const sigset_t *newset)$/;"	f
__set_enter_print_fmt	trace/trace_syscalls.c	/^__set_enter_print_fmt(struct syscall_metadata *entry, char *buf, int len)$/;"	f	file:
__set_print_fmt	trace/trace_probe.c	/^static int __set_print_fmt(struct trace_probe *tp, char *buf, int len,$/;"	f	file:
__set_sched_clock_stable	sched/clock.c	/^static void __set_sched_clock_stable(void)$/;"	f	file:
__set_synth_event_print_fmt	trace/trace_events_hist.c	/^static int __set_synth_event_print_fmt(struct synth_event *event,$/;"	f	file:
__set_task_blocked	signal.c	/^static void __set_task_blocked(struct task_struct *tsk, const sigset_t *newset)$/;"	f	file:
__set_task_cpu	sched/sched.h	/^static inline void __set_task_cpu(struct task_struct *p, unsigned int cpu)$/;"	f
__set_tracer_option	trace/trace.c	/^static int __set_tracer_option(struct trace_array *tr,$/;"	f	file:
__setparam_dl	sched/deadline.c	/^void __setparam_dl(struct task_struct *p, const struct sched_attr *attr)$/;"	f
__setscheduler	sched/core.c	/^static void __setscheduler(struct rq *rq, struct task_struct *p,$/;"	f	file:
__setscheduler_params	sched/core.c	/^static void __setscheduler_params(struct task_struct *p,$/;"	f	file:
__setscheduler_uclamp	sched/core.c	/^static void __setscheduler_uclamp(struct task_struct *p,$/;"	f	file:
__setup_irq	irq/manage.c	/^__setup_irq(unsigned int irq, struct irq_desc *desc, struct irqaction *new)$/;"	f	file:
__si_special	signal.c	1608;"	d	file:
__sigqueue_alloc	signal.c	/^__sigqueue_alloc(int sig, struct task_struct *t, gfp_t flags, int override_rlimit)$/;"	f	file:
__sigqueue_free	signal.c	/^static void __sigqueue_free(struct sigqueue *q)$/;"	f	file:
__smpboot_create_thread	smpboot.c	/^__smpboot_create_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
__sprint_symbol	kallsyms.c	/^static int __sprint_symbol(char *buffer, unsigned long address,$/;"	f	file:
__srcu_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__srcu_notifier_call_chain);$/;"	v
__srcu_notifier_call_chain	notifier.c	/^int __srcu_notifier_call_chain(struct srcu_notifier_head *nh,$/;"	f
__srcu_read_lock	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(__srcu_read_lock);$/;"	v
__srcu_read_lock	rcu/srcutree.c	/^int __srcu_read_lock(struct srcu_struct *ssp)$/;"	f
__srcu_read_unlock	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(__srcu_read_unlock);$/;"	v
__srcu_read_unlock	rcu/srcutiny.c	/^void __srcu_read_unlock(struct srcu_struct *ssp, int idx)$/;"	f
__srcu_read_unlock	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(__srcu_read_unlock);$/;"	v
__srcu_read_unlock	rcu/srcutree.c	/^void __srcu_read_unlock(struct srcu_struct *ssp, int idx)$/;"	f
__stack_chk_fail	panic.c	/^EXPORT_SYMBOL(__stack_chk_fail);$/;"	v
__stack_chk_fail	panic.c	/^__visible void __stack_chk_fail(void)$/;"	f
__stack_map_get	bpf/queue_stack_maps.c	/^static int __stack_map_get(struct bpf_map *map, void *value, bool delete)$/;"	f	file:
__static_key_deferred_flush	jump_label.c	/^EXPORT_SYMBOL_GPL(__static_key_deferred_flush);$/;"	v
__static_key_deferred_flush	jump_label.c	/^void __static_key_deferred_flush(void *key, struct delayed_work *work)$/;"	f
__static_key_slow_dec	jump_label.c	/^static void __static_key_slow_dec(struct static_key *key)$/;"	f	file:
__static_key_slow_dec_cpuslocked	jump_label.c	/^static void __static_key_slow_dec_cpuslocked(struct static_key *key)$/;"	f	file:
__static_key_slow_dec_deferred	jump_label.c	/^EXPORT_SYMBOL_GPL(__static_key_slow_dec_deferred);$/;"	v
__static_key_slow_dec_deferred	jump_label.c	/^void __static_key_slow_dec_deferred(struct static_key *key,$/;"	f
__stop_cpus	stop_machine.c	/^static int __stop_cpus(const struct cpumask *cpumask,$/;"	f	file:
__store_smt_control	cpu.c	/^__store_smt_control(struct device *dev, struct device_attribute *attr,$/;"	f	file:
__sub_rq_bw	sched/deadline.c	/^void __sub_rq_bw(u64 dl_bw, struct dl_rq *dl_rq)$/;"	f	file:
__sub_running_bw	sched/deadline.c	/^void __sub_running_bw(u64 dl_bw, struct dl_rq *dl_rq)$/;"	f	file:
__symbol_get	module.c	/^EXPORT_SYMBOL_GPL(__symbol_get);$/;"	v
__symbol_get	module.c	/^void *__symbol_get(const char *symbol)$/;"	f
__symbol_put	module.c	/^EXPORT_SYMBOL(__symbol_put);$/;"	v
__symbol_put	module.c	/^void __symbol_put(const char *symbol)$/;"	f
__synchronize_hardirq	irq/manage.c	/^static void __synchronize_hardirq(struct irq_desc *desc, bool sync_chip)$/;"	f	file:
__synchronize_srcu	rcu/srcutree.c	/^static void __synchronize_srcu(struct srcu_struct *ssp, bool do_norm)$/;"	f	file:
__synth_event_show	trace/trace_events_hist.c	/^static int __synth_event_show(struct seq_file *m, struct synth_event *event)$/;"	f	file:
__sys_setfsgid	sys.c	/^long __sys_setfsgid(gid_t gid)$/;"	f
__sys_setfsuid	sys.c	/^long __sys_setfsuid(uid_t uid)$/;"	f
__sys_setgid	sys.c	/^long __sys_setgid(gid_t gid)$/;"	f
__sys_setregid	sys.c	/^long __sys_setregid(gid_t rgid, gid_t egid)$/;"	f
__sys_setresgid	sys.c	/^long __sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid)$/;"	f
__sys_setresuid	sys.c	/^long __sys_setresuid(uid_t ruid, uid_t euid, uid_t suid)$/;"	f
__sys_setreuid	sys.c	/^long __sys_setreuid(uid_t ruid, uid_t euid)$/;"	f
__sys_setuid	sys.c	/^long __sys_setuid(uid_t uid)$/;"	f
__sysrq_enabled	sysctl.c	/^static int __sysrq_enabled = CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE;$/;"	v	file:
__task_pid_nr_ns	pid.c	/^EXPORT_SYMBOL(__task_pid_nr_ns);$/;"	v
__task_pid_nr_ns	pid.c	/^pid_t __task_pid_nr_ns(struct task_struct *task, enum pid_type type,$/;"	f
__tasklet_hi_schedule	softirq.c	/^EXPORT_SYMBOL(__tasklet_hi_schedule);$/;"	v
__tasklet_hi_schedule	softirq.c	/^void __tasklet_hi_schedule(struct tasklet_struct *t)$/;"	f
__tasklet_schedule	softirq.c	/^EXPORT_SYMBOL(__tasklet_schedule);$/;"	v
__tasklet_schedule	softirq.c	/^void __tasklet_schedule(struct tasklet_struct *t)$/;"	f
__tasklet_schedule_common	softirq.c	/^static void __tasklet_schedule_common(struct tasklet_struct *t,$/;"	f	file:
__test_cycle	locking/test-ww_mutex.c	/^static int __test_cycle(unsigned int nthreads)$/;"	f	file:
__test_mutex	locking/test-ww_mutex.c	/^static int __test_mutex(unsigned int flags)$/;"	f	file:
__thaw_task	freezer.c	/^void __thaw_task(struct task_struct *p)$/;"	f
__this_module	rcu/rcuperf.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	torture.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__tick_broadcast_oneshot_control	time/tick-broadcast.c	/^int __tick_broadcast_oneshot_control(enum tick_broadcast_state state)$/;"	f
__tick_broadcast_oneshot_control	time/tick-sched.h	/^__tick_broadcast_oneshot_control(enum tick_broadcast_state state)$/;"	f
__tick_nohz_idle_restart_tick	time/tick-sched.c	/^static void __tick_nohz_idle_restart_tick(struct tick_sched *ts, ktime_t now)$/;"	f	file:
__tick_nohz_idle_stop_tick	time/tick-sched.c	/^static void __tick_nohz_idle_stop_tick(struct tick_sched *ts)$/;"	f	file:
__tick_nohz_task_switch	time/tick-sched.c	/^void __tick_nohz_task_switch(void)$/;"	f
__timekeeping_inject_sleeptime	time/timekeeping.c	/^static void __timekeeping_inject_sleeptime(struct timekeeper *tk,$/;"	f	file:
__timekeeping_set_tai_offset	time/timekeeping.c	/^static void __timekeeping_set_tai_offset(struct timekeeper *tk, s32 tai_offset)$/;"	f	file:
__timespec64_to_jiffies	time/time.c	/^__timespec64_to_jiffies(u64 sec, long nsec)$/;"	f	file:
__timespec_to_jiffies	time/time.c	/^__timespec_to_jiffies(unsigned long sec, long nsec)$/;"	f	file:
__torture_print_stats	locking/locktorture.c	/^static void __torture_print_stats(char *page,$/;"	f	file:
__touch_watchdog	watchdog.c	/^static void __touch_watchdog(void)$/;"	f	file:
__trace_add_event_dirs	trace/trace_events.c	/^__trace_add_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_add_new_event	trace/trace_events.c	/^__trace_add_new_event(struct trace_event_call *call, struct trace_array *tr)$/;"	f	file:
__trace_array_put	trace/trace.c	/^static void __trace_array_put(struct trace_array *this_tr)$/;"	f	file:
__trace_array_vprintk	trace/trace.c	/^__trace_array_vprintk(struct ring_buffer *buffer,$/;"	f	file:
__trace_bprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__trace_bprintk);$/;"	v
__trace_bprintk	trace/trace_printk.c	/^int __trace_bprintk(unsigned long ip, const char *fmt, ...)$/;"	f
__trace_bputs	trace/trace.c	/^EXPORT_SYMBOL_GPL(__trace_bputs);$/;"	v
__trace_bputs	trace/trace.c	/^int __trace_bputs(unsigned long ip, const char *str)$/;"	f
__trace_buffer_lock_reserve	trace/trace.c	/^__trace_buffer_lock_reserve(struct ring_buffer *buffer,$/;"	f	file:
__trace_define_field	trace/trace_events.c	/^static int __trace_define_field(struct list_head *head, const char *type,$/;"	f	file:
__trace_early_add_event_dirs	trace/trace_events.c	/^__trace_early_add_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_early_add_events	trace/trace_events.c	/^__trace_early_add_events(struct trace_array *tr)$/;"	f	file:
__trace_early_add_new_event	trace/trace_events.c	/^__trace_early_add_new_event(struct trace_event_call *call,$/;"	f	file:
__trace_event_discard_commit	trace/trace.h	/^__trace_event_discard_commit(struct ring_buffer *buffer,$/;"	f
__trace_find_cmdline	trace/trace.c	/^static void __trace_find_cmdline(int pid, char comm[])$/;"	f	file:
__trace_function	trace/trace_irqsoff.c	/^__trace_function(struct trace_array *tr,$/;"	f	file:
__trace_function	trace/trace_irqsoff.c	279;"	d	file:
__trace_function	trace/trace_sched_wakeup.c	/^__trace_function(struct trace_array *tr,$/;"	f	file:
__trace_graph_entry	trace/trace_functions_graph.c	/^int __trace_graph_entry(struct trace_array *tr,$/;"	f
__trace_graph_function	trace/trace_functions_graph.c	/^__trace_graph_function(struct trace_array *tr,$/;"	f	file:
__trace_graph_return	trace/trace_functions_graph.c	/^void __trace_graph_return(struct trace_array *tr,$/;"	f
__trace_hardirqs_on_caller	locking/lockdep.c	/^static void __trace_hardirqs_on_caller(unsigned long ip)$/;"	f	file:
__trace_mmiotrace_map	trace/trace_mmiotrace.c	/^static void __trace_mmiotrace_map(struct trace_array *tr,$/;"	f	file:
__trace_mmiotrace_rw	trace/trace_mmiotrace.c	/^static void __trace_mmiotrace_rw(struct trace_array *tr,$/;"	f	file:
__trace_note_message	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(__trace_note_message);$/;"	v
__trace_note_message	trace/blktrace.c	/^void __trace_note_message(struct blk_trace *bt, struct blkcg *blkcg,$/;"	f
__trace_printk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__trace_printk);$/;"	v
__trace_printk	trace/trace_printk.c	/^int __trace_printk(unsigned long ip, const char *fmt, ...)$/;"	f
__trace_probe_log_err	trace/trace_probe.c	/^void __trace_probe_log_err(int offset, int err_type)$/;"	f
__trace_puts	trace/trace.c	/^EXPORT_SYMBOL_GPL(__trace_puts);$/;"	v
__trace_puts	trace/trace.c	/^int __trace_puts(unsigned long ip, const char *str, int size)$/;"	f
__trace_remove_event_call	trace/trace_events.c	/^static void __trace_remove_event_call(struct trace_event_call *call)$/;"	f	file:
__trace_remove_event_dirs	trace/trace_events.c	/^__trace_remove_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_seq_init	trace/trace_seq.c	/^static inline void __trace_seq_init(struct trace_seq *s)$/;"	f	file:
__trace_stack	trace/trace.c	/^void __trace_stack(struct trace_array *tr, unsigned long flags, int skip,$/;"	f
__trace_stack	trace/trace.h	/^static inline void __trace_stack(struct trace_array *tr, unsigned long flags,$/;"	f
__tracepoint_string	rcu/tree.h	/^static const char *tp_rcu_varname __used __tracepoint_string = rcu_name;$/;"	v
__tracer_data	trace/trace.h	840;"	d
__tracer_data	trace/trace.h	843;"	d
__tracer_data	trace/trace_functions.c	/^static struct tracer function_trace __tracer_data =$/;"	v	typeref:struct:function_trace	file:
__tracer_data	trace/trace_functions_graph.c	/^static struct tracer graph_trace __tracer_data = {$/;"	v	typeref:struct:graph_trace	file:
__tracing_map_insert	trace/tracing_map.c	/^__tracing_map_insert(struct tracing_map *map, void *key, bool lookup_only)$/;"	f	file:
__tracing_open	trace/trace.c	/^__tracing_open(struct inode *inode, struct file *file, bool snapshot)$/;"	f	file:
__tracing_resize_ring_buffer	trace/trace.c	/^static int __tracing_resize_ring_buffer(struct trace_array *tr,$/;"	f	file:
__uidhashfn	user.c	81;"	d	file:
__unhash_process	exit.c	/^static void __unhash_process(struct task_struct *p, bool group_dead)$/;"	f	file:
__unqueue_futex	futex.c	/^static void __unqueue_futex(struct futex_q *q)$/;"	f	file:
__unregister_ftrace_function	trace/ftrace.c	/^int __unregister_ftrace_function(struct ftrace_ops *ops)$/;"	f
__unregister_kprobe_bottom	kprobes.c	/^static void __unregister_kprobe_bottom(struct kprobe *p)$/;"	f	file:
__unregister_kprobe_top	kprobes.c	/^static int __unregister_kprobe_top(struct kprobe *p)$/;"	f	file:
__unregister_trace_event	trace/trace_output.c	/^int __unregister_trace_event(struct trace_event *event)$/;"	f
__unregister_trace_kprobe	trace/trace_kprobe.c	/^static void __unregister_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
__unused	sysctl_binary.c	/^	compat_ulong_t	__unused[4];$/;"	m	struct:compat_sysctl_args	file:
__up	locking/semaphore.c	/^static noinline void __sched __up(struct semaphore *sem)$/;"	f	file:
__up_console_sem	printk/printk.c	/^static void __up_console_sem(unsigned long ip)$/;"	f	file:
__up_read	locking/rwsem.c	/^inline void __up_read(struct rw_semaphore *sem)$/;"	f
__up_write	locking/rwsem.c	/^static inline void __up_write(struct rw_semaphore *sem)$/;"	f	file:
__update_cgrp_time	events/core.c	/^static inline void __update_cgrp_time(struct perf_cgroup *cgrp)$/;"	f	file:
__update_field_vars	trace/trace_events_hist.c	/^static inline void __update_field_vars(struct tracing_map_elt *elt,$/;"	f	file:
__update_gt_cputime	time/posix-cpu-timers.c	/^static inline void __update_gt_cputime(atomic64_t *cputime, u64 sum_cputime)$/;"	f	file:
__update_idle_core	sched/fair.c	/^void __update_idle_core(struct rq *rq)$/;"	f
__update_inv_weight	sched/fair.c	/^static void __update_inv_weight(struct load_weight *lw)$/;"	f	file:
__update_load_avg_blocked_se	sched/pelt.c	/^int __update_load_avg_blocked_se(u64 now, struct sched_entity *se)$/;"	f
__update_load_avg_cfs_rq	sched/pelt.c	/^int __update_load_avg_cfs_rq(u64 now, struct cfs_rq *cfs_rq)$/;"	f
__update_load_avg_se	sched/pelt.c	/^int __update_load_avg_se(u64 now, struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f
__update_max_tr	trace/trace.c	/^__update_max_tr(struct trace_array *tr, struct task_struct *tsk, int cpu)$/;"	f	file:
__update_ref_ctr	events/uprobes.c	/^__update_ref_ctr(struct mm_struct *mm, unsigned long vaddr, short d)$/;"	f	file:
__update_reg_bounds	bpf/verifier.c	/^static void __update_reg_bounds(struct bpf_reg_state *reg)$/;"	f	file:
__update_tracer_options	trace/trace.c	/^static void __update_tracer_options(struct trace_array *tr)$/;"	f	file:
__uprobe_perf_filter	trace/trace_uprobe.c	/^__uprobe_perf_filter(struct trace_uprobe_filter *filter, struct mm_struct *mm)$/;"	f	file:
__uprobe_perf_func	trace/trace_uprobe.c	/^static void __uprobe_perf_func(struct trace_uprobe *tu,$/;"	f	file:
__uprobe_register	events/uprobes.c	/^static int __uprobe_register(struct inode *inode, loff_t offset,$/;"	f	file:
__uprobe_trace_func	trace/trace_uprobe.c	/^static void __uprobe_trace_func(struct trace_uprobe *tu,$/;"	f	file:
__uprobe_unregister	events/uprobes.c	/^__uprobe_unregister(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
__usecs_to_jiffies	time/time.c	/^EXPORT_SYMBOL(__usecs_to_jiffies);$/;"	v
__usecs_to_jiffies	time/time.c	/^unsigned long __usecs_to_jiffies(const unsigned int u)$/;"	f
__used	rcu/rcuperf.mod.c	/^__used$/;"	v	file:
__used	torture.mod.c	/^__used$/;"	v	file:
__usermodehelper_disable	umh.c	/^int __usermodehelper_disable(enum umh_disable_depth depth)$/;"	f
__usermodehelper_set_disable_depth	umh.c	/^void __usermodehelper_set_disable_depth(enum umh_disable_depth depth)$/;"	f
__validate_process_creds	cred.c	/^EXPORT_SYMBOL(__validate_process_creds);$/;"	v
__validate_process_creds	cred.c	/^void __validate_process_creds(struct task_struct *tsk,$/;"	f
__var_waitqueue	sched/wait_bit.c	/^EXPORT_SYMBOL(__var_waitqueue);$/;"	v
__var_waitqueue	sched/wait_bit.c	/^wait_queue_head_t *__var_waitqueue(void *p)$/;"	f
__visit_domain_allocation_hell	sched/topology.c	/^__visit_domain_allocation_hell(struct s_data *d, const struct cpumask *cpu_map)$/;"	f	file:
__vtime_account_system	sched/cputime.c	/^static void __vtime_account_system(struct task_struct *tsk,$/;"	f	file:
__wait_for_common	sched/completion.c	/^__wait_for_common(struct completion *x,$/;"	f	file:
__wait_on_bit	sched/wait_bit.c	/^EXPORT_SYMBOL(__wait_on_bit);$/;"	v
__wait_on_bit	sched/wait_bit.c	/^__wait_on_bit(struct wait_queue_head *wq_head, struct wait_bit_queue_entry *wbq_entry,$/;"	f
__wait_on_bit_lock	sched/wait_bit.c	/^EXPORT_SYMBOL(__wait_on_bit_lock);$/;"	v
__wait_on_bit_lock	sched/wait_bit.c	/^__wait_on_bit_lock(struct wait_queue_head *wq_head, struct wait_bit_queue_entry *wbq_entry,$/;"	f
__wait_rcu_gp	rcu/update.c	/^EXPORT_SYMBOL_GPL(__wait_rcu_gp);$/;"	v
__wait_rcu_gp	rcu/update.c	/^void __wait_rcu_gp(bool checktiny, int n, call_rcu_func_t *crcu_array,$/;"	f
__wake_q_add	sched/core.c	/^static bool __wake_q_add(struct wake_q_head *head, struct task_struct *task)$/;"	f	file:
__wake_up	sched/wait.c	/^EXPORT_SYMBOL(__wake_up);$/;"	v
__wake_up	sched/wait.c	/^void __wake_up(struct wait_queue_head *wq_head, unsigned int mode,$/;"	f
__wake_up_bit	sched/wait_bit.c	/^EXPORT_SYMBOL(__wake_up_bit);$/;"	v
__wake_up_bit	sched/wait_bit.c	/^void __wake_up_bit(struct wait_queue_head *wq_head, void *word, int bit)$/;"	f
__wake_up_common	sched/wait.c	/^static int __wake_up_common(struct wait_queue_head *wq_head, unsigned int mode,$/;"	f	file:
__wake_up_common_lock	sched/wait.c	/^static void __wake_up_common_lock(struct wait_queue_head *wq_head, unsigned int mode,$/;"	f	file:
__wake_up_locked	sched/wait.c	/^EXPORT_SYMBOL_GPL(__wake_up_locked);$/;"	v
__wake_up_locked	sched/wait.c	/^void __wake_up_locked(struct wait_queue_head *wq_head, unsigned int mode, int nr)$/;"	f
__wake_up_locked_key	sched/wait.c	/^EXPORT_SYMBOL_GPL(__wake_up_locked_key);$/;"	v
__wake_up_locked_key	sched/wait.c	/^void __wake_up_locked_key(struct wait_queue_head *wq_head, unsigned int mode, void *key)$/;"	f
__wake_up_locked_key_bookmark	sched/wait.c	/^EXPORT_SYMBOL_GPL(__wake_up_locked_key_bookmark);$/;"	v
__wake_up_locked_key_bookmark	sched/wait.c	/^void __wake_up_locked_key_bookmark(struct wait_queue_head *wq_head,$/;"	f
__wake_up_parent	exit.c	/^void __wake_up_parent(struct task_struct *p, struct task_struct *parent)$/;"	f
__wake_up_sync	sched/wait.c	/^EXPORT_SYMBOL_GPL(__wake_up_sync);	\/* For internal use only *\/$/;"	v
__wake_up_sync	sched/wait.c	/^void __wake_up_sync(struct wait_queue_head *wq_head, unsigned int mode, int nr_exclusive)$/;"	f
__wake_up_sync_key	sched/wait.c	/^EXPORT_SYMBOL_GPL(__wake_up_sync_key);$/;"	v
__wake_up_sync_key	sched/wait.c	/^void __wake_up_sync_key(struct wait_queue_head *wq_head, unsigned int mode,$/;"	f
__wakelocks_gc	power/wakelock.c	/^static void __wakelocks_gc(struct work_struct *work)$/;"	f	file:
__wakeup_reset	trace/trace_sched_wakeup.c	/^static void __wakeup_reset(struct trace_array *tr)$/;"	f	file:
__wakeup_tracer_init	trace/trace_sched_wakeup.c	/^static int __wakeup_tracer_init(struct trace_array *tr)$/;"	f	file:
__walk_iomem_res_desc	resource.c	/^static int __walk_iomem_res_desc(resource_size_t start, resource_size_t end,$/;"	f	file:
__warn	panic.c	/^void __warn(const char *file, int line, void *caller, unsigned taint,$/;"	f
__warn_printk	panic.c	/^EXPORT_SYMBOL(__warn_printk);$/;"	v
__warn_printk	panic.c	/^void __warn_printk(const char *fmt, ...)$/;"	f
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_current_cgroup_id_proto __weak;$/;"	v	typeref:struct:bpf_get_current_cgroup_id_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_current_comm_proto __weak;$/;"	v	typeref:struct:bpf_get_current_comm_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_current_pid_tgid_proto __weak;$/;"	v	typeref:struct:bpf_get_current_pid_tgid_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_current_uid_gid_proto __weak;$/;"	v	typeref:struct:bpf_get_current_uid_gid_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_local_storage_proto __weak;$/;"	v	typeref:struct:bpf_get_local_storage_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_numa_node_id_proto __weak;$/;"	v	typeref:struct:bpf_get_numa_node_id_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_prandom_u32_proto __weak;$/;"	v	typeref:struct:bpf_get_prandom_u32_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_get_smp_processor_id_proto __weak;$/;"	v	typeref:struct:bpf_get_smp_processor_id_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_ktime_get_ns_proto __weak;$/;"	v	typeref:struct:bpf_ktime_get_ns_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_delete_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_delete_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_lookup_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_lookup_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_peek_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_peek_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_pop_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_pop_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_push_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_push_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_map_update_elem_proto __weak;$/;"	v	typeref:struct:bpf_map_update_elem_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_spin_lock_proto __weak;$/;"	v	typeref:struct:bpf_spin_lock_proto
__weak	bpf/core.c	/^const struct bpf_func_proto bpf_spin_unlock_proto __weak;$/;"	v	typeref:struct:bpf_spin_unlock_proto
__within_kprobe_blacklist	kprobes.c	/^static bool __within_kprobe_blacklist(unsigned long addr)$/;"	f	file:
__ww_ctx_stamp_after	locking/mutex.c	/^__ww_ctx_stamp_after(struct ww_acquire_ctx *a, struct ww_acquire_ctx *b)$/;"	f	file:
__ww_mutex_add_waiter	locking/mutex.c	/^__ww_mutex_add_waiter(struct mutex_waiter *waiter,$/;"	f	file:
__ww_mutex_check_kill	locking/mutex.c	/^__ww_mutex_check_kill(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f	file:
__ww_mutex_check_waiters	locking/mutex.c	/^__ww_mutex_check_waiters(struct mutex *lock, struct ww_acquire_ctx *ww_ctx)$/;"	f	file:
__ww_mutex_die	locking/mutex.c	/^__ww_mutex_die(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f	file:
__ww_mutex_kill	locking/mutex.c	/^__ww_mutex_kill(struct mutex *lock, struct ww_acquire_ctx *ww_ctx)$/;"	f	file:
__ww_mutex_lock	locking/mutex.c	/^__ww_mutex_lock(struct mutex *lock, long state, unsigned int subclass,$/;"	f	file:
__ww_mutex_lock_interruptible_slowpath	locking/mutex.c	/^__ww_mutex_lock_interruptible_slowpath(struct ww_mutex *lock,$/;"	f	file:
__ww_mutex_lock_slowpath	locking/mutex.c	/^__ww_mutex_lock_slowpath(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)$/;"	f	file:
__ww_mutex_wound	locking/mutex.c	/^static bool __ww_mutex_wound(struct mutex *lock,$/;"	f	file:
__xsk_map_flush	bpf/xskmap.c	/^void __xsk_map_flush(struct bpf_map *map)$/;"	f
__xsk_map_lookup_elem	bpf/xskmap.c	/^struct xdp_sock *__xsk_map_lookup_elem(struct bpf_map *map, u32 key)$/;"	f
__xsk_map_redirect	bpf/xskmap.c	/^int __xsk_map_redirect(struct bpf_map *map, struct xdp_buff *xdp,$/;"	f
_braille_console_setup	printk/braille.c	/^int _braille_console_setup(char **str, char **brl_options)$/;"	f
_braille_console_setup	printk/braille.h	/^_braille_console_setup(char **str, char **brl_options)$/;"	f
_braille_register_console	printk/braille.c	/^_braille_register_console(struct console *console, struct console_cmdline *c)$/;"	f
_braille_register_console	printk/braille.h	/^_braille_register_console(struct console *console, struct console_cmdline *c)$/;"	f
_braille_unregister_console	printk/braille.c	/^_braille_unregister_console(struct console *console)$/;"	f
_braille_unregister_console	printk/braille.h	/^_braille_unregister_console(struct console *console)$/;"	f
_cond_resched	sched/core.c	/^EXPORT_SYMBOL(_cond_resched);$/;"	v
_cond_resched	sched/core.c	/^int __sched _cond_resched(void)$/;"	f
_cpu_down	cpu.c	/^static int __ref _cpu_down(unsigned int cpu, int tasks_frozen,$/;"	f	file:
_cpu_up	cpu.c	/^static int _cpu_up(unsigned int cpu, int tasks_frozen, enum cpuhp_state target)$/;"	f	file:
_do_fork	fork.c	/^long _do_fork(struct kernel_clone_args *args)$/;"	f
_down_write_nest_lock	locking/rwsem.c	/^EXPORT_SYMBOL(_down_write_nest_lock);$/;"	v
_down_write_nest_lock	locking/rwsem.c	/^void _down_write_nest_lock(struct rw_semaphore *sem, struct lockdep_map *nest)$/;"	f
_f	sys.c	/^	char _f[20-2*sizeof(u32)-sizeof(int)];$/;"	m	struct:compat_sysinfo	file:
_free_event	events/core.c	/^static void _free_event(struct perf_event *event)$/;"	f	file:
_kdb_bp	debug/kdb/kdb_private.h	/^typedef struct _kdb_bp {$/;"	s
_kdb_bp_install	debug/kdb/kdb_bp.c	/^static int _kdb_bp_install(struct pt_regs *regs, kdb_bp_t *bp)$/;"	f	file:
_kdb_bp_remove	debug/kdb/kdb_bp.c	/^static int _kdb_bp_remove(kdb_bp_t *bp)$/;"	f	file:
_kdbmsg	debug/kdb/kdb_main.c	/^typedef struct _kdbmsg {$/;"	s	file:
_kdbtab	debug/kdb/kdb_private.h	/^typedef struct _kdbtab {$/;"	s
_kprobe_addr	kprobes.c	/^static kprobe_opcode_t *_kprobe_addr(kprobe_opcode_t *addr,$/;"	f	file:
_local_bh_enable	softirq.c	/^EXPORT_SYMBOL(_local_bh_enable);$/;"	v
_local_bh_enable	softirq.c	/^void _local_bh_enable(void)$/;"	f
_mutex_lock_nest_lock	locking/mutex.c	/^EXPORT_SYMBOL_GPL(_mutex_lock_nest_lock);$/;"	v
_mutex_lock_nest_lock	locking/mutex.c	/^_mutex_lock_nest_lock(struct mutex *lock, struct lockdep_map *nest)$/;"	f
_nohz_idle_balance	sched/fair.c	/^static bool _nohz_idle_balance(struct rq *this_rq, unsigned int flags,$/;"	f	file:
_perf_event_disable	events/core.c	/^static void _perf_event_disable(struct perf_event *event)$/;"	f	file:
_perf_event_enable	events/core.c	/^static void _perf_event_enable(struct perf_event *event)$/;"	f	file:
_perf_event_refresh	events/core.c	/^static int _perf_event_refresh(struct perf_event *event, int refresh)$/;"	f	file:
_perf_event_reset	events/core.c	/^static void _perf_event_reset(struct perf_event *event)$/;"	f	file:
_perf_ioctl	events/core.c	/^static long _perf_ioctl(struct perf_event *event, unsigned int cmd, unsigned long arg)$/;"	f	file:
_pick_next_task_rt	sched/rt.c	/^static struct task_struct *_pick_next_task_rt(struct rq *rq)$/;"	f	file:
_proc_do_string	sysctl.c	/^static int _proc_do_string(char *data, int maxlen, int write,$/;"	f	file:
_raw_read_lock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock);$/;"	v
_raw_read_lock	locking/spinlock.c	/^void __lockfunc _raw_read_lock(rwlock_t *lock)$/;"	f
_raw_read_lock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_bh);$/;"	v
_raw_read_lock_bh	locking/spinlock.c	/^void __lockfunc _raw_read_lock_bh(rwlock_t *lock)$/;"	f
_raw_read_lock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_irq);$/;"	v
_raw_read_lock_irq	locking/spinlock.c	/^void __lockfunc _raw_read_lock_irq(rwlock_t *lock)$/;"	f
_raw_read_lock_irqsave	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_irqsave);$/;"	v
_raw_read_lock_irqsave	locking/spinlock.c	/^unsigned long __lockfunc _raw_read_lock_irqsave(rwlock_t *lock)$/;"	f
_raw_read_trylock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_trylock);$/;"	v
_raw_read_trylock	locking/spinlock.c	/^int __lockfunc _raw_read_trylock(rwlock_t *lock)$/;"	f
_raw_read_unlock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock);$/;"	v
_raw_read_unlock	locking/spinlock.c	/^void __lockfunc _raw_read_unlock(rwlock_t *lock)$/;"	f
_raw_read_unlock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_bh);$/;"	v
_raw_read_unlock_bh	locking/spinlock.c	/^void __lockfunc _raw_read_unlock_bh(rwlock_t *lock)$/;"	f
_raw_read_unlock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_irq);$/;"	v
_raw_read_unlock_irq	locking/spinlock.c	/^void __lockfunc _raw_read_unlock_irq(rwlock_t *lock)$/;"	f
_raw_read_unlock_irqrestore	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_irqrestore);$/;"	v
_raw_read_unlock_irqrestore	locking/spinlock.c	/^void __lockfunc _raw_read_unlock_irqrestore(rwlock_t *lock, unsigned long flags)$/;"	f
_raw_spin_lock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock);$/;"	v
_raw_spin_lock	locking/spinlock.c	/^void __lockfunc _raw_spin_lock(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_bh);$/;"	v
_raw_spin_lock_bh	locking/spinlock.c	/^void __lockfunc _raw_spin_lock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irq);$/;"	v
_raw_spin_lock_irq	locking/spinlock.c	/^void __lockfunc _raw_spin_lock_irq(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irqsave	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irqsave);$/;"	v
_raw_spin_lock_irqsave	locking/spinlock.c	/^unsigned long __lockfunc _raw_spin_lock_irqsave(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irqsave_nested	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irqsave_nested);$/;"	v
_raw_spin_lock_irqsave_nested	locking/spinlock.c	/^unsigned long __lockfunc _raw_spin_lock_irqsave_nested(raw_spinlock_t *lock,$/;"	f
_raw_spin_lock_nest_lock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_nest_lock);$/;"	v
_raw_spin_lock_nest_lock	locking/spinlock.c	/^void __lockfunc _raw_spin_lock_nest_lock(raw_spinlock_t *lock,$/;"	f
_raw_spin_lock_nested	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_nested);$/;"	v
_raw_spin_lock_nested	locking/spinlock.c	/^void __lockfunc _raw_spin_lock_nested(raw_spinlock_t *lock, int subclass)$/;"	f
_raw_spin_trylock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_trylock);$/;"	v
_raw_spin_trylock	locking/spinlock.c	/^int __lockfunc _raw_spin_trylock(raw_spinlock_t *lock)$/;"	f
_raw_spin_trylock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_trylock_bh);$/;"	v
_raw_spin_trylock_bh	locking/spinlock.c	/^int __lockfunc _raw_spin_trylock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock);$/;"	v
_raw_spin_unlock	locking/spinlock.c	/^void __lockfunc _raw_spin_unlock(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_bh);$/;"	v
_raw_spin_unlock_bh	locking/spinlock.c	/^void __lockfunc _raw_spin_unlock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_irq);$/;"	v
_raw_spin_unlock_irq	locking/spinlock.c	/^void __lockfunc _raw_spin_unlock_irq(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_irqrestore	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_irqrestore);$/;"	v
_raw_spin_unlock_irqrestore	locking/spinlock.c	/^void __lockfunc _raw_spin_unlock_irqrestore(raw_spinlock_t *lock, unsigned long flags)$/;"	f
_raw_write_lock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock);$/;"	v
_raw_write_lock	locking/spinlock.c	/^void __lockfunc _raw_write_lock(rwlock_t *lock)$/;"	f
_raw_write_lock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_bh);$/;"	v
_raw_write_lock_bh	locking/spinlock.c	/^void __lockfunc _raw_write_lock_bh(rwlock_t *lock)$/;"	f
_raw_write_lock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_irq);$/;"	v
_raw_write_lock_irq	locking/spinlock.c	/^void __lockfunc _raw_write_lock_irq(rwlock_t *lock)$/;"	f
_raw_write_lock_irqsave	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_irqsave);$/;"	v
_raw_write_lock_irqsave	locking/spinlock.c	/^unsigned long __lockfunc _raw_write_lock_irqsave(rwlock_t *lock)$/;"	f
_raw_write_trylock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_trylock);$/;"	v
_raw_write_trylock	locking/spinlock.c	/^int __lockfunc _raw_write_trylock(rwlock_t *lock)$/;"	f
_raw_write_unlock	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock);$/;"	v
_raw_write_unlock	locking/spinlock.c	/^void __lockfunc _raw_write_unlock(rwlock_t *lock)$/;"	f
_raw_write_unlock_bh	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_bh);$/;"	v
_raw_write_unlock_bh	locking/spinlock.c	/^void __lockfunc _raw_write_unlock_bh(rwlock_t *lock)$/;"	f
_raw_write_unlock_irq	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_irq);$/;"	v
_raw_write_unlock_irq	locking/spinlock.c	/^void __lockfunc _raw_write_unlock_irq(rwlock_t *lock)$/;"	f
_raw_write_unlock_irqrestore	locking/spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_irqrestore);$/;"	v
_raw_write_unlock_irqrestore	locking/spinlock.c	/^void __lockfunc _raw_write_unlock_irqrestore(rwlock_t *lock, unsigned long flags)$/;"	f
_sched_setscheduler	sched/core.c	/^static int _sched_setscheduler(struct task_struct *p, int policy,$/;"	f	file:
_task_util_est	sched/fair.c	/^static inline unsigned long _task_util_est(struct task_struct *p)$/;"	f	file:
_torture_create_kthread	torture.c	/^EXPORT_SYMBOL_GPL(_torture_create_kthread);$/;"	v
_torture_create_kthread	torture.c	/^int _torture_create_kthread(int (*fn)(void *arg), void *arg, char *s, char *m,$/;"	f
_torture_stop_kthread	torture.c	/^EXPORT_SYMBOL_GPL(_torture_stop_kthread);$/;"	v
_torture_stop_kthread	torture.c	/^void _torture_stop_kthread(char *m, struct task_struct **tp)$/;"	f
a_mutex	locking/test-ww_mutex.c	/^	struct ww_mutex a_mutex;$/;"	m	struct:test_abba	typeref:struct:test_abba::ww_mutex	file:
a_mutex	locking/test-ww_mutex.c	/^	struct ww_mutex a_mutex;$/;"	m	struct:test_cycle	typeref:struct:test_cycle::ww_mutex	file:
a_ready	locking/test-ww_mutex.c	/^	struct completion a_ready;$/;"	m	struct:test_abba	typeref:struct:test_abba::completion	file:
a_signal	locking/test-ww_mutex.c	/^	struct completion *a_signal;$/;"	m	struct:test_cycle	typeref:struct:test_cycle::completion	file:
abbr	rcu/tree.h	/^	char abbr;				\/* Abbreviated name. *\/$/;"	m	struct:rcu_state
abort	exit.c	/^EXPORT_SYMBOL(abort);$/;"	v
abort	exit.c	/^__weak void abort(void)$/;"	f
abort_creds	cred.c	/^EXPORT_SYMBOL(abort_creds);$/;"	v
abort_creds	cred.c	/^void abort_creds(struct cred *new)$/;"	f
abs_timeout	audit.h	/^			struct timespec64	abs_timeout;$/;"	m	struct:audit_context::__anon53::__anon58	typeref:struct:audit_context::__anon53::__anon58::timespec64
accept	sys_ni.c	/^COND_SYSCALL(accept);$/;"	v
accept4	sys_ni.c	/^COND_SYSCALL(accept4);$/;"	v
access_pidfd_pidns	signal.c	/^static bool access_pidfd_pidns(struct pid *pid)$/;"	f	file:
access_size	bpf/verifier.c	/^	int access_size;$/;"	m	struct:bpf_call_arg_meta	file:
account_cfs_rq_runtime	sched/fair.c	/^static void account_cfs_rq_runtime(struct cfs_rq *cfs_rq, u64 delta_exec) {}$/;"	f	file:
account_cfs_rq_runtime	sched/fair.c	/^void account_cfs_rq_runtime(struct cfs_rq *cfs_rq, u64 delta_exec)$/;"	f	file:
account_entity_dequeue	sched/fair.c	/^account_entity_dequeue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
account_entity_enqueue	sched/fair.c	/^account_entity_enqueue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
account_event	events/core.c	/^static void account_event(struct perf_event *event)$/;"	f	file:
account_event_cpu	events/core.c	/^static void account_event_cpu(struct perf_event *event, int cpu)$/;"	f	file:
account_freq_event	events/core.c	/^static void account_freq_event(void)$/;"	f	file:
account_freq_event_nohz	events/core.c	/^static void account_freq_event_nohz(void)$/;"	f	file:
account_global_scheduler_latency	latencytop.c	/^account_global_scheduler_latency(struct task_struct *tsk,$/;"	f	file:
account_guest_time	sched/cputime.c	/^void account_guest_time(struct task_struct *p, u64 cputime)$/;"	f
account_idle_ticks	sched/cputime.c	/^void account_idle_ticks(unsigned long ticks)$/;"	f
account_idle_time	sched/cputime.c	/^void account_idle_time(u64 cputime)$/;"	f
account_kernel_stack	fork.c	/^static void account_kernel_stack(struct task_struct *tsk, int account)$/;"	f	file:
account_numa_dequeue	sched/fair.c	/^static inline void account_numa_dequeue(struct rq *rq, struct task_struct *p)$/;"	f	file:
account_numa_dequeue	sched/fair.c	/^static void account_numa_dequeue(struct rq *rq, struct task_struct *p)$/;"	f	file:
account_numa_enqueue	sched/fair.c	/^static inline void account_numa_enqueue(struct rq *rq, struct task_struct *p)$/;"	f	file:
account_numa_enqueue	sched/fair.c	/^static void account_numa_enqueue(struct rq *rq, struct task_struct *p)$/;"	f	file:
account_other_time	sched/cputime.c	/^static inline u64 account_other_time(u64 max)$/;"	f	file:
account_pmu_sb_event	events/core.c	/^static void account_pmu_sb_event(struct perf_event *event)$/;"	f	file:
account_process_tick	sched/cputime.c	/^void account_process_tick(struct task_struct *p, int user_tick)$/;"	f
account_steal_time	sched/cputime.c	/^void account_steal_time(u64 cputime)$/;"	f
account_system_index_time	sched/cputime.c	/^void account_system_index_time(struct task_struct *p,$/;"	f
account_system_time	sched/cputime.c	/^void account_system_time(struct task_struct *p, int hardirq_offset, u64 cputime)$/;"	f
account_user_time	sched/cputime.c	/^void account_user_time(struct task_struct *p, u64 cputime)$/;"	f
acct	sys_ni.c	/^COND_SYSCALL(acct);$/;"	v
acct_account_cputime	tsacct.c	/^void acct_account_cputime(struct task_struct *tsk)$/;"	f
acct_clear_integrals	tsacct.c	/^void acct_clear_integrals(struct task_struct *tsk)$/;"	f
acct_collect	acct.c	/^void acct_collect(long exitcode, int group_dead)$/;"	f
acct_exit_ns	acct.c	/^void acct_exit_ns(struct pid_namespace *ns)$/;"	f
acct_get	acct.c	/^static struct bsd_acct_struct *acct_get(struct pid_namespace *ns)$/;"	f	file:
acct_on	acct.c	/^static int acct_on(struct filename *pathname)$/;"	f	file:
acct_parm	acct.c	/^int acct_parm[3] = {4, 2, 30};$/;"	v
acct_pin_kill	acct.c	/^static void acct_pin_kill(struct fs_pin *pin)$/;"	f	file:
acct_process	acct.c	/^void acct_process(void)$/;"	f
acct_put	acct.c	/^static void acct_put(struct bsd_acct_struct *p)$/;"	f	file:
acct_update_integrals	tsacct.c	/^void acct_update_integrals(struct task_struct *tsk)$/;"	f
accumulate_nsecs_to_secs	time/timekeeping.c	/^static inline unsigned int accumulate_nsecs_to_secs(struct timekeeper *tk)$/;"	f	file:
accumulate_sum	sched/pelt.c	/^accumulate_sum(u64 delta, struct sched_avg *sa,$/;"	f	file:
accumulate_thread_rusage	sys.c	/^static void accumulate_thread_rusage(struct task_struct *t, struct rusage *r)$/;"	f	file:
ack_bad	irq/dummychip.c	/^static void ack_bad(struct irq_data *data)$/;"	f	file:
ack_state	stop_machine.c	/^static void ack_state(struct multi_stop_data *msdata)$/;"	f	file:
acquire_probe_locked	trace/ftrace.c	/^static void acquire_probe_locked(struct ftrace_func_probe *probe)$/;"	f	file:
acquire_reference_state	bpf/verifier.c	/^static int acquire_reference_state(struct bpf_verifier_env *env, int insn_idx)$/;"	f	file:
act	trace/blktrace.c	/^	const char *act[2];$/;"	m	struct:__anon38	file:
act_log_check	trace/blktrace.c	/^static int act_log_check(struct blk_trace *bt, u32 what, sector_t sector,$/;"	f	file:
action	trace/trace_events_hist.c	/^	enum action_id		action;$/;"	m	struct:action_data	typeref:enum:action_data::action_id	file:
action_create	trace/trace_events_hist.c	/^static int action_create(struct hist_trigger_data *hist_data,$/;"	f	file:
action_data	trace/trace_events_hist.c	/^	struct action_data		*action_data;$/;"	m	struct:track_data	typeref:struct:track_data::action_data	file:
action_data	trace/trace_events_hist.c	/^struct action_data {$/;"	s	file:
action_data_destroy	trace/trace_events_hist.c	/^static void action_data_destroy(struct action_data *data)$/;"	f	file:
action_fn_t	trace/trace_events_hist.c	/^typedef void (*action_fn_t) (struct hist_trigger_data *hist_data,$/;"	t	file:
action_id	trace/trace_events_hist.c	/^enum action_id {$/;"	g	file:
action_name	trace/trace_events_hist.c	/^	char			*action_name;$/;"	m	struct:action_data	file:
action_parse	trace/trace_events_hist.c	/^static int action_parse(struct trace_array *tr, char *str, struct action_data *data,$/;"	f	file:
action_str	trace/trace_events_hist.c	/^	char		*action_str[HIST_ACTIONS_MAX];$/;"	m	struct:hist_trigger_attrs	file:
action_trace	trace/trace_events_hist.c	/^static void action_trace(struct hist_trigger_data *hist_data,$/;"	f	file:
actions	irq/irqdesc.c	/^IRQ_ATTR_RO(actions);$/;"	v
actions	taskstats.c	/^enum actions {$/;"	g	file:
actions	trace/trace_events_hist.c	/^	struct action_data		*actions[HIST_ACTIONS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::action_data	file:
actions_match	trace/trace_events_hist.c	/^static bool actions_match(struct hist_trigger_data *hist_data,$/;"	f	file:
actions_show	irq/irqdesc.c	/^static ssize_t actions_show(struct kobject *kobj,$/;"	f	file:
activate_effective_progs	bpf/cgroup.c	/^static void activate_effective_progs(struct cgroup *cgrp,$/;"	f	file:
activate_task	sched/core.c	/^void activate_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f
active	acct.c	/^	int			active;$/;"	m	struct:bsd_acct_struct	file:
active	sched/sched.h	/^	struct rt_prio_array	active;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::rt_prio_array
active_balance	sched/sched.h	/^	int			active_balance;$/;"	m	struct:rq
active_balance_work	sched/sched.h	/^	struct cpu_stop_work	active_balance_work;$/;"	m	struct:rq	typeref:struct:rq::cpu_stop_work
active_cacheline_dec_overlap	dma/debug.c	/^static int active_cacheline_dec_overlap(phys_addr_t cln)$/;"	f	file:
active_cacheline_inc_overlap	dma/debug.c	/^static void active_cacheline_inc_overlap(phys_addr_t cln)$/;"	f	file:
active_cacheline_insert	dma/debug.c	/^static int active_cacheline_insert(struct dma_debug_entry *entry)$/;"	f	file:
active_cacheline_read_overlap	dma/debug.c	/^static int active_cacheline_read_overlap(phys_addr_t cln)$/;"	f	file:
active_cacheline_remove	dma/debug.c	/^static void active_cacheline_remove(struct dma_debug_entry *entry)$/;"	f	file:
active_cacheline_set_overlap	dma/debug.c	/^static int active_cacheline_set_overlap(phys_addr_t cln, int overlap)$/;"	f	file:
active_cpus	stop_machine.c	/^	const struct cpumask	*active_cpus;$/;"	m	struct:multi_stop_data	typeref:struct:multi_stop_data::cpumask	file:
active_load_balance_cpu_stop	sched/fair.c	/^static int active_load_balance_cpu_stop(void *data)$/;"	f	file:
active_nodes	sched/fair.c	/^	int active_nodes;$/;"	m	struct:numa_group	file:
actual_read_sched_clock	time/sched_clock.c	/^	u64 (*actual_read_sched_clock)(void);$/;"	m	struct:clock_data	file:
add_chain_cache	locking/lockdep.c	/^static inline int add_chain_cache(struct task_struct *curr,$/;"	f	file:
add_del_listener	taskstats.c	/^static int add_del_listener(pid_t pid, const struct cpumask *mask, int isadd)$/;"	f	file:
add_dma_entry	dma/debug.c	/^static void add_dma_entry(struct dma_debug_entry *entry)$/;"	f	file:
add_event_to_ctx	events/core.c	/^static void add_event_to_ctx(struct perf_event *event,$/;"	f	file:
add_event_to_groups	events/core.c	/^add_event_to_groups(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
add_ftrace_export	trace/trace.c	/^add_ftrace_export(struct trace_export **list, struct trace_export *export)$/;"	f	file:
add_ftrace_ops	trace/ftrace.c	/^static void add_ftrace_ops(struct ftrace_ops __rcu **list,$/;"	f	file:
add_hash_entry	trace/ftrace.c	/^static int add_hash_entry(struct ftrace_hash *hash, unsigned long ip)$/;"	f	file:
add_info	gcov/fs.c	/^static void add_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
add_kallsyms	module.c	/^static void add_kallsyms(struct module *mod, const struct load_info *info)$/;"	f	file:
add_key	sys_ni.c	/^COND_SYSCALL(add_key);$/;"	v
add_links	gcov/fs.c	/^static void add_links(struct gcov_node *node, struct dentry *parent)$/;"	f	file:
add_lock_to_list	locking/lockdep.c	/^static int add_lock_to_list(struct lock_class *this,$/;"	f	file:
add_module_usage	module.c	/^static int add_module_usage(struct module *a, struct module *b)$/;"	f	file:
add_new_kprobe	kprobes.c	/^static int add_new_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
add_node	gcov/fs.c	/^static void add_node(struct gcov_info *info)$/;"	f	file:
add_notes_attrs	module.c	/^static inline void add_notes_attrs(struct module *mod,$/;"	f	file:
add_notes_attrs	module.c	/^static void add_notes_attrs(struct module *mod, const struct load_info *info)$/;"	f	file:
add_nr_running	sched/sched.h	/^static inline void add_nr_running(struct rq *rq, unsigned count)$/;"	f
add_positive	sched/fair.c	2791;"	d	file:
add_preferred_console	printk/printk.c	/^int add_preferred_console(char *name, int idx, char *options)$/;"	f
add_range	range.c	/^int add_range(struct range *range, int az, int nr_range, u64 start, u64 end)$/;"	f
add_range_with_merge	range.c	/^int add_range_with_merge(struct range *range, int az, int nr_range,$/;"	f
add_rec_by_index	trace/ftrace.c	/^add_rec_by_index(struct ftrace_hash *hash, struct ftrace_glob *func_g,$/;"	f	file:
add_rq_bw	sched/deadline.c	/^void add_rq_bw(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
add_rtree_block	power/snapshot.c	/^static int add_rtree_block(struct mem_zone_bm_rtree *zone, gfp_t gfp_mask,$/;"	f	file:
add_running_bw	sched/deadline.c	/^void add_running_bw(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
add_sect_attrs	module.c	/^static inline void add_sect_attrs(struct module *mod,$/;"	f	file:
add_sect_attrs	module.c	/^static void add_sect_attrs(struct module *mod, const struct load_info *info)$/;"	f	file:
add_subprog	bpf/verifier.c	/^static int add_subprog(struct bpf_verifier_env *env, int off)$/;"	f	file:
add_sysfs_param	params.c	/^static __modinit int add_sysfs_param(struct module_kobject *mk,$/;"	f	file:
add_taint	panic.c	/^EXPORT_SYMBOL(add_taint);$/;"	v
add_taint	panic.c	/^void add_taint(unsigned flag, enum lockdep_ok lockdep_ok)$/;"	f
add_taint_module	module.c	/^static inline void add_taint_module(struct module *mod, unsigned flag,$/;"	f	file:
add_tg_cfs_propagate	sched/fair.c	/^static inline void add_tg_cfs_propagate(struct cfs_rq *cfs_rq, long runnable_sum) {}$/;"	f	file:
add_tg_cfs_propagate	sched/fair.c	/^static inline void add_tg_cfs_propagate(struct cfs_rq *cfs_rq, long runnable_sum)$/;"	f	file:
add_timer	time/timer.c	/^EXPORT_SYMBOL(add_timer);$/;"	v
add_timer	time/timer.c	/^void add_timer(struct timer_list *timer)$/;"	f
add_timer_on	time/timer.c	/^EXPORT_SYMBOL_GPL(add_timer_on);$/;"	v
add_timer_on	time/timer.c	/^void add_timer_on(struct timer_list *timer, int cpu)$/;"	f
add_timestamp	trace/ring_buffer.c	/^	int			add_timestamp;$/;"	m	struct:rb_event_info	file:
add_to_clear_hash_list	trace/ftrace.c	/^static void add_to_clear_hash_list(struct list_head *clear_list,$/;"	f	file:
add_to_key	trace/trace_events_hist.c	/^static inline void add_to_key(char *compound_key, void *key,$/;"	f	file:
add_trace_export	trace/trace.c	/^add_trace_export(struct trace_export **list, struct trace_export *export)$/;"	f	file:
add_tracer_options	trace/trace.c	/^static void add_tracer_options(struct trace_array *tr, struct tracer *t)$/;"	f	file:
add_trampoline_func	trace/ftrace.c	/^static void add_trampoline_func(struct seq_file *m, struct ftrace_ops *ops,$/;"	f	file:
add_unformed_module	module.c	/^static int add_unformed_module(struct module *mod)$/;"	f	file:
add_usage_links	module.c	/^static int add_usage_links(struct module *mod)$/;"	f	file:
add_wait_queue	sched/wait.c	/^EXPORT_SYMBOL(add_wait_queue);$/;"	v
add_wait_queue	sched/wait.c	/^void add_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)$/;"	f
add_wait_queue_exclusive	sched/wait.c	/^EXPORT_SYMBOL(add_wait_queue_exclusive);$/;"	v
add_wait_queue_exclusive	sched/wait.c	/^void add_wait_queue_exclusive(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)$/;"	f
addmask	cgroup/cpuset.c	/^	cpumask_var_t addmask, delmask;	\/* For partition root *\/$/;"	m	struct:tmpmasks	file:
addr	events/core.c	/^		u64				addr;$/;"	m	struct:perf_ksymbol_event::__anon6	file:
addr	livepatch/core.c	/^	unsigned long addr;$/;"	m	struct:klp_find_arg	file:
addr_conflict	jump_label.c	/^static int addr_conflict(struct jump_entry *entry, void *start, void *end)$/;"	f	file:
addr_max	module.c	/^	unsigned long addr_max;$/;"	m	struct:mod_tree_root	file:
addr_min	module.c	/^	unsigned long addr_min;$/;"	m	struct:mod_tree_root	file:
address	module.c	/^	unsigned long address;$/;"	m	struct:module_sect_attr	file:
adjust_btf_func	bpf/verifier.c	/^static void adjust_btf_func(struct bpf_verifier_env *env)$/;"	f	file:
adjust_error_retval	fail_function.c	/^static unsigned long adjust_error_retval(unsigned long addr, unsigned long retv)$/;"	f	file:
adjust_historical_crosststamp	time/timekeeping.c	/^static int adjust_historical_crosststamp(struct system_time_snapshot *history,$/;"	f	file:
adjust_insn_aux_data	bpf/verifier.c	/^static int adjust_insn_aux_data(struct bpf_verifier_env *env,$/;"	f	file:
adjust_jiffies_till_sched_qs	rcu/tree.c	/^static void adjust_jiffies_till_sched_qs(void)$/;"	f	file:
adjust_ptr_min_max_vals	bpf/verifier.c	/^static int adjust_ptr_min_max_vals(struct bpf_verifier_env *env,$/;"	f	file:
adjust_reg_min_max_vals	bpf/verifier.c	/^static int adjust_reg_min_max_vals(struct bpf_verifier_env *env,$/;"	f	file:
adjust_resource	resource.c	/^EXPORT_SYMBOL(adjust_resource);$/;"	v
adjust_resource	resource.c	/^int adjust_resource(struct resource *res, resource_size_t start,$/;"	f
adjust_scalar_min_max_vals	bpf/verifier.c	/^static int adjust_scalar_min_max_vals(struct bpf_verifier_env *env,$/;"	f	file:
adjust_stack_addr	trace/trace_uprobe.c	/^static unsigned long adjust_stack_addr(unsigned long addr, unsigned int n)$/;"	f	file:
adjust_subprog_starts	bpf/verifier.c	/^static void adjust_subprog_starts(struct bpf_verifier_env *env, u32 off, u32 len)$/;"	f	file:
adjust_subprog_starts_after_remove	bpf/verifier.c	/^static int adjust_subprog_starts_after_remove(struct bpf_verifier_env *env,$/;"	f	file:
af	audit.c	/^static struct audit_features af = {.vers = AUDIT_FEATURE_VERSION,$/;"	v	typeref:struct:audit_features	file:
aggr_fault_handler	kprobes.c	/^NOKPROBE_SYMBOL(aggr_fault_handler);$/;"	v
aggr_fault_handler	kprobes.c	/^static int aggr_fault_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
aggr_kprobe_disabled	kprobes.c	/^static int aggr_kprobe_disabled(struct kprobe *ap)$/;"	f	file:
aggr_post_handler	kprobes.c	/^NOKPROBE_SYMBOL(aggr_post_handler);$/;"	v
aggr_post_handler	kprobes.c	/^static void aggr_post_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
aggr_pre_handler	kprobes.c	/^NOKPROBE_SYMBOL(aggr_pre_handler);$/;"	v
aggr_pre_handler	kprobes.c	/^static int aggr_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
alarm	time/posix-stubs.c	/^SYS_NI(alarm);$/;"	v
alarm_base	time/alarmtimer.c	/^static struct alarm_base {$/;"	s	file:
alarm_bases	time/alarmtimer.c	/^} alarm_bases[ALARM_NUMTYPE];$/;"	v	typeref:struct:alarm_base	file:
alarm_cancel	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_cancel);$/;"	v
alarm_cancel	time/alarmtimer.c	/^int alarm_cancel(struct alarm *alarm)$/;"	f
alarm_clock	time/alarmtimer.c	/^const struct k_clock alarm_clock = {$/;"	v	typeref:struct:k_clock
alarm_clock_get	time/alarmtimer.c	/^static int alarm_clock_get(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
alarm_clock_getres	time/alarmtimer.c	/^static int alarm_clock_getres(const clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
alarm_expires_remaining	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_expires_remaining);$/;"	v
alarm_expires_remaining	time/alarmtimer.c	/^ktime_t alarm_expires_remaining(const struct alarm *alarm)$/;"	f
alarm_forward	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_forward);$/;"	v
alarm_forward	time/alarmtimer.c	/^u64 alarm_forward(struct alarm *alarm, ktime_t now, ktime_t interval)$/;"	f
alarm_forward_now	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_forward_now);$/;"	v
alarm_forward_now	time/alarmtimer.c	/^u64 alarm_forward_now(struct alarm *alarm, ktime_t interval)$/;"	f
alarm_handle_timer	time/alarmtimer.c	/^static enum alarmtimer_restart alarm_handle_timer(struct alarm *alarm,$/;"	f	file:
alarm_init	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_init);$/;"	v
alarm_init	time/alarmtimer.c	/^void alarm_init(struct alarm *alarm, enum alarmtimer_type type,$/;"	f
alarm_init_on_stack	time/alarmtimer.c	/^alarm_init_on_stack(struct alarm *alarm, enum alarmtimer_type type,$/;"	f	file:
alarm_restart	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_restart);$/;"	v
alarm_restart	time/alarmtimer.c	/^void alarm_restart(struct alarm *alarm)$/;"	f
alarm_setitimer	time/itimer.c	/^static unsigned int alarm_setitimer(unsigned int seconds)$/;"	f	file:
alarm_start	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_start);$/;"	v
alarm_start	time/alarmtimer.c	/^void alarm_start(struct alarm *alarm, ktime_t start)$/;"	f
alarm_start_relative	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_start_relative);$/;"	v
alarm_start_relative	time/alarmtimer.c	/^void alarm_start_relative(struct alarm *alarm, ktime_t start)$/;"	f
alarm_timer_arm	time/alarmtimer.c	/^static void alarm_timer_arm(struct k_itimer *timr, ktime_t expires,$/;"	f	file:
alarm_timer_create	time/alarmtimer.c	/^static int alarm_timer_create(struct k_itimer *new_timer)$/;"	f	file:
alarm_timer_forward	time/alarmtimer.c	/^static s64 alarm_timer_forward(struct k_itimer *timr, ktime_t now)$/;"	f	file:
alarm_timer_nsleep	time/alarmtimer.c	/^static int alarm_timer_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
alarm_timer_nsleep_restart	time/alarmtimer.c	/^static long __sched alarm_timer_nsleep_restart(struct restart_block *restart)$/;"	f	file:
alarm_timer_rearm	time/alarmtimer.c	/^static void alarm_timer_rearm(struct k_itimer *timr)$/;"	f	file:
alarm_timer_remaining	time/alarmtimer.c	/^static ktime_t alarm_timer_remaining(struct k_itimer *timr, ktime_t now)$/;"	f	file:
alarm_timer_try_to_cancel	time/alarmtimer.c	/^static int alarm_timer_try_to_cancel(struct k_itimer *timr)$/;"	f	file:
alarm_try_to_cancel	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarm_try_to_cancel);$/;"	v
alarm_try_to_cancel	time/alarmtimer.c	/^int alarm_try_to_cancel(struct alarm *alarm)$/;"	f
alarmtimer_dequeue	time/alarmtimer.c	/^static void alarmtimer_dequeue(struct alarm_base *base, struct alarm *alarm)$/;"	f	file:
alarmtimer_do_nsleep	time/alarmtimer.c	/^static int alarmtimer_do_nsleep(struct alarm *alarm, ktime_t absexp,$/;"	f	file:
alarmtimer_driver	time/alarmtimer.c	/^static struct platform_driver alarmtimer_driver = {$/;"	v	typeref:struct:platform_driver	file:
alarmtimer_enqueue	time/alarmtimer.c	/^static void alarmtimer_enqueue(struct alarm_base *base, struct alarm *alarm)$/;"	f	file:
alarmtimer_fired	time/alarmtimer.c	/^static enum hrtimer_restart alarmtimer_fired(struct hrtimer *timer)$/;"	f	file:
alarmtimer_freezerset	time/alarmtimer.c	/^static void alarmtimer_freezerset(ktime_t absexp, enum alarmtimer_type type)$/;"	f	file:
alarmtimer_get_rtcdev	time/alarmtimer.c	/^EXPORT_SYMBOL_GPL(alarmtimer_get_rtcdev);$/;"	v
alarmtimer_get_rtcdev	time/alarmtimer.c	/^struct rtc_device *alarmtimer_get_rtcdev(void)$/;"	f
alarmtimer_init	time/alarmtimer.c	/^device_initcall(alarmtimer_init);$/;"	v
alarmtimer_init	time/alarmtimer.c	/^static int __init alarmtimer_init(void)$/;"	f	file:
alarmtimer_nsleep_wakeup	time/alarmtimer.c	/^static enum alarmtimer_restart alarmtimer_nsleep_wakeup(struct alarm *alarm,$/;"	f	file:
alarmtimer_pm_ops	time/alarmtimer.c	/^static const struct dev_pm_ops alarmtimer_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
alarmtimer_resume	time/alarmtimer.c	/^static int alarmtimer_resume(struct device *dev)$/;"	f	file:
alarmtimer_rtc_add_device	time/alarmtimer.c	/^static int alarmtimer_rtc_add_device(struct device *dev,$/;"	f	file:
alarmtimer_rtc_interface	time/alarmtimer.c	/^static struct class_interface alarmtimer_rtc_interface = {$/;"	v	typeref:struct:class_interface	file:
alarmtimer_rtc_interface_remove	time/alarmtimer.c	/^static inline void alarmtimer_rtc_interface_remove(void) { }$/;"	f	file:
alarmtimer_rtc_interface_remove	time/alarmtimer.c	/^static void alarmtimer_rtc_interface_remove(void)$/;"	f	file:
alarmtimer_rtc_interface_setup	time/alarmtimer.c	/^static inline int alarmtimer_rtc_interface_setup(void) { return 0; }$/;"	f	file:
alarmtimer_rtc_interface_setup	time/alarmtimer.c	/^static int alarmtimer_rtc_interface_setup(void)$/;"	f	file:
alarmtimer_rtc_timer_init	time/alarmtimer.c	/^static inline void alarmtimer_rtc_timer_init(void) { }$/;"	f	file:
alarmtimer_rtc_timer_init	time/alarmtimer.c	/^static inline void alarmtimer_rtc_timer_init(void)$/;"	f	file:
alarmtimer_suspend	time/alarmtimer.c	/^static int alarmtimer_suspend(struct device *dev)$/;"	f	file:
algo	module_signing.c	/^	u8	algo;		\/* Public-key crypto algorithm [0] *\/$/;"	m	struct:module_signature	file:
align	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
alignf	resource.c	/^	resource_size_t (*alignf)(void *, const struct resource *,$/;"	m	struct:resource_constraint	file:
alignf_data	resource.c	/^	void *alignf_data;$/;"	m	struct:resource_constraint	file:
all	gcov/fs.c	/^	struct list_head all;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
all	sched/fair.c	/^enum fbq_type { regular, remote, all };$/;"	e	enum:fbq_type	file:
all_annotated_branch_stats	trace/trace_branch.c	/^__init static int all_annotated_branch_stats(void)$/;"	f	file:
all_annotated_branch_stats	trace/trace_branch.c	/^fs_initcall(all_annotated_branch_stats);$/;"	v
all_branch_stat_headers	trace/trace_branch.c	/^static int all_branch_stat_headers(struct seq_file *m)$/;"	f	file:
all_branch_stat_next	trace/trace_branch.c	/^all_branch_stat_next(void *v, int idx)$/;"	f	file:
all_branch_stat_show	trace/trace_branch.c	/^static int all_branch_stat_show(struct seq_file *m, void *v)$/;"	f	file:
all_branch_stat_start	trace/trace_branch.c	/^static void *all_branch_stat_start(struct tracer_stat *trace)$/;"	f	file:
all_branch_stats	trace/trace_branch.c	/^static struct tracer_stat all_branch_stats = {$/;"	v	typeref:struct:tracer_stat	file:
all_lazy	rcu/tree.h	/^	bool all_lazy;			\/* All CPU's CBs lazy at idle start? *\/$/;"	m	struct:rcu_data
all_lock_classes	locking/lockdep.c	/^LIST_HEAD(all_lock_classes);$/;"	v
all_ss	cgroup/cgroup-internal.h	/^	bool		all_ss;			\/* Seen 'all' option *\/$/;"	m	struct:cgroup_fs_context
alloc_aggr_kprobe	kprobes.c	/^static struct kprobe *alloc_aggr_kprobe(struct kprobe *p)$/;"	f	file:
alloc_and_copy_ftrace_hash	trace/ftrace.c	/^alloc_and_copy_ftrace_hash(int size_bits, struct ftrace_hash *hash)$/;"	f	file:
alloc_and_link_pwqs	workqueue.c	/^static int alloc_and_link_pwqs(struct workqueue_struct *wq)$/;"	f	file:
alloc_callchain_buffers	events/callchain.c	/^static int alloc_callchain_buffers(void)$/;"	f	file:
alloc_cgroup_ns	cgroup/namespace.c	/^static struct cgroup_namespace *alloc_cgroup_ns(void)$/;"	f	file:
alloc_chunk	audit_tree.c	/^static struct audit_chunk *alloc_chunk(int count)$/;"	f	file:
alloc_cpumasks	cgroup/cpuset.c	/^static inline int alloc_cpumasks(struct cpuset *cs, struct tmpmasks *tmp)$/;"	f	file:
alloc_desc	irq/irqdesc.c	/^static struct irq_desc *alloc_desc(int irq, int node, unsigned int flags,$/;"	f	file:
alloc_descs	irq/irqdesc.c	/^static inline int alloc_descs(unsigned int start, unsigned int cnt, int node,$/;"	f	file:
alloc_descs	irq/irqdesc.c	/^static int alloc_descs(unsigned int start, unsigned int cnt, int node,$/;"	f	file:
alloc_end	irq/matrix.c	/^	unsigned int		alloc_end;$/;"	m	struct:irq_matrix	file:
alloc_extra_elems	bpf/hashtab.c	/^static int alloc_extra_elems(struct bpf_htab *htab)$/;"	f	file:
alloc_fair_sched_group	sched/fair.c	/^int alloc_fair_sched_group(struct task_group *tg, struct task_group *parent)$/;"	f
alloc_frozen_cpus	cpu.c	/^core_initcall(alloc_frozen_cpus);$/;"	v
alloc_frozen_cpus	cpu.c	/^static int __init alloc_frozen_cpus(void)$/;"	f	file:
alloc_ftrace_hash	trace/ftrace.c	/^static struct ftrace_hash *alloc_ftrace_hash(int size_bits)$/;"	f	file:
alloc_highmem	power/snapshot.c	/^static unsigned int alloc_normal, alloc_highmem;$/;"	v	file:
alloc_highmem_pages	power/snapshot.c	/^static inline unsigned int alloc_highmem_pages(struct memory_bitmap *bm,$/;"	f	file:
alloc_htab_elem	bpf/hashtab.c	/^static struct htab_elem *alloc_htab_elem(struct bpf_htab *htab, void *key,$/;"	f	file:
alloc_image_page	power/snapshot.c	/^static struct page *alloc_image_page(gfp_t gfp_mask)$/;"	f	file:
alloc_insn_page	kprobes.c	/^void __weak *alloc_insn_page(void)$/;"	f
alloc_list_entry	locking/lockdep.c	/^static struct lock_list *alloc_list_entry(void)$/;"	f	file:
alloc_lock_chain	locking/lockdep.c	/^static struct lock_chain *alloc_lock_chain(void)$/;"	f	file:
alloc_map	irq/matrix.c	/^	unsigned long		alloc_map[IRQ_MATRIX_SIZE];$/;"	m	struct:cpumap	file:
alloc_mark	audit_tree.c	/^static struct fsnotify_mark *alloc_mark(void)$/;"	f	file:
alloc_masks	irq/irqdesc.c	/^alloc_masks(struct irq_desc *desc, int node) { return 0; }$/;"	f	file:
alloc_masks	irq/irqdesc.c	/^static int alloc_masks(struct irq_desc *desc, int node)$/;"	f	file:
alloc_msi_entry	irq/msi.c	/^struct msi_desc *alloc_msi_entry(struct device *dev, int nvec,$/;"	f
alloc_node_to_cpumask	irq/affinity.c	/^static cpumask_var_t *alloc_node_to_cpumask(void)$/;"	f	file:
alloc_normal	power/snapshot.c	/^static unsigned int alloc_normal, alloc_highmem;$/;"	v	file:
alloc_percpu_trace_buffer	trace/trace.c	/^static int alloc_percpu_trace_buffer(void)$/;"	f	file:
alloc_perf_context	events/core.c	/^alloc_perf_context(struct pmu *pmu, struct task_struct *task)$/;"	f	file:
alloc_pi_state	futex.c	/^static struct futex_pi_state *alloc_pi_state(void)$/;"	f	file:
alloc_pid	pid.c	/^struct pid *alloc_pid(struct pid_namespace *ns)$/;"	f
alloc_posix_timer	time/posix-timers.c	/^static struct k_itimer * alloc_posix_timer(void)$/;"	f	file:
alloc_resource	resource.c	/^static struct resource *alloc_resource(gfp_t flags)$/;"	f	file:
alloc_retstack_tasklist	trace/fgraph.c	/^static int alloc_retstack_tasklist(struct ftrace_ret_stack **ret_stack_list)$/;"	f	file:
alloc_rootdomain	sched/topology.c	/^static struct root_domain *alloc_rootdomain(void)$/;"	f	file:
alloc_rt_sched_group	sched/rt.c	/^int alloc_rt_sched_group(struct task_group *tg, struct task_group *parent)$/;"	f
alloc_rtree_node	power/snapshot.c	/^static struct rtree_node *alloc_rtree_node(gfp_t gfp_mask, int safe_needed,$/;"	f	file:
alloc_sched_domains	sched/topology.c	/^cpumask_var_t *alloc_sched_domains(unsigned int ndoms)$/;"	f
alloc_size	irq/matrix.c	/^	unsigned int		alloc_size;$/;"	m	struct:irq_matrix	file:
alloc_start	irq/matrix.c	/^	unsigned int		alloc_start;$/;"	m	struct:irq_matrix	file:
alloc_swapdev_block	power/swap.c	/^sector_t alloc_swapdev_block(int swap)$/;"	f
alloc_synth_event	trace/trace_events_hist.c	/^static struct synth_event *alloc_synth_event(const char *name, int n_fields,$/;"	f	file:
alloc_synth_tracepoint	trace/trace_events_hist.c	/^static struct tracepoint *alloc_synth_tracepoint(char *name)$/;"	f	file:
alloc_task_struct_node	fork.c	/^static inline struct task_struct *alloc_task_struct_node(int node)$/;"	f	file:
alloc_thread_stack_node	fork.c	/^static unsigned long *alloc_thread_stack_node(struct task_struct *tsk, int node)$/;"	f	file:
alloc_thread_stack_node	fork.c	/^static unsigned long *alloc_thread_stack_node(struct task_struct *tsk,$/;"	f	file:
alloc_trace_kprobe	trace/trace_kprobe.c	/^static struct trace_kprobe *alloc_trace_kprobe(const char *group,$/;"	f	file:
alloc_trace_uprobe	trace/trace_uprobe.c	/^alloc_trace_uprobe(const char *group, const char *event, int nargs, bool is_ret)$/;"	f	file:
alloc_tree	audit_tree.c	/^static struct audit_tree *alloc_tree(const char *s)$/;"	f	file:
alloc_trial_cpuset	cgroup/cpuset.c	/^static struct cpuset *alloc_trial_cpuset(struct cpuset *cs)$/;"	f	file:
alloc_uid	user.c	/^struct user_struct *alloc_uid(kuid_t uid)$/;"	f
alloc_unbound_pwq	workqueue.c	/^static struct pool_workqueue *alloc_unbound_pwq(struct workqueue_struct *wq,$/;"	f	file:
alloc_uprobe	events/uprobes.c	/^static struct uprobe *alloc_uprobe(struct inode *inode, loff_t offset,$/;"	f	file:
alloc_worker	workqueue.c	/^static struct worker *alloc_worker(int node)$/;"	f	file:
alloc_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(alloc_workqueue);$/;"	v
alloc_workqueue	workqueue.c	/^struct workqueue_struct *alloc_workqueue(const char *fmt,$/;"	f
alloc_workqueue_attrs	workqueue.c	/^static struct workqueue_attrs *alloc_workqueue_attrs(void)$/;"	f	file:
allocate_cgrp_cset_links	cgroup/cgroup.c	/^static int allocate_cgrp_cset_links(int count, struct list_head *tmp_links)$/;"	f	file:
allocate_cmdlines_buffer	trace/trace.c	/^static int allocate_cmdlines_buffer(unsigned int val,$/;"	f	file:
allocate_ftrace_func_mapper	trace/ftrace.c	/^struct ftrace_func_mapper *allocate_ftrace_func_mapper(void)$/;"	f
allocate_ftrace_mod_map	trace/ftrace.c	/^allocate_ftrace_mod_map(struct module *mod,$/;"	f	file:
allocate_ftrace_ops	trace/trace_functions.c	/^static int allocate_ftrace_ops(struct trace_array *tr)$/;"	f	file:
allocate_mm	fork.c	665;"	d	file:
allocate_probes	tracepoint.c	/^static inline void *allocate_probes(int count)$/;"	f	file:
allocate_resource	resource.c	/^EXPORT_SYMBOL(allocate_resource);$/;"	v
allocate_resource	resource.c	/^int allocate_resource(struct resource *root, struct resource *new,$/;"	f
allocate_snapshot	trace/trace.c	/^static bool allocate_snapshot;$/;"	v	file:
allocate_trace_buffer	trace/trace.c	/^allocate_trace_buffer(struct trace_array *tr, struct trace_buffer *buf, int size)$/;"	f	file:
allocate_trace_buffers	trace/trace.c	/^static int allocate_trace_buffers(struct trace_array *tr, int size)$/;"	f	file:
allocated	irq/matrix.c	/^	unsigned int		allocated;$/;"	m	struct:cpumap	file:
allocated_snapshot	trace/trace.h	/^	bool			allocated_snapshot;$/;"	m	struct:trace_array
allocated_unsafe_pages	power/snapshot.c	/^static unsigned int allocated_unsafe_pages;$/;"	v	file:
allow_instances	trace/trace.h	/^	bool			allow_instances;$/;"	m	struct:tracer
already_uses	module.c	/^static int already_uses(struct module *a, struct module *b)$/;"	f	file:
alter_cred_subscribers	cred.c	/^static inline void alter_cred_subscribers(const struct cred *_cred, int n)$/;"	f	file:
always_kmsg_dump	printk/printk.c	/^static bool always_kmsg_dump;$/;"	v	file:
ambient	audit.h	/^	kernel_cap_t		ambient;$/;"	m	struct:audit_cap_data
annotate_branch_stat_show	trace/trace_branch.c	/^static int annotate_branch_stat_show(struct seq_file *m, void *v)$/;"	f	file:
annotated_branch_stat_cmp	trace/trace_branch.c	/^static int annotated_branch_stat_cmp(void *p1, void *p2)$/;"	f	file:
annotated_branch_stat_headers	trace/trace_branch.c	/^static int annotated_branch_stat_headers(struct seq_file *m)$/;"	f	file:
annotated_branch_stat_next	trace/trace_branch.c	/^annotated_branch_stat_next(void *v, int idx)$/;"	f	file:
annotated_branch_stat_start	trace/trace_branch.c	/^static void *annotated_branch_stat_start(struct tracer_stat *trace)$/;"	f	file:
annotated_branch_stats	trace/trace_branch.c	/^static struct tracer_stat annotated_branch_stats = {$/;"	v	typeref:struct:tracer_stat	file:
append_char	printk/printk.c	/^static void append_char(char **pp, char *e, char c)$/;"	f	file:
append_elf_note	crash_core.c	/^Elf_Word *append_elf_note(Elf_Word *buf, char *name, unsigned int type,$/;"	f
append_filter_err	trace/trace_events_filter.c	/^static void append_filter_err(struct trace_array *tr,$/;"	f	file:
apply_cgroup_root_flags	cgroup/cgroup.c	/^static void apply_cgroup_root_flags(unsigned int root_flags)$/;"	f	file:
apply_event_filter	trace/trace_events_filter.c	/^int apply_event_filter(struct trace_event_file *file, char *filter_string)$/;"	f
apply_relocations	module.c	/^static int apply_relocations(struct module *mod, const struct load_info *info)$/;"	f	file:
apply_subsystem_event_filter	trace/trace_events_filter.c	/^int apply_subsystem_event_filter(struct trace_subsystem_dir *dir,$/;"	f
apply_trace_boot_options	trace/trace.c	/^static void __init apply_trace_boot_options(void)$/;"	f	file:
apply_workqueue_attrs	workqueue.c	/^static int apply_workqueue_attrs(struct workqueue_struct *wq,$/;"	f	file:
apply_workqueue_attrs_locked	workqueue.c	/^static int apply_workqueue_attrs_locked(struct workqueue_struct *wq,$/;"	f	file:
apply_wqattrs_cleanup	workqueue.c	/^static void apply_wqattrs_cleanup(struct apply_wqattrs_ctx *ctx)$/;"	f	file:
apply_wqattrs_commit	workqueue.c	/^static void apply_wqattrs_commit(struct apply_wqattrs_ctx *ctx)$/;"	f	file:
apply_wqattrs_ctx	workqueue.c	/^struct apply_wqattrs_ctx {$/;"	s	file:
apply_wqattrs_lock	workqueue.c	/^static void apply_wqattrs_lock(void)$/;"	f	file:
apply_wqattrs_prepare	workqueue.c	/^apply_wqattrs_prepare(struct workqueue_struct *wq,$/;"	f	file:
apply_wqattrs_unlock	workqueue.c	/^static void apply_wqattrs_unlock(void)$/;"	f	file:
arch	audit.h	/^	int		    arch;$/;"	m	struct:audit_context
arch	events/uprobes.c	/^	struct arch_uprobe	arch;$/;"	m	struct:uprobe	typeref:struct:uprobe::arch_uprobe	file:
arch_asym_cpu_priority	sched/fair.c	/^int __weak arch_asym_cpu_priority(int cpu)$/;"	f
arch_check_ftrace_location	kprobes.c	/^int __weak arch_check_ftrace_location(struct kprobe *p)$/;"	f
arch_cpu_idle	sched/idle.c	/^void __weak arch_cpu_idle(void)$/;"	f
arch_cpu_idle_dead	sched/idle.c	/^void __weak arch_cpu_idle_dead(void) { }$/;"	f
arch_cpu_idle_enter	sched/idle.c	/^void __weak arch_cpu_idle_enter(void) { }$/;"	f
arch_cpu_idle_exit	sched/idle.c	/^void __weak arch_cpu_idle_exit(void) { }$/;"	f
arch_cpu_idle_prepare	sched/idle.c	/^void __weak arch_cpu_idle_prepare(void) { }$/;"	f
arch_crash_save_vmcoreinfo	crash_core.c	/^void __weak arch_crash_save_vmcoreinfo(void)$/;"	f
arch_deref_entry_point	kprobes.c	/^unsigned long __weak arch_deref_entry_point(void *entry)$/;"	f
arch_disable_smp_support	smp.c	/^void __weak arch_disable_smp_support(void) { }$/;"	f
arch_dma_alloc	dma/remap.c	/^void *arch_dma_alloc(struct device *dev, size_t size, dma_addr_t *dma_handle,$/;"	f
arch_dma_coherent_to_pfn	dma/remap.c	/^long arch_dma_coherent_to_pfn(struct device *dev, void *cpu_addr,$/;"	f
arch_dma_free	dma/remap.c	/^void arch_dma_free(struct device *dev, size_t size, void *vaddr,$/;"	f
arch_dma_set_mask	dma/mapping.c	341;"	d	file:
arch_dup_task_struct	fork.c	/^int __weak arch_dup_task_struct(struct task_struct *dst,$/;"	f
arch_dynirq_lower_bound	softirq.c	/^unsigned int __weak arch_dynirq_lower_bound(unsigned int from)$/;"	f
arch_early_irq_init	softirq.c	/^int __init __weak arch_early_irq_init(void)$/;"	f
arch_enable_nonboot_cpus_begin	cpu.c	/^void __weak arch_enable_nonboot_cpus_begin(void)$/;"	f
arch_enable_nonboot_cpus_end	cpu.c	/^void __weak arch_enable_nonboot_cpus_end(void)$/;"	f
arch_ftrace_match_adjust	trace/ftrace.c	/^char * __weak arch_ftrace_match_adjust(char *str, const char *search)$/;"	f
arch_ftrace_trampoline_free	trace/ftrace.c	/^void __weak arch_ftrace_trampoline_free(struct ftrace_ops *ops)$/;"	f
arch_ftrace_trampoline_func	trace/ftrace.c	/^arch_ftrace_trampoline_func(struct ftrace_ops *ops, struct dyn_ftrace *rec)$/;"	f
arch_ftrace_update_code	trace/ftrace.c	/^void __weak arch_ftrace_update_code(int command)$/;"	f
arch_ftrace_update_trampoline	trace/ftrace.c	/^void __weak arch_ftrace_update_trampoline(struct ftrace_ops *ops)$/;"	f
arch_get_kallsym	kallsyms.c	/^int __weak arch_get_kallsym(unsigned int symnum, unsigned long *value,$/;"	f
arch_gettimeoffset	time/timekeeping.c	/^static inline u32 arch_gettimeoffset(void) { return 0; }$/;"	f	file:
arch_gettimeoffset	time/timekeeping.c	/^u32 (*arch_gettimeoffset)(void) = default_arch_gettimeoffset;$/;"	v
arch_irq_work_raise	irq_work.c	/^void __weak arch_irq_work_raise(void)$/;"	f
arch_jump_label_transform_static	jump_label.c	/^void __weak __init_or_module arch_jump_label_transform_static(struct jump_entry *entry,$/;"	f
arch_kexec_apply_relocations	kexec_file.c	/^arch_kexec_apply_relocations(struct purgatory_info *pi, Elf_Shdr *section,$/;"	f
arch_kexec_apply_relocations_add	kexec_file.c	/^arch_kexec_apply_relocations_add(struct purgatory_info *pi, Elf_Shdr *section,$/;"	f
arch_kexec_kernel_image_load	kexec_file.c	/^void * __weak arch_kexec_kernel_image_load(struct kimage *image)$/;"	f
arch_kexec_kernel_image_probe	kexec_file.c	/^int __weak arch_kexec_kernel_image_probe(struct kimage *image, void *buf,$/;"	f
arch_kexec_kernel_verify_sig	kexec_file.c	/^int __weak arch_kexec_kernel_verify_sig(struct kimage *image, void *buf,$/;"	f
arch_kexec_protect_crashkres	kexec_core.c	/^void __weak arch_kexec_protect_crashkres(void)$/;"	f
arch_kexec_unprotect_crashkres	kexec_core.c	/^void __weak arch_kexec_unprotect_crashkres(void)$/;"	f
arch_kimage_file_post_load_cleanup	kexec_file.c	/^int __weak arch_kimage_file_post_load_cleanup(struct kimage *image)$/;"	f
arch_klp_init_object_loaded	livepatch/core.c	/^void __weak arch_klp_init_object_loaded(struct klp_patch *patch,$/;"	f
arch_kprobe_on_func_entry	kprobes.c	/^bool __weak arch_kprobe_on_func_entry(unsigned long offset)$/;"	f
arch_mcs_spin_lock_contended	locking/mcs_spinlock.h	32;"	d
arch_mcs_spin_unlock_contended	locking/mcs_spinlock.h	44;"	d
arch_memremap_can_ram_remap	iomem.c	/^static bool arch_memremap_can_ram_remap(resource_size_t offset, size_t size,$/;"	f	file:
arch_memremap_wb	iomem.c	/^static void *arch_memremap_wb(resource_size_t offset, unsigned long size)$/;"	f	file:
arch_mod_section_prepend	module.c	/^unsigned int __weak arch_mod_section_prepend(struct module *mod,$/;"	f
arch_perf_have_user_stack_dump	events/internal.h	/^static inline bool arch_perf_have_user_stack_dump(void)$/;"	f
arch_perf_out_copy_user	events/internal.h	/^arch_perf_out_copy_user(void *dst, const void *src, unsigned long n)$/;"	f
arch_perf_out_copy_user	events/internal.h	188;"	d
arch_perf_update_userpage	events/core.c	/^void __weak arch_perf_update_userpage($/;"	f
arch_populate_kprobe_blacklist	kprobes.c	/^int __init __weak arch_populate_kprobe_blacklist(void)$/;"	f
arch_prctl_spec_ctrl_get	sys.c	/^int __weak arch_prctl_spec_ctrl_get(struct task_struct *t, unsigned long which)$/;"	f
arch_prctl_spec_ctrl_set	sys.c	/^int __weak arch_prctl_spec_ctrl_set(struct task_struct *t, unsigned long which,$/;"	f
arch_probe_nr_irqs	softirq.c	/^int __init __weak arch_probe_nr_irqs(void)$/;"	f
arch_ptrace_attach	ptrace.c	1234;"	d	file:
arch_read_relax	locking/spinlock.c	49;"	d	file:
arch_release_task_struct	fork.c	/^void __weak arch_release_task_struct(struct task_struct *tsk)$/;"	f
arch_remove_reservations	resource.c	/^void __weak arch_remove_reservations(struct resource *avail)$/;"	f
arch_resume_nosmt	power/hibernate.c	/^__weak int arch_resume_nosmt(void)$/;"	f
arch_scale_freq_capacity	sched/sched.h	/^unsigned long arch_scale_freq_capacity(int cpu)$/;"	f
arch_scale_freq_invariant	sched/sched.h	2312;"	d
arch_scale_freq_invariant	sched/sched.h	2315;"	d
arch_seccomp_spec_mitigate	seccomp.c	/^void __weak arch_seccomp_spec_mitigate(struct task_struct *task) { }$/;"	f
arch_show_interrupts	irq/proc.c	/^int __weak arch_show_interrupts(struct seq_file *p, int prec)$/;"	f
arch_smt_update	cpu.c	/^void __weak arch_smt_update(void) { }$/;"	f
arch_spin_relax	locking/spinlock.c	55;"	d	file:
arch_suspend_disable_irqs	power/suspend.c	/^void __weak arch_suspend_disable_irqs(void)$/;"	f
arch_suspend_enable_irqs	power/suspend.c	/^void __weak arch_suspend_enable_irqs(void)$/;"	f
arch_syscall_addr	trace/trace_syscalls.c	/^unsigned long __init __weak arch_syscall_addr(int nr)$/;"	f
arch_syscall_match_sym_name	trace/trace_syscalls.c	/^static inline bool arch_syscall_match_sym_name(const char *sym, const char *name)$/;"	f	file:
arch_task_cache_init	fork.c	/^void __init __weak arch_task_cache_init(void) { }$/;"	f
arch_touch_nmi_watchdog	watchdog_hld.c	/^EXPORT_SYMBOL(arch_touch_nmi_watchdog);$/;"	v
arch_touch_nmi_watchdog	watchdog_hld.c	/^notrace void arch_touch_nmi_watchdog(void)$/;"	f
arch_unregister_hw_breakpoint	events/hw_breakpoint.c	/^__weak void arch_unregister_hw_breakpoint(struct perf_event *bp)$/;"	f
arch_update_cpu_topology	sched/topology.c	/^int __weak arch_update_cpu_topology(void)$/;"	f
arch_uprobe_copy_ixol	events/uprobes.c	/^void __weak arch_uprobe_copy_ixol(struct page *page, unsigned long vaddr,$/;"	f
arch_uprobe_ignore	events/uprobes.c	/^bool __weak arch_uprobe_ignore(struct arch_uprobe *aup, struct pt_regs *regs)$/;"	f
arch_uretprobe_is_alive	events/uprobes.c	/^bool __weak arch_uretprobe_is_alive(struct return_instance *ret, enum rp_check ctx,$/;"	f
arch_vma_name	signal.c	/^__weak const char *arch_vma_name(struct vm_area_struct *vma)$/;"	f
arch_vtime_task_switch	sched/cputime.c	/^void arch_vtime_task_switch(struct task_struct *prev)$/;"	f
arch_within_kprobe_blacklist	kprobes.c	/^bool __weak arch_within_kprobe_blacklist(unsigned long addr)$/;"	f
arch_write_relax	locking/spinlock.c	52;"	d	file:
area	kcov.c	/^	void			*area;$/;"	m	struct:kcov	file:
arg	workqueue.c	/^	void *arg;$/;"	m	struct:work_for_cpu	file:
arg_type_is_int_ptr	bpf/verifier.c	/^static bool arg_type_is_int_ptr(enum bpf_arg_type type)$/;"	f	file:
arg_type_is_mem_ptr	bpf/verifier.c	/^static bool arg_type_is_mem_ptr(enum bpf_arg_type type)$/;"	f	file:
arg_type_is_mem_size	bpf/verifier.c	/^static bool arg_type_is_mem_size(enum bpf_arg_type type)$/;"	f	file:
arg_type_may_be_refcounted	bpf/verifier.c	/^static bool arg_type_may_be_refcounted(enum bpf_arg_type type)$/;"	f	file:
argc	audit.h	/^			int			argc;$/;"	m	struct:audit_context::__anon53::__anon62
argc	trace/trace_probe.h	/^	int		argc;$/;"	m	struct:trace_probe_log
args	audit.h	/^			long args[6];$/;"	m	struct:audit_context::__anon53::__anon54
args	panic.c	/^	va_list args;$/;"	m	struct:warn_args	file:
args	trace/trace.h	/^	unsigned long		args[];$/;"	m	struct:syscall_trace_enter
args	trace/trace_probe.h	/^	struct probe_arg		args[];$/;"	m	struct:trace_probe	typeref:struct:trace_probe::probe_arg
argv	audit.h	/^	unsigned long	    argv[4];    \/* syscall arguments *\/$/;"	m	struct:audit_context
argv	trace/trace_probe.h	/^	const char	**argv;$/;"	m	struct:trace_probe_log
arm_all_kprobes	kprobes.c	/^static int arm_all_kprobes(void)$/;"	f	file:
arm_kprobe	kprobes.c	/^static int arm_kprobe(struct kprobe *kp)$/;"	f	file:
arm_kprobe_ftrace	kprobes.c	/^static int arm_kprobe_ftrace(struct kprobe *p)$/;"	f	file:
arm_kprobe_ftrace	kprobes.c	1033;"	d	file:
arm_timer	time/posix-cpu-timers.c	/^static void arm_timer(struct k_itimer *timer)$/;"	f	file:
array_map_alloc	bpf/arraymap.c	/^static struct bpf_map *array_map_alloc(union bpf_attr *attr)$/;"	f	file:
array_map_alloc_check	bpf/arraymap.c	/^int array_map_alloc_check(union bpf_attr *attr)$/;"	f
array_map_check_btf	bpf/arraymap.c	/^static int array_map_check_btf(const struct bpf_map *map,$/;"	f	file:
array_map_delete_elem	bpf/arraymap.c	/^static int array_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
array_map_direct_value_addr	bpf/arraymap.c	/^static int array_map_direct_value_addr(const struct bpf_map *map, u64 *imm,$/;"	f	file:
array_map_direct_value_meta	bpf/arraymap.c	/^static int array_map_direct_value_meta(const struct bpf_map *map, u64 imm,$/;"	f	file:
array_map_free	bpf/arraymap.c	/^static void array_map_free(struct bpf_map *map)$/;"	f	file:
array_map_gen_lookup	bpf/arraymap.c	/^static u32 array_map_gen_lookup(struct bpf_map *map, struct bpf_insn *insn_buf)$/;"	f	file:
array_map_get_next_key	bpf/arraymap.c	/^static int array_map_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f	file:
array_map_lookup_elem	bpf/arraymap.c	/^static void *array_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
array_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops array_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
array_map_seq_show_elem	bpf/arraymap.c	/^static void array_map_seq_show_elem(struct bpf_map *map, void *key,$/;"	f	file:
array_map_update_elem	bpf/arraymap.c	/^static int array_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
array_of_map_alloc	bpf/arraymap.c	/^static struct bpf_map *array_of_map_alloc(union bpf_attr *attr)$/;"	f	file:
array_of_map_free	bpf/arraymap.c	/^static void array_of_map_free(struct bpf_map *map)$/;"	f	file:
array_of_map_gen_lookup	bpf/arraymap.c	/^static u32 array_of_map_gen_lookup(struct bpf_map *map,$/;"	f	file:
array_of_map_lookup_elem	bpf/arraymap.c	/^static void *array_of_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
array_of_maps_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops array_of_maps_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
array_ops	bpf/btf.c	/^static struct btf_kind_operations array_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
assert_clock_updated	sched/sched.h	/^static inline void assert_clock_updated(struct rq *rq)$/;"	f
assert_list_leaf_cfs_rq	sched/fair.c	/^static inline void assert_list_leaf_cfs_rq(struct rq *rq)$/;"	f	file:
assert_rcu_or_pool_mutex	workqueue.c	362;"	d	file:
assert_rcu_or_wq_mutex	workqueue.c	367;"	d	file:
assert_rcu_or_wq_mutex_or_pool_mutex	workqueue.c	372;"	d	file:
assign_cfs_rq_runtime	sched/fair.c	/^static int assign_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
assign_lock_key	locking/lockdep.c	/^static bool assign_lock_key(struct lockdep_map *lock)$/;"	f	file:
assignment_str	trace/trace_events_hist.c	/^	char		*assignment_str[TRACING_MAP_VARS_MAX];$/;"	m	struct:hist_trigger_attrs	file:
asym_active_balance	sched/fair.c	/^asym_active_balance(struct lb_env *env)$/;"	f	file:
asym_cpu_capacity_level	sched/topology.c	/^*asym_cpu_capacity_level(const struct cpumask *cpu_map)$/;"	f	file:
asym_prefer_cpu	sched/sched.h	/^	int			asym_prefer_cpu;	\/* CPU of highest priority in group *\/$/;"	m	struct:sched_group
async	rcu/rcuperf.c	/^	void (*async)(struct rcu_head *head, rcu_callback_t func);$/;"	m	struct:rcu_perf_ops	file:
async_entry	async.c	/^struct async_entry {$/;"	s	file:
async_run_entry_fn	async.c	/^static void async_run_entry_fn(struct work_struct *work)$/;"	f	file:
async_schedule_node	async.c	/^EXPORT_SYMBOL_GPL(async_schedule_node);$/;"	v
async_schedule_node	async.c	/^async_cookie_t async_schedule_node(async_func_t func, void *data, int node)$/;"	f
async_schedule_node_domain	async.c	/^EXPORT_SYMBOL_GPL(async_schedule_node_domain);$/;"	v
async_schedule_node_domain	async.c	/^async_cookie_t async_schedule_node_domain(async_func_t func, void *data,$/;"	f
async_synchronize_cookie	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_cookie);$/;"	v
async_synchronize_cookie	async.c	/^void async_synchronize_cookie(async_cookie_t cookie)$/;"	f
async_synchronize_cookie_domain	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_cookie_domain);$/;"	v
async_synchronize_cookie_domain	async.c	/^void async_synchronize_cookie_domain(async_cookie_t cookie, struct async_domain *domain)$/;"	f
async_synchronize_full	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_full);$/;"	v
async_synchronize_full	async.c	/^void async_synchronize_full(void)$/;"	f
async_synchronize_full_domain	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_full_domain);$/;"	v
async_synchronize_full_domain	async.c	/^void async_synchronize_full_domain(struct async_domain *domain)$/;"	f
async_unregister_domain	async.c	/^EXPORT_SYMBOL_GPL(async_unregister_domain);$/;"	v
async_unregister_domain	async.c	/^void async_unregister_domain(struct async_domain *domain)$/;"	f
atomic_dec_and_mutex_lock	locking/mutex.c	/^EXPORT_SYMBOL(atomic_dec_and_mutex_lock);$/;"	v
atomic_dec_and_mutex_lock	locking/mutex.c	/^int atomic_dec_and_mutex_lock(atomic_t *cnt, struct mutex *lock)$/;"	f
atomic_inc_below	ucount.c	/^static inline bool atomic_inc_below(atomic_t *v, int u)$/;"	f	file:
atomic_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_call_chain);$/;"	v
atomic_notifier_call_chain	notifier.c	/^NOKPROBE_SYMBOL(atomic_notifier_call_chain);$/;"	v
atomic_notifier_call_chain	notifier.c	/^int atomic_notifier_call_chain(struct atomic_notifier_head *nh,$/;"	f
atomic_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_chain_register);$/;"	v
atomic_notifier_chain_register	notifier.c	/^int atomic_notifier_chain_register(struct atomic_notifier_head *nh,$/;"	f
atomic_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_chain_unregister);$/;"	v
atomic_notifier_chain_unregister	notifier.c	/^int atomic_notifier_chain_unregister(struct atomic_notifier_head *nh,$/;"	f
attach_entity_cfs_rq	sched/fair.c	/^static void attach_entity_cfs_rq(struct sched_entity *se)$/;"	f	file:
attach_entity_load_avg	sched/fair.c	/^attach_entity_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags) {}$/;"	f	file:
attach_entity_load_avg	sched/fair.c	/^static void attach_entity_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
attach_in_progress	cgroup/cpuset.c	/^	int attach_in_progress;$/;"	m	struct:cpuset	file:
attach_one_task	sched/fair.c	/^static void attach_one_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
attach_pid	pid.c	/^void attach_pid(struct task_struct *task, enum pid_type type)$/;"	f
attach_sb_event	events/core.c	/^static void attach_sb_event(struct perf_event *event)$/;"	f	file:
attach_task	sched/fair.c	/^static void attach_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
attach_task_cfs_rq	sched/fair.c	/^static void attach_task_cfs_rq(struct task_struct *p)$/;"	f	file:
attach_tasks	sched/fair.c	/^static void attach_tasks(struct lb_env *env)$/;"	f	file:
attach_to_pi_owner	futex.c	/^static int attach_to_pi_owner(u32 __user *uaddr, u32 uval, union futex_key *key,$/;"	f	file:
attach_to_pi_state	futex.c	/^static int attach_to_pi_state(u32 __user *uaddr, u32 uval,$/;"	f	file:
attr	audit.h	/^			struct mq_attr		attr;$/;"	m	struct:audit_context::__anon53::__anon59	typeref:struct:audit_context::__anon53::__anon59::mq_attr
attr	futex.c	/^	struct fault_attr attr;$/;"	m	struct:__anon92	typeref:struct:__anon92::fault_attr	file:
attr	padata.c	/^	struct attribute attr;$/;"	m	struct:padata_sysfs_entry	typeref:struct:padata_sysfs_entry::attribute	file:
attr2pentry	padata.c	891;"	d	file:
attr_group	power/hibernate.c	/^static const struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_group	power/main.c	/^static const struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_set	sched/cpufreq_schedutil.c	/^	struct gov_attr_set	attr_set;$/;"	m	struct:sugov_tunables	typeref:struct:sugov_tunables::gov_attr_set	file:
attrs	dma/mapping.c	/^	unsigned long	attrs;$/;"	m	struct:dma_devres	file:
attrs	module.c	/^	struct bin_attribute attrs[0];$/;"	m	struct:module_notes_attrs	typeref:struct:module_notes_attrs::bin_attribute	file:
attrs	module.c	/^	struct module_sect_attr attrs[0];$/;"	m	struct:module_sect_attrs	typeref:struct:module_sect_attrs::module_sect_attr	file:
attrs	params.c	/^	struct param_attribute attrs[0];$/;"	m	struct:module_param_attrs	typeref:struct:module_param_attrs::param_attribute	file:
attrs	trace/trace_events_hist.c	/^	struct hist_trigger_attrs	*attrs;$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::hist_trigger_attrs	file:
attrs	workqueue.c	/^	struct workqueue_attrs	*attrs;		\/* I: worker attributes *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::workqueue_attrs	file:
attrs	workqueue.c	/^	struct workqueue_attrs	*attrs;		\/* attrs to apply *\/$/;"	m	struct:apply_wqattrs_ctx	typeref:struct:apply_wqattrs_ctx::workqueue_attrs	file:
audit_actions_logged	seccomp.c	/^static void audit_actions_logged(u32 actions_logged, u32 old_actions_logged,$/;"	f	file:
audit_add_rule	auditfilter.c	/^static inline int audit_add_rule(struct audit_entry *entry)$/;"	f	file:
audit_add_to_parent	audit_watch.c	/^static void audit_add_to_parent(struct audit_krule *krule,$/;"	f	file:
audit_add_tree_rule	audit.h	312;"	d
audit_add_tree_rule	audit_tree.c	/^int audit_add_tree_rule(struct audit_krule *rule)$/;"	f
audit_add_watch	audit.h	298;"	d
audit_add_watch	audit_watch.c	/^int audit_add_watch(struct audit_krule *krule, struct list_head **list)$/;"	f
audit_alloc	auditsc.c	/^int audit_alloc(struct task_struct *tsk)$/;"	f
audit_alloc_context	auditsc.c	/^static inline struct audit_context *audit_alloc_context(enum audit_state state)$/;"	f	file:
audit_alloc_mark	audit.h	303;"	d
audit_alloc_mark	audit_fsnotify.c	/^struct audit_fsnotify_mark *audit_alloc_mark(struct audit_krule *krule, char *pathname, int len)$/;"	f
audit_alloc_name	auditsc.c	/^static struct audit_names *audit_alloc_name(struct audit_context *context,$/;"	f	file:
audit_autoremove_mark_rule	audit_fsnotify.c	/^static void audit_autoremove_mark_rule(struct audit_fsnotify_mark *audit_mark)$/;"	f	file:
audit_aux_data	auditsc.c	/^struct audit_aux_data {$/;"	s	file:
audit_aux_data_bprm_fcaps	auditsc.c	/^struct audit_aux_data_bprm_fcaps {$/;"	s	file:
audit_aux_data_pids	auditsc.c	/^struct audit_aux_data_pids {$/;"	s	file:
audit_backlog_limit	audit.c	/^static u32	audit_backlog_limit = 64;$/;"	v	file:
audit_backlog_limit_set	audit.c	/^static int __init audit_backlog_limit_set(char *str)$/;"	f	file:
audit_backlog_wait_time	audit.c	/^static u32	audit_backlog_wait_time = AUDIT_BACKLOG_WAIT_TIME;$/;"	v	file:
audit_bind	audit.c	/^static int audit_bind(struct net *net, int group)$/;"	f	file:
audit_buffer	audit.c	/^struct audit_buffer {$/;"	s	file:
audit_buffer_alloc	audit.c	/^static struct audit_buffer *audit_buffer_alloc(struct audit_context *ctx,$/;"	f	file:
audit_buffer_cache	audit.c	/^static struct kmem_cache *audit_buffer_cache;$/;"	v	typeref:struct:kmem_cache	file:
audit_buffer_free	audit.c	/^static void audit_buffer_free(struct audit_buffer *ab)$/;"	f	file:
audit_cap_data	audit.h	/^struct audit_cap_data {$/;"	s
audit_chunk	audit_tree.c	/^struct audit_chunk {$/;"	s	file:
audit_cmd_mutex	audit.c	/^} audit_cmd_mutex;$/;"	v	typeref:struct:audit_ctl_mutex	file:
audit_comparator	auditfilter.c	/^int audit_comparator(u32 left, u32 op, u32 right)$/;"	f
audit_compare_dname_path	auditfilter.c	/^int audit_compare_dname_path(const struct qstr *dname, const char *path, int parentlen)$/;"	f
audit_compare_gid	auditsc.c	/^static int audit_compare_gid(kgid_t gid,$/;"	f	file:
audit_compare_rule	auditfilter.c	/^static int audit_compare_rule(struct audit_krule *a, struct audit_krule *b)$/;"	f	file:
audit_compare_uid	auditsc.c	/^static int audit_compare_uid(kuid_t uid,$/;"	f	file:
audit_context	audit.h	/^struct audit_context {$/;"	s
audit_copy_fcaps	auditsc.c	/^static inline int audit_copy_fcaps(struct audit_names *name,$/;"	f	file:
audit_copy_inode	auditsc.c	/^static void audit_copy_inode(struct audit_names *name,$/;"	f	file:
audit_core_dumps	auditsc.c	/^void audit_core_dumps(long signr)$/;"	f
audit_ctl_lock	audit.c	/^void audit_ctl_lock(void)$/;"	f
audit_ctl_mutex	audit.c	/^static struct audit_ctl_mutex {$/;"	s	file:
audit_ctl_owner_current	audit.c	/^static bool audit_ctl_owner_current(void)$/;"	f	file:
audit_ctl_unlock	audit.c	/^void audit_ctl_unlock(void)$/;"	f
audit_data_to_entry	auditfilter.c	/^static struct audit_entry *audit_data_to_entry(struct audit_rule_data *data,$/;"	f	file:
audit_default	audit.c	/^static u32	audit_default = AUDIT_OFF;$/;"	v	file:
audit_del_rule	auditfilter.c	/^int audit_del_rule(struct audit_entry *entry)$/;"	f
audit_do_config_change	audit.c	/^static int audit_do_config_change(char *function_name, u32 *to_change, u32 new)$/;"	f	file:
audit_dupe_exe	audit.h	309;"	d
audit_dupe_exe	audit_watch.c	/^int audit_dupe_exe(struct audit_krule *new, struct audit_krule *old)$/;"	f
audit_dupe_lsm_field	auditfilter.c	/^static inline int audit_dupe_lsm_field(struct audit_field *df,$/;"	f	file:
audit_dupe_rule	auditfilter.c	/^struct audit_entry *audit_dupe_rule(struct audit_krule *old)$/;"	f
audit_dupe_watch	audit_watch.c	/^static struct audit_watch *audit_dupe_watch(struct audit_watch *old)$/;"	f	file:
audit_enable	audit.c	/^static int __init audit_enable(char *str)$/;"	f	file:
audit_enabled	audit.c	/^EXPORT_SYMBOL_GPL(audit_enabled);$/;"	v
audit_enabled	audit.c	/^u32		audit_enabled = AUDIT_OFF;$/;"	v
audit_entry	audit.h	/^struct audit_entry {$/;"	s
audit_ever_enabled	audit.c	/^bool		audit_ever_enabled = !!AUDIT_OFF;$/;"	v
audit_exe_compare	audit.h	308;"	d
audit_exe_compare	audit_watch.c	/^int audit_exe_compare(struct task_struct *tsk, struct audit_fsnotify_mark *mark)$/;"	f
audit_expand	audit.c	/^static inline int audit_expand(struct audit_buffer *ab, int extra)$/;"	f	file:
audit_failure	audit.c	/^static u32	audit_failure = AUDIT_FAIL_PRINTK;$/;"	v	file:
audit_feature_names	audit.c	/^static char *audit_feature_names[2] = {$/;"	v	file:
audit_field_compare	auditsc.c	/^static int audit_field_compare(struct task_struct *tsk,$/;"	f	file:
audit_field_valid	auditfilter.c	/^static int audit_field_valid(struct audit_entry *entry, struct audit_field *f)$/;"	f	file:
audit_filter	auditfilter.c	/^int audit_filter(int msgtype, unsigned int listtype)$/;"	f
audit_filter_inode_name	auditsc.c	/^static int audit_filter_inode_name(struct task_struct *tsk,$/;"	f	file:
audit_filter_inodes	audit.h	325;"	d
audit_filter_inodes	auditsc.c	/^void audit_filter_inodes(struct task_struct *tsk, struct audit_context *ctx)$/;"	f
audit_filter_list	auditfilter.c	/^struct list_head audit_filter_list[AUDIT_NR_FILTERS] = {$/;"	v	typeref:struct:list_head
audit_filter_mutex	auditfilter.c	/^DEFINE_MUTEX(audit_filter_mutex);$/;"	v
audit_filter_rules	auditsc.c	/^static int audit_filter_rules(struct task_struct *tsk,$/;"	f	file:
audit_filter_syscall	auditsc.c	/^static enum audit_state audit_filter_syscall(struct task_struct *tsk,$/;"	f	file:
audit_filter_task	auditsc.c	/^static enum audit_state audit_filter_task(struct task_struct *tsk, char **key)$/;"	f	file:
audit_find_parent	audit_watch.c	/^static inline struct audit_parent *audit_find_parent(struct inode *inode)$/;"	f	file:
audit_find_rule	auditfilter.c	/^static struct audit_entry *audit_find_rule(struct audit_entry *entry,$/;"	f	file:
audit_free_aux	auditsc.c	/^static inline void audit_free_aux(struct audit_context *context)$/;"	f	file:
audit_free_context	auditsc.c	/^static inline void audit_free_context(struct audit_context *context)$/;"	f	file:
audit_free_lsm_field	auditfilter.c	/^static void audit_free_lsm_field(struct audit_field *f)$/;"	f	file:
audit_free_module	auditsc.c	/^static inline void audit_free_module(struct audit_context *context)$/;"	f	file:
audit_free_names	auditsc.c	/^static inline void audit_free_names(struct audit_context *context)$/;"	f	file:
audit_free_parent	audit_watch.c	/^static void audit_free_parent(struct audit_parent *parent)$/;"	f	file:
audit_free_rule	auditfilter.c	/^static inline void audit_free_rule(struct audit_entry *e)$/;"	f	file:
audit_free_rule_rcu	auditfilter.c	/^void audit_free_rule_rcu(struct rcu_head *head)$/;"	f
audit_fsnotify_free_mark	audit_fsnotify.c	/^static void audit_fsnotify_free_mark(struct fsnotify_mark *mark)$/;"	f	file:
audit_fsnotify_group	audit_fsnotify.c	/^static struct fsnotify_group *audit_fsnotify_group;$/;"	v	typeref:struct:fsnotify_group	file:
audit_fsnotify_init	audit_fsnotify.c	/^device_initcall(audit_fsnotify_init);$/;"	v
audit_fsnotify_init	audit_fsnotify.c	/^static int __init audit_fsnotify_init(void)$/;"	f	file:
audit_fsnotify_mark	audit_fsnotify.c	/^struct audit_fsnotify_mark {$/;"	s	file:
audit_fsnotify_mark_free	audit_fsnotify.c	/^static void audit_fsnotify_mark_free(struct audit_fsnotify_mark *audit_mark)$/;"	f	file:
audit_get_feature	audit.c	/^static int audit_get_feature(struct sk_buff *skb)$/;"	f	file:
audit_get_nd	audit_watch.c	/^static int audit_get_nd(struct audit_watch *watch, struct path *parent)$/;"	f	file:
audit_get_parent	audit_watch.c	/^static void audit_get_parent(struct audit_parent *parent)$/;"	f	file:
audit_get_sk	audit.c	/^static struct sock *audit_get_sk(const struct net *net)$/;"	f	file:
audit_get_stamp	audit.c	/^static inline void audit_get_stamp(struct audit_context *ctx,$/;"	f	file:
audit_get_tty	audit.c	/^struct tty_struct *audit_get_tty(void)$/;"	f
audit_get_watch	audit.h	296;"	d
audit_get_watch	audit_watch.c	/^void audit_get_watch(struct audit_watch *watch)$/;"	f
audit_gid_comparator	auditfilter.c	/^int audit_gid_comparator(kgid_t left, u32 op, kgid_t right)$/;"	f
audit_hash_ino	audit.h	/^static inline int audit_hash_ino(u32 ino)$/;"	f
audit_hold_queue	audit.c	/^static struct sk_buff_head audit_hold_queue;$/;"	v	typeref:struct:sk_buff_head	file:
audit_in_mask	auditsc.c	/^static int audit_in_mask(const struct audit_krule *rule, unsigned long val)$/;"	f	file:
audit_init	audit.c	/^postcore_initcall(audit_init);$/;"	v
audit_init	audit.c	/^static int __init audit_init(void)$/;"	f	file:
audit_init_entry	auditfilter.c	/^static inline struct audit_entry *audit_init_entry(u32 field_count)$/;"	f	file:
audit_init_parent	audit_watch.c	/^static struct audit_parent *audit_init_parent(struct path *path)$/;"	f	file:
audit_init_watch	audit_watch.c	/^static struct audit_watch *audit_init_watch(char *path)$/;"	f	file:
audit_initialized	audit.c	/^static int	audit_initialized;$/;"	v	file:
audit_inode_hash	audit.c	/^struct list_head audit_inode_hash[AUDIT_INODE_BUCKETS];$/;"	v	typeref:struct:list_head
audit_kill_trees	audit.h	318;"	d
audit_kill_trees	audit_tree.c	/^void audit_kill_trees(struct audit_context *context)$/;"	f
audit_killed_trees	auditsc.c	/^struct list_head *audit_killed_trees(void)$/;"	f
audit_krule_to_data	auditfilter.c	/^static struct audit_rule_data *audit_krule_to_data(struct audit_krule *krule)$/;"	f	file:
audit_launch_prune	audit_tree.c	/^static int audit_launch_prune(void)$/;"	f	file:
audit_list_rules	auditfilter.c	/^static void audit_list_rules(int seq, struct sk_buff_head *q)$/;"	f	file:
audit_list_rules_send	auditfilter.c	/^int audit_list_rules_send(struct sk_buff *request_skb, int seq)$/;"	f
audit_log	audit.c	/^EXPORT_SYMBOL(audit_log);$/;"	v
audit_log	audit.c	/^void audit_log(struct audit_context *ctx, gfp_t gfp_mask, int type,$/;"	f
audit_log_cap	auditsc.c	/^static void audit_log_cap(struct audit_buffer *ab, char *prefix,$/;"	f	file:
audit_log_common_recv_msg	audit.c	/^static void audit_log_common_recv_msg(struct audit_context *context,$/;"	f	file:
audit_log_config_change	audit.c	/^static int audit_log_config_change(char *function_name, u32 new, u32 old,$/;"	f	file:
audit_log_d_path	audit.c	/^void audit_log_d_path(struct audit_buffer *ab, const char *prefix,$/;"	f
audit_log_d_path_exe	audit.c	/^void audit_log_d_path_exe(struct audit_buffer *ab,$/;"	f
audit_log_end	audit.c	/^EXPORT_SYMBOL(audit_log_end);$/;"	v
audit_log_end	audit.c	/^void audit_log_end(struct audit_buffer *ab)$/;"	f
audit_log_execve_info	auditsc.c	/^static void audit_log_execve_info(struct audit_context *context,$/;"	f	file:
audit_log_exit	auditsc.c	/^static void audit_log_exit(void)$/;"	f	file:
audit_log_fcaps	auditsc.c	/^static void audit_log_fcaps(struct audit_buffer *ab, struct audit_names *name)$/;"	f	file:
audit_log_feature_change	audit.c	/^static void audit_log_feature_change(int which, u32 old_feature, u32 new_feature,$/;"	f	file:
audit_log_format	audit.c	/^EXPORT_SYMBOL(audit_log_format);$/;"	v
audit_log_format	audit.c	/^void audit_log_format(struct audit_buffer *ab, const char *fmt, ...)$/;"	f
audit_log_key	audit.c	/^void audit_log_key(struct audit_buffer *ab, char *key)$/;"	f
audit_log_link_denied	audit.c	/^void audit_log_link_denied(const char *operation)$/;"	f
audit_log_lost	audit.c	/^void audit_log_lost(const char *message)$/;"	f
audit_log_n_hex	audit.c	/^void audit_log_n_hex(struct audit_buffer *ab, const unsigned char *buf,$/;"	f
audit_log_n_string	audit.c	/^void audit_log_n_string(struct audit_buffer *ab, const char *string,$/;"	f
audit_log_n_untrustedstring	audit.c	/^void audit_log_n_untrustedstring(struct audit_buffer *ab, const char *string,$/;"	f
audit_log_name	auditsc.c	/^static void audit_log_name(struct audit_context *context, struct audit_names *n,$/;"	f	file:
audit_log_ntp_val	auditsc.c	/^static void audit_log_ntp_val(const struct audit_ntp_data *ad,$/;"	f	file:
audit_log_pid_context	auditsc.c	/^static int audit_log_pid_context(struct audit_context *context, pid_t pid,$/;"	f	file:
audit_log_proctitle	auditsc.c	/^static void audit_log_proctitle(void)$/;"	f	file:
audit_log_rule_change	auditfilter.c	/^static void audit_log_rule_change(char *action, struct audit_krule *rule, int res)$/;"	f	file:
audit_log_session_info	audit.c	/^void audit_log_session_info(struct audit_buffer *ab)$/;"	f
audit_log_set_loginuid	audit.c	/^static void audit_log_set_loginuid(kuid_t koldloginuid, kuid_t kloginuid,$/;"	f	file:
audit_log_start	audit.c	/^EXPORT_SYMBOL(audit_log_start);$/;"	v
audit_log_start	audit.c	/^struct audit_buffer *audit_log_start(struct audit_context *ctx, gfp_t gfp_mask,$/;"	f
audit_log_task	auditsc.c	/^static void audit_log_task(struct audit_buffer *ab)$/;"	f	file:
audit_log_task_context	audit.c	/^EXPORT_SYMBOL(audit_log_task_context);$/;"	v
audit_log_task_context	audit.c	/^int audit_log_task_context(struct audit_buffer *ab)$/;"	f
audit_log_task_info	audit.c	/^EXPORT_SYMBOL(audit_log_task_info);$/;"	v
audit_log_task_info	audit.c	/^void audit_log_task_info(struct audit_buffer *ab)$/;"	f
audit_log_untrustedstring	audit.c	/^void audit_log_untrustedstring(struct audit_buffer *ab, const char *string)$/;"	f
audit_log_user_recv_msg	audit.c	/^static inline void audit_log_user_recv_msg(struct audit_buffer **ab,$/;"	f	file:
audit_log_vformat	audit.c	/^static void audit_log_vformat(struct audit_buffer *ab, const char *fmt,$/;"	f	file:
audit_lost	audit.c	/^static atomic_t	audit_lost = ATOMIC_INIT(0);$/;"	v	file:
audit_make_reply	audit.c	/^struct sk_buff *audit_make_reply(int seq, int type, int done,$/;"	f
audit_make_tree	audit.h	313;"	d
audit_make_tree	audit_tree.c	/^int audit_make_tree(struct audit_krule *rule, char *pathname, u32 op)$/;"	f
audit_mark	audit_tree.c	/^static inline struct audit_tree_mark *audit_mark(struct fsnotify_mark *mark)$/;"	f	file:
audit_mark_compare	audit.h	307;"	d
audit_mark_compare	audit_fsnotify.c	/^int audit_mark_compare(struct audit_fsnotify_mark *mark, unsigned long ino, dev_t dev)$/;"	f
audit_mark_fsnotify_ops	audit_fsnotify.c	/^static const struct fsnotify_ops audit_mark_fsnotify_ops = {$/;"	v	typeref:struct:fsnotify_ops	file:
audit_mark_handle_event	audit_fsnotify.c	/^static int audit_mark_handle_event(struct fsnotify_group *group,$/;"	f	file:
audit_mark_log_rule_change	audit_fsnotify.c	/^static void audit_mark_log_rule_change(struct audit_fsnotify_mark *audit_mark, char *op)$/;"	f	file:
audit_mark_path	audit.h	304;"	d
audit_mark_path	audit_fsnotify.c	/^char *audit_mark_path(struct audit_fsnotify_mark *mark)$/;"	f
audit_mark_put_chunk	audit_tree.c	/^static void audit_mark_put_chunk(struct audit_chunk *chunk)$/;"	f	file:
audit_match_class	auditfilter.c	/^int audit_match_class(int class, unsigned syscall)$/;"	f
audit_match_class_bits	auditfilter.c	/^static inline int audit_match_class_bits(int class, u32 *mask)$/;"	f	file:
audit_match_filetype	auditsc.c	/^static int audit_match_filetype(struct audit_context *ctx, int val)$/;"	f	file:
audit_match_perm	auditsc.c	/^static int audit_match_perm(struct audit_context *ctx, int mask)$/;"	f	file:
audit_match_signal	auditfilter.c	/^static int audit_match_signal(struct audit_entry *entry)$/;"	f	file:
audit_n_rules	auditsc.c	/^int audit_n_rules;$/;"	v
audit_names	audit.h	/^struct audit_names {$/;"	s
audit_net	audit.c	/^struct audit_net {$/;"	s	file:
audit_net_exit	audit.c	/^static void __net_exit audit_net_exit(struct net *net)$/;"	f	file:
audit_net_id	audit.c	/^static unsigned int audit_net_id;$/;"	v	file:
audit_net_init	audit.c	/^static int __net_init audit_net_init(struct net *net)$/;"	f	file:
audit_netlink_list	audit.h	/^struct audit_netlink_list {$/;"	s
audit_netlink_ok	audit.c	/^static int audit_netlink_ok(struct sk_buff *skb, u16 msg_type)$/;"	f	file:
audit_ops	auditfilter.c	/^static u32 audit_ops[] =$/;"	v	file:
audit_pack_string	auditfilter.c	/^static inline size_t audit_pack_string(void **bufp, const char *str)$/;"	f	file:
audit_panic	audit.c	/^void audit_panic(const char *message)$/;"	f
audit_parent	audit_watch.c	/^struct audit_parent {$/;"	s	file:
audit_proctitle	audit.h	/^struct audit_proctitle {$/;"	s
audit_proctitle_free	auditsc.c	/^static inline void audit_proctitle_free(struct audit_context *context)$/;"	f	file:
audit_proctitle_rtrim	auditsc.c	/^static inline int audit_proctitle_rtrim(char *proctitle, int len)$/;"	f	file:
audit_put_chunk	audit_tree.c	/^void audit_put_chunk(struct audit_chunk *chunk)$/;"	f
audit_put_parent	audit_watch.c	/^static void audit_put_parent(struct audit_parent *parent)$/;"	f	file:
audit_put_tree	audit.h	315;"	d
audit_put_tree	audit_tree.c	/^void audit_put_tree(struct audit_tree *tree)$/;"	f
audit_put_tty	audit.c	/^void audit_put_tty(struct tty_struct *tty)$/;"	f
audit_put_watch	audit.h	295;"	d
audit_put_watch	audit_watch.c	/^void audit_put_watch(struct audit_watch *watch)$/;"	f
audit_queue	audit.c	/^static struct sk_buff_head audit_queue;$/;"	v	typeref:struct:sk_buff_head	file:
audit_rate_check	audit.c	/^static inline int audit_rate_check(void)$/;"	f	file:
audit_rate_limit	audit.c	/^static u32	audit_rate_limit;$/;"	v	file:
audit_receive	audit.c	/^static void audit_receive(struct sk_buff  *skb)$/;"	f	file:
audit_receive_msg	audit.c	/^static int audit_receive_msg(struct sk_buff *skb, struct nlmsghdr *nlh)$/;"	f	file:
audit_register_class	auditfilter.c	/^int __init audit_register_class(int class, unsigned *list)$/;"	f
audit_remove_mark	audit.h	305;"	d
audit_remove_mark	audit_fsnotify.c	/^void audit_remove_mark(struct audit_fsnotify_mark *audit_mark)$/;"	f
audit_remove_mark_rule	audit.h	306;"	d
audit_remove_mark_rule	audit_fsnotify.c	/^void audit_remove_mark_rule(struct audit_krule *krule)$/;"	f
audit_remove_parent_watches	audit_watch.c	/^static void audit_remove_parent_watches(struct audit_parent *parent)$/;"	f	file:
audit_remove_tree_rule	audit.h	311;"	d
audit_remove_tree_rule	audit_tree.c	/^int audit_remove_tree_rule(struct audit_krule *rule)$/;"	f
audit_remove_watch	audit_watch.c	/^static void audit_remove_watch(struct audit_watch *watch)$/;"	f	file:
audit_remove_watch_rule	audit.h	299;"	d
audit_remove_watch_rule	audit_watch.c	/^void audit_remove_watch_rule(struct audit_krule *krule)$/;"	f
audit_replace	audit.c	/^static int audit_replace(struct pid *pid)$/;"	f	file:
audit_reply	audit.c	/^struct audit_reply {$/;"	s	file:
audit_retry_queue	audit.c	/^static struct sk_buff_head audit_retry_queue;$/;"	v	typeref:struct:sk_buff_head	file:
audit_rule_change	auditfilter.c	/^int audit_rule_change(int type, int seq, void *data, size_t datasz)$/;"	f
audit_rules_list	auditfilter.c	/^static struct list_head audit_rules_list[AUDIT_NR_FILTERS] = {$/;"	v	typeref:struct:list_head	file:
audit_schedule_prune	audit_tree.c	/^static void audit_schedule_prune(void)$/;"	f	file:
audit_seccomp	auditsc.c	/^void audit_seccomp(unsigned long syscall, long signr, int code)$/;"	f
audit_seccomp_actions_logged	auditsc.c	/^void audit_seccomp_actions_logged(const char *names, const char *old_names,$/;"	f
audit_send_list	audit.c	/^int audit_send_list(void *_dest)$/;"	f
audit_send_reply	audit.c	/^static void audit_send_reply(struct sk_buff *request_skb, int seq, int type, int done,$/;"	f	file:
audit_send_reply_thread	audit.c	/^static int audit_send_reply_thread(void *arg)$/;"	f	file:
audit_serial	audit.c	/^unsigned int audit_serial(void)$/;"	f
audit_set_auditable	auditsc.c	/^static void audit_set_auditable(struct audit_context *ctx)$/;"	f	file:
audit_set_backlog_limit	audit.c	/^static int audit_set_backlog_limit(u32 limit)$/;"	f	file:
audit_set_backlog_wait_time	audit.c	/^static int audit_set_backlog_wait_time(u32 timeout)$/;"	f	file:
audit_set_enabled	audit.c	/^static int audit_set_enabled(u32 state)$/;"	f	file:
audit_set_failure	audit.c	/^static int audit_set_failure(u32 state)$/;"	f	file:
audit_set_feature	audit.c	/^static int audit_set_feature(struct sk_buff *skb)$/;"	f	file:
audit_set_loginuid	audit.c	/^int audit_set_loginuid(kuid_t loginuid)$/;"	f
audit_set_loginuid_perm	audit.c	/^static int audit_set_loginuid_perm(kuid_t loginuid)$/;"	f	file:
audit_set_rate_limit	audit.c	/^static int audit_set_rate_limit(u32 limit)$/;"	f	file:
audit_sig_pid	audit.c	/^pid_t		audit_sig_pid = -1;$/;"	v
audit_sig_sid	audit.c	/^u32		audit_sig_sid = 0;$/;"	v
audit_sig_uid	audit.c	/^kuid_t		audit_sig_uid = INVALID_UID;$/;"	v
audit_signal_info	audit.c	/^int audit_signal_info(int sig, struct task_struct *t)$/;"	f
audit_signal_info_syscall	audit.h	/^static inline int audit_signal_info_syscall(struct task_struct *t)$/;"	f
audit_signal_info_syscall	auditsc.c	/^int audit_signal_info_syscall(struct task_struct *t)$/;"	f
audit_signals	auditsc.c	/^int audit_signals;$/;"	v
audit_state	audit.h	/^enum audit_state {$/;"	g
audit_string_contains_control	audit.c	/^bool audit_string_contains_control(const char *string, size_t len)$/;"	f
audit_tag_tree	audit.h	316;"	d
audit_tag_tree	audit_tree.c	/^int audit_tag_tree(char *old, char *new)$/;"	f
audit_to_entry_common	auditfilter.c	/^static inline struct audit_entry *audit_to_entry_common(struct audit_rule_data *rule)$/;"	f	file:
audit_to_inode	auditfilter.c	/^static inline int audit_to_inode(struct audit_krule *krule,$/;"	f	file:
audit_to_op	auditfilter.c	/^static u32 audit_to_op(u32 op)$/;"	f	file:
audit_to_watch	audit.h	297;"	d
audit_to_watch	audit_watch.c	/^int audit_to_watch(struct audit_krule *krule, char *path, int len, u32 op)$/;"	f
audit_tree	audit_tree.c	/^struct audit_tree {$/;"	s	file:
audit_tree_destroy_watch	audit_tree.c	/^static void audit_tree_destroy_watch(struct fsnotify_mark *mark)$/;"	f	file:
audit_tree_freeing_mark	audit_tree.c	/^static void audit_tree_freeing_mark(struct fsnotify_mark *mark,$/;"	f	file:
audit_tree_group	audit_tree.c	/^static struct fsnotify_group *audit_tree_group;$/;"	v	typeref:struct:fsnotify_group	file:
audit_tree_handle_event	audit_tree.c	/^static int audit_tree_handle_event(struct fsnotify_group *group,$/;"	f	file:
audit_tree_init	audit_tree.c	/^__initcall(audit_tree_init);$/;"	v
audit_tree_init	audit_tree.c	/^static int __init audit_tree_init(void)$/;"	f	file:
audit_tree_log_remove_rule	audit_tree.c	/^static void audit_tree_log_remove_rule(struct audit_context *context,$/;"	f	file:
audit_tree_lookup	audit_tree.c	/^struct audit_chunk *audit_tree_lookup(const struct inode *inode)$/;"	f
audit_tree_mark	audit_tree.c	/^struct audit_tree_mark {$/;"	s	file:
audit_tree_match	audit_tree.c	/^bool audit_tree_match(struct audit_chunk *chunk, struct audit_tree *tree)$/;"	f
audit_tree_ops	audit_tree.c	/^static const struct fsnotify_ops audit_tree_ops = {$/;"	v	typeref:struct:fsnotify_ops	file:
audit_tree_path	audit.h	317;"	d
audit_tree_path	audit_tree.c	/^const char *audit_tree_path(struct audit_tree *tree)$/;"	f
audit_tree_refs	auditsc.c	/^struct audit_tree_refs {$/;"	s	file:
audit_trim_trees	audit.h	314;"	d
audit_trim_trees	audit_tree.c	/^void audit_trim_trees(void)$/;"	f
audit_uid_comparator	auditfilter.c	/^int audit_uid_comparator(kuid_t left, u32 op, kuid_t right)$/;"	f
audit_unpack_string	auditfilter.c	/^char *audit_unpack_string(void **bufp, size_t *remain, size_t len)$/;"	f
audit_update_lsm_rules	auditfilter.c	/^int audit_update_lsm_rules(void)$/;"	f
audit_update_mark	audit_fsnotify.c	/^static void audit_update_mark(struct audit_fsnotify_mark *audit_mark,$/;"	f	file:
audit_update_watch	audit_watch.c	/^static void audit_update_watch(struct audit_parent *parent,$/;"	f	file:
audit_watch	audit_watch.c	/^struct audit_watch {$/;"	s	file:
audit_watch_compare	audit.h	301;"	d
audit_watch_compare	audit_watch.c	/^int audit_watch_compare(struct audit_watch *watch, unsigned long ino, dev_t dev)$/;"	f
audit_watch_free_mark	audit_watch.c	/^static void audit_watch_free_mark(struct fsnotify_mark *entry)$/;"	f	file:
audit_watch_fsnotify_ops	audit_watch.c	/^static const struct fsnotify_ops audit_watch_fsnotify_ops = {$/;"	v	typeref:struct:fsnotify_ops	file:
audit_watch_group	audit_watch.c	/^static struct fsnotify_group *audit_watch_group;$/;"	v	typeref:struct:fsnotify_group	file:
audit_watch_handle_event	audit_watch.c	/^static int audit_watch_handle_event(struct fsnotify_group *group,$/;"	f	file:
audit_watch_init	audit_watch.c	/^device_initcall(audit_watch_init);$/;"	v
audit_watch_init	audit_watch.c	/^static int __init audit_watch_init(void)$/;"	f	file:
audit_watch_log_rule_change	audit_watch.c	/^static void audit_watch_log_rule_change(struct audit_krule *r, struct audit_watch *w, char *op)$/;"	f	file:
audit_watch_path	audit.h	300;"	d
audit_watch_path	audit_watch.c	/^char *audit_watch_path(struct audit_watch *watch)$/;"	f
auditd_conn	audit.c	/^} *auditd_conn = NULL;$/;"	v	typeref:struct:auditd_connection	file:
auditd_conn_free	audit.c	/^static void auditd_conn_free(struct rcu_head *rcu)$/;"	f	file:
auditd_connection	audit.c	/^static struct auditd_connection {$/;"	s	file:
auditd_pid_vnr	audit.c	/^static pid_t auditd_pid_vnr(void)$/;"	f	file:
auditd_reset	audit.c	/^static void auditd_reset(const struct auditd_connection *ac)$/;"	f	file:
auditd_send_unicast_skb	audit.c	/^static int auditd_send_unicast_skb(struct sk_buff *skb)$/;"	f	file:
auditd_set	audit.c	/^static int auditd_set(struct pid *pid, u32 portid, struct net *net)$/;"	f	file:
auditd_test_task	audit.c	/^int auditd_test_task(struct task_struct *task)$/;"	f
auditsc_get_stamp	audit.h	294;"	d
auditsc_get_stamp	auditsc.c	/^int auditsc_get_stamp(struct audit_context *ctx,$/;"	f
autogroup	sched/autogroup.h	/^struct autogroup {$/;"	s
autogroup	sched/sched.h	/^	struct autogroup	*autogroup;$/;"	m	struct:task_group	typeref:struct:task_group::autogroup
autogroup_create	sched/autogroup.c	/^static inline struct autogroup *autogroup_create(void)$/;"	f	file:
autogroup_default	sched/autogroup.c	/^static struct autogroup autogroup_default;$/;"	v	typeref:struct:autogroup	file:
autogroup_destroy	sched/autogroup.c	/^static inline void autogroup_destroy(struct kref *kref)$/;"	f	file:
autogroup_free	sched/autogroup.c	/^void autogroup_free(struct task_group *tg)$/;"	f
autogroup_free	sched/autogroup.h	/^static inline void autogroup_free(struct task_group *tg) { }$/;"	f
autogroup_init	sched/autogroup.c	/^void __init autogroup_init(struct task_struct *init_task)$/;"	f
autogroup_init	sched/autogroup.h	/^static inline void autogroup_init(struct task_struct *init_task) {  }$/;"	f
autogroup_kref_get	sched/autogroup.c	/^static inline struct autogroup *autogroup_kref_get(struct autogroup *ag)$/;"	f	file:
autogroup_kref_put	sched/autogroup.c	/^static inline void autogroup_kref_put(struct autogroup *ag)$/;"	f	file:
autogroup_move_group	sched/autogroup.c	/^autogroup_move_group(struct task_struct *p, struct autogroup *ag)$/;"	f	file:
autogroup_path	sched/autogroup.c	/^int autogroup_path(struct task_group *tg, char *buf, int buflen)$/;"	f
autogroup_path	sched/autogroup.h	/^static inline int autogroup_path(struct task_group *tg, char *buf, int buflen)$/;"	f
autogroup_seq_nr	sched/autogroup.c	/^static atomic_t autogroup_seq_nr;$/;"	v	file:
autogroup_task_get	sched/autogroup.c	/^static inline struct autogroup *autogroup_task_get(struct task_struct *p)$/;"	f	file:
autogroup_task_group	sched/autogroup.h	/^autogroup_task_group(struct task_struct *p, struct task_group *tg)$/;"	f
autoremove_wake_function	sched/wait.c	/^EXPORT_SYMBOL(autoremove_wake_function);$/;"	v
autoremove_wake_function	sched/wait.c	/^int autoremove_wake_function(struct wait_queue_entry *wq_entry, unsigned mode, int sync, void *key)$/;"	f
autosleep	power/main.c	/^power_attr(autosleep);$/;"	v
autosleep_show	power/main.c	/^static ssize_t autosleep_show(struct kobject *kobj,$/;"	f	file:
autosleep_state	power/autosleep.c	/^static suspend_state_t autosleep_state;$/;"	v	file:
autosleep_store	power/main.c	/^static ssize_t autosleep_store(struct kobject *kobj,$/;"	f	file:
autosleep_wq	power/autosleep.c	/^static struct workqueue_struct *autosleep_wq;$/;"	v	typeref:struct:workqueue_struct	file:
autosleep_ws	power/autosleep.c	/^static struct wakeup_source *autosleep_ws;$/;"	v	typeref:struct:wakeup_source	file:
aux	audit.h	/^	struct audit_aux_data *aux;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_aux_data
aux_head	events/internal.h	/^	long				aux_head;$/;"	m	struct:ring_buffer
aux_mmap_count	events/internal.h	/^	atomic_t			aux_mmap_count;$/;"	m	struct:ring_buffer
aux_mmap_locked	events/internal.h	/^	unsigned long			aux_mmap_locked;$/;"	m	struct:ring_buffer
aux_nest	events/internal.h	/^	unsigned int			aux_nest;$/;"	m	struct:ring_buffer
aux_nr_pages	events/internal.h	/^	int				aux_nr_pages;$/;"	m	struct:ring_buffer
aux_overwrite	events/internal.h	/^	int				aux_overwrite;$/;"	m	struct:ring_buffer
aux_pages	events/internal.h	/^	void				**aux_pages;$/;"	m	struct:ring_buffer
aux_pgoff	events/internal.h	/^	unsigned long			aux_pgoff;$/;"	m	struct:ring_buffer
aux_pids	audit.h	/^	struct audit_aux_data *aux_pids;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_aux_data
aux_priv	events/internal.h	/^	void				*aux_priv;$/;"	m	struct:ring_buffer
aux_refcount	events/internal.h	/^	refcount_t			aux_refcount;$/;"	m	struct:ring_buffer
aux_wakeup	events/internal.h	/^	long				aux_wakeup;	\/* last aux_watermark boundary crossed by aux_head *\/$/;"	m	struct:ring_buffer
aux_watermark	events/internal.h	/^	long				aux_watermark;$/;"	m	struct:ring_buffer
available	irq/matrix.c	/^	unsigned int		available;$/;"	m	struct:cpumap	file:
available_clocksource_show	time/clocksource.c	/^static ssize_t available_clocksource_show(struct device *dev,$/;"	f	file:
available_idle_cpu	sched/core.c	/^int available_idle_cpu(int cpu)$/;"	f
avenrun	sched/loadavg.c	/^EXPORT_SYMBOL(avenrun); \/* should be removed *\/$/;"	v
avenrun	sched/loadavg.c	/^unsigned long avenrun[3];$/;"	v
avg	sched/sched.h	/^	struct sched_avg	avg;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_avg
avg_dl	sched/sched.h	/^	struct sched_avg	avg_dl;$/;"	m	struct:rq	typeref:struct:rq::sched_avg
avg_idle	sched/sched.h	/^	u64			avg_idle;$/;"	m	struct:rq
avg_irq	sched/sched.h	/^	struct sched_avg	avg_irq;$/;"	m	struct:rq	typeref:struct:rq::sched_avg
avg_load	sched/fair.c	/^	unsigned long avg_load;	\/* Average load across all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
avg_load	sched/fair.c	/^	unsigned long avg_load; \/*Avg load across the CPUs of the group *\/$/;"	m	struct:sg_lb_stats	file:
avg_rt	sched/sched.h	/^	struct sched_avg	avg_rt;$/;"	m	struct:rq	typeref:struct:rq::sched_avg
b	rcu/tree.h	/^	} b; \/* Bits. *\/$/;"	m	union:rcu_noqs	typeref:struct:rcu_noqs::__anon65
b_mutex	locking/test-ww_mutex.c	/^	struct ww_mutex *b_mutex;$/;"	m	struct:test_cycle	typeref:struct:test_cycle::ww_mutex	file:
b_mutex	locking/test-ww_mutex.c	/^	struct ww_mutex b_mutex;$/;"	m	struct:test_abba	typeref:struct:test_abba::ww_mutex	file:
b_rcu_perf_writer_finished	rcu/rcuperf.c	/^static unsigned long b_rcu_perf_writer_finished;$/;"	v	file:
b_rcu_perf_writer_started	rcu/rcuperf.c	/^static unsigned long b_rcu_perf_writer_started;$/;"	v	file:
b_ready	locking/test-ww_mutex.c	/^	struct completion b_ready;$/;"	m	struct:test_abba	typeref:struct:test_abba::completion	file:
b_signal	locking/test-ww_mutex.c	/^	struct completion b_signal;$/;"	m	struct:test_cycle	typeref:struct:test_cycle::completion	file:
bacct_add_tsk	tsacct.c	/^void bacct_add_tsk(struct user_namespace *user_ns,$/;"	f
backtrace_regression_test	backtracetest.c	/^module_init(backtrace_regression_test);$/;"	v
backtrace_regression_test	backtracetest.c	/^static int backtrace_regression_test(void)$/;"	f	file:
backtrace_test_irq	backtracetest.c	/^static void backtrace_test_irq(void)$/;"	f	file:
backtrace_test_irq_callback	backtracetest.c	/^static void backtrace_test_irq_callback(unsigned long data)$/;"	f	file:
backtrace_test_normal	backtracetest.c	/^static void backtrace_test_normal(void)$/;"	f	file:
backtrace_test_saved	backtracetest.c	/^static void backtrace_test_saved(void)$/;"	f	file:
backtrack_insn	bpf/verifier.c	/^static int backtrack_insn(struct bpf_verifier_env *env, int idx,$/;"	f	file:
bad_action_ret	irq/spurious.c	/^static inline int bad_action_ret(irqreturn_t action_ret)$/;"	f	file:
bad_chained_irq	irq/chip.c	/^static irqreturn_t bad_chained_irq(int irq, void *dev_id)$/;"	f	file:
balance_callback	sched/core.c	/^static inline void balance_callback(struct rq *rq)$/;"	f	file:
balance_callback	sched/sched.h	/^	struct callback_head	*balance_callback;$/;"	m	struct:rq	typeref:struct:rq::callback_head
balance_runtime	sched/rt.c	/^static inline void balance_runtime(struct rt_rq *rt_rq) {}$/;"	f	file:
balance_runtime	sched/rt.c	/^static void balance_runtime(struct rt_rq *rt_rq)$/;"	f	file:
barrier_cbs_count	rcu/rcutorture.c	/^static atomic_t barrier_cbs_count;	\/* Barrier callbacks registered. *\/$/;"	v	file:
barrier_cbs_invoked	rcu/rcutorture.c	/^static atomic_t barrier_cbs_invoked;	\/* Barrier callbacks invoked. *\/$/;"	v	file:
barrier_cbs_tasks	rcu/rcutorture.c	/^static struct task_struct **barrier_cbs_tasks;$/;"	v	typeref:struct:task_struct	file:
barrier_cbs_wq	rcu/rcutorture.c	/^static wait_queue_head_t *barrier_cbs_wq; \/* Coordinate barrier testing. *\/$/;"	v	file:
barrier_completion	rcu/tree.h	/^	struct completion barrier_completion;	\/* Wake at barrier end. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::completion
barrier_cpu_count	rcu/tree.h	/^	atomic_t barrier_cpu_count;		\/* # CPUs waiting on. *\/$/;"	m	struct:rcu_state
barrier_head	rcu/tree.h	/^	struct rcu_head barrier_head;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
barrier_mutex	rcu/tree.h	/^	struct mutex barrier_mutex;		\/* Guards barrier fields. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::mutex
barrier_phase	rcu/rcutorture.c	/^static bool barrier_phase;		\/* Test phase. *\/$/;"	v	file:
barrier_sequence	rcu/tree.h	/^	unsigned long barrier_sequence;		\/* ++ at start and end of *\/$/;"	m	struct:rcu_state
barrier_task	rcu/rcutorture.c	/^static struct task_struct *barrier_task;$/;"	v	typeref:struct:task_struct	file:
base	time/timekeeping.c	/^	struct tk_read_base	base[2];$/;"	m	struct:tk_fast	typeref:struct:tk_fast::tk_read_base	file:
base_clockid	time/alarmtimer.c	/^	clockid_t		base_clockid;$/;"	m	struct:alarm_base	file:
base_cmdline	dma/contiguous.c	/^static phys_addr_t base_cmdline;$/;"	v	file:
basesize	trace/trace_probe.h	/^			unsigned char basesize;$/;"	m	struct:fetch_insn::__anon21::__anon23
bc_handler	time/tick-broadcast-hrtimer.c	/^static enum hrtimer_restart bc_handler(struct hrtimer *t)$/;"	f	file:
bc_set_next	time/tick-broadcast-hrtimer.c	/^static int bc_set_next(ktime_t expires, struct clock_event_device *bc)$/;"	f	file:
bc_shutdown	time/tick-broadcast-hrtimer.c	/^static int bc_shutdown(struct clock_event_device *evt)$/;"	f	file:
bctimer	time/tick-broadcast-hrtimer.c	/^static struct hrtimer bctimer;$/;"	v	typeref:struct:hrtimer	file:
bdflush	sys_ni.c	/^COND_SYSCALL(bdflush);$/;"	v
beenonline	rcu/tree.h	/^	bool		beenonline;	\/* CPU online at least once. *\/$/;"	m	struct:rcu_data
benchmark_event_kthread	trace/trace_benchmark.c	/^static int benchmark_event_kthread(void *arg)$/;"	f	file:
best_cpu	sched/fair.c	/^	int best_cpu;$/;"	m	struct:task_numa_env	file:
best_imp	sched/fair.c	/^	long best_imp;$/;"	m	struct:task_numa_env	file:
best_task	sched/fair.c	/^	struct task_struct *best_task;$/;"	m	struct:task_numa_env	typeref:struct:task_numa_env::task_struct	file:
bin_bus_isa_table	sysctl_binary.c	/^static const struct bin_table bin_bus_isa_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_bus_table	sysctl_binary.c	/^static const struct bin_table bin_bus_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_convert_t	sysctl_binary.c	/^typedef ssize_t bin_convert_t(struct file *file,$/;"	t	file:
bin_dev_table	sysctl_binary.c	/^static const struct bin_table bin_dev_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_dir	sysctl_binary.c	/^static bin_convert_t bin_dir;$/;"	v	file:
bin_dir	sysctl_binary.c	/^static ssize_t bin_dir(struct file *file,$/;"	f	file:
bin_dn_node_address	sysctl_binary.c	/^static bin_convert_t bin_dn_node_address;$/;"	v	file:
bin_dn_node_address	sysctl_binary.c	/^static ssize_t bin_dn_node_address(struct file *file,$/;"	f	file:
bin_fs_ocfs2_nm_table	sysctl_binary.c	/^static const struct bin_table bin_fs_ocfs2_nm_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_ocfs2_table	sysctl_binary.c	/^static const struct bin_table bin_fs_ocfs2_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_quota_table	sysctl_binary.c	/^static const struct bin_table bin_fs_quota_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_table	sysctl_binary.c	/^static const struct bin_table bin_fs_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_xfs_table	sysctl_binary.c	/^static const struct bin_table bin_fs_xfs_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_inotify_table	sysctl_binary.c	/^static const struct bin_table bin_inotify_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_intvec	sysctl_binary.c	/^static bin_convert_t bin_intvec;$/;"	v	file:
bin_intvec	sysctl_binary.c	/^static ssize_t bin_intvec(struct file *file,$/;"	f	file:
bin_ipmi_table	sysctl_binary.c	/^static const struct bin_table bin_ipmi_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_kern_table	sysctl_binary.c	/^static const struct bin_table bin_kern_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_mac_hid_files	sysctl_binary.c	/^static const struct bin_table bin_mac_hid_files[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_atalk_table	sysctl_binary.c	/^static const struct bin_table bin_net_atalk_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ax25_param_table	sysctl_binary.c	/^static const struct bin_table bin_net_ax25_param_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ax25_table	sysctl_binary.c	/^static const struct bin_table bin_net_ax25_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_core_table	sysctl_binary.c	/^static const struct bin_table bin_net_core_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_conf	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_conf[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_conf_vars	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_conf_vars[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_table	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_conf_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_conf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_conf_vars_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_conf_vars_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_netfilter_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_netfilter_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_route_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_route_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_conf_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_conf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_conf_var_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_conf_var_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_icmp_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_icmp_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_route_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_route_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipx_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipx_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_llc2_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_llc2_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_llc2_timeout_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_llc2_timeout_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_station_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_station_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_neigh_table	sysctl_binary.c	/^static const struct bin_table bin_net_neigh_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_neigh_vars_table	sysctl_binary.c	/^static const struct bin_table bin_net_neigh_vars_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_netfilter_table	sysctl_binary.c	/^static const struct bin_table bin_net_netfilter_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_netrom_table	sysctl_binary.c	/^static const struct bin_table bin_net_netrom_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_rose_table	sysctl_binary.c	/^static const struct bin_table bin_net_rose_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_sctp_table	sysctl_binary.c	/^static const struct bin_table bin_net_sctp_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_table	sysctl_binary.c	/^static const struct bin_table bin_net_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_tr_table	sysctl_binary.c	/^static const struct bin_table bin_net_tr_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_unix_table	sysctl_binary.c	/^static const struct bin_table bin_net_unix_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_x25_table	sysctl_binary.c	/^static const struct bin_table bin_net_x25_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_pm_table	sysctl_binary.c	/^static const struct bin_table bin_pm_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_pty_table	sysctl_binary.c	/^static const struct bin_table bin_pty_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_raid_table	sysctl_binary.c	/^static const struct bin_table bin_raid_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_random_table	sysctl_binary.c	/^static const struct bin_table bin_random_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_root_table	sysctl_binary.c	/^static const struct bin_table bin_root_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_s390dbf_table	sysctl_binary.c	/^static const struct bin_table bin_s390dbf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_scsi_table	sysctl_binary.c	/^static const struct bin_table bin_scsi_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_string	sysctl_binary.c	/^static bin_convert_t bin_string;$/;"	v	file:
bin_string	sysctl_binary.c	/^static ssize_t bin_string(struct file *file,$/;"	f	file:
bin_sunrpc_table	sysctl_binary.c	/^static const struct bin_table bin_sunrpc_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_table	sysctl_binary.c	/^struct bin_table {$/;"	s	file:
bin_ulongvec	sysctl_binary.c	/^static bin_convert_t bin_ulongvec;$/;"	v	file:
bin_ulongvec	sysctl_binary.c	/^static ssize_t bin_ulongvec(struct file *file,$/;"	f	file:
bin_uuid	sysctl_binary.c	/^static bin_convert_t bin_uuid;$/;"	v	file:
bin_uuid	sysctl_binary.c	/^static ssize_t bin_uuid(struct file *file,$/;"	f	file:
bin_vm_table	sysctl_binary.c	/^static const struct bin_table bin_vm_table[] = {$/;"	v	typeref:struct:bin_table	file:
binary_sysctl	sysctl_binary.c	/^static ssize_t binary_sysctl(const int *name, int nlen,$/;"	f	file:
bind	sys_ni.c	/^COND_SYSCALL(bind);$/;"	v
bit	bpf/devmap.c	/^	unsigned int bit;$/;"	m	struct:bpf_dtab_netdev	file:
bit	trace/trace.h	/^	u32		bit; \/* Mask assigned in val field in tracer_flags *\/$/;"	m	struct:tracer_opt
bit_wait	sched/wait_bit.c	/^EXPORT_SYMBOL(bit_wait);$/;"	v
bit_wait	sched/wait_bit.c	/^__sched int bit_wait(struct wait_bit_key *word, int mode)$/;"	f
bit_wait_io	sched/wait_bit.c	/^EXPORT_SYMBOL(bit_wait_io);$/;"	v
bit_wait_io	sched/wait_bit.c	/^__sched int bit_wait_io(struct wait_bit_key *word, int mode)$/;"	f
bit_wait_io_timeout	sched/wait_bit.c	/^EXPORT_SYMBOL_GPL(bit_wait_io_timeout);$/;"	v
bit_wait_io_timeout	sched/wait_bit.c	/^__sched int bit_wait_io_timeout(struct wait_bit_key *word, int mode)$/;"	f
bit_wait_timeout	sched/wait_bit.c	/^EXPORT_SYMBOL_GPL(bit_wait_timeout);$/;"	v
bit_wait_timeout	sched/wait_bit.c	/^__sched int bit_wait_timeout(struct wait_bit_key *word, int mode)$/;"	f
bit_waitqueue	sched/wait_bit.c	/^EXPORT_SYMBOL(bit_waitqueue);$/;"	v
bit_waitqueue	sched/wait_bit.c	/^wait_queue_head_t *bit_waitqueue(void *word, int bit)$/;"	f
bitmap	dma/coherent.c	/^	unsigned long	*bitmap;$/;"	m	struct:dma_coherent_mem	file:
bitmap	events/uprobes.c	/^	unsigned long 			*bitmap;	\/* 0 = free slot *\/$/;"	m	struct:xol_area	file:
bitset	futex.c	/^	u32 bitset;$/;"	m	struct:futex_q	file:
blacklisted	module.c	/^static bool blacklisted(const char *module_name)$/;"	f	file:
blimit	rcu/tree.c	/^static long blimit = DEFAULT_RCU_BLIMIT;$/;"	v	file:
blimit	rcu/tree.h	/^	long		blimit;		\/* Upper limit on a processed batch *\/$/;"	m	struct:rcu_data
blk_add_driver_data	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_add_driver_data);$/;"	v
blk_add_driver_data	trace/blktrace.c	/^void blk_add_driver_data(struct request_queue *q,$/;"	f
blk_add_trace_bio	trace/blktrace.c	/^static void blk_add_trace_bio(struct request_queue *q, struct bio *bio,$/;"	f	file:
blk_add_trace_bio_backmerge	trace/blktrace.c	/^static void blk_add_trace_bio_backmerge(void *ignore,$/;"	f	file:
blk_add_trace_bio_bounce	trace/blktrace.c	/^static void blk_add_trace_bio_bounce(void *ignore,$/;"	f	file:
blk_add_trace_bio_complete	trace/blktrace.c	/^static void blk_add_trace_bio_complete(void *ignore,$/;"	f	file:
blk_add_trace_bio_frontmerge	trace/blktrace.c	/^static void blk_add_trace_bio_frontmerge(void *ignore,$/;"	f	file:
blk_add_trace_bio_queue	trace/blktrace.c	/^static void blk_add_trace_bio_queue(void *ignore,$/;"	f	file:
blk_add_trace_bio_remap	trace/blktrace.c	/^static void blk_add_trace_bio_remap(void *ignore,$/;"	f	file:
blk_add_trace_getrq	trace/blktrace.c	/^static void blk_add_trace_getrq(void *ignore,$/;"	f	file:
blk_add_trace_plug	trace/blktrace.c	/^static void blk_add_trace_plug(void *ignore, struct request_queue *q)$/;"	f	file:
blk_add_trace_rq	trace/blktrace.c	/^static void blk_add_trace_rq(struct request *rq, int error,$/;"	f	file:
blk_add_trace_rq_complete	trace/blktrace.c	/^static void blk_add_trace_rq_complete(void *ignore, struct request *rq,$/;"	f	file:
blk_add_trace_rq_insert	trace/blktrace.c	/^static void blk_add_trace_rq_insert(void *ignore,$/;"	f	file:
blk_add_trace_rq_issue	trace/blktrace.c	/^static void blk_add_trace_rq_issue(void *ignore,$/;"	f	file:
blk_add_trace_rq_remap	trace/blktrace.c	/^static void blk_add_trace_rq_remap(void *ignore,$/;"	f	file:
blk_add_trace_rq_requeue	trace/blktrace.c	/^static void blk_add_trace_rq_requeue(void *ignore,$/;"	f	file:
blk_add_trace_sleeprq	trace/blktrace.c	/^static void blk_add_trace_sleeprq(void *ignore,$/;"	f	file:
blk_add_trace_split	trace/blktrace.c	/^static void blk_add_trace_split(void *ignore,$/;"	f	file:
blk_add_trace_unplug	trace/blktrace.c	/^static void blk_add_trace_unplug(void *ignore, struct request_queue *q,$/;"	f	file:
blk_create_buf_file_callback	trace/blktrace.c	/^static struct dentry *blk_create_buf_file_callback(const char *filename,$/;"	f	file:
blk_dropped_fops	trace/blktrace.c	/^static const struct file_operations blk_dropped_fops = {$/;"	v	typeref:struct:file_operations	file:
blk_dropped_read	trace/blktrace.c	/^static ssize_t blk_dropped_read(struct file *filp, char __user *buffer,$/;"	f	file:
blk_fill_rwbs	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_fill_rwbs);$/;"	v
blk_fill_rwbs	trace/blktrace.c	/^void blk_fill_rwbs(char *rwbs, unsigned int op, int bytes)$/;"	f
blk_log_action	trace/blktrace.c	/^static void blk_log_action(struct trace_iterator *iter, const char *act,$/;"	f	file:
blk_log_action_classic	trace/blktrace.c	/^static void blk_log_action_classic(struct trace_iterator *iter, const char *act,$/;"	f	file:
blk_log_action_t	trace/blktrace.c	/^typedef void (blk_log_action_t) (struct trace_iterator *iter, const char *act,$/;"	t	file:
blk_log_dump_pdu	trace/blktrace.c	/^static void blk_log_dump_pdu(struct trace_seq *s,$/;"	f	file:
blk_log_generic	trace/blktrace.c	/^static void blk_log_generic(struct trace_seq *s, const struct trace_entry *ent, bool has_cg)$/;"	f	file:
blk_log_msg	trace/blktrace.c	/^static void blk_log_msg(struct trace_seq *s, const struct trace_entry *ent,$/;"	f	file:
blk_log_plug	trace/blktrace.c	/^static void blk_log_plug(struct trace_seq *s, const struct trace_entry *ent, bool has_cg)$/;"	f	file:
blk_log_remap	trace/blktrace.c	/^static void blk_log_remap(struct trace_seq *s, const struct trace_entry *ent, bool has_cg)$/;"	f	file:
blk_log_split	trace/blktrace.c	/^static void blk_log_split(struct trace_seq *s, const struct trace_entry *ent, bool has_cg)$/;"	f	file:
blk_log_unplug	trace/blktrace.c	/^static void blk_log_unplug(struct trace_seq *s, const struct trace_entry *ent, bool has_cg)$/;"	f	file:
blk_log_with_error	trace/blktrace.c	/^static void blk_log_with_error(struct trace_seq *s,$/;"	f	file:
blk_msg_fops	trace/blktrace.c	/^static const struct file_operations blk_msg_fops = {$/;"	v	typeref:struct:file_operations	file:
blk_msg_write	trace/blktrace.c	/^static ssize_t blk_msg_write(struct file *filp, const char __user *buffer,$/;"	f	file:
blk_probes_ref	trace/blktrace.c	/^static int blk_probes_ref;$/;"	v	file:
blk_register_tracepoints	trace/blktrace.c	/^static void blk_register_tracepoints(void)$/;"	f	file:
blk_relay_callbacks	trace/blktrace.c	/^static struct rchan_callbacks blk_relay_callbacks = {$/;"	v	typeref:struct:rchan_callbacks	file:
blk_remove_buf_file_callback	trace/blktrace.c	/^static int blk_remove_buf_file_callback(struct dentry *dentry)$/;"	f	file:
blk_subbuf_start_callback	trace/blktrace.c	/^static int blk_subbuf_start_callback(struct rchan_buf *buf, void *subbuf,$/;"	f	file:
blk_tr	trace/blktrace.c	/^static struct trace_array *blk_tr;$/;"	v	typeref:struct:trace_array	file:
blk_trace_attr_group	trace/blktrace.c	/^struct attribute_group blk_trace_attr_group = {$/;"	v	typeref:struct:attribute_group
blk_trace_attrs	trace/blktrace.c	/^static struct attribute *blk_trace_attrs[] = {$/;"	v	typeref:struct:attribute	file:
blk_trace_bio_get_cgid	trace/blktrace.c	/^blk_trace_bio_get_cgid(struct request_queue *q, struct bio *bio)$/;"	f	file:
blk_trace_cleanup	trace/blktrace.c	/^static void blk_trace_cleanup(struct blk_trace *bt)$/;"	f	file:
blk_trace_event_print	trace/blktrace.c	/^static enum print_line_t blk_trace_event_print(struct trace_iterator *iter,$/;"	f	file:
blk_trace_event_print_binary	trace/blktrace.c	/^blk_trace_event_print_binary(struct trace_iterator *iter, int flags,$/;"	f	file:
blk_trace_free	trace/blktrace.c	/^static void blk_trace_free(struct blk_trace *bt)$/;"	f	file:
blk_trace_get_queue	trace/blktrace.c	/^static struct request_queue *blk_trace_get_queue(struct block_device *bdev)$/;"	f	file:
blk_trace_init_sysfs	trace/blktrace.c	/^int blk_trace_init_sysfs(struct device *dev)$/;"	f
blk_trace_ioctl	trace/blktrace.c	/^int blk_trace_ioctl(struct block_device *bdev, unsigned cmd, char __user *arg)$/;"	f
blk_trace_mask2str	trace/blktrace.c	/^static ssize_t blk_trace_mask2str(char *buf, int mask)$/;"	f	file:
blk_trace_remove	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_remove);$/;"	v
blk_trace_remove	trace/blktrace.c	/^int blk_trace_remove(struct request_queue *q)$/;"	f
blk_trace_remove_queue	trace/blktrace.c	/^static int blk_trace_remove_queue(struct request_queue *q)$/;"	f	file:
blk_trace_remove_sysfs	trace/blktrace.c	/^void blk_trace_remove_sysfs(struct device *dev)$/;"	f
blk_trace_request_get_cgid	trace/blktrace.c	/^blk_trace_request_get_cgid(struct request_queue *q, struct request *rq)$/;"	f	file:
blk_trace_setup	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_setup);$/;"	v
blk_trace_setup	trace/blktrace.c	/^int blk_trace_setup(struct request_queue *q, char *name, dev_t dev,$/;"	f
blk_trace_setup_lba	trace/blktrace.c	/^static void blk_trace_setup_lba(struct blk_trace *bt,$/;"	f	file:
blk_trace_setup_queue	trace/blktrace.c	/^static int blk_trace_setup_queue(struct request_queue *q,$/;"	f	file:
blk_trace_shutdown	trace/blktrace.c	/^void blk_trace_shutdown(struct request_queue *q)$/;"	f
blk_trace_startstop	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_startstop);$/;"	v
blk_trace_startstop	trace/blktrace.c	/^int blk_trace_startstop(struct request_queue *q, int start)$/;"	f
blk_trace_str2mask	trace/blktrace.c	/^static int blk_trace_str2mask(const char *str)$/;"	f	file:
blk_trace_synthesize_old_trace	trace/blktrace.c	/^static void blk_trace_synthesize_old_trace(struct trace_iterator *iter)$/;"	f	file:
blk_tracer_flags	trace/blktrace.c	/^static struct tracer_flags blk_tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
blk_tracer_init	trace/blktrace.c	/^static int blk_tracer_init(struct trace_array *tr)$/;"	f	file:
blk_tracer_opts	trace/blktrace.c	/^static struct tracer_opt blk_tracer_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
blk_tracer_print_header	trace/blktrace.c	/^static void blk_tracer_print_header(struct seq_file *m)$/;"	f	file:
blk_tracer_print_line	trace/blktrace.c	/^static enum print_line_t blk_tracer_print_line(struct trace_iterator *iter)$/;"	f	file:
blk_tracer_reset	trace/blktrace.c	/^static void blk_tracer_reset(struct trace_array *tr)$/;"	f	file:
blk_tracer_set_flag	trace/blktrace.c	/^blk_tracer_set_flag(struct trace_array *tr, u32 old_flags, u32 bit, int set)$/;"	f	file:
blk_tracer_start	trace/blktrace.c	/^static void blk_tracer_start(struct trace_array *tr)$/;"	f	file:
blk_tracer_stop	trace/blktrace.c	/^static void blk_tracer_stop(struct trace_array *tr)$/;"	f	file:
blk_unregister_tracepoints	trace/blktrace.c	/^static void blk_unregister_tracepoints(void)$/;"	f	file:
blkcg_css	kthread.c	/^	struct cgroup_subsys_state *blkcg_css;$/;"	m	struct:kthread	typeref:struct:kthread::cgroup_subsys_state	file:
blkd_tasks	rcu/tree.h	/^	struct list_head blkd_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
blocking_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_call_chain);$/;"	v
blocking_notifier_call_chain	notifier.c	/^int blocking_notifier_call_chain(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_cond_register	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_cond_register);$/;"	v
blocking_notifier_chain_cond_register	notifier.c	/^int blocking_notifier_chain_cond_register(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_register);$/;"	v
blocking_notifier_chain_register	notifier.c	/^int blocking_notifier_chain_register(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_unregister);$/;"	v
blocking_notifier_chain_unregister	notifier.c	/^int blocking_notifier_chain_unregister(struct blocking_notifier_head *nh,$/;"	f
blocks	power/snapshot.c	/^	unsigned int blocks;		\/* Number of Bitmap Blocks     *\/$/;"	m	struct:mem_zone_bm_rtree	file:
bm_avg	trace/trace_benchmark.c	/^static unsigned int bm_avg;$/;"	v	file:
bm_cnt	trace/trace_benchmark.c	/^static u64 bm_cnt;$/;"	v	file:
bm_event_thread	trace/trace_benchmark.c	/^static struct task_struct *bm_event_thread;$/;"	v	typeref:struct:task_struct	file:
bm_first	trace/trace_benchmark.c	/^static u64 bm_first;$/;"	v	file:
bm_last	trace/trace_benchmark.c	/^static u64 bm_last;$/;"	v	file:
bm_max	trace/trace_benchmark.c	/^static u64 bm_max;$/;"	v	file:
bm_min	trace/trace_benchmark.c	/^static u64 bm_min;$/;"	v	file:
bm_position	power/snapshot.c	/^struct bm_position {$/;"	s	file:
bm_std	trace/trace_benchmark.c	/^static unsigned int bm_std;$/;"	v	file:
bm_stddev	trace/trace_benchmark.c	/^static u64 bm_stddev;$/;"	v	file:
bm_str	trace/trace_benchmark.c	/^static char bm_str[BENCHMARK_EVENT_STRLEN] = "START";$/;"	v	file:
bm_total	trace/trace_benchmark.c	/^static u64 bm_total;$/;"	v	file:
bm_totalsq	trace/trace_benchmark.c	/^static u64 bm_totalsq;$/;"	v	file:
boost_kthread_status	rcu/tree.h	/^	unsigned int boost_kthread_status;$/;"	m	struct:rcu_node
boost_kthread_task	rcu/tree.h	/^	struct task_struct *boost_kthread_task;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::task_struct
boost_mtx	rcu/tree.h	/^	struct rt_mutex boost_mtx;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::rt_mutex
boost_starttime	rcu/rcutorture.c	/^static unsigned long boost_starttime;	\/* jiffies of next boost test start. *\/$/;"	v	file:
boost_tasks	rcu/rcutorture.c	/^static struct task_struct *boost_tasks[NR_CPUS];$/;"	v	typeref:struct:task_struct	file:
boost_tasks	rcu/tree.h	/^	struct list_head *boost_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
boost_time	rcu/tree.h	/^	unsigned long boost_time;$/;"	m	struct:rcu_node
boot_alloc_snapshot	trace/trace.c	/^static int __init boot_alloc_snapshot(char *str)$/;"	f	file:
boot_cpu_hotplug_init	cpu.c	/^void __init boot_cpu_hotplug_init(void)$/;"	f
boot_cpu_init	cpu.c	/^void __init boot_cpu_init(void)$/;"	f
boot_delay	printk/printk.c	/^static int boot_delay; \/* msecs delay after each printk during bootup *\/$/;"	v	file:
boot_delay_msec	printk/printk.c	/^static inline void boot_delay_msec(int level)$/;"	f	file:
boot_delay_msec	printk/printk.c	/^static void boot_delay_msec(int level)$/;"	f	file:
boot_delay_setup	printk/printk.c	/^static int __init boot_delay_setup(char *str)$/;"	f	file:
boot_override_clock	time/clocksource.c	/^static int __init boot_override_clock(char* str)$/;"	f	file:
boot_override_clocksource	time/clocksource.c	/^static int __init boot_override_clocksource(char* str)$/;"	f	file:
booted_once	cpu.c	/^	bool			booted_once;$/;"	m	struct:cpuhp_cpu_state	file:
bootmem_resource_free	resource.c	/^static struct resource *bootmem_resource_free;$/;"	v	typeref:struct:resource	file:
bp_addr	debug/kdb/kdb_private.h	/^	unsigned long	bp_addr;	\/* Address breakpoint is present at *\/$/;"	m	struct:_kdb_bp
bp_addr	trace/trace_uprobe.c	/^	unsigned long		bp_addr;$/;"	m	struct:uprobe_dispatch_data	file:
bp_busy_slots	events/hw_breakpoint.c	/^struct bp_busy_slots {$/;"	s	file:
bp_cpuinfo	events/hw_breakpoint.c	/^struct bp_cpuinfo {$/;"	s	file:
bp_delay	debug/kdb/kdb_private.h	/^	unsigned int	bp_delay:1;	\/* Do delayed bp handling *\/$/;"	m	struct:_kdb_bp
bp_delayed	debug/kdb/kdb_private.h	/^	unsigned int	bp_delayed:1;	\/* Delayed breakpoint *\/$/;"	m	struct:_kdb_bp
bp_enabled	debug/kdb/kdb_private.h	/^	unsigned int	bp_enabled:1;	\/* Breakpoint is active in register *\/$/;"	m	struct:_kdb_bp
bp_free	debug/kdb/kdb_private.h	/^	unsigned int	bp_free:1;	\/* This entry is available *\/$/;"	m	struct:_kdb_bp
bp_installed	debug/kdb/kdb_private.h	/^	unsigned int	bp_installed:1;	\/* Breakpoint is installed *\/$/;"	m	struct:_kdb_bp
bp_perf_event_destroy	events/hw_breakpoint.c	/^static void bp_perf_event_destroy(struct perf_event *event)$/;"	f	file:
bp_type	debug/kdb/kdb_private.h	/^	unsigned int	bp_type:4;	\/* Uses hardware register *\/$/;"	m	struct:_kdb_bp
bpf	sys_ni.c	/^COND_SYSCALL(bpf);$/;"	v
bpf_adj_branches	bpf/core.c	/^static int bpf_adj_branches(struct bpf_prog *prog, u32 pos, s32 end_old,$/;"	f	file:
bpf_adj_delta_to_imm	bpf/core.c	/^static int bpf_adj_delta_to_imm(struct bpf_insn *insn, u32 pos, s32 end_old,$/;"	f	file:
bpf_adj_delta_to_off	bpf/core.c	/^static int bpf_adj_delta_to_off(struct bpf_insn *insn, u32 pos, s32 end_old,$/;"	f	file:
bpf_adj_linfo	bpf/core.c	/^static void bpf_adj_linfo(struct bpf_prog *prog, u32 off, u32 delta)$/;"	f	file:
bpf_adj_linfo_after_remove	bpf/verifier.c	/^static int bpf_adj_linfo_after_remove(struct bpf_verifier_env *env, u32 off,$/;"	f	file:
bpf_alu_string	bpf/disasm.c	/^const char *const bpf_alu_string[16] = {$/;"	v
bpf_any_get	bpf/inode.c	/^static void *bpf_any_get(void *raw, enum bpf_type type)$/;"	f	file:
bpf_any_put	bpf/inode.c	/^static void bpf_any_put(void *raw, enum bpf_type type)$/;"	f	file:
bpf_array_alloc_percpu	bpf/arraymap.c	/^static int bpf_array_alloc_percpu(struct bpf_array *array)$/;"	f	file:
bpf_array_free_percpu	bpf/arraymap.c	/^static void bpf_array_free_percpu(struct bpf_array *array)$/;"	f	file:
bpf_btf_get_fd_by_id	bpf/syscall.c	/^static int bpf_btf_get_fd_by_id(const union bpf_attr *attr)$/;"	f	file:
bpf_btf_get_info_by_fd	bpf/syscall.c	/^static int bpf_btf_get_info_by_fd(struct btf *btf,$/;"	f	file:
bpf_btf_load	bpf/syscall.c	/^static int bpf_btf_load(const union bpf_attr *attr)$/;"	f	file:
bpf_call_arg_meta	bpf/verifier.c	/^struct bpf_call_arg_meta {$/;"	s	file:
bpf_cgroup_storage_alloc	bpf/local_storage.c	/^struct bpf_cgroup_storage *bpf_cgroup_storage_alloc(struct bpf_prog *prog,$/;"	f
bpf_cgroup_storage_assign	bpf/local_storage.c	/^int bpf_cgroup_storage_assign(struct bpf_prog *prog, struct bpf_map *_map)$/;"	f
bpf_cgroup_storage_calculate_size	bpf/local_storage.c	/^static size_t bpf_cgroup_storage_calculate_size(struct bpf_map *map, u32 *pages)$/;"	f	file:
bpf_cgroup_storage_free	bpf/local_storage.c	/^void bpf_cgroup_storage_free(struct bpf_cgroup_storage *storage)$/;"	f
bpf_cgroup_storage_key_cmp	bpf/local_storage.c	/^static int bpf_cgroup_storage_key_cmp($/;"	f	file:
bpf_cgroup_storage_link	bpf/local_storage.c	/^void bpf_cgroup_storage_link(struct bpf_cgroup_storage *storage,$/;"	f
bpf_cgroup_storage_map	bpf/local_storage.c	/^struct bpf_cgroup_storage_map {$/;"	s	file:
bpf_cgroup_storage_release	bpf/local_storage.c	/^void bpf_cgroup_storage_release(struct bpf_prog *prog, struct bpf_map *_map)$/;"	f
bpf_cgroup_storage_unlink	bpf/local_storage.c	/^void bpf_cgroup_storage_unlink(struct bpf_cgroup_storage *storage)$/;"	f
bpf_charge_memlock	bpf/syscall.c	/^static int bpf_charge_memlock(struct user_struct *user, u32 pages)$/;"	f	file:
bpf_check	bpf/verifier.c	/^int bpf_check(struct bpf_prog **prog, union bpf_attr *attr,$/;"	f
bpf_check_tail_call	bpf/core.c	/^static int bpf_check_tail_call(const struct bpf_prog *fp)$/;"	f	file:
bpf_check_uarg_tail_zero	bpf/syscall.c	/^int bpf_check_uarg_tail_zero(void __user *uaddr,$/;"	f
bpf_class_string	bpf/disasm.c	/^const char *const bpf_class_string[8] = {$/;"	v
bpf_common_lru	bpf/bpf_lru_list.h	/^struct bpf_common_lru {$/;"	s
bpf_common_lru_pop_free	bpf/bpf_lru_list.c	/^static struct bpf_lru_node *bpf_common_lru_pop_free(struct bpf_lru *lru,$/;"	f	file:
bpf_common_lru_populate	bpf/bpf_lru_list.c	/^static void bpf_common_lru_populate(struct bpf_lru *lru, void *buf,$/;"	f	file:
bpf_common_lru_push_free	bpf/bpf_lru_list.c	/^static void bpf_common_lru_push_free(struct bpf_lru *lru,$/;"	f	file:
bpf_cpu_map	bpf/cpumap.c	/^struct bpf_cpu_map {$/;"	s	file:
bpf_cpu_map_entry	bpf/cpumap.c	/^struct bpf_cpu_map_entry {$/;"	s	file:
bpf_current_task_under_cgroup_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_current_task_under_cgroup_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_dentry_finalize	bpf/inode.c	/^static void bpf_dentry_finalize(struct dentry *dentry, struct inode *inode,$/;"	f	file:
bpf_dev_offload_check	bpf/offload.c	/^static int bpf_dev_offload_check(struct net_device *netdev)$/;"	f	file:
bpf_dir_iops	bpf/inode.c	/^static const struct inode_operations bpf_dir_iops = {$/;"	v	typeref:struct:inode_operations	file:
bpf_dir_iops	bpf/inode.c	/^static const struct inode_operations bpf_dir_iops;$/;"	v	typeref:struct:inode_operations	file:
bpf_dtab	bpf/devmap.c	/^struct bpf_dtab {$/;"	s	file:
bpf_dtab_netdev	bpf/devmap.c	/^struct bpf_dtab_netdev {$/;"	s	file:
bpf_dummy_read	bpf/syscall.c	/^static ssize_t bpf_dummy_read(struct file *filp, char __user *buf, size_t siz,$/;"	f	file:
bpf_dummy_write	bpf/syscall.c	/^static ssize_t bpf_dummy_write(struct file *filp, const char __user *buf,$/;"	f	file:
bpf_event_entry_free_rcu	bpf/arraymap.c	/^static void bpf_event_entry_free_rcu(struct bpf_event_entry *ee)$/;"	f	file:
bpf_event_entry_gen	bpf/arraymap.c	/^static struct bpf_event_entry *bpf_event_entry_gen(struct file *perf_file,$/;"	f	file:
bpf_event_init	trace/bpf_trace.c	/^fs_initcall(bpf_event_init);$/;"	v
bpf_event_init	trace/bpf_trace.c	/^static int __init bpf_event_init(void)$/;"	f	file:
bpf_event_notify	trace/bpf_trace.c	/^static int bpf_event_notify(struct notifier_block *nb, unsigned long op,$/;"	f	file:
bpf_event_output	bpf/core.c	/^EXPORT_SYMBOL_GPL(bpf_event_output);$/;"	v
bpf_event_output	bpf/core.c	/^bpf_event_output(struct bpf_map *map, u64 flags, void *meta, u64 meta_size,$/;"	f
bpf_event_output	trace/bpf_trace.c	/^u64 bpf_event_output(struct bpf_map *map, u64 flags, void *meta, u64 meta_size,$/;"	f
bpf_event_rcu_dereference	trace/bpf_trace.c	22;"	d	file:
bpf_fd_array_map_clear	bpf/arraymap.c	/^static void bpf_fd_array_map_clear(struct bpf_map *map)$/;"	f	file:
bpf_fd_array_map_lookup_elem	bpf/arraymap.c	/^int bpf_fd_array_map_lookup_elem(struct bpf_map *map, void *key, u32 *value)$/;"	f
bpf_fd_array_map_update_elem	bpf/arraymap.c	/^int bpf_fd_array_map_update_elem(struct bpf_map *map, struct file *map_file,$/;"	f
bpf_fd_htab_map_lookup_elem	bpf/hashtab.c	/^int bpf_fd_htab_map_lookup_elem(struct bpf_map *map, void *key, u32 *value)$/;"	f
bpf_fd_htab_map_update_elem	bpf/hashtab.c	/^int bpf_fd_htab_map_update_elem(struct bpf_map *map, struct file *map_file,$/;"	f
bpf_fd_probe_obj	bpf/inode.c	/^static void *bpf_fd_probe_obj(u32 ufd, enum bpf_type *type)$/;"	f	file:
bpf_fd_reuseport_array_lookup_elem	bpf/reuseport_array.c	/^int bpf_fd_reuseport_array_lookup_elem(struct bpf_map *map, void *key,$/;"	f
bpf_fd_reuseport_array_update_elem	bpf/reuseport_array.c	/^int bpf_fd_reuseport_array_update_elem(struct bpf_map *map, void *key,$/;"	f
bpf_fill_super	bpf/inode.c	/^static int bpf_fill_super(struct super_block *sb, void *data, int silent)$/;"	f	file:
bpf_free_inode	bpf/inode.c	/^static void bpf_free_inode(struct inode *inode)$/;"	f	file:
bpf_fs_type	bpf/inode.c	/^static struct file_system_type bpf_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
bpf_get_current_cgroup_id_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_current_cgroup_id_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_current_comm_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_current_comm_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_current_pid_tgid_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_current_pid_tgid_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_current_task_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_get_current_task_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_get_current_uid_gid_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_current_uid_gid_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_file_flag	bpf/syscall.c	/^int bpf_get_file_flag(int flags)$/;"	f
bpf_get_inode	bpf/inode.c	/^static struct inode *bpf_get_inode(struct super_block *sb,$/;"	f	file:
bpf_get_kallsym	bpf/core.c	/^int bpf_get_kallsym(unsigned int symnum, unsigned long *value, char *type,$/;"	f
bpf_get_kprobe_info	trace/trace_kprobe.c	/^int bpf_get_kprobe_info(const struct perf_event *event, u32 *fd_type,$/;"	f
bpf_get_local_storage_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_local_storage_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_numa_node_id_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_numa_node_id_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_perf_event_info	trace/bpf_trace.c	/^int bpf_get_perf_event_info(const struct perf_event *event, u32 *prog_id,$/;"	f
bpf_get_prandom_u32_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_prandom_u32_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_probe_write_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto *bpf_get_probe_write_proto(void)$/;"	f	file:
bpf_get_prog_addr_region	bpf/core.c	/^bpf_get_prog_addr_region(const struct bpf_prog *prog,$/;"	f	file:
bpf_get_prog_addr_start	bpf/core.c	/^bpf_get_prog_addr_start(struct latch_tree_node *n)$/;"	f	file:
bpf_get_prog_name	bpf/core.c	/^void bpf_get_prog_name(const struct bpf_prog *prog, char *sym)$/;"	f
bpf_get_raw_tracepoint	trace/bpf_trace.c	/^struct bpf_raw_event_map *bpf_get_raw_tracepoint(const char *name)$/;"	f
bpf_get_raw_tracepoint_module	trace/bpf_trace.c	/^static struct bpf_raw_event_map *bpf_get_raw_tracepoint_module(const char *name)$/;"	f	file:
bpf_get_smp_processor_id_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_get_smp_processor_id_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_stack_proto	bpf/stackmap.c	/^const struct bpf_func_proto bpf_get_stack_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_stack_proto_raw_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_get_stack_proto_raw_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_get_stack_proto_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_get_stack_proto_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_get_stackid_proto	bpf/stackmap.c	/^const struct bpf_func_proto bpf_get_stackid_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_get_stackid_proto_raw_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_get_stackid_proto_raw_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_get_stackid_proto_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_get_stackid_proto_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_get_trace_printk_proto	bpf/core.c	/^const struct bpf_func_proto * __weak bpf_get_trace_printk_proto(void)$/;"	f
bpf_get_trace_printk_proto	trace/bpf_trace.c	/^const struct bpf_func_proto *bpf_get_trace_printk_proto(void)$/;"	f
bpf_get_uprobe_info	trace/trace_uprobe.c	/^int bpf_get_uprobe_info(const struct perf_event *event, u32 *fd_type,$/;"	f
bpf_helper_changes_pkt_data	bpf/core.c	/^bool __weak bpf_helper_changes_pkt_data(void *func)$/;"	f
bpf_htab	bpf/hashtab.c	/^struct bpf_htab {$/;"	s	file:
bpf_init	bpf/inode.c	/^fs_initcall(bpf_init);$/;"	v
bpf_init	bpf/inode.c	/^static int __init bpf_init(void)$/;"	f	file:
bpf_inode_type	bpf/inode.c	/^static int bpf_inode_type(const struct inode *inode, enum bpf_type *type)$/;"	f	file:
bpf_insn_cbs	bpf/disasm.h	/^struct bpf_insn_cbs {$/;"	s
bpf_insn_prepare_dump	bpf/syscall.c	/^static struct bpf_insn *bpf_insn_prepare_dump(const struct bpf_prog *prog)$/;"	f	file:
bpf_insn_print_imm_t	bpf/disasm.h	/^typedef const char *(*bpf_insn_print_imm_t)(void *private_data,$/;"	t
bpf_insn_print_t	bpf/disasm.h	/^typedef __printf(2, 3) void (*bpf_insn_print_t)(void *private_data,$/;"	v
bpf_insn_revmap_call_t	bpf/disasm.h	/^typedef const char *(*bpf_insn_revmap_call_t)(void *private_data,$/;"	t
bpf_int_jit_compile	bpf/core.c	/^struct bpf_prog * __weak bpf_int_jit_compile(struct bpf_prog *prog)$/;"	f
bpf_internal_load_pointer_neg_helper	bpf/core.c	/^void *bpf_internal_load_pointer_neg_helper(const struct sk_buff *skb, int k, unsigned int size)$/;"	f
bpf_jit_alloc_exec	bpf/core.c	/^void *__weak bpf_jit_alloc_exec(unsigned long size)$/;"	f
bpf_jit_alloc_exec_limit	bpf/core.c	/^u64 __weak bpf_jit_alloc_exec_limit(void)$/;"	f
bpf_jit_binary_alloc	bpf/core.c	/^bpf_jit_binary_alloc(unsigned int proglen, u8 **image_ptr,$/;"	f
bpf_jit_binary_free	bpf/core.c	/^void bpf_jit_binary_free(struct bpf_binary_header *hdr)$/;"	f
bpf_jit_blind_constants	bpf/core.c	/^struct bpf_prog *bpf_jit_blind_constants(struct bpf_prog *prog)$/;"	f
bpf_jit_blind_insn	bpf/core.c	/^static int bpf_jit_blind_insn(const struct bpf_insn *from,$/;"	f	file:
bpf_jit_charge_init	bpf/core.c	/^pure_initcall(bpf_jit_charge_init);$/;"	v
bpf_jit_charge_init	bpf/core.c	/^static int __init bpf_jit_charge_init(void)$/;"	f	file:
bpf_jit_charge_modmem	bpf/core.c	/^static int bpf_jit_charge_modmem(u32 pages)$/;"	f	file:
bpf_jit_compile	bpf/core.c	/^void __weak bpf_jit_compile(struct bpf_prog *prog)$/;"	f
bpf_jit_current	bpf/core.c	/^static atomic_long_t bpf_jit_current;$/;"	v	file:
bpf_jit_free	bpf/core.c	/^void __weak bpf_jit_free(struct bpf_prog *fp)$/;"	f
bpf_jit_free_exec	bpf/core.c	/^void __weak bpf_jit_free_exec(void *addr)$/;"	f
bpf_jit_get_func_addr	bpf/core.c	/^int bpf_jit_get_func_addr(const struct bpf_prog *prog,$/;"	f
bpf_jit_needs_zext	bpf/core.c	/^bool __weak bpf_jit_needs_zext(void)$/;"	f
bpf_jit_prog_release_other	bpf/core.c	/^void bpf_jit_prog_release_other(struct bpf_prog *fp, struct bpf_prog *fp_other)$/;"	f
bpf_jit_uncharge_modmem	bpf/core.c	/^static void bpf_jit_uncharge_modmem(u32 pages)$/;"	f	file:
bpf_jmp_string	bpf/disasm.c	/^static const char *const bpf_jmp_string[16] = {$/;"	v	file:
bpf_ktime_get_ns_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_ktime_get_ns_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_ldst_string	bpf/disasm.c	/^static const char *const bpf_ldst_string[] = {$/;"	v	file:
bpf_lookup	bpf/inode.c	/^bpf_lookup(struct inode *dir, struct dentry *dentry, unsigned flags)$/;"	f	file:
bpf_lru	bpf/bpf_lru_list.h	/^struct bpf_lru {$/;"	s
bpf_lru_destroy	bpf/bpf_lru_list.c	/^void bpf_lru_destroy(struct bpf_lru *lru)$/;"	f
bpf_lru_init	bpf/bpf_lru_list.c	/^int bpf_lru_init(struct bpf_lru *lru, bool percpu, u32 hash_offset,$/;"	f
bpf_lru_list	bpf/bpf_lru_list.h	/^struct bpf_lru_list {$/;"	s
bpf_lru_list_count_dec	bpf/bpf_lru_list.c	/^static void bpf_lru_list_count_dec(struct bpf_lru_list *l,$/;"	f	file:
bpf_lru_list_count_inc	bpf/bpf_lru_list.c	/^static void bpf_lru_list_count_inc(struct bpf_lru_list *l,$/;"	f	file:
bpf_lru_list_inactive_low	bpf/bpf_lru_list.c	/^static bool bpf_lru_list_inactive_low(const struct bpf_lru_list *l)$/;"	f	file:
bpf_lru_list_init	bpf/bpf_lru_list.c	/^static void bpf_lru_list_init(struct bpf_lru_list *l)$/;"	f	file:
bpf_lru_list_pop_free_to_local	bpf/bpf_lru_list.c	/^static void bpf_lru_list_pop_free_to_local(struct bpf_lru *lru,$/;"	f	file:
bpf_lru_list_push_free	bpf/bpf_lru_list.c	/^static void bpf_lru_list_push_free(struct bpf_lru_list *l,$/;"	f	file:
bpf_lru_list_type	bpf/bpf_lru_list.h	/^enum bpf_lru_list_type {$/;"	g
bpf_lru_locallist	bpf/bpf_lru_list.h	/^struct bpf_lru_locallist {$/;"	s
bpf_lru_locallist_init	bpf/bpf_lru_list.c	/^static void bpf_lru_locallist_init(struct bpf_lru_locallist *loc_l, int cpu)$/;"	f	file:
bpf_lru_node	bpf/bpf_lru_list.h	/^struct bpf_lru_node {$/;"	s
bpf_lru_node_is_ref	bpf/bpf_lru_list.c	/^static bool bpf_lru_node_is_ref(const struct bpf_lru_node *node)$/;"	f	file:
bpf_lru_node_set_ref	bpf/bpf_lru_list.h	/^static inline void bpf_lru_node_set_ref(struct bpf_lru_node *node)$/;"	f
bpf_lru_pop_free	bpf/bpf_lru_list.c	/^struct bpf_lru_node *bpf_lru_pop_free(struct bpf_lru *lru, u32 hash)$/;"	f
bpf_lru_populate	bpf/bpf_lru_list.c	/^void bpf_lru_populate(struct bpf_lru *lru, void *buf, u32 node_offset,$/;"	f
bpf_lru_push_free	bpf/bpf_lru_list.c	/^void bpf_lru_push_free(struct bpf_lru *lru, struct bpf_lru_node *node)$/;"	f
bpf_map_alloc_id	bpf/syscall.c	/^static int bpf_map_alloc_id(struct bpf_map *map)$/;"	f	file:
bpf_map_area_alloc	bpf/syscall.c	/^void *bpf_map_area_alloc(size_t size, int numa_node)$/;"	f
bpf_map_area_free	bpf/syscall.c	/^void bpf_map_area_free(void *area)$/;"	f
bpf_map_charge_finish	bpf/syscall.c	/^void bpf_map_charge_finish(struct bpf_map_memory *mem)$/;"	f
bpf_map_charge_init	bpf/syscall.c	/^int bpf_map_charge_init(struct bpf_map_memory *mem, size_t size)$/;"	f
bpf_map_charge_memlock	bpf/syscall.c	/^int bpf_map_charge_memlock(struct bpf_map *map, u32 pages)$/;"	f
bpf_map_charge_move	bpf/syscall.c	/^void bpf_map_charge_move(struct bpf_map_memory *dst,$/;"	f
bpf_map_delete_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_delete_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_map_fd_get_ptr	bpf/map_in_map.c	/^void *bpf_map_fd_get_ptr(struct bpf_map *map,$/;"	f
bpf_map_fd_put_ptr	bpf/map_in_map.c	/^void bpf_map_fd_put_ptr(void *ptr)$/;"	f
bpf_map_fd_sys_lookup_elem	bpf/map_in_map.c	/^u32 bpf_map_fd_sys_lookup_elem(void *ptr)$/;"	f
bpf_map_flags_retain_permanent	bpf/syscall.c	/^static u32 bpf_map_flags_retain_permanent(u32 flags)$/;"	f	file:
bpf_map_fops	bpf/syscall.c	/^const struct file_operations bpf_map_fops = {$/;"	v	typeref:struct:file_operations
bpf_map_free_deferred	bpf/syscall.c	/^static void bpf_map_free_deferred(struct work_struct *work)$/;"	f	file:
bpf_map_free_id	bpf/syscall.c	/^void bpf_map_free_id(struct bpf_map *map, bool do_idr_lock)$/;"	f
bpf_map_from_imm	bpf/syscall.c	/^static const struct bpf_map *bpf_map_from_imm(const struct bpf_prog *prog,$/;"	f	file:
bpf_map_get_fd_by_id	bpf/syscall.c	/^static int bpf_map_get_fd_by_id(const union bpf_attr *attr)$/;"	f	file:
bpf_map_get_info_by_fd	bpf/syscall.c	/^static int bpf_map_get_info_by_fd(struct bpf_map *map,$/;"	f	file:
bpf_map_get_with_uref	bpf/syscall.c	/^struct bpf_map *bpf_map_get_with_uref(u32 ufd)$/;"	f
bpf_map_inc	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_map_inc);$/;"	v
bpf_map_inc	bpf/syscall.c	/^struct bpf_map *bpf_map_inc(struct bpf_map *map, bool uref)$/;"	f
bpf_map_inc_not_zero	bpf/syscall.c	/^static struct bpf_map *bpf_map_inc_not_zero(struct bpf_map *map,$/;"	f	file:
bpf_map_init_from_attr	bpf/syscall.c	/^void bpf_map_init_from_attr(struct bpf_map *map, union bpf_attr *attr)$/;"	f
bpf_map_iops	bpf/inode.c	/^static const struct inode_operations bpf_map_iops  = { };$/;"	v	typeref:struct:inode_operations	file:
bpf_map_is_cgroup_storage	bpf/verifier.c	/^static bool bpf_map_is_cgroup_storage(struct bpf_map *map)$/;"	f	file:
bpf_map_lookup_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_lookup_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_map_meta_alloc	bpf/map_in_map.c	/^struct bpf_map *bpf_map_meta_alloc(int inner_map_ufd)$/;"	f
bpf_map_meta_equal	bpf/map_in_map.c	/^bool bpf_map_meta_equal(const struct bpf_map *meta0,$/;"	f
bpf_map_meta_free	bpf/map_in_map.c	/^void bpf_map_meta_free(struct bpf_map *map_meta)$/;"	f
bpf_map_new_fd	bpf/syscall.c	/^int bpf_map_new_fd(struct bpf_map *map, int flags)$/;"	f
bpf_map_offload_delete_elem	bpf/offload.c	/^int bpf_map_offload_delete_elem(struct bpf_map *map, void *key)$/;"	f
bpf_map_offload_get_next_key	bpf/offload.c	/^int bpf_map_offload_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f
bpf_map_offload_info_fill	bpf/offload.c	/^int bpf_map_offload_info_fill(struct bpf_map_info *info, struct bpf_map *map)$/;"	f
bpf_map_offload_info_fill_ns	bpf/offload.c	/^static struct ns_common *bpf_map_offload_info_fill_ns(void *private_data)$/;"	f	file:
bpf_map_offload_lookup_elem	bpf/offload.c	/^int bpf_map_offload_lookup_elem(struct bpf_map *map, void *key, void *value)$/;"	f
bpf_map_offload_map_alloc	bpf/offload.c	/^struct bpf_map *bpf_map_offload_map_alloc(union bpf_attr *attr)$/;"	f
bpf_map_offload_map_free	bpf/offload.c	/^void bpf_map_offload_map_free(struct bpf_map *map)$/;"	f
bpf_map_offload_ndo	bpf/offload.c	/^static int bpf_map_offload_ndo(struct bpf_offloaded_map *offmap,$/;"	f	file:
bpf_map_offload_ops	bpf/syscall.c	/^const struct bpf_map_ops bpf_map_offload_ops = {$/;"	v	typeref:struct:bpf_map_ops
bpf_map_offload_update_elem	bpf/offload.c	/^int bpf_map_offload_update_elem(struct bpf_map *map,$/;"	f
bpf_map_peek_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_peek_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_map_pop_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_pop_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_map_ptr_poisoned	bpf/verifier.c	/^static bool bpf_map_ptr_poisoned(const struct bpf_insn_aux_data *aux)$/;"	f	file:
bpf_map_ptr_store	bpf/verifier.c	/^static void bpf_map_ptr_store(struct bpf_insn_aux_data *aux,$/;"	f	file:
bpf_map_ptr_unpriv	bpf/verifier.c	/^static bool bpf_map_ptr_unpriv(const struct bpf_insn_aux_data *aux)$/;"	f	file:
bpf_map_push_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_push_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_map_put	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_map_put);$/;"	v
bpf_map_put	bpf/syscall.c	/^void bpf_map_put(struct bpf_map *map)$/;"	f
bpf_map_put_uref	bpf/syscall.c	/^static void bpf_map_put_uref(struct bpf_map *map)$/;"	f	file:
bpf_map_put_with_uref	bpf/syscall.c	/^void bpf_map_put_with_uref(struct bpf_map *map)$/;"	f
bpf_map_release	bpf/syscall.c	/^static int bpf_map_release(struct inode *inode, struct file *filp)$/;"	f	file:
bpf_map_show_fdinfo	bpf/syscall.c	/^static void bpf_map_show_fdinfo(struct seq_file *m, struct file *filp)$/;"	f	file:
bpf_map_types	bpf/syscall.c	/^static const struct bpf_map_ops * const bpf_map_types[] = {$/;"	v	file:
bpf_map_uncharge_memlock	bpf/syscall.c	/^void bpf_map_uncharge_memlock(struct bpf_map *map, u32 pages)$/;"	f
bpf_map_update_elem_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_map_update_elem_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_mkdir	bpf/inode.c	/^static int bpf_mkdir(struct inode *dir, struct dentry *dentry, umode_t mode)$/;"	f	file:
bpf_mkmap	bpf/inode.c	/^static int bpf_mkmap(struct dentry *dentry, umode_t mode, void *arg)$/;"	f	file:
bpf_mkobj_ops	bpf/inode.c	/^static int bpf_mkobj_ops(struct dentry *dentry, umode_t mode, void *raw,$/;"	f	file:
bpf_mkprog	bpf/inode.c	/^static int bpf_mkprog(struct dentry *dentry, umode_t mode, void *arg)$/;"	f	file:
bpf_module_nb	trace/bpf_trace.c	/^static struct notifier_block bpf_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
bpf_mount	bpf/inode.c	/^static struct dentry *bpf_mount(struct file_system_type *type, int flags,$/;"	f	file:
bpf_mount_opts	bpf/inode.c	/^struct bpf_mount_opts {$/;"	s	file:
bpf_mount_tokens	bpf/inode.c	/^static const match_table_t bpf_mount_tokens = {$/;"	v	file:
bpf_obj_do_get	bpf/inode.c	/^static void *bpf_obj_do_get(const struct filename *pathname,$/;"	f	file:
bpf_obj_do_pin	bpf/inode.c	/^static int bpf_obj_do_pin(const struct filename *pathname, void *raw,$/;"	f	file:
bpf_obj_get	bpf/syscall.c	/^static int bpf_obj_get(const union bpf_attr *attr)$/;"	f	file:
bpf_obj_get_info_by_fd	bpf/syscall.c	/^static int bpf_obj_get_info_by_fd(const union bpf_attr *attr,$/;"	f	file:
bpf_obj_get_next_id	bpf/syscall.c	/^static int bpf_obj_get_next_id(const union bpf_attr *attr,$/;"	f	file:
bpf_obj_get_user	bpf/inode.c	/^int bpf_obj_get_user(const char __user *pathname, int flags)$/;"	f
bpf_obj_name_cpy	bpf/syscall.c	/^static int bpf_obj_name_cpy(char *dst, const char *src)$/;"	f	file:
bpf_obj_pin	bpf/syscall.c	/^static int bpf_obj_pin(const union bpf_attr *attr)$/;"	f	file:
bpf_obj_pin_user	bpf/inode.c	/^int bpf_obj_pin_user(u32 ufd, const char __user *pathname)$/;"	f
bpf_offload_dev	bpf/offload.c	/^struct bpf_offload_dev {$/;"	s	file:
bpf_offload_dev_create	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_create);$/;"	v
bpf_offload_dev_create	bpf/offload.c	/^bpf_offload_dev_create(const struct bpf_prog_offload_ops *ops, void *priv)$/;"	f
bpf_offload_dev_destroy	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_destroy);$/;"	v
bpf_offload_dev_destroy	bpf/offload.c	/^void bpf_offload_dev_destroy(struct bpf_offload_dev *offdev)$/;"	f
bpf_offload_dev_match	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_match);$/;"	v
bpf_offload_dev_match	bpf/offload.c	/^bool bpf_offload_dev_match(struct bpf_prog *prog, struct net_device *netdev)$/;"	f
bpf_offload_dev_netdev_register	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_netdev_register);$/;"	v
bpf_offload_dev_netdev_register	bpf/offload.c	/^int bpf_offload_dev_netdev_register(struct bpf_offload_dev *offdev,$/;"	f
bpf_offload_dev_netdev_unregister	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_netdev_unregister);$/;"	v
bpf_offload_dev_netdev_unregister	bpf/offload.c	/^void bpf_offload_dev_netdev_unregister(struct bpf_offload_dev *offdev,$/;"	f
bpf_offload_dev_priv	bpf/offload.c	/^EXPORT_SYMBOL_GPL(bpf_offload_dev_priv);$/;"	v
bpf_offload_dev_priv	bpf/offload.c	/^void *bpf_offload_dev_priv(struct bpf_offload_dev *offdev)$/;"	f
bpf_offload_find_netdev	bpf/offload.c	/^bpf_offload_find_netdev(struct net_device *netdev)$/;"	f	file:
bpf_offload_netdev	bpf/offload.c	/^struct bpf_offload_netdev {$/;"	s	file:
bpf_offload_prog_map_match	bpf/offload.c	/^bool bpf_offload_prog_map_match(struct bpf_prog *prog, struct bpf_map *map)$/;"	f
bpf_offload_prog_ops	bpf/offload.c	/^const struct bpf_prog_ops bpf_offload_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
bpf_opcode_in_insntable	bpf/core.c	/^bool bpf_opcode_in_insntable(u8 code)$/;"	f
bpf_overflow_handler	events/core.c	/^static void bpf_overflow_handler(struct perf_event *event,$/;"	f	file:
bpf_override_return_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_override_return_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_parse_options	bpf/inode.c	/^static int bpf_parse_options(char *data, struct bpf_mount_opts *opts)$/;"	f	file:
bpf_patch_call_args	bpf/core.c	/^void bpf_patch_call_args(struct bpf_insn *insn, u32 stack_depth)$/;"	f
bpf_patch_insn_data	bpf/verifier.c	/^static struct bpf_prog *bpf_patch_insn_data(struct bpf_verifier_env *env, u32 off,$/;"	f	file:
bpf_patch_insn_single	bpf/core.c	/^struct bpf_prog *bpf_patch_insn_single(struct bpf_prog *prog, u32 off,$/;"	f
bpf_percpu_array_copy	bpf/arraymap.c	/^int bpf_percpu_array_copy(struct bpf_map *map, void *key, void *value)$/;"	f
bpf_percpu_array_update	bpf/arraymap.c	/^int bpf_percpu_array_update(struct bpf_map *map, void *key, void *value,$/;"	f
bpf_percpu_cgroup_storage_copy	bpf/local_storage.c	/^int bpf_percpu_cgroup_storage_copy(struct bpf_map *_map, void *_key,$/;"	f
bpf_percpu_cgroup_storage_update	bpf/local_storage.c	/^int bpf_percpu_cgroup_storage_update(struct bpf_map *_map, void *_key,$/;"	f
bpf_percpu_hash_copy	bpf/hashtab.c	/^int bpf_percpu_hash_copy(struct bpf_map *map, void *key, void *value)$/;"	f
bpf_percpu_hash_update	bpf/hashtab.c	/^int bpf_percpu_hash_update(struct bpf_map *map, void *key, void *value,$/;"	f
bpf_percpu_lru_pop_free	bpf/bpf_lru_list.c	/^static struct bpf_lru_node *bpf_percpu_lru_pop_free(struct bpf_lru *lru,$/;"	f	file:
bpf_percpu_lru_populate	bpf/bpf_lru_list.c	/^static void bpf_percpu_lru_populate(struct bpf_lru *lru, void *buf,$/;"	f	file:
bpf_percpu_lru_push_free	bpf/bpf_lru_list.c	/^static void bpf_percpu_lru_push_free(struct bpf_lru *lru,$/;"	f	file:
bpf_perf_event_output_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_event_output_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_perf_event_output_proto_raw_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_event_output_proto_raw_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_perf_event_output_proto_tp	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_event_output_proto_tp = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_perf_event_read_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_event_read_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_perf_event_read_value_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_event_read_value_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_perf_prog_read_value_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_perf_prog_read_value_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_probe_read_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_probe_read_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_probe_read_str_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_probe_read_str_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_probe_register	trace/bpf_trace.c	/^int bpf_probe_register(struct bpf_raw_event_map *btp, struct bpf_prog *prog)$/;"	f
bpf_probe_unregister	trace/bpf_trace.c	/^int bpf_probe_unregister(struct bpf_raw_event_map *btp, struct bpf_prog *prog)$/;"	f
bpf_probe_write_user_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_probe_write_user_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_prog_add	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_add);$/;"	v
bpf_prog_add	bpf/syscall.c	/^struct bpf_prog *bpf_prog_add(struct bpf_prog *prog, int i)$/;"	f
bpf_prog_alloc	bpf/core.c	/^EXPORT_SYMBOL_GPL(bpf_prog_alloc);$/;"	v
bpf_prog_alloc	bpf/core.c	/^struct bpf_prog *bpf_prog_alloc(unsigned int size, gfp_t gfp_extra_flags)$/;"	f
bpf_prog_alloc_id	bpf/syscall.c	/^static int bpf_prog_alloc_id(struct bpf_prog *prog)$/;"	f	file:
bpf_prog_alloc_jited_linfo	bpf/core.c	/^int bpf_prog_alloc_jited_linfo(struct bpf_prog *prog)$/;"	f
bpf_prog_alloc_no_stats	bpf/core.c	/^struct bpf_prog *bpf_prog_alloc_no_stats(unsigned int size, gfp_t gfp_extra_flags)$/;"	f
bpf_prog_array_alloc	bpf/core.c	/^struct bpf_prog_array *bpf_prog_array_alloc(u32 prog_cnt, gfp_t flags)$/;"	f
bpf_prog_array_compatible	bpf/core.c	/^bool bpf_prog_array_compatible(struct bpf_array *array,$/;"	f
bpf_prog_array_copy	bpf/core.c	/^int bpf_prog_array_copy(struct bpf_prog_array *old_array,$/;"	f
bpf_prog_array_copy_core	bpf/core.c	/^static bool bpf_prog_array_copy_core(struct bpf_prog_array *array,$/;"	f	file:
bpf_prog_array_copy_info	bpf/core.c	/^int bpf_prog_array_copy_info(struct bpf_prog_array *array,$/;"	f
bpf_prog_array_copy_to_user	bpf/core.c	/^int bpf_prog_array_copy_to_user(struct bpf_prog_array *array,$/;"	f
bpf_prog_array_delete_safe	bpf/core.c	/^void bpf_prog_array_delete_safe(struct bpf_prog_array *array,$/;"	f
bpf_prog_array_free	bpf/core.c	/^void bpf_prog_array_free(struct bpf_prog_array *progs)$/;"	f
bpf_prog_array_is_empty	bpf/core.c	/^bool bpf_prog_array_is_empty(struct bpf_prog_array *array)$/;"	f
bpf_prog_array_length	bpf/core.c	/^int bpf_prog_array_length(struct bpf_prog_array *array)$/;"	f
bpf_prog_attach	bpf/syscall.c	/^static int bpf_prog_attach(const union bpf_attr *attr)$/;"	f	file:
bpf_prog_attach_check_attach_type	bpf/syscall.c	/^static int bpf_prog_attach_check_attach_type(const struct bpf_prog *prog,$/;"	f	file:
bpf_prog_calc_tag	bpf/core.c	/^int bpf_prog_calc_tag(struct bpf_prog *fp)$/;"	f
bpf_prog_charge_memlock	bpf/syscall.c	/^static int bpf_prog_charge_memlock(struct bpf_prog *prog)$/;"	f	file:
bpf_prog_clone_create	bpf/core.c	/^static struct bpf_prog *bpf_prog_clone_create(struct bpf_prog *fp_other,$/;"	f	file:
bpf_prog_clone_free	bpf/core.c	/^static void bpf_prog_clone_free(struct bpf_prog *fp)$/;"	f	file:
bpf_prog_detach	bpf/syscall.c	/^static int bpf_prog_detach(const union bpf_attr *attr)$/;"	f	file:
bpf_prog_dummy	bpf/core.c	/^static struct bpf_prog_dummy {$/;"	s	file:
bpf_prog_fill_jited_linfo	bpf/core.c	/^void bpf_prog_fill_jited_linfo(struct bpf_prog *prog,$/;"	f
bpf_prog_fops	bpf/syscall.c	/^const struct file_operations bpf_prog_fops = {$/;"	v	typeref:struct:file_operations
bpf_prog_free	bpf/core.c	/^EXPORT_SYMBOL_GPL(bpf_prog_free);$/;"	v
bpf_prog_free	bpf/core.c	/^void bpf_prog_free(struct bpf_prog *fp)$/;"	f
bpf_prog_free_deferred	bpf/core.c	/^static void bpf_prog_free_deferred(struct work_struct *work)$/;"	f	file:
bpf_prog_free_id	bpf/syscall.c	/^void bpf_prog_free_id(struct bpf_prog *prog, bool do_idr_lock)$/;"	f
bpf_prog_free_jited_linfo	bpf/core.c	/^void bpf_prog_free_jited_linfo(struct bpf_prog *prog)$/;"	f
bpf_prog_free_linfo	bpf/core.c	/^void bpf_prog_free_linfo(struct bpf_prog *prog)$/;"	f
bpf_prog_free_unused_jited_linfo	bpf/core.c	/^void bpf_prog_free_unused_jited_linfo(struct bpf_prog *prog)$/;"	f
bpf_prog_get	bpf/syscall.c	/^struct bpf_prog *bpf_prog_get(u32 ufd)$/;"	f
bpf_prog_get_fd_by_id	bpf/syscall.c	/^static int bpf_prog_get_fd_by_id(const union bpf_attr *attr)$/;"	f	file:
bpf_prog_get_info_by_fd	bpf/syscall.c	/^static int bpf_prog_get_info_by_fd(struct bpf_prog *prog,$/;"	f	file:
bpf_prog_get_ok	bpf/syscall.c	/^bool bpf_prog_get_ok(struct bpf_prog *prog,$/;"	f
bpf_prog_get_stats	bpf/syscall.c	/^static void bpf_prog_get_stats(const struct bpf_prog *prog,$/;"	f	file:
bpf_prog_get_type_dev	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_get_type_dev);$/;"	v
bpf_prog_get_type_dev	bpf/syscall.c	/^struct bpf_prog *bpf_prog_get_type_dev(u32 ufd, enum bpf_prog_type type,$/;"	f
bpf_prog_get_type_path	bpf/inode.c	/^EXPORT_SYMBOL(bpf_prog_get_type_path);$/;"	v
bpf_prog_get_type_path	bpf/inode.c	/^struct bpf_prog *bpf_prog_get_type_path(const char *name, enum bpf_prog_type type)$/;"	f
bpf_prog_inc	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_inc);$/;"	v
bpf_prog_inc	bpf/syscall.c	/^struct bpf_prog *bpf_prog_inc(struct bpf_prog *prog)$/;"	f
bpf_prog_inc_not_zero	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_inc_not_zero);$/;"	v
bpf_prog_inc_not_zero	bpf/syscall.c	/^struct bpf_prog *bpf_prog_inc_not_zero(struct bpf_prog *prog)$/;"	f
bpf_prog_iops	bpf/inode.c	/^static const struct inode_operations bpf_prog_iops = { };$/;"	v	typeref:struct:inode_operations	file:
bpf_prog_kallsyms_add	bpf/core.c	/^void bpf_prog_kallsyms_add(struct bpf_prog *fp)$/;"	f
bpf_prog_kallsyms_candidate	bpf/core.c	/^static bool bpf_prog_kallsyms_candidate(const struct bpf_prog *fp)$/;"	f	file:
bpf_prog_kallsyms_del	bpf/core.c	/^void bpf_prog_kallsyms_del(struct bpf_prog *fp)$/;"	f
bpf_prog_kallsyms_del_all	bpf/core.c	/^void bpf_prog_kallsyms_del_all(struct bpf_prog *fp)$/;"	f
bpf_prog_kallsyms_del_subprogs	bpf/core.c	/^void bpf_prog_kallsyms_del_subprogs(struct bpf_prog *fp)$/;"	f
bpf_prog_kallsyms_find	bpf/core.c	/^static struct bpf_prog *bpf_prog_kallsyms_find(unsigned long addr)$/;"	f	file:
bpf_prog_kallsyms_verify_off	bpf/core.c	/^static bool bpf_prog_kallsyms_verify_off(const struct bpf_prog *fp)$/;"	f	file:
bpf_prog_ksym_node_add	bpf/core.c	/^static void bpf_prog_ksym_node_add(struct bpf_prog_aux *aux)$/;"	f	file:
bpf_prog_ksym_node_del	bpf/core.c	/^static void bpf_prog_ksym_node_del(struct bpf_prog_aux *aux)$/;"	f	file:
bpf_prog_load	bpf/syscall.c	/^static int bpf_prog_load(union bpf_attr *attr, union bpf_attr __user *uattr)$/;"	f	file:
bpf_prog_load_check_attach_type	bpf/syscall.c	/^bpf_prog_load_check_attach_type(enum bpf_prog_type prog_type,$/;"	f	file:
bpf_prog_load_fixup_attach_type	bpf/syscall.c	/^static void bpf_prog_load_fixup_attach_type(union bpf_attr *attr)$/;"	f	file:
bpf_prog_new_fd	bpf/syscall.c	/^int bpf_prog_new_fd(struct bpf_prog *prog)$/;"	f
bpf_prog_offload_compile	bpf/offload.c	/^int bpf_prog_offload_compile(struct bpf_prog *prog)$/;"	f
bpf_prog_offload_destroy	bpf/offload.c	/^void bpf_prog_offload_destroy(struct bpf_prog *prog)$/;"	f
bpf_prog_offload_finalize	bpf/offload.c	/^int bpf_prog_offload_finalize(struct bpf_verifier_env *env)$/;"	f
bpf_prog_offload_info_fill	bpf/offload.c	/^int bpf_prog_offload_info_fill(struct bpf_prog_info *info,$/;"	f
bpf_prog_offload_info_fill_ns	bpf/offload.c	/^static struct ns_common *bpf_prog_offload_info_fill_ns(void *private_data)$/;"	f	file:
bpf_prog_offload_init	bpf/offload.c	/^int bpf_prog_offload_init(struct bpf_prog *prog, union bpf_attr *attr)$/;"	f
bpf_prog_offload_remove_insns	bpf/offload.c	/^bpf_prog_offload_remove_insns(struct bpf_verifier_env *env, u32 off, u32 cnt)$/;"	f
bpf_prog_offload_replace_insn	bpf/offload.c	/^bpf_prog_offload_replace_insn(struct bpf_verifier_env *env, u32 off,$/;"	f
bpf_prog_offload_translate	bpf/offload.c	/^static int bpf_prog_offload_translate(struct bpf_prog *prog)$/;"	f	file:
bpf_prog_offload_verifier_prep	bpf/offload.c	/^int bpf_prog_offload_verifier_prep(struct bpf_prog *prog)$/;"	f
bpf_prog_offload_verify_insn	bpf/offload.c	/^int bpf_prog_offload_verify_insn(struct bpf_verifier_env *env,$/;"	f
bpf_prog_put	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_put);$/;"	v
bpf_prog_put	bpf/syscall.c	/^void bpf_prog_put(struct bpf_prog *prog)$/;"	f
bpf_prog_query	bpf/syscall.c	/^static int bpf_prog_query(const union bpf_attr *attr,$/;"	f	file:
bpf_prog_realloc	bpf/core.c	/^struct bpf_prog *bpf_prog_realloc(struct bpf_prog *fp_old, unsigned int size,$/;"	f
bpf_prog_release	bpf/syscall.c	/^static int bpf_prog_release(struct inode *inode, struct file *filp)$/;"	f	file:
bpf_prog_select_func	bpf/core.c	/^static void bpf_prog_select_func(struct bpf_prog *fp)$/;"	f	file:
bpf_prog_select_runtime	bpf/core.c	/^EXPORT_SYMBOL_GPL(bpf_prog_select_runtime);$/;"	v
bpf_prog_select_runtime	bpf/core.c	/^struct bpf_prog *bpf_prog_select_runtime(struct bpf_prog *fp, int *err)$/;"	f
bpf_prog_show_fdinfo	bpf/syscall.c	/^static void bpf_prog_show_fdinfo(struct seq_file *m, struct file *filp)$/;"	f	file:
bpf_prog_sub	bpf/syscall.c	/^EXPORT_SYMBOL_GPL(bpf_prog_sub);$/;"	v
bpf_prog_sub	bpf/syscall.c	/^void bpf_prog_sub(struct bpf_prog *prog, int i)$/;"	f
bpf_prog_test_run	bpf/syscall.c	/^static int bpf_prog_test_run(const union bpf_attr *attr,$/;"	f	file:
bpf_prog_types	bpf/syscall.c	/^static const struct bpf_prog_ops * const bpf_prog_types[] = {$/;"	v	file:
bpf_prog_uncharge_memlock	bpf/syscall.c	/^static void bpf_prog_uncharge_memlock(struct bpf_prog *prog)$/;"	f	file:
bpf_prog_warn_on_exec	bpf/offload.c	/^static unsigned int bpf_prog_warn_on_exec(const void *ctx,$/;"	f	file:
bpf_put_raw_tracepoint	trace/bpf_trace.c	/^void bpf_put_raw_tracepoint(struct bpf_raw_event_map *btp)$/;"	f
bpf_queue_stack	bpf/queue_stack_maps.c	/^static struct bpf_queue_stack *bpf_queue_stack(struct bpf_map *map)$/;"	f	file:
bpf_queue_stack	bpf/queue_stack_maps.c	/^struct bpf_queue_stack {$/;"	s	file:
bpf_raw_tp_fops	bpf/syscall.c	/^static const struct file_operations bpf_raw_tp_fops = {$/;"	v	typeref:struct:file_operations	file:
bpf_raw_tp_regs	trace/bpf_trace.c	/^struct bpf_raw_tp_regs {$/;"	s	file:
bpf_raw_tracepoint	bpf/syscall.c	/^struct bpf_raw_tracepoint {$/;"	s	file:
bpf_raw_tracepoint_open	bpf/syscall.c	/^static int bpf_raw_tracepoint_open(const union bpf_attr *attr)$/;"	f	file:
bpf_raw_tracepoint_release	bpf/syscall.c	/^static int bpf_raw_tracepoint_release(struct inode *inode, struct file *filp)$/;"	f	file:
bpf_remove_insns	bpf/core.c	/^int bpf_remove_insns(struct bpf_prog *prog, u32 off, u32 cnt)$/;"	f
bpf_send_signal_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_send_signal_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_show_options	bpf/inode.c	/^static int bpf_show_options(struct seq_file *m, struct dentry *root)$/;"	f	file:
bpf_sk_reuseport_detach	bpf/reuseport_array.c	/^void bpf_sk_reuseport_detach(struct sock *sk)$/;"	f
bpf_spin_lock_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_spin_lock_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_spin_unlock_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_spin_unlock_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_stack_map	bpf/stackmap.c	/^struct bpf_stack_map {$/;"	s	file:
bpf_stackmap_copy	bpf/stackmap.c	/^int bpf_stackmap_copy(struct bpf_map *map, void *key, void *value)$/;"	f
bpf_stackmap_copy	bpf/syscall.c	/^int __weak bpf_stackmap_copy(struct bpf_map *map, void *key, void *value)$/;"	f
bpf_stats_enabled_key	bpf/core.c	/^DEFINE_STATIC_KEY_FALSE(bpf_stats_enabled_key);$/;"	v
bpf_stats_enabled_key	bpf/core.c	/^EXPORT_SYMBOL(bpf_stats_enabled_key);$/;"	v
bpf_strtol_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_strtol_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_strtoul_proto	bpf/helpers.c	/^const struct bpf_func_proto bpf_strtoul_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_super_ops	bpf/inode.c	/^static const struct super_operations bpf_super_ops = {$/;"	v	typeref:struct:super_operations	file:
bpf_symlink	bpf/inode.c	/^static int bpf_symlink(struct inode *dir, struct dentry *dentry,$/;"	f	file:
bpf_sysctl_get_current_value_proto	bpf/cgroup.c	/^static const struct bpf_func_proto bpf_sysctl_get_current_value_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_sysctl_get_name_proto	bpf/cgroup.c	/^static const struct bpf_func_proto bpf_sysctl_get_name_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_sysctl_get_new_value_proto	bpf/cgroup.c	/^static const struct bpf_func_proto bpf_sysctl_get_new_value_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_sysctl_set_new_value_proto	bpf/cgroup.c	/^static const struct bpf_func_proto bpf_sysctl_set_new_value_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_tail_call_proto	bpf/core.c	/^const struct bpf_func_proto bpf_tail_call_proto = {$/;"	v	typeref:struct:bpf_func_proto
bpf_task_fd_query	bpf/syscall.c	/^static int bpf_task_fd_query(const union bpf_attr *attr,$/;"	f	file:
bpf_task_fd_query_copy	bpf/syscall.c	/^static int bpf_task_fd_query_copy(const union bpf_attr *attr,$/;"	f	file:
bpf_trace_module	trace/bpf_trace.c	/^struct bpf_trace_module {$/;"	s	file:
bpf_trace_printk_proto	trace/bpf_trace.c	/^static const struct bpf_func_proto bpf_trace_printk_proto = {$/;"	v	typeref:struct:bpf_func_proto	file:
bpf_trace_sample_data	trace/bpf_trace.c	/^struct bpf_trace_sample_data {$/;"	s	file:
bpf_tree_comp	bpf/core.c	/^static __always_inline int bpf_tree_comp(void *key, struct latch_tree_node *n)$/;"	f	file:
bpf_tree_less	bpf/core.c	/^static __always_inline bool bpf_tree_less(struct latch_tree_node *a,$/;"	f	file:
bpf_tree_ops	bpf/core.c	/^static const struct latch_tree_ops bpf_tree_ops = {$/;"	v	typeref:struct:latch_tree_ops	file:
bpf_type	bpf/inode.c	/^enum bpf_type {$/;"	g	file:
bpf_uncharge_memlock	bpf/syscall.c	/^static void bpf_uncharge_memlock(struct user_struct *user, u32 pages)$/;"	f	file:
bpf_user_rnd_init_once	bpf/core.c	/^void bpf_user_rnd_init_once(void)$/;"	f
bpf_verifier_log_write	bpf/verifier.c	/^EXPORT_SYMBOL_GPL(bpf_verifier_log_write);$/;"	v
bpf_verifier_log_write	bpf/verifier.c	/^__printf(2, 3) void bpf_verifier_log_write(struct bpf_verifier_env *env,$/;"	f
bpf_verifier_ops	bpf/verifier.c	/^static const struct bpf_verifier_ops * const bpf_verifier_ops[] = {$/;"	v	file:
bpf_verifier_stack_elem	bpf/verifier.c	/^struct bpf_verifier_stack_elem {$/;"	s	file:
bpf_verifier_vlog	bpf/verifier.c	/^void bpf_verifier_vlog(struct bpf_verifier_log *log, const char *fmt,$/;"	f
bpffs_map_fops	bpf/inode.c	/^static const struct file_operations bpffs_map_fops = {$/;"	v	typeref:struct:file_operations	file:
bpffs_map_open	bpf/inode.c	/^static int bpffs_map_open(struct inode *inode, struct file *file)$/;"	f	file:
bpffs_map_release	bpf/inode.c	/^static int bpffs_map_release(struct inode *inode, struct file *file)$/;"	f	file:
bpffs_map_seq_ops	bpf/inode.c	/^static const struct seq_operations bpffs_map_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
bpffs_obj_fops	bpf/inode.c	/^static const struct file_operations bpffs_obj_fops = {$/;"	v	typeref:struct:file_operations	file:
bpffs_obj_open	bpf/inode.c	/^static int bpffs_obj_open(struct inode *inode, struct file *file)$/;"	f	file:
bph_length	debug/kdb/kdb_private.h	/^	unsigned int	bph_length;	\/* HW break length *\/$/;"	m	struct:_kdb_bp
bq_enqueue	bpf/cpumap.c	/^static int bq_enqueue(struct bpf_cpu_map_entry *rcpu, struct xdp_frame *xdpf)$/;"	f	file:
bq_enqueue	bpf/devmap.c	/^static int bq_enqueue(struct bpf_dtab_netdev *obj, struct xdp_frame *xdpf,$/;"	f	file:
bq_flush_to_queue	bpf/cpumap.c	/^static int bq_flush_to_queue(struct xdp_bulk_queue *bq, bool in_napi_ctx)$/;"	f	file:
bq_xmit_all	bpf/devmap.c	/^static int bq_xmit_all(struct xdp_bulk_queue *bq, u32 flags,$/;"	f	file:
braille_set_options	printk/braille.h	/^braille_set_options(struct console_cmdline *c, char *brl_options)$/;"	f
branch_print_header	trace/trace_branch.c	/^static void branch_print_header(struct seq_file *s)$/;"	f	file:
branch_stat_process_file	trace/trace_branch.c	/^static const char *branch_stat_process_file(struct ftrace_branch_data *p)$/;"	f	file:
branch_stat_show	trace/trace_branch.c	/^static void branch_stat_show(struct seq_file *m,$/;"	f	file:
branch_stat_show_normal	trace/trace_branch.c	/^static int branch_stat_show_normal(struct seq_file *m,$/;"	f	file:
branch_trace	trace/trace_branch.c	/^static struct tracer branch_trace;$/;"	v	typeref:struct:tracer	file:
branch_trace_init	trace/trace_branch.c	/^static int branch_trace_init(struct trace_array *tr)$/;"	f	file:
branch_trace_reset	trace/trace_branch.c	/^static void branch_trace_reset(struct trace_array *tr)$/;"	f	file:
branch_tracer	trace/trace_branch.c	/^static struct trace_array *branch_tracer;$/;"	v	typeref:struct:trace_array	file:
break_test	trace/ring_buffer_benchmark.c	/^static bool break_test(void)$/;"	f	file:
bringup	cpu.c	/^	bool			bringup;$/;"	m	struct:cpuhp_cpu_state	file:
bringup_cpu	cpu.c	/^static int bringup_cpu(unsigned int cpu)$/;"	f	file:
bringup_wait_for_ap	cpu.c	/^static int bringup_wait_for_ap(unsigned int cpu)$/;"	f	file:
brl_options	printk/console_cmdline.h	/^	char	*brl_options;			\/* Options for braille driver *\/$/;"	m	struct:console_cmdline
broadcast_needs_cpu	time/tick-broadcast.c	/^static int broadcast_needs_cpu(struct clock_event_device *bc, int cpu)$/;"	f	file:
broadcast_shutdown_local	time/tick-broadcast.c	/^static void broadcast_shutdown_local(struct clock_event_device *bc,$/;"	f	file:
bsd_acct_struct	acct.c	/^struct bsd_acct_struct {$/;"	s	file:
btf	bpf/btf.c	/^	struct btf *btf;$/;"	m	struct:btf_verifier_env	typeref:struct:btf_verifier_env::btf	file:
btf	bpf/btf.c	/^struct btf {$/;"	s	file:
btf_add_type	bpf/btf.c	/^static int btf_add_type(struct btf_verifier_env *env, struct btf_type *t)$/;"	f	file:
btf_alloc_id	bpf/btf.c	/^static int btf_alloc_id(struct btf *btf)$/;"	f	file:
btf_array_check_member	bpf/btf.c	/^static int btf_array_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_array_check_meta	bpf/btf.c	/^static s32 btf_array_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_array_log	bpf/btf.c	/^static void btf_array_log(struct btf_verifier_env *env,$/;"	f	file:
btf_array_resolve	bpf/btf.c	/^static int btf_array_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_array_seq_show	bpf/btf.c	/^static void btf_array_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_bitfield_seq_show	bpf/btf.c	/^static void btf_bitfield_seq_show(void *data, u8 bits_offset,$/;"	f	file:
btf_check_all_metas	bpf/btf.c	/^static int btf_check_all_metas(struct btf_verifier_env *env)$/;"	f	file:
btf_check_all_types	bpf/btf.c	/^static int btf_check_all_types(struct btf_verifier_env *env)$/;"	f	file:
btf_check_meta	bpf/btf.c	/^static s32 btf_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_check_sec_info	bpf/btf.c	/^static int btf_check_sec_info(struct btf_verifier_env *env,$/;"	f	file:
btf_datasec_check_meta	bpf/btf.c	/^static s32 btf_datasec_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_datasec_log	bpf/btf.c	/^static void btf_datasec_log(struct btf_verifier_env *env,$/;"	f	file:
btf_datasec_resolve	bpf/btf.c	/^static int btf_datasec_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_datasec_seq_show	bpf/btf.c	/^static void btf_datasec_seq_show(const struct btf *btf,$/;"	f	file:
btf_df_check_kflag_member	bpf/btf.c	/^static int btf_df_check_kflag_member(struct btf_verifier_env *env,$/;"	f	file:
btf_df_check_member	bpf/btf.c	/^static int btf_df_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_df_resolve	bpf/btf.c	/^static int btf_df_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_df_seq_show	bpf/btf.c	/^static void btf_df_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_enum_check_kflag_member	bpf/btf.c	/^static int btf_enum_check_kflag_member(struct btf_verifier_env *env,$/;"	f	file:
btf_enum_check_member	bpf/btf.c	/^static int btf_enum_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_enum_check_meta	bpf/btf.c	/^static s32 btf_enum_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_enum_log	bpf/btf.c	/^static void btf_enum_log(struct btf_verifier_env *env,$/;"	f	file:
btf_enum_seq_show	bpf/btf.c	/^static void btf_enum_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_find_spin_lock	bpf/btf.c	/^int btf_find_spin_lock(const struct btf *btf, const struct btf_type *t)$/;"	f
btf_fops	bpf/btf.c	/^const struct file_operations btf_fops = {$/;"	v	typeref:struct:file_operations
btf_free	bpf/btf.c	/^static void btf_free(struct btf *btf)$/;"	f	file:
btf_free_id	bpf/btf.c	/^static void btf_free_id(struct btf *btf)$/;"	f	file:
btf_free_rcu	bpf/btf.c	/^static void btf_free_rcu(struct rcu_head *rcu)$/;"	f	file:
btf_func_check	bpf/btf.c	/^static int btf_func_check(struct btf_verifier_env *env,$/;"	f	file:
btf_func_check_meta	bpf/btf.c	/^static s32 btf_func_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_func_proto_check	bpf/btf.c	/^static int btf_func_proto_check(struct btf_verifier_env *env,$/;"	f	file:
btf_func_proto_check_meta	bpf/btf.c	/^static s32 btf_func_proto_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_func_proto_log	bpf/btf.c	/^static void btf_func_proto_log(struct btf_verifier_env *env,$/;"	f	file:
btf_fwd_check_meta	bpf/btf.c	/^static s32 btf_fwd_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_fwd_type_log	bpf/btf.c	/^static void btf_fwd_type_log(struct btf_verifier_env *env,$/;"	f	file:
btf_generic_check_kflag_member	bpf/btf.c	/^static int btf_generic_check_kflag_member(struct btf_verifier_env *env,$/;"	f	file:
btf_get_by_fd	bpf/btf.c	/^struct btf *btf_get_by_fd(int fd)$/;"	f
btf_get_fd_by_id	bpf/btf.c	/^int btf_get_fd_by_id(u32 id)$/;"	f
btf_get_info_by_fd	bpf/btf.c	/^int btf_get_info_by_fd(const struct btf *btf,$/;"	f
btf_id	bpf/btf.c	/^u32 btf_id(const struct btf *btf)$/;"	f
btf_int128_print	bpf/btf.c	/^static void btf_int128_print(struct seq_file *m, void *data)$/;"	f	file:
btf_int128_shift	bpf/btf.c	/^static void btf_int128_shift(u64 *print_num, u16 left_shift_bits,$/;"	f	file:
btf_int_bits_seq_show	bpf/btf.c	/^static void btf_int_bits_seq_show(const struct btf *btf,$/;"	f	file:
btf_int_check_kflag_member	bpf/btf.c	/^static int btf_int_check_kflag_member(struct btf_verifier_env *env,$/;"	f	file:
btf_int_check_member	bpf/btf.c	/^static int btf_int_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_int_check_meta	bpf/btf.c	/^static s32 btf_int_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_int_encoding_str	bpf/btf.c	/^static const char *btf_int_encoding_str(u8 encoding)$/;"	f	file:
btf_int_log	bpf/btf.c	/^static void btf_int_log(struct btf_verifier_env *env,$/;"	f	file:
btf_int_seq_show	bpf/btf.c	/^static void btf_int_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_kind_operations	bpf/btf.c	/^struct btf_kind_operations {$/;"	s	file:
btf_kind_str	bpf/btf.c	/^static const char * const btf_kind_str[NR_BTF_KINDS] = {$/;"	v	file:
btf_member_bit_offset	bpf/btf.c	/^static u32 btf_member_bit_offset(const struct btf_type *struct_type,$/;"	f	file:
btf_member_bitfield_size	bpf/btf.c	/^static u32 btf_member_bitfield_size(const struct btf_type *struct_type,$/;"	f	file:
btf_member_is_reg_int	bpf/btf.c	/^bool btf_member_is_reg_int(const struct btf *btf, const struct btf_type *s,$/;"	f
btf_modifier_check_kflag_member	bpf/btf.c	/^static int btf_modifier_check_kflag_member(struct btf_verifier_env *env,$/;"	f	file:
btf_modifier_check_member	bpf/btf.c	/^static int btf_modifier_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_modifier_resolve	bpf/btf.c	/^static int btf_modifier_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_modifier_seq_show	bpf/btf.c	/^static void btf_modifier_seq_show(const struct btf *btf,$/;"	f	file:
btf_name_by_offset	bpf/btf.c	/^const char *btf_name_by_offset(const struct btf *btf, u32 offset)$/;"	f
btf_name_offset_valid	bpf/btf.c	/^static bool btf_name_offset_valid(const struct btf *btf, u32 offset)$/;"	f	file:
btf_name_valid_identifier	bpf/btf.c	/^static bool btf_name_valid_identifier(const struct btf *btf, u32 offset)$/;"	f	file:
btf_name_valid_section	bpf/btf.c	/^static bool btf_name_valid_section(const struct btf *btf, u32 offset)$/;"	f	file:
btf_new_fd	bpf/btf.c	/^int btf_new_fd(const union bpf_attr *attr)$/;"	f
btf_parse	bpf/btf.c	/^static struct btf *btf_parse(void __user *btf_data, u32 btf_data_size,$/;"	f	file:
btf_parse_hdr	bpf/btf.c	/^static int btf_parse_hdr(struct btf_verifier_env *env)$/;"	f	file:
btf_parse_str_sec	bpf/btf.c	/^static int btf_parse_str_sec(struct btf_verifier_env *env)$/;"	f	file:
btf_parse_type_sec	bpf/btf.c	/^static int btf_parse_type_sec(struct btf_verifier_env *env)$/;"	f	file:
btf_ptr_check_member	bpf/btf.c	/^static int btf_ptr_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_ptr_resolve	bpf/btf.c	/^static int btf_ptr_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_ptr_seq_show	bpf/btf.c	/^static void btf_ptr_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_put	bpf/btf.c	/^void btf_put(struct btf *btf)$/;"	f
btf_ref_type_check_meta	bpf/btf.c	/^static int btf_ref_type_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_ref_type_log	bpf/btf.c	/^static void btf_ref_type_log(struct btf_verifier_env *env,$/;"	f	file:
btf_release	bpf/btf.c	/^static int btf_release(struct inode *inode, struct file *filp)$/;"	f	file:
btf_resolve	bpf/btf.c	/^static int btf_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_resolve_valid	bpf/btf.c	/^static bool btf_resolve_valid(struct btf_verifier_env *env,$/;"	f	file:
btf_sec_info	bpf/btf.c	/^struct btf_sec_info {$/;"	s	file:
btf_sec_info_cmp	bpf/btf.c	/^static int btf_sec_info_cmp(const void *a, const void *b)$/;"	f	file:
btf_sec_info_offset	bpf/btf.c	/^static const size_t btf_sec_info_offset[] = {$/;"	v	file:
btf_struct_check_member	bpf/btf.c	/^static int btf_struct_check_member(struct btf_verifier_env *env,$/;"	f	file:
btf_struct_check_meta	bpf/btf.c	/^static s32 btf_struct_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_struct_log	bpf/btf.c	/^static void btf_struct_log(struct btf_verifier_env *env,$/;"	f	file:
btf_struct_resolve	bpf/btf.c	/^static int btf_struct_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_struct_seq_show	bpf/btf.c	/^static void btf_struct_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_type_array	bpf/btf.c	/^static const struct btf_array *btf_type_array(const struct btf_type *t)$/;"	f	file:
btf_type_by_id	bpf/btf.c	/^const struct btf_type *btf_type_by_id(const struct btf *btf, u32 type_id)$/;"	f
btf_type_enum	bpf/btf.c	/^static const struct btf_enum *btf_type_enum(const struct btf_type *t)$/;"	f	file:
btf_type_has_size	bpf/btf.c	/^static bool btf_type_has_size(const struct btf_type *t)$/;"	f	file:
btf_type_id_resolve	bpf/btf.c	/^static const struct btf_type *btf_type_id_resolve(const struct btf *btf,$/;"	f	file:
btf_type_id_size	bpf/btf.c	/^const struct btf_type *btf_type_id_size(const struct btf *btf,$/;"	f
btf_type_int	bpf/btf.c	/^static u32 btf_type_int(const struct btf_type *t)$/;"	f	file:
btf_type_int_is_regular	bpf/btf.c	/^static bool btf_type_int_is_regular(const struct btf_type *t)$/;"	f	file:
btf_type_is_array	bpf/btf.c	/^static bool btf_type_is_array(const struct btf_type *t)$/;"	f	file:
btf_type_is_datasec	bpf/btf.c	/^static bool btf_type_is_datasec(const struct btf_type *t)$/;"	f	file:
btf_type_is_func	bpf/btf.c	/^static bool btf_type_is_func(const struct btf_type *t)$/;"	f	file:
btf_type_is_func_proto	bpf/btf.c	/^static bool btf_type_is_func_proto(const struct btf_type *t)$/;"	f	file:
btf_type_is_fwd	bpf/btf.c	/^static bool btf_type_is_fwd(const struct btf_type *t)$/;"	f	file:
btf_type_is_int	bpf/btf.c	/^static bool btf_type_is_int(const struct btf_type *t)$/;"	f	file:
btf_type_is_modifier	bpf/btf.c	/^static bool btf_type_is_modifier(const struct btf_type *t)$/;"	f	file:
btf_type_is_ptr	bpf/btf.c	/^static bool btf_type_is_ptr(const struct btf_type *t)$/;"	f	file:
btf_type_is_resolve_source_only	bpf/btf.c	/^static bool btf_type_is_resolve_source_only(const struct btf_type *t)$/;"	f	file:
btf_type_is_struct	bpf/btf.c	/^static bool btf_type_is_struct(const struct btf_type *t)$/;"	f	file:
btf_type_is_var	bpf/btf.c	/^static bool btf_type_is_var(const struct btf_type *t)$/;"	f	file:
btf_type_is_void	bpf/btf.c	/^bool btf_type_is_void(const struct btf_type *t)$/;"	f
btf_type_kflag	bpf/btf.c	/^static bool btf_type_kflag(const struct btf_type *t)$/;"	f	file:
btf_type_member	bpf/btf.c	/^static const struct btf_member *btf_type_member(const struct btf_type *t)$/;"	f	file:
btf_type_needs_resolve	bpf/btf.c	/^static bool btf_type_needs_resolve(const struct btf_type *t)$/;"	f	file:
btf_type_nosize	bpf/btf.c	/^static bool btf_type_nosize(const struct btf_type *t)$/;"	f	file:
btf_type_nosize_or_null	bpf/btf.c	/^static bool btf_type_nosize_or_null(const struct btf_type *t)$/;"	f	file:
btf_type_ops	bpf/btf.c	/^static const struct btf_kind_operations *btf_type_ops(const struct btf_type *t)$/;"	f	file:
btf_type_seq_show	bpf/btf.c	/^void btf_type_seq_show(const struct btf *btf, u32 type_id, void *obj,$/;"	f
btf_type_var	bpf/btf.c	/^static const struct btf_var *btf_type_var(const struct btf_type *t)$/;"	f	file:
btf_type_var_secinfo	bpf/btf.c	/^static const struct btf_var_secinfo *btf_type_var_secinfo(const struct btf_type *t)$/;"	f	file:
btf_type_vlen	bpf/btf.c	/^static u16 btf_type_vlen(const struct btf_type *t)$/;"	f	file:
btf_var_check_meta	bpf/btf.c	/^static s32 btf_var_check_meta(struct btf_verifier_env *env,$/;"	f	file:
btf_var_log	bpf/btf.c	/^static void btf_var_log(struct btf_verifier_env *env, const struct btf_type *t)$/;"	f	file:
btf_var_resolve	bpf/btf.c	/^static int btf_var_resolve(struct btf_verifier_env *env,$/;"	f	file:
btf_var_seq_show	bpf/btf.c	/^static void btf_var_seq_show(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
btf_verifier_env	bpf/btf.c	/^struct btf_verifier_env {$/;"	s	file:
btf_verifier_env_free	bpf/btf.c	/^static void btf_verifier_env_free(struct btf_verifier_env *env)$/;"	f	file:
btf_verifier_log	bpf/btf.c	/^__printf(2, 3) static void btf_verifier_log(struct btf_verifier_env *env,$/;"	f	file:
btf_verifier_log_basic	bpf/btf.c	722;"	d	file:
btf_verifier_log_hdr	bpf/btf.c	/^static void btf_verifier_log_hdr(struct btf_verifier_env *env,$/;"	f	file:
btf_verifier_log_member	bpf/btf.c	/^static void btf_verifier_log_member(struct btf_verifier_env *env,$/;"	f	file:
btf_verifier_log_type	bpf/btf.c	720;"	d	file:
btf_verifier_log_vsi	bpf/btf.c	/^static void btf_verifier_log_vsi(struct btf_verifier_env *env,$/;"	f	file:
btf_void	bpf/btf.c	/^static struct btf_type btf_void;$/;"	v	typeref:struct:btf_type	file:
btp	bpf/syscall.c	/^	struct bpf_raw_event_map *btp;$/;"	m	struct:bpf_raw_tracepoint	typeref:struct:bpf_raw_tracepoint::bpf_raw_event_map	file:
bucket	bpf/hashtab.c	/^struct bucket {$/;"	s	file:
bucket	sched/sched.h	/^	struct uclamp_bucket bucket[UCLAMP_BUCKETS];$/;"	m	struct:uclamp_rq	typeref:struct:uclamp_rq::uclamp_bucket
bucket_find_contain	dma/debug.c	/^static struct dma_debug_entry *bucket_find_contain(struct hash_bucket **bucket,$/;"	f	file:
bucket_find_exact	dma/debug.c	/^static struct dma_debug_entry *bucket_find_exact(struct hash_bucket *bucket,$/;"	f	file:
buckets	bpf/hashtab.c	/^	struct bucket *buckets;$/;"	m	struct:bpf_htab	typeref:struct:bpf_htab::bucket	file:
buckets	bpf/stackmap.c	/^	struct stack_map_bucket *buckets[];$/;"	m	struct:bpf_stack_map	typeref:struct:bpf_stack_map::stack_map_bucket	file:
buckets	trace/trace.h	/^	struct hlist_head	*buckets;$/;"	m	struct:ftrace_hash	typeref:struct:ftrace_hash::hlist_head
buf	printk/printk.c	/^	char buf[CONSOLE_EXT_LOG_MAX];$/;"	m	struct:devkmsg_user	file:
buf	printk/printk.c	/^	char buf[LOG_LINE_MAX];$/;"	m	struct:cont	file:
buf	relay.c	/^	struct rchan_buf *buf;$/;"	m	struct:rchan_percpu_buf_dispatcher	typeref:struct:rchan_percpu_buf_dispatcher::rchan_buf	file:
buf	trace/trace_uprobe.c	/^	void *buf;$/;"	m	struct:uprobe_cpu_buffer	file:
buf_mapped_default_callback	relay.c	/^static void buf_mapped_default_callback(struct rchan_buf *buf,$/;"	f	file:
buf_unmapped_default_callback	relay.c	/^static void buf_unmapped_default_callback(struct rchan_buf *buf,$/;"	f	file:
buffer	gcov/clang.c	/^	void *buffer;$/;"	m	struct:gcov_iterator	file:
buffer	gcov/gcc_4_7.c	/^	void *buffer;$/;"	m	struct:gcov_iterator	file:
buffer	power/power.h	/^	void		*buffer;	\/* address of the block to read from$/;"	m	struct:snapshot_handle
buffer	power/snapshot.c	/^static void *buffer;$/;"	v	file:
buffer	printk/printk_safe.c	/^	unsigned char		buffer[SAFE_LOG_BUF_LEN];$/;"	m	struct:printk_safe_seq_buf	file:
buffer	trace/ring_buffer.c	/^	struct ring_buffer		*buffer;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::ring_buffer	file:
buffer	trace/ring_buffer.c	/^	struct ring_buffer	*buffer;$/;"	m	struct:rb_test_data	typeref:struct:rb_test_data::ring_buffer	file:
buffer	trace/ring_buffer_benchmark.c	/^static struct ring_buffer *buffer;$/;"	v	typeref:struct:ring_buffer	file:
buffer	trace/trace.c	/^	char buffer[4][TRACE_BUF_SIZE];$/;"	m	struct:trace_buffer_struct	file:
buffer	trace/trace.c	/^	struct ring_buffer	*buffer;$/;"	m	struct:buffer_ref	typeref:struct:buffer_ref::ring_buffer	file:
buffer	trace/trace.h	/^	char		*buffer;$/;"	m	struct:trace_parser
buffer	trace/trace.h	/^	struct ring_buffer		*buffer;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::ring_buffer
buffer_data_page	trace/ring_buffer.c	/^struct buffer_data_page {$/;"	s	file:
buffer_disabled	trace/trace.h	/^	int			buffer_disabled;$/;"	m	struct:trace_array
buffer_ftrace_now	trace/trace.c	/^static u64 buffer_ftrace_now(struct trace_buffer *buf, int cpu)$/;"	f	file:
buffer_iter	trace/trace_kdb.c	/^static struct ring_buffer_iter *buffer_iter[CONFIG_NR_CPUS];$/;"	v	typeref:struct:ring_buffer_iter	file:
buffer_page	trace/ring_buffer.c	/^struct buffer_page {$/;"	s	file:
buffer_page	trace/trace.h	/^	void			*buffer_page;	\/* ring buffer spare *\/$/;"	m	struct:trace_array_cpu
buffer_percent	trace/trace.h	/^	int			buffer_percent;$/;"	m	struct:trace_array
buffer_percent_fops	trace/trace.c	/^static const struct file_operations buffer_percent_fops = {$/;"	v	typeref:struct:file_operations	file:
buffer_percent_read	trace/trace.c	/^buffer_percent_read(struct file *filp, char __user *ubuf,$/;"	f	file:
buffer_percent_write	trace/trace.c	/^buffer_percent_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
buffer_pipe_buf_get	trace/trace.c	/^static bool buffer_pipe_buf_get(struct pipe_inode_info *pipe,$/;"	f	file:
buffer_pipe_buf_ops	trace/trace.c	/^static const struct pipe_buf_operations buffer_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
buffer_pipe_buf_release	trace/trace.c	/^static void buffer_pipe_buf_release(struct pipe_inode_info *pipe,$/;"	f	file:
buffer_ref	trace/trace.c	/^struct buffer_ref {$/;"	s	file:
buffer_ref_release	trace/trace.c	/^static void buffer_ref_release(struct buffer_ref *ref)$/;"	f	file:
buffer_spd_release	trace/trace.c	/^static void buffer_spd_release(struct splice_pipe_desc *spd, unsigned int i)$/;"	f	file:
bufferram	sys.c	/^	u32 bufferram;$/;"	m	struct:compat_sysinfo	file:
buffers	trace/ring_buffer.c	/^	struct ring_buffer_per_cpu	**buffers;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::ring_buffer_per_cpu	file:
buffers_allocated	trace/trace.c	/^static int buffers_allocated;$/;"	v	file:
build_balance_mask	sched/topology.c	/^build_balance_mask(struct sched_domain *sd, struct sched_group *sg, struct cpumask *mask)$/;"	f	file:
build_group_from_child_sched_domain	sched/topology.c	/^build_group_from_child_sched_domain(struct sched_domain *sd, int cpu)$/;"	f	file:
build_map_info	events/uprobes.c	/^build_map_info(struct address_space *mapping, loff_t offset, bool is_register)$/;"	f	file:
build_node_to_cpumask	irq/affinity.c	/^static void build_node_to_cpumask(cpumask_var_t *masks)$/;"	f	file:
build_overlap_sched_groups	sched/topology.c	/^build_overlap_sched_groups(struct sched_domain *sd, int cpu)$/;"	f	file:
build_perf_domains	sched/topology.c	/^static bool build_perf_domains(const struct cpumask *cpu_map)$/;"	f	file:
build_probe_list	events/uprobes.c	/^static void build_probe_list(struct inode *inode,$/;"	f	file:
build_sched_domain	sched/topology.c	/^static struct sched_domain *build_sched_domain(struct sched_domain_topology_level *tl,$/;"	f	file:
build_sched_domains	sched/topology.c	/^build_sched_domains(const struct cpumask *cpu_map, struct sched_domain_attr *attr)$/;"	f	file:
build_sched_groups	sched/topology.c	/^build_sched_groups(struct sched_domain *sd, int cpu)$/;"	f	file:
bulkq	bpf/cpumap.c	/^	struct xdp_bulk_queue __percpu *bulkq;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::__percpu	file:
bulkq	bpf/devmap.c	/^	struct xdp_bulk_queue __percpu *bulkq;$/;"	m	struct:bpf_dtab_netdev	typeref:struct:bpf_dtab_netdev::__percpu	file:
bump_cpu_timer	time/posix-cpu-timers.c	/^static void bump_cpu_timer(struct k_itimer *timer, u64 now)$/;"	f	file:
busiest	sched/fair.c	/^	struct sched_group *busiest;	\/* Busiest group in this sd *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sched_group	file:
busiest_stat	sched/fair.c	/^	struct sg_lb_stats busiest_stat;\/* Statistics of the busiest group *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sg_lb_stats	file:
busted_srcud_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops busted_srcud_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
busy_wait	trace/preemptirq_delay_test.c	/^static void busy_wait(ulong time)$/;"	f	file:
bw	sched/sched.h	/^	u64			bw;$/;"	m	struct:dl_bw
bw_dl	sched/cpufreq_schedutil.c	/^	unsigned long		bw_dl;$/;"	m	struct:sugov_cpu	file:
bw_ratio	sched/sched.h	/^	u64			bw_ratio;$/;"	m	struct:dl_rq
bytes_alloc	trace/ring_buffer.c	/^	unsigned long		bytes_alloc;$/;"	m	struct:rb_test_data	file:
bytes_alloc_nested	trace/ring_buffer.c	/^	unsigned long		bytes_alloc_nested;$/;"	m	struct:rb_test_data	file:
bytes_dropped	trace/ring_buffer.c	/^	unsigned long		bytes_dropped;$/;"	m	struct:rb_test_data	file:
bytes_dropped_nested	trace/ring_buffer.c	/^	unsigned long		bytes_dropped_nested;$/;"	m	struct:rb_test_data	file:
bytes_written	trace/ring_buffer.c	/^	unsigned long		bytes_written;$/;"	m	struct:rb_test_data	file:
bytes_written_nested	trace/ring_buffer.c	/^	unsigned long		bytes_written_nested;$/;"	m	struct:rb_test_data	file:
c	auditsc.c	/^	struct audit_chunk *c[31];$/;"	m	struct:audit_tree_refs	typeref:struct:audit_tree_refs::audit_chunk	file:
cache	kprobes.c	/^	struct kprobe_insn_cache *cache;$/;"	m	struct:kprobe_insn_page	typeref:struct:kprobe_insn_page::kprobe_insn_cache	file:
cache_mod	trace/ftrace.c	/^static int cache_mod(struct trace_array *tr,$/;"	f	file:
cache_read	trace/ring_buffer.c	/^	unsigned long			cache_read;$/;"	m	struct:ring_buffer_iter	file:
cache_reader_page	trace/ring_buffer.c	/^	struct buffer_page		*cache_reader_page;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::buffer_page	file:
cached_raw_freq	sched/cpufreq_schedutil.c	/^	unsigned int		cached_raw_freq;$/;"	m	struct:sugov_policy	file:
cad_pid	reboot.c	/^EXPORT_SYMBOL(cad_pid);$/;"	v
cad_pid	reboot.c	/^struct pid *cad_pid;$/;"	v	typeref:struct:pid
calc_avgs	sched/psi.c	/^static void calc_avgs(unsigned long avg[3], int missed_periods,$/;"	f	file:
calc_delta_fair	sched/fair.c	/^static inline u64 calc_delta_fair(u64 delta, struct sched_entity *se)$/;"	f	file:
calc_global_load	sched/loadavg.c	/^void calc_global_load(unsigned long ticks)$/;"	f
calc_global_load_tick	sched/loadavg.c	/^void calc_global_load_tick(struct rq *this_rq)$/;"	f
calc_global_nohz	sched/loadavg.c	/^static inline void calc_global_nohz(void) { }$/;"	f	file:
calc_global_nohz	sched/loadavg.c	/^static void calc_global_nohz(void)$/;"	f	file:
calc_group_runnable	sched/fair.c	/^static long calc_group_runnable(struct cfs_rq *cfs_rq, long shares)$/;"	f	file:
calc_group_shares	sched/fair.c	/^static long calc_group_shares(struct cfs_rq *cfs_rq)$/;"	f	file:
calc_index	time/timer.c	/^static inline unsigned calc_index(unsigned expires, unsigned lvl)$/;"	f	file:
calc_load_active	sched/sched.h	/^	long			calc_load_active;$/;"	m	struct:rq
calc_load_fold_active	sched/loadavg.c	/^long calc_load_fold_active(struct rq *this_rq, long adjust)$/;"	f
calc_load_idx	sched/loadavg.c	/^static int calc_load_idx;$/;"	v	file:
calc_load_migrate	sched/core.c	/^static void calc_load_migrate(struct rq *rq)$/;"	f	file:
calc_load_n	sched/loadavg.c	/^calc_load_n(unsigned long load, unsigned long exp,$/;"	f
calc_load_nohz	sched/loadavg.c	/^static atomic_long_t calc_load_nohz[2];$/;"	v	file:
calc_load_nohz_fold	sched/loadavg.c	/^static inline long calc_load_nohz_fold(void) { return 0; }$/;"	f	file:
calc_load_nohz_fold	sched/loadavg.c	/^static long calc_load_nohz_fold(void)$/;"	f	file:
calc_load_nohz_start	sched/loadavg.c	/^void calc_load_nohz_start(void)$/;"	f
calc_load_nohz_stop	sched/loadavg.c	/^void calc_load_nohz_stop(void)$/;"	f
calc_load_read_idx	sched/loadavg.c	/^static inline int calc_load_read_idx(void)$/;"	f	file:
calc_load_tasks	sched/loadavg.c	/^atomic_long_t calc_load_tasks;$/;"	v
calc_load_update	sched/loadavg.c	/^unsigned long calc_load_update;$/;"	v
calc_load_update	sched/sched.h	/^	unsigned long		calc_load_update;$/;"	m	struct:rq
calc_load_write_idx	sched/loadavg.c	/^static inline int calc_load_write_idx(void)$/;"	f	file:
calc_stack	trace/trace_events_filter.c	/^static int calc_stack(const char *str, int *parens, int *preds, int *err)$/;"	f	file:
calc_timer_values	events/core.c	/^static void calc_timer_values(struct perf_event *event,$/;"	f	file:
calc_wheel_index	time/timer.c	/^static int calc_wheel_index(unsigned long expires, unsigned long clk)$/;"	f	file:
calculate_imbalance	sched/fair.c	/^static inline void calculate_imbalance(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
calculate_sigpending	signal.c	/^void calculate_sigpending(void)$/;"	f
call	rcu/rcutorture.c	/^	call_rcu_func_t call;$/;"	m	struct:rcu_torture_ops	file:
call	trace/trace_events_hist.c	/^	struct trace_event_call			call;$/;"	m	struct:synth_event	typeref:struct:synth_event::trace_event_call	file:
call	trace/trace_probe.h	/^	struct trace_event_call		call;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::trace_event_call
call_console_drivers	printk/printk.c	/^static void call_console_drivers(const char *ext_text, size_t ext_len,$/;"	f	file:
call_cpuidle	sched/idle.c	/^static int call_cpuidle(struct cpuidle_driver *drv, struct cpuidle_device *dev,$/;"	f	file:
call_filter_check_discard	trace/trace.c	/^int call_filter_check_discard(struct trace_event_call *call, void *rec,$/;"	f
call_function_data	smp.c	/^struct call_function_data {$/;"	s	file:
call_function_init	smp.c	/^void __init call_function_init(void)$/;"	f
call_modprobe	kmod.c	/^static int call_modprobe(char *module_name, int wait)$/;"	f	file:
call_rcu	rcu/tiny.c	/^EXPORT_SYMBOL_GPL(call_rcu);$/;"	v
call_rcu	rcu/tiny.c	/^void call_rcu(struct rcu_head *head, rcu_callback_t func)$/;"	f
call_rcu	rcu/tree.c	/^EXPORT_SYMBOL_GPL(call_rcu);$/;"	v
call_rcu	rcu/tree.c	/^void call_rcu(struct rcu_head *head, rcu_callback_t func)$/;"	f
call_rcu_busted	rcu/rcutorture.c	/^call_rcu_busted(struct rcu_head *head, rcu_callback_t func)$/;"	f	file:
call_rcu_tasks	rcu/update.c	/^EXPORT_SYMBOL_GPL(call_rcu_tasks);$/;"	v
call_rcu_tasks	rcu/update.c	/^void call_rcu_tasks(struct rcu_head *rhp, rcu_callback_t func)$/;"	f
call_rcu_zapped	locking/lockdep.c	/^static void call_rcu_zapped(struct pending_free *pf)$/;"	f	file:
call_srcu	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(call_srcu);$/;"	v
call_srcu	rcu/srcutiny.c	/^void call_srcu(struct srcu_struct *ssp, struct rcu_head *rhp,$/;"	f
call_srcu	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(call_srcu);$/;"	v
call_srcu	rcu/srcutree.c	/^void call_srcu(struct srcu_struct *ssp, struct rcu_head *rhp,$/;"	f
call_timer_fn	time/timer.c	/^static void call_timer_fn(struct timer_list *timer,$/;"	f	file:
call_usermodehelper	umh.c	/^EXPORT_SYMBOL(call_usermodehelper);$/;"	v
call_usermodehelper	umh.c	/^int call_usermodehelper(const char *path, char **argv, char **envp, int wait)$/;"	f
call_usermodehelper_exec	umh.c	/^EXPORT_SYMBOL(call_usermodehelper_exec);$/;"	v
call_usermodehelper_exec	umh.c	/^int call_usermodehelper_exec(struct subprocess_info *sub_info, int wait)$/;"	f
call_usermodehelper_exec_async	umh.c	/^static int call_usermodehelper_exec_async(void *data)$/;"	f	file:
call_usermodehelper_exec_sync	umh.c	/^static void call_usermodehelper_exec_sync(struct subprocess_info *sub_info)$/;"	f	file:
call_usermodehelper_exec_work	umh.c	/^static void call_usermodehelper_exec_work(struct work_struct *work)$/;"	f	file:
call_usermodehelper_freeinfo	umh.c	/^static void call_usermodehelper_freeinfo(struct subprocess_info *info)$/;"	f	file:
call_usermodehelper_setup	umh.c	/^EXPORT_SYMBOL(call_usermodehelper_setup);$/;"	v
call_usermodehelper_setup	umh.c	/^struct subprocess_info *call_usermodehelper_setup(const char *path, char **argv,$/;"	f
call_usermodehelper_setup_file	umh.c	/^struct subprocess_info *call_usermodehelper_setup_file(struct file *file,$/;"	f
callchain_cpus_entries	events/callchain.c	/^static struct callchain_cpus_entries *callchain_cpus_entries;$/;"	v	typeref:struct:callchain_cpus_entries	file:
callchain_cpus_entries	events/callchain.c	/^struct callchain_cpus_entries {$/;"	s	file:
caller	debug/kdb/kdb_support.c	/^	void *caller;$/;"	m	struct:debug_alloc_header	file:
caller_id	printk/printk.c	/^	u32 caller_id;			\/* printk_caller_id() of first print *\/$/;"	m	struct:cont	file:
caller_id	printk/printk.c	/^	u32 caller_id;            \/* thread id or processor id *\/$/;"	m	struct:printk_log	file:
caller_saved	bpf/verifier.c	/^static const int caller_saved[CALLER_SAVED_REGS] = {$/;"	v	file:
calls	trace/trace.c	/^	unsigned long		calls[FTRACE_KSTACK_ENTRIES];$/;"	m	struct:ftrace_stack	file:
can_add_hw	events/core.c	/^	int can_add_hw;$/;"	m	struct:sched_in_data	file:
can_boost	rcu/rcutorture.c	/^	int can_boost;$/;"	m	struct:rcu_torture_ops	file:
can_migrate_task	sched/fair.c	/^int can_migrate_task(struct task_struct *p, struct lb_env *env)$/;"	f	file:
can_nice	sched/core.c	/^int can_nice(const struct task_struct *p, const int nice)$/;"	f
can_request_irq	irq/manage.c	/^int can_request_irq(unsigned int irq, unsigned long irqflags)$/;"	f
can_rollback_cpu	cpu.c	/^static inline bool can_rollback_cpu(struct cpuhp_cpu_state *st)$/;"	f	file:
can_skip_alu_sanitation	bpf/verifier.c	/^static bool can_skip_alu_sanitation(const struct bpf_verifier_env *env,$/;"	f	file:
can_stop_full_tick	time/tick-sched.c	/^static bool can_stop_full_tick(int cpu, struct tick_sched *ts)$/;"	f	file:
can_stop_idle_tick	time/tick-sched.c	/^static bool can_stop_idle_tick(int cpu, struct tick_sched *ts)$/;"	f	file:
can_use_console	printk/printk.c	/^static inline int can_use_console(void)$/;"	f	file:
cancel_delayed_work	workqueue.c	/^EXPORT_SYMBOL(cancel_delayed_work);$/;"	v
cancel_delayed_work	workqueue.c	/^bool cancel_delayed_work(struct delayed_work *dwork)$/;"	f
cancel_delayed_work_sync	workqueue.c	/^EXPORT_SYMBOL(cancel_delayed_work_sync);$/;"	v
cancel_delayed_work_sync	workqueue.c	/^bool cancel_delayed_work_sync(struct delayed_work *dwork)$/;"	f
cancel_work_sync	workqueue.c	/^EXPORT_SYMBOL_GPL(cancel_work_sync);$/;"	v
cancel_work_sync	workqueue.c	/^bool cancel_work_sync(struct work_struct *work)$/;"	f
canonicalize_ip	kcov.c	/^static notrace unsigned long canonicalize_ip(unsigned long ip)$/;"	f	file:
cant_stop	cpu.c	/^	bool			cant_stop;$/;"	m	struct:cpuhp_step	file:
cap	audit.h	/^			struct audit_cap_data	cap;$/;"	m	struct:audit_context::__anon53::__anon60	typeref:struct:audit_context::__anon53::__anon60::audit_cap_data
cap_get_target_pid	capability.c	/^static inline int cap_get_target_pid(pid_t pid, kernel_cap_t *pEp,$/;"	f	file:
cap_last_cap	sysctl.c	/^static const int cap_last_cap = CAP_LAST_CAP;$/;"	v	file:
cap_scale	sched/pelt.c	86;"	d	file:
cap_scale	sched/sched.h	190;"	d
cap_validate_magic	capability.c	/^static int cap_validate_magic(cap_user_header_t header, unsigned *tocopy)$/;"	f	file:
capable	capability.c	/^EXPORT_SYMBOL(capable);$/;"	v
capable	capability.c	/^bool capable(int cap)$/;"	f
capable_wrt_inode_uidgid	capability.c	/^EXPORT_SYMBOL(capable_wrt_inode_uidgid);$/;"	v
capable_wrt_inode_uidgid	capability.c	/^bool capable_wrt_inode_uidgid(const struct inode *inode, int cap)$/;"	f
capacity	sched/sched.h	/^	unsigned long		capacity;$/;"	m	struct:sched_group_capacity
capacity_margin	sched/fair.c	/^static unsigned int capacity_margin			= 1280;$/;"	v	file:
capacity_of	sched/fair.c	/^static unsigned long capacity_of(int cpu)$/;"	f	file:
capacity_orig_of	sched/sched.h	/^static inline unsigned long capacity_orig_of(int cpu)$/;"	f
capacity_spare_without	sched/fair.c	/^static unsigned long capacity_spare_without(int cpu, struct task_struct *p)$/;"	f	file:
capget	sys_ni.c	/^COND_SYSCALL(capget);$/;"	v
capset	audit.h	/^		} capset;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon60
capset	sys_ni.c	/^COND_SYSCALL(capset);$/;"	v
cause	exit.c	/^	int cause;$/;"	m	struct:waitid_info	file:
cb_barrier	rcu/rcutorture.c	/^	void (*cb_barrier)(void);$/;"	m	struct:rcu_torture_ops	file:
cb_call	bpf/disasm.h	/^	bpf_insn_revmap_call_t	cb_call;$/;"	m	struct:bpf_insn_cbs
cb_imm	bpf/disasm.h	/^	bpf_insn_print_imm_t	cb_imm;$/;"	m	struct:bpf_insn_cbs
cb_print	bpf/disasm.h	/^	bpf_insn_print_t	cb_print;$/;"	m	struct:bpf_insn_cbs
cb_state	cpu.c	/^	enum cpuhp_state	cb_state;$/;"	m	struct:cpuhp_cpu_state	typeref:enum:cpuhp_cpu_state::cpuhp_state	file:
cblist	rcu/tree.h	/^	struct rcu_segcblist cblist;	\/* Segmented callback list, with *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_segcblist
cc_cyc2ns_backwards	time/timecounter.c	/^static u64 cc_cyc2ns_backwards(const struct cyclecounter *cc,$/;"	f	file:
ccflags-y	gcov/Makefile	/^ccflags-y := -DSRCTREE='"$(srctree)"' -DOBJTREE='"$(objtree)"'$/;"	m
ce	time/clockevents.c	/^	struct clock_event_device *ce;$/;"	m	struct:ce_unbind	typeref:struct:ce_unbind::clock_event_device	file:
ce_broadcast_hrtimer	time/tick-broadcast-hrtimer.c	/^static struct clock_event_device ce_broadcast_hrtimer = {$/;"	v	typeref:struct:clock_event_device	file:
ce_unbind	time/clockevents.c	/^struct ce_unbind {$/;"	s	file:
cev_delta2ns	time/clockevents.c	/^static u64 cev_delta2ns(unsigned long latch, struct clock_event_device *evt,$/;"	f	file:
cfg_checksum	gcov/clang.c	/^	u32 cfg_checksum;$/;"	m	struct:gcov_fn_info	file:
cfg_checksum	gcov/gcc_4_7.c	/^	unsigned int cfg_checksum;$/;"	m	struct:gcov_fn_info	file:
cfs	sched/sched.h	/^	struct cfs_rq		cfs;$/;"	m	struct:rq	typeref:struct:rq::cfs_rq
cfs_bandwidth	sched/sched.h	/^	struct cfs_bandwidth	cfs_bandwidth;$/;"	m	struct:task_group	typeref:struct:task_group::cfs_bandwidth
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth { };$/;"	s
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth {$/;"	s
cfs_bandwidth_slack_period	sched/fair.c	/^static const u64 cfs_bandwidth_slack_period = 5 * NSEC_PER_MSEC;$/;"	v	file:
cfs_bandwidth_usage_dec	sched/fair.c	/^void cfs_bandwidth_usage_dec(void) {}$/;"	f
cfs_bandwidth_usage_dec	sched/fair.c	/^void cfs_bandwidth_usage_dec(void)$/;"	f
cfs_bandwidth_usage_inc	sched/fair.c	/^void cfs_bandwidth_usage_inc(void) {}$/;"	f
cfs_bandwidth_usage_inc	sched/fair.c	/^void cfs_bandwidth_usage_inc(void)$/;"	f
cfs_bandwidth_used	sched/fair.c	/^static bool cfs_bandwidth_used(void)$/;"	f	file:
cfs_bandwidth_used	sched/fair.c	/^static inline bool cfs_bandwidth_used(void)$/;"	f	file:
cfs_rq	sched/sched.h	/^	struct cfs_rq		**cfs_rq;$/;"	m	struct:task_group	typeref:struct:task_group::cfs_rq
cfs_rq	sched/sched.h	/^struct cfs_rq {$/;"	s
cfs_rq_clock_pelt	sched/pelt.h	/^static inline u64 cfs_rq_clock_pelt(struct cfs_rq *cfs_rq)$/;"	f
cfs_rq_clock_task	sched/fair.c	/^static inline u64 cfs_rq_clock_task(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_has_blocked	sched/fair.c	/^static inline bool cfs_rq_has_blocked(struct cfs_rq *cfs_rq) { return false; }$/;"	f	file:
cfs_rq_has_blocked	sched/fair.c	/^static inline bool cfs_rq_has_blocked(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_is_decayed	sched/fair.c	/^static inline bool cfs_rq_is_decayed(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_last_update_time	sched/fair.c	/^static inline u64 cfs_rq_last_update_time(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_load_avg	sched/fair.c	/^static inline unsigned long cfs_rq_load_avg(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_of	sched/fair.c	/^static inline struct cfs_rq *cfs_rq_of(struct sched_entity *se)$/;"	f	file:
cfs_rq_runnable_load_avg	sched/fair.c	/^static inline unsigned long cfs_rq_runnable_load_avg(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_tg_path	sched/fair.c	/^static inline void cfs_rq_tg_path(struct cfs_rq *cfs_rq, char *path, int len)$/;"	f	file:
cfs_rq_throttled	sched/fair.c	/^static inline int cfs_rq_throttled(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_util_change	sched/fair.c	/^static inline void cfs_rq_util_change(struct cfs_rq *cfs_rq, int flags)$/;"	f	file:
cfs_schedulable_data	sched/core.c	/^struct cfs_schedulable_data {$/;"	s	file:
cfs_se_util_change	sched/pelt.h	/^static inline void cfs_se_util_change(struct sched_avg *avg)$/;"	f
cfs_tasks	sched/sched.h	/^	struct list_head cfs_tasks;$/;"	m	struct:rq	typeref:struct:rq::list_head
cg_dev_prog_ops	bpf/cgroup.c	/^const struct bpf_prog_ops cg_dev_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
cg_dev_verifier_ops	bpf/cgroup.c	/^const struct bpf_verifier_ops cg_dev_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
cg_invalf	cgroup/cgroup-v1.c	21;"	d	file:
cg_node	cgroup/rdma.c	/^	struct list_head	cg_node;$/;"	m	struct:rdmacg_resource_pool	typeref:struct:rdmacg_resource_pool::list_head	file:
cg_sockopt_convert_ctx_access	bpf/cgroup.c	/^static u32 cg_sockopt_convert_ctx_access(enum bpf_access_type type,$/;"	f	file:
cg_sockopt_func_proto	bpf/cgroup.c	/^cg_sockopt_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
cg_sockopt_get_prologue	bpf/cgroup.c	/^static int cg_sockopt_get_prologue(struct bpf_insn *insn_buf,$/;"	f	file:
cg_sockopt_is_valid_access	bpf/cgroup.c	/^static bool cg_sockopt_is_valid_access(int off, int size,$/;"	f	file:
cg_sockopt_prog_ops	bpf/cgroup.c	/^const struct bpf_prog_ops cg_sockopt_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
cg_sockopt_verifier_ops	bpf/cgroup.c	/^const struct bpf_verifier_ops cg_sockopt_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
cg_sysctl_prog_ops	bpf/cgroup.c	/^const struct bpf_prog_ops cg_sysctl_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
cg_sysctl_verifier_ops	bpf/cgroup.c	/^const struct bpf_verifier_ops cg_sysctl_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
cgid_start	trace/blktrace.c	/^static inline const void *cgid_start(const struct trace_entry *ent)$/;"	f	file:
cgroup1_base_files	cgroup/cgroup-v1.c	/^struct cftype cgroup1_base_files[] = {$/;"	v	typeref:struct:cftype
cgroup1_check_for_release	cgroup/cgroup-v1.c	/^void cgroup1_check_for_release(struct cgroup *cgrp)$/;"	f
cgroup1_fs_context_ops	cgroup/cgroup.c	/^static const struct fs_context_operations cgroup1_fs_context_ops = {$/;"	v	typeref:struct:fs_context_operations	file:
cgroup1_fs_parameters	cgroup/cgroup-v1.c	/^const struct fs_parameter_description cgroup1_fs_parameters = {$/;"	v	typeref:struct:fs_parameter_description
cgroup1_get_tree	cgroup/cgroup-v1.c	/^int cgroup1_get_tree(struct fs_context *fc)$/;"	f
cgroup1_kf_syscall_ops	cgroup/cgroup-v1.c	/^struct kernfs_syscall_ops cgroup1_kf_syscall_ops = {$/;"	v	typeref:struct:kernfs_syscall_ops
cgroup1_param	cgroup/cgroup-v1.c	/^enum cgroup1_param {$/;"	g	file:
cgroup1_param_specs	cgroup/cgroup-v1.c	/^static const struct fs_parameter_spec cgroup1_param_specs[] = {$/;"	v	typeref:struct:fs_parameter_spec	file:
cgroup1_parse_param	cgroup/cgroup-v1.c	/^int cgroup1_parse_param(struct fs_context *fc, struct fs_parameter *param)$/;"	f
cgroup1_pidlist_destroy_all	cgroup/cgroup-v1.c	/^void cgroup1_pidlist_destroy_all(struct cgroup *cgrp)$/;"	f
cgroup1_procs_write	cgroup/cgroup-v1.c	/^static ssize_t cgroup1_procs_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup1_reconfigure	cgroup/cgroup-v1.c	/^int cgroup1_reconfigure(struct fs_context *fc)$/;"	f
cgroup1_release_agent	cgroup/cgroup-v1.c	/^void cgroup1_release_agent(struct work_struct *work)$/;"	f
cgroup1_rename	cgroup/cgroup-v1.c	/^static int cgroup1_rename(struct kernfs_node *kn, struct kernfs_node *new_parent,$/;"	f	file:
cgroup1_root_to_use	cgroup/cgroup-v1.c	/^static int cgroup1_root_to_use(struct fs_context *fc)$/;"	f	file:
cgroup1_show_options	cgroup/cgroup-v1.c	/^static int cgroup1_show_options(struct seq_file *seq, struct kernfs_root *kf_root)$/;"	f	file:
cgroup1_ssid_disabled	cgroup/cgroup-v1.c	/^bool cgroup1_ssid_disabled(int ssid)$/;"	f
cgroup1_tasks_write	cgroup/cgroup-v1.c	/^static ssize_t cgroup1_tasks_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup1_wq_init	cgroup/cgroup-v1.c	/^core_initcall(cgroup1_wq_init);$/;"	v
cgroup1_wq_init	cgroup/cgroup-v1.c	/^static int __init cgroup1_wq_init(void)$/;"	f	file:
cgroup2_fs_parameters	cgroup/cgroup.c	/^static const struct fs_parameter_description cgroup2_fs_parameters = {$/;"	v	typeref:struct:fs_parameter_description	file:
cgroup2_fs_type	cgroup/cgroup.c	/^static struct file_system_type cgroup2_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
cgroup2_fs_type	cgroup/cgroup.c	/^static struct file_system_type cgroup2_fs_type;$/;"	v	typeref:struct:file_system_type	file:
cgroup2_param	cgroup/cgroup.c	/^enum cgroup2_param {$/;"	g	file:
cgroup2_param_specs	cgroup/cgroup.c	/^static const struct fs_parameter_spec cgroup2_param_specs[] = {$/;"	v	typeref:struct:fs_parameter_spec	file:
cgroup2_parse_param	cgroup/cgroup.c	/^static int cgroup2_parse_param(struct fs_context *fc, struct fs_parameter *param)$/;"	f	file:
cgroup_add_cftypes	cgroup/cgroup.c	/^static int cgroup_add_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f	file:
cgroup_add_dfl_cftypes	cgroup/cgroup.c	/^int cgroup_add_dfl_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f
cgroup_add_file	cgroup/cgroup.c	/^static int cgroup_add_file(struct cgroup_subsys_state *css, struct cgroup *cgrp,$/;"	f	file:
cgroup_add_legacy_cftypes	cgroup/cgroup.c	/^int cgroup_add_legacy_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f
cgroup_addrm_files	cgroup/cgroup.c	/^static int cgroup_addrm_files(struct cgroup_subsys_state *css,$/;"	f	file:
cgroup_apply_cftypes	cgroup/cgroup.c	/^static int cgroup_apply_cftypes(struct cftype *cfts, bool is_add)$/;"	f	file:
cgroup_apply_control	cgroup/cgroup.c	/^static int cgroup_apply_control(struct cgroup *cgrp)$/;"	f	file:
cgroup_apply_control_disable	cgroup/cgroup.c	/^static void cgroup_apply_control_disable(struct cgroup *cgrp)$/;"	f	file:
cgroup_apply_control_enable	cgroup/cgroup.c	/^static int cgroup_apply_control_enable(struct cgroup *cgrp)$/;"	f	file:
cgroup_array_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops cgroup_array_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
cgroup_assert_mutex_or_rcu_locked	cgroup/cgroup.c	106;"	d	file:
cgroup_attach_task	cgroup/cgroup.c	/^int cgroup_attach_task(struct cgroup *dst_cgrp, struct task_struct *leader,$/;"	f
cgroup_attach_task_all	cgroup/cgroup-v1.c	/^EXPORT_SYMBOL_GPL(cgroup_attach_task_all);$/;"	v
cgroup_attach_task_all	cgroup/cgroup-v1.c	/^int cgroup_attach_task_all(struct task_struct *from, struct task_struct *tsk)$/;"	f
cgroup_base_files	cgroup/cgroup.c	/^static struct cftype cgroup_base_files[] = {$/;"	v	typeref:struct:cftype	file:
cgroup_base_files	cgroup/cgroup.c	/^static struct cftype cgroup_base_files[];$/;"	v	typeref:struct:cftype	file:
cgroup_base_func_proto	bpf/cgroup.c	/^cgroup_base_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
cgroup_base_stat_accumulate	cgroup/rstat.c	/^static void cgroup_base_stat_accumulate(struct cgroup_base_stat *dst_bstat,$/;"	f	file:
cgroup_base_stat_cputime_account_begin	cgroup/rstat.c	/^cgroup_base_stat_cputime_account_begin(struct cgroup *cgrp)$/;"	f	file:
cgroup_base_stat_cputime_account_end	cgroup/rstat.c	/^static void cgroup_base_stat_cputime_account_end(struct cgroup *cgrp,$/;"	f	file:
cgroup_base_stat_cputime_show	cgroup/rstat.c	/^void cgroup_base_stat_cputime_show(struct seq_file *seq)$/;"	f
cgroup_base_stat_flush	cgroup/rstat.c	/^static void cgroup_base_stat_flush(struct cgroup *cgrp, int cpu)$/;"	f	file:
cgroup_bpf_attach	cgroup/cgroup.c	/^int cgroup_bpf_attach(struct cgroup *cgrp, struct bpf_prog *prog,$/;"	f
cgroup_bpf_detach	cgroup/cgroup.c	/^int cgroup_bpf_detach(struct cgroup *cgrp, struct bpf_prog *prog,$/;"	f
cgroup_bpf_enabled_key	bpf/cgroup.c	/^DEFINE_STATIC_KEY_FALSE(cgroup_bpf_enabled_key);$/;"	v
cgroup_bpf_enabled_key	bpf/cgroup.c	/^EXPORT_SYMBOL(cgroup_bpf_enabled_key);$/;"	v
cgroup_bpf_inherit	bpf/cgroup.c	/^int cgroup_bpf_inherit(struct cgroup *cgrp)$/;"	f
cgroup_bpf_offline	bpf/cgroup.c	/^void cgroup_bpf_offline(struct cgroup *cgrp)$/;"	f
cgroup_bpf_prog_attach	bpf/cgroup.c	/^int cgroup_bpf_prog_attach(const union bpf_attr *attr,$/;"	f
cgroup_bpf_prog_detach	bpf/cgroup.c	/^int cgroup_bpf_prog_detach(const union bpf_attr *attr, enum bpf_prog_type ptype)$/;"	f
cgroup_bpf_prog_query	bpf/cgroup.c	/^int cgroup_bpf_prog_query(const union bpf_attr *attr,$/;"	f
cgroup_bpf_query	cgroup/cgroup.c	/^int cgroup_bpf_query(struct cgroup *cgrp, const union bpf_attr *attr,$/;"	f
cgroup_bpf_release	bpf/cgroup.c	/^static void cgroup_bpf_release(struct work_struct *work)$/;"	f	file:
cgroup_bpf_release_fn	bpf/cgroup.c	/^static void cgroup_bpf_release_fn(struct percpu_ref *ref)$/;"	f	file:
cgroup_calc_subtree_ss_mask	cgroup/cgroup.c	/^static u16 cgroup_calc_subtree_ss_mask(u16 subtree_control, u16 this_ss_mask)$/;"	f	file:
cgroup_can_be_thread_root	cgroup/cgroup.c	/^static bool cgroup_can_be_thread_root(struct cgroup *cgrp)$/;"	f	file:
cgroup_can_fork	cgroup/cgroup.c	/^int cgroup_can_fork(struct task_struct *child)$/;"	f
cgroup_cancel_fork	cgroup/cgroup.c	/^void cgroup_cancel_fork(struct task_struct *child)$/;"	f
cgroup_check_hierarchy_limits	cgroup/cgroup.c	/^static bool cgroup_check_hierarchy_limits(struct cgroup *parent)$/;"	f	file:
cgroup_clone_children_read	cgroup/cgroup-v1.c	/^static u64 cgroup_clone_children_read(struct cgroup_subsys_state *css,$/;"	f	file:
cgroup_clone_children_write	cgroup/cgroup-v1.c	/^static int cgroup_clone_children_write(struct cgroup_subsys_state *css,$/;"	f	file:
cgroup_control	cgroup/cgroup.c	/^static u16 cgroup_control(struct cgroup *cgrp)$/;"	f	file:
cgroup_controllers_show	cgroup/cgroup.c	/^static int cgroup_controllers_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_cpu_pressure_show	cgroup/cgroup.c	/^static int cgroup_cpu_pressure_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_cpu_pressure_write	cgroup/cgroup.c	/^static ssize_t cgroup_cpu_pressure_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_create	cgroup/cgroup.c	/^static struct cgroup *cgroup_create(struct cgroup *parent)$/;"	f	file:
cgroup_css	cgroup/cgroup.c	/^static struct cgroup_subsys_state *cgroup_css(struct cgroup *cgrp,$/;"	f	file:
cgroup_css_links_read	cgroup/debug.c	/^static int cgroup_css_links_read(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_dec_frozen_cnt	cgroup/freezer.c	/^static void cgroup_dec_frozen_cnt(struct cgroup *cgrp)$/;"	f	file:
cgroup_delegate_attr	cgroup/cgroup.c	/^static struct kobj_attribute cgroup_delegate_attr = __ATTR_RO(delegate);$/;"	v	typeref:struct:kobj_attribute	file:
cgroup_destroy_root	cgroup/cgroup.c	/^static void cgroup_destroy_root(struct cgroup_root *root)$/;"	f	file:
cgroup_destroy_wq	cgroup/cgroup.c	/^static struct workqueue_struct *cgroup_destroy_wq;$/;"	v	typeref:struct:workqueue_struct	file:
cgroup_dev_func_proto	bpf/cgroup.c	/^cgroup_dev_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
cgroup_dev_is_valid_access	bpf/cgroup.c	/^static bool cgroup_dev_is_valid_access(int off, int size,$/;"	f	file:
cgroup_disable	cgroup/cgroup.c	/^static int __init cgroup_disable(char *str)$/;"	f	file:
cgroup_do_freeze	cgroup/freezer.c	/^static void cgroup_do_freeze(struct cgroup *cgrp, bool freeze)$/;"	f	file:
cgroup_do_get_tree	cgroup/cgroup.c	/^int cgroup_do_get_tree(struct fs_context *fc)$/;"	f
cgroup_e_css	cgroup/cgroup.c	/^struct cgroup_subsys_state *cgroup_e_css(struct cgroup *cgrp,$/;"	f
cgroup_e_css_by_mask	cgroup/cgroup.c	/^static struct cgroup_subsys_state *cgroup_e_css_by_mask(struct cgroup *cgrp,$/;"	f	file:
cgroup_enable_task_cg_lists	cgroup/cgroup.c	/^static void cgroup_enable_task_cg_lists(void)$/;"	f	file:
cgroup_enable_threaded	cgroup/cgroup.c	/^static int cgroup_enable_threaded(struct cgroup *cgrp)$/;"	f	file:
cgroup_enter_frozen	cgroup/freezer.c	/^void cgroup_enter_frozen(void)$/;"	f
cgroup_events_show	cgroup/cgroup.c	/^static int cgroup_events_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_exit	cgroup/cgroup.c	/^void cgroup_exit(struct task_struct *tsk)$/;"	f
cgroup_exit_cftypes	cgroup/cgroup.c	/^static void cgroup_exit_cftypes(struct cftype *cfts)$/;"	f	file:
cgroup_exit_root_id	cgroup/cgroup.c	/^static void cgroup_exit_root_id(struct cgroup_root *root)$/;"	f	file:
cgroup_extra_stat_show	cgroup/cgroup.c	/^static int __maybe_unused cgroup_extra_stat_show(struct seq_file *seq,$/;"	f	file:
cgroup_fc2context	cgroup/cgroup-internal.h	/^static inline struct cgroup_fs_context *cgroup_fc2context(struct fs_context *fc)$/;"	f
cgroup_fd_array_free	bpf/arraymap.c	/^static void cgroup_fd_array_free(struct bpf_map *map)$/;"	f	file:
cgroup_fd_array_get_ptr	bpf/arraymap.c	/^static void *cgroup_fd_array_get_ptr(struct bpf_map *map,$/;"	f	file:
cgroup_fd_array_put_ptr	bpf/arraymap.c	/^static void cgroup_fd_array_put_ptr(void *ptr)$/;"	f	file:
cgroup_features_attr	cgroup/cgroup.c	/^static struct kobj_attribute cgroup_features_attr = __ATTR_RO(features);$/;"	v	typeref:struct:kobj_attribute	file:
cgroup_file_mode	cgroup/cgroup.c	/^static umode_t cgroup_file_mode(const struct cftype *cft)$/;"	f	file:
cgroup_file_name	cgroup/cgroup.c	/^static char *cgroup_file_name(struct cgroup *cgrp, const struct cftype *cft,$/;"	f	file:
cgroup_file_notify	cgroup/cgroup.c	/^void cgroup_file_notify(struct cgroup_file *cfile)$/;"	f
cgroup_file_notify_timer	cgroup/cgroup.c	/^static void cgroup_file_notify_timer(struct timer_list *timer)$/;"	f	file:
cgroup_file_open	cgroup/cgroup.c	/^static int cgroup_file_open(struct kernfs_open_file *of)$/;"	f	file:
cgroup_file_poll	cgroup/cgroup.c	/^static __poll_t cgroup_file_poll(struct kernfs_open_file *of, poll_table *pt)$/;"	f	file:
cgroup_file_release	cgroup/cgroup.c	/^static void cgroup_file_release(struct kernfs_open_file *of)$/;"	f	file:
cgroup_file_write	cgroup/cgroup.c	/^static ssize_t cgroup_file_write(struct kernfs_open_file *of, char *buf,$/;"	f	file:
cgroup_filetype	cgroup/cgroup-v1.c	/^enum cgroup_filetype {$/;"	g	file:
cgroup_finalize_control	cgroup/cgroup.c	/^static void cgroup_finalize_control(struct cgroup *cgrp, int ret)$/;"	f	file:
cgroup_for_each_live_child	cgroup/cgroup.c	705;"	d	file:
cgroup_for_each_live_descendant_post	cgroup/cgroup.c	722;"	d	file:
cgroup_for_each_live_descendant_pre	cgroup/cgroup.c	713;"	d	file:
cgroup_fork	cgroup/cgroup.c	/^void cgroup_fork(struct task_struct *child)$/;"	f
cgroup_free	cgroup/cgroup.c	/^void cgroup_free(struct task_struct *task)$/;"	f
cgroup_free_root	cgroup/cgroup.c	/^void cgroup_free_root(struct cgroup_root *root)$/;"	f
cgroup_freeze	cgroup/freezer.c	/^void cgroup_freeze(struct cgroup *cgrp, bool freeze)$/;"	f
cgroup_freeze_show	cgroup/cgroup.c	/^static int cgroup_freeze_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_freeze_task	cgroup/freezer.c	/^static void cgroup_freeze_task(struct task_struct *task, bool freeze)$/;"	f	file:
cgroup_freeze_write	cgroup/cgroup.c	/^static ssize_t cgroup_freeze_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_freezer_migrate_task	cgroup/freezer.c	/^void cgroup_freezer_migrate_task(struct task_struct *task,$/;"	f
cgroup_freezing	cgroup/legacy_freezer.c	/^bool cgroup_freezing(struct task_struct *task)$/;"	f
cgroup_fs_context	cgroup/cgroup-internal.h	/^struct cgroup_fs_context {$/;"	s
cgroup_fs_context_free	cgroup/cgroup.c	/^static void cgroup_fs_context_free(struct fs_context *fc)$/;"	f	file:
cgroup_fs_context_ops	cgroup/cgroup.c	/^static const struct fs_context_operations cgroup_fs_context_ops = {$/;"	v	typeref:struct:fs_context_operations	file:
cgroup_fs_type	cgroup/cgroup.c	/^struct file_system_type cgroup_fs_type = {$/;"	v	typeref:struct:file_system_type
cgroup_get_e_css	cgroup/cgroup.c	/^struct cgroup_subsys_state *cgroup_get_e_css(struct cgroup *cgrp,$/;"	f
cgroup_get_from_fd	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_get_from_fd);$/;"	v
cgroup_get_from_fd	cgroup/cgroup.c	/^struct cgroup *cgroup_get_from_fd(int fd)$/;"	f
cgroup_get_from_path	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_get_from_path);$/;"	v
cgroup_get_from_path	cgroup/cgroup.c	/^struct cgroup *cgroup_get_from_path(const char *path)$/;"	f
cgroup_get_live	cgroup/cgroup.c	/^static void cgroup_get_live(struct cgroup *cgrp)$/;"	f	file:
cgroup_get_tree	cgroup/cgroup.c	/^static int cgroup_get_tree(struct fs_context *fc)$/;"	f	file:
cgroup_has_tasks	cgroup/cgroup.c	/^static bool cgroup_has_tasks(struct cgroup *cgrp)$/;"	f	file:
cgroup_idr_alloc	cgroup/cgroup.c	/^static int cgroup_idr_alloc(struct idr *idr, void *ptr, int start, int end,$/;"	f	file:
cgroup_idr_remove	cgroup/cgroup.c	/^static void cgroup_idr_remove(struct idr *idr, int id)$/;"	f	file:
cgroup_idr_replace	cgroup/cgroup.c	/^static void *cgroup_idr_replace(struct idr *idr, void *ptr, int id)$/;"	f	file:
cgroup_inc_frozen_cnt	cgroup/freezer.c	/^static void cgroup_inc_frozen_cnt(struct cgroup *cgrp)$/;"	f	file:
cgroup_init	cgroup/cgroup.c	/^int __init cgroup_init(void)$/;"	f
cgroup_init_cftypes	cgroup/cgroup.c	/^static int cgroup_init_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f	file:
cgroup_init_early	cgroup/cgroup.c	/^int __init cgroup_init_early(void)$/;"	f
cgroup_init_fs_context	cgroup/cgroup.c	/^static int cgroup_init_fs_context(struct fs_context *fc)$/;"	f	file:
cgroup_init_root_id	cgroup/cgroup.c	/^static int cgroup_init_root_id(struct cgroup_root *root)$/;"	f	file:
cgroup_init_subsys	cgroup/cgroup.c	/^static void __init cgroup_init_subsys(struct cgroup_subsys *ss, bool early)$/;"	f	file:
cgroup_io_pressure_show	cgroup/cgroup.c	/^static int cgroup_io_pressure_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_io_pressure_write	cgroup/cgroup.c	/^static ssize_t cgroup_io_pressure_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_is_dead	cgroup/cgroup-internal.h	/^static inline bool cgroup_is_dead(const struct cgroup *cgrp)$/;"	f
cgroup_is_mixable	cgroup/cgroup.c	/^static bool cgroup_is_mixable(struct cgroup *cgrp)$/;"	f	file:
cgroup_is_thread_root	cgroup/cgroup.c	/^bool cgroup_is_thread_root(struct cgroup *cgrp)$/;"	f
cgroup_is_threaded	cgroup/cgroup.c	/^bool cgroup_is_threaded(struct cgroup *cgrp)$/;"	f
cgroup_is_valid_domain	cgroup/cgroup.c	/^static bool cgroup_is_valid_domain(struct cgroup *cgrp)$/;"	f	file:
cgroup_kf_ops	cgroup/cgroup.c	/^static struct kernfs_ops cgroup_kf_ops = {$/;"	v	typeref:struct:kernfs_ops	file:
cgroup_kf_single_ops	cgroup/cgroup.c	/^static struct kernfs_ops cgroup_kf_single_ops = {$/;"	v	typeref:struct:kernfs_ops	file:
cgroup_kf_syscall_ops	cgroup/cgroup.c	/^static struct kernfs_syscall_ops cgroup_kf_syscall_ops = {$/;"	v	typeref:struct:kernfs_syscall_ops	file:
cgroup_kf_syscall_ops	cgroup/cgroup.c	/^static struct kernfs_syscall_ops cgroup_kf_syscall_ops;$/;"	v	typeref:struct:kernfs_syscall_ops	file:
cgroup_kill_sb	cgroup/cgroup.c	/^static void cgroup_kill_sb(struct super_block *sb)$/;"	f	file:
cgroup_kn_lock_live	cgroup/cgroup.c	/^struct cgroup *cgroup_kn_lock_live(struct kernfs_node *kn, bool drain_offline)$/;"	f
cgroup_kn_set_ugid	cgroup/cgroup.c	/^static int cgroup_kn_set_ugid(struct kernfs_node *kn)$/;"	f	file:
cgroup_kn_unlock	cgroup/cgroup.c	/^void cgroup_kn_unlock(struct kernfs_node *kn)$/;"	f
cgroup_leave_frozen	cgroup/freezer.c	/^void cgroup_leave_frozen(bool always_leave)$/;"	f
cgroup_masks_read	cgroup/debug.c	/^static int cgroup_masks_read(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_masks_read_one	cgroup/debug.c	/^static void cgroup_masks_read_one(struct seq_file *seq, const char *name,$/;"	f	file:
cgroup_max_depth_show	cgroup/cgroup.c	/^static int cgroup_max_depth_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_max_depth_write	cgroup/cgroup.c	/^static ssize_t cgroup_max_depth_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_max_descendants_show	cgroup/cgroup.c	/^static int cgroup_max_descendants_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_max_descendants_write	cgroup/cgroup.c	/^static ssize_t cgroup_max_descendants_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_memory_pressure_show	cgroup/cgroup.c	/^static int cgroup_memory_pressure_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_memory_pressure_write	cgroup/cgroup.c	/^static ssize_t cgroup_memory_pressure_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_mgctx	cgroup/cgroup-internal.h	/^struct cgroup_mgctx {$/;"	s
cgroup_migrate	cgroup/cgroup.c	/^int cgroup_migrate(struct task_struct *leader, bool threadgroup,$/;"	f
cgroup_migrate_add_src	cgroup/cgroup.c	/^void cgroup_migrate_add_src(struct css_set *src_cset,$/;"	f
cgroup_migrate_add_task	cgroup/cgroup.c	/^static void cgroup_migrate_add_task(struct task_struct *task,$/;"	f	file:
cgroup_migrate_execute	cgroup/cgroup.c	/^static int cgroup_migrate_execute(struct cgroup_mgctx *mgctx)$/;"	f	file:
cgroup_migrate_finish	cgroup/cgroup.c	/^void cgroup_migrate_finish(struct cgroup_mgctx *mgctx)$/;"	f
cgroup_migrate_prepare_dst	cgroup/cgroup.c	/^int cgroup_migrate_prepare_dst(struct cgroup_mgctx *mgctx)$/;"	f
cgroup_migrate_vet_dst	cgroup/cgroup.c	/^int cgroup_migrate_vet_dst(struct cgroup *dst_cgrp)$/;"	f
cgroup_mkdir	cgroup/cgroup.c	/^int cgroup_mkdir(struct kernfs_node *parent_kn, const char *name, umode_t mode)$/;"	f
cgroup_move_task	sched/psi.c	/^void cgroup_move_task(struct task_struct *task, struct css_set *to)$/;"	f
cgroup_mutex	cgroup/cgroup.c	/^DEFINE_MUTEX(cgroup_mutex);$/;"	v
cgroup_mutex	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_mutex);$/;"	v
cgroup_namespaces_init	cgroup/namespace.c	/^static __init int cgroup_namespaces_init(void)$/;"	f	file:
cgroup_namespaces_init	cgroup/namespace.c	/^subsys_initcall(cgroup_namespaces_init);$/;"	v
cgroup_no_v1	cgroup/cgroup-v1.c	/^static int __init cgroup_no_v1(char *str)$/;"	f	file:
cgroup_no_v1_mask	cgroup/cgroup-v1.c	/^static u16 cgroup_no_v1_mask;$/;"	v	file:
cgroup_no_v1_named	cgroup/cgroup-v1.c	/^static bool cgroup_no_v1_named;$/;"	v	file:
cgroup_on_dfl	cgroup/cgroup.c	/^bool cgroup_on_dfl(const struct cgroup *cgrp)$/;"	f
cgroup_parse_float	cgroup/cgroup.c	/^int cgroup_parse_float(const char *input, unsigned dec_shift, s64 *v)$/;"	f
cgroup_path_from_kernfs_id	cgroup/cgroup.c	/^void cgroup_path_from_kernfs_id(const union kernfs_node_id *id,$/;"	f
cgroup_path_ns	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_path_ns);$/;"	v
cgroup_path_ns	cgroup/cgroup.c	/^int cgroup_path_ns(struct cgroup *cgrp, char *buf, size_t buflen,$/;"	f
cgroup_path_ns_locked	cgroup/cgroup.c	/^int cgroup_path_ns_locked(struct cgroup *cgrp, char *buf, size_t buflen,$/;"	f
cgroup_pidlist	cgroup/cgroup-v1.c	/^struct cgroup_pidlist {$/;"	s	file:
cgroup_pidlist_destroy_work_fn	cgroup/cgroup-v1.c	/^static void cgroup_pidlist_destroy_work_fn(struct work_struct *work)$/;"	f	file:
cgroup_pidlist_destroy_wq	cgroup/cgroup-v1.c	/^static struct workqueue_struct *cgroup_pidlist_destroy_wq;$/;"	v	typeref:struct:workqueue_struct	file:
cgroup_pidlist_find	cgroup/cgroup-v1.c	/^static struct cgroup_pidlist *cgroup_pidlist_find(struct cgroup *cgrp,$/;"	f	file:
cgroup_pidlist_find_create	cgroup/cgroup-v1.c	/^static struct cgroup_pidlist *cgroup_pidlist_find_create(struct cgroup *cgrp,$/;"	f	file:
cgroup_pidlist_next	cgroup/cgroup-v1.c	/^static void *cgroup_pidlist_next(struct seq_file *s, void *v, loff_t *pos)$/;"	f	file:
cgroup_pidlist_show	cgroup/cgroup-v1.c	/^static int cgroup_pidlist_show(struct seq_file *s, void *v)$/;"	f	file:
cgroup_pidlist_start	cgroup/cgroup-v1.c	/^static void *cgroup_pidlist_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
cgroup_pidlist_stop	cgroup/cgroup-v1.c	/^static void cgroup_pidlist_stop(struct seq_file *s, void *v)$/;"	f	file:
cgroup_post_fork	cgroup/cgroup.c	/^void cgroup_post_fork(struct task_struct *child)$/;"	f
cgroup_pressure_poll	cgroup/cgroup.c	/^static __poll_t cgroup_pressure_poll(struct kernfs_open_file *of,$/;"	f	file:
cgroup_pressure_release	cgroup/cgroup.c	/^static void cgroup_pressure_release(struct kernfs_open_file *of)$/;"	f	file:
cgroup_pressure_write	cgroup/cgroup.c	/^static ssize_t cgroup_pressure_write(struct kernfs_open_file *of, char *buf,$/;"	f	file:
cgroup_print_ss_mask	cgroup/cgroup.c	/^static void cgroup_print_ss_mask(struct seq_file *seq, u16 ss_mask)$/;"	f	file:
cgroup_procs_next	cgroup/cgroup.c	/^static void *cgroup_procs_next(struct seq_file *s, void *v, loff_t *pos)$/;"	f	file:
cgroup_procs_release	cgroup/cgroup.c	/^static void cgroup_procs_release(struct kernfs_open_file *of)$/;"	f	file:
cgroup_procs_show	cgroup/cgroup.c	/^static int cgroup_procs_show(struct seq_file *s, void *v)$/;"	f	file:
cgroup_procs_start	cgroup/cgroup.c	/^static void *cgroup_procs_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
cgroup_procs_write	cgroup/cgroup.c	/^static ssize_t cgroup_procs_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_procs_write_permission	cgroup/cgroup.c	/^static int cgroup_procs_write_permission(struct cgroup *src_cgrp,$/;"	f	file:
cgroup_propagate_control	cgroup/cgroup.c	/^static void cgroup_propagate_control(struct cgroup *cgrp)$/;"	f	file:
cgroup_propagate_frozen	cgroup/freezer.c	/^static void cgroup_propagate_frozen(struct cgroup *cgrp, bool frozen)$/;"	f	file:
cgroup_read_notify_on_release	cgroup/cgroup-v1.c	/^static u64 cgroup_read_notify_on_release(struct cgroup_subsys_state *css,$/;"	f	file:
cgroup_reconfigure	cgroup/cgroup.c	/^static int cgroup_reconfigure(struct fs_context *fc)$/;"	f	file:
cgroup_release	cgroup/cgroup.c	/^void cgroup_release(struct task_struct *task)$/;"	f
cgroup_release_agent_show	cgroup/cgroup-v1.c	/^static int cgroup_release_agent_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_release_agent_write	cgroup/cgroup-v1.c	/^static ssize_t cgroup_release_agent_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_restore_control	cgroup/cgroup.c	/^static void cgroup_restore_control(struct cgroup *cgrp)$/;"	f	file:
cgroup_rm_cftypes	cgroup/cgroup.c	/^int cgroup_rm_cftypes(struct cftype *cfts)$/;"	f
cgroup_rm_cftypes_locked	cgroup/cgroup.c	/^static int cgroup_rm_cftypes_locked(struct cftype *cfts)$/;"	f	file:
cgroup_rm_file	cgroup/cgroup.c	/^static void cgroup_rm_file(struct cgroup *cgrp, const struct cftype *cft)$/;"	f	file:
cgroup_rmdir	cgroup/cgroup.c	/^int cgroup_rmdir(struct kernfs_node *kn)$/;"	f
cgroup_root_count	cgroup/cgroup.c	/^static int cgroup_root_count;$/;"	v	file:
cgroup_root_from_kf	cgroup/cgroup.c	/^struct cgroup_root *cgroup_root_from_kf(struct kernfs_root *kf_root)$/;"	f
cgroup_roots	cgroup/cgroup.c	/^LIST_HEAD(cgroup_roots);$/;"	v
cgroup_rstat_boot	cgroup/rstat.c	/^void __init cgroup_rstat_boot(void)$/;"	f
cgroup_rstat_cpu	cgroup/rstat.c	/^static struct cgroup_rstat_cpu *cgroup_rstat_cpu(struct cgroup *cgrp, int cpu)$/;"	f	file:
cgroup_rstat_cpu_pop_updated	cgroup/rstat.c	/^static struct cgroup *cgroup_rstat_cpu_pop_updated(struct cgroup *pos,$/;"	f	file:
cgroup_rstat_exit	cgroup/rstat.c	/^void cgroup_rstat_exit(struct cgroup *cgrp)$/;"	f
cgroup_rstat_flush	cgroup/rstat.c	/^void cgroup_rstat_flush(struct cgroup *cgrp)$/;"	f
cgroup_rstat_flush_irqsafe	cgroup/rstat.c	/^void cgroup_rstat_flush_irqsafe(struct cgroup *cgrp)$/;"	f
cgroup_rstat_init	cgroup/rstat.c	/^int cgroup_rstat_init(struct cgroup *cgrp)$/;"	f
cgroup_rstat_updated	cgroup/rstat.c	/^EXPORT_SYMBOL_GPL(cgroup_rstat_updated);$/;"	v
cgroup_rstat_updated	cgroup/rstat.c	/^void cgroup_rstat_updated(struct cgroup *cgrp, int cpu)$/;"	f
cgroup_sane_behavior_show	cgroup/cgroup-v1.c	/^static int cgroup_sane_behavior_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_save_control	cgroup/cgroup.c	/^static void cgroup_save_control(struct cgroup *cgrp)$/;"	f	file:
cgroup_seqfile_next	cgroup/cgroup.c	/^static void *cgroup_seqfile_next(struct seq_file *seq, void *v, loff_t *ppos)$/;"	f	file:
cgroup_seqfile_show	cgroup/cgroup.c	/^static int cgroup_seqfile_show(struct seq_file *m, void *arg)$/;"	f	file:
cgroup_seqfile_start	cgroup/cgroup.c	/^static void *cgroup_seqfile_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
cgroup_seqfile_stop	cgroup/cgroup.c	/^static void cgroup_seqfile_stop(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_setup_root	cgroup/cgroup.c	/^int cgroup_setup_root(struct cgroup_root *root, u16 ss_mask)$/;"	f
cgroup_show_options	cgroup/cgroup.c	/^static int cgroup_show_options(struct seq_file *seq, struct kernfs_root *kf_root)$/;"	f	file:
cgroup_show_path	cgroup/cgroup.c	/^int cgroup_show_path(struct seq_file *sf, struct kernfs_node *kf_node,$/;"	f
cgroup_sk_alloc	cgroup/cgroup.c	/^void cgroup_sk_alloc(struct sock_cgroup_data *skcd)$/;"	f
cgroup_sk_alloc_disable	cgroup/cgroup.c	/^void cgroup_sk_alloc_disable(void)$/;"	f
cgroup_sk_alloc_disabled	cgroup/cgroup.c	6361;"	d	file:
cgroup_sk_free	cgroup/cgroup.c	/^void cgroup_sk_free(struct sock_cgroup_data *skcd)$/;"	f
cgroup_sk_update_lock	cgroup/cgroup.c	/^DEFINE_SPINLOCK(cgroup_sk_update_lock);$/;"	v
cgroup_ss_mask	cgroup/cgroup.c	/^static u16 cgroup_ss_mask(struct cgroup *cgrp)$/;"	f	file:
cgroup_ssid_enabled	cgroup/cgroup.c	/^bool cgroup_ssid_enabled(int ssid)$/;"	f
cgroup_stat_show	cgroup/cgroup.c	/^static int cgroup_stat_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_storage_check_btf	bpf/local_storage.c	/^static int cgroup_storage_check_btf(const struct bpf_map *map,$/;"	f	file:
cgroup_storage_delete_elem	bpf/local_storage.c	/^static int cgroup_storage_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
cgroup_storage_get_next_key	bpf/local_storage.c	/^static int cgroup_storage_get_next_key(struct bpf_map *_map, void *_key,$/;"	f	file:
cgroup_storage_insert	bpf/local_storage.c	/^static int cgroup_storage_insert(struct bpf_cgroup_storage_map *map,$/;"	f	file:
cgroup_storage_lookup	bpf/local_storage.c	/^static struct bpf_cgroup_storage *cgroup_storage_lookup($/;"	f	file:
cgroup_storage_lookup_elem	bpf/local_storage.c	/^static void *cgroup_storage_lookup_elem(struct bpf_map *_map, void *_key)$/;"	f	file:
cgroup_storage_map_alloc	bpf/local_storage.c	/^static struct bpf_map *cgroup_storage_map_alloc(union bpf_attr *attr)$/;"	f	file:
cgroup_storage_map_free	bpf/local_storage.c	/^static void cgroup_storage_map_free(struct bpf_map *_map)$/;"	f	file:
cgroup_storage_map_ops	bpf/local_storage.c	/^const struct bpf_map_ops cgroup_storage_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
cgroup_storage_seq_show_elem	bpf/local_storage.c	/^static void cgroup_storage_seq_show_elem(struct bpf_map *map, void *_key,$/;"	f	file:
cgroup_storage_update_elem	bpf/local_storage.c	/^static int cgroup_storage_update_elem(struct bpf_map *map, void *_key,$/;"	f	file:
cgroup_subsys	cgroup/cgroup.c	/^struct cgroup_subsys *cgroup_subsys[] = {$/;"	v	typeref:struct:cgroup_subsys
cgroup_subsys_enabled_key	cgroup/cgroup.c	/^static struct static_key_true *cgroup_subsys_enabled_key[] = {$/;"	v	typeref:struct:static_key_true	file:
cgroup_subsys_name	cgroup/cgroup.c	/^static const char *cgroup_subsys_name[] = {$/;"	v	file:
cgroup_subsys_on_dfl_key	cgroup/cgroup.c	/^static struct static_key_true *cgroup_subsys_on_dfl_key[] = {$/;"	v	typeref:struct:static_key_true	file:
cgroup_subsys_states_read	cgroup/debug.c	/^static int cgroup_subsys_states_read(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_subtree_control_show	cgroup/cgroup.c	/^static int cgroup_subtree_control_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_subtree_control_write	cgroup/cgroup.c	/^static ssize_t cgroup_subtree_control_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_sysfs_attr_group	cgroup/cgroup.c	/^static const struct attribute_group cgroup_sysfs_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
cgroup_sysfs_attrs	cgroup/cgroup.c	/^static struct attribute *cgroup_sysfs_attrs[] = {$/;"	v	typeref:struct:attribute	file:
cgroup_sysfs_init	cgroup/cgroup.c	/^static int __init cgroup_sysfs_init(void)$/;"	f	file:
cgroup_sysfs_init	cgroup/cgroup.c	/^subsys_initcall(cgroup_sysfs_init);$/;"	v
cgroup_task_count	cgroup/cgroup.c	/^int cgroup_task_count(const struct cgroup *cgrp)$/;"	f
cgroup_taskset	cgroup/cgroup-internal.h	/^struct cgroup_taskset {$/;"	s
cgroup_taskset_first	cgroup/cgroup.c	/^struct task_struct *cgroup_taskset_first(struct cgroup_taskset *tset,$/;"	f
cgroup_taskset_next	cgroup/cgroup.c	/^struct task_struct *cgroup_taskset_next(struct cgroup_taskset *tset,$/;"	f
cgroup_threadgroup_rwsem	cgroup/cgroup-internal.h	/^	__acquires(&cgroup_threadgroup_rwsem);$/;"	v
cgroup_threadgroup_rwsem	cgroup/cgroup-internal.h	/^	__releases(&cgroup_threadgroup_rwsem);$/;"	v
cgroup_threadgroup_rwsem	cgroup/cgroup.c	/^DEFINE_PERCPU_RWSEM(cgroup_threadgroup_rwsem);$/;"	v
cgroup_threads_start	cgroup/cgroup.c	/^static void *cgroup_threads_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
cgroup_threads_write	cgroup/cgroup.c	/^static ssize_t cgroup_threads_write(struct kernfs_open_file *of,$/;"	f	file:
cgroup_transfer_tasks	cgroup/cgroup-v1.c	/^int cgroup_transfer_tasks(struct cgroup *to, struct cgroup *from)$/;"	f
cgroup_tryget_css	cgroup/cgroup.c	/^static struct cgroup_subsys_state *cgroup_tryget_css(struct cgroup *cgrp,$/;"	f	file:
cgroup_type_show	cgroup/cgroup.c	/^static int cgroup_type_show(struct seq_file *seq, void *v)$/;"	f	file:
cgroup_type_write	cgroup/cgroup.c	/^static ssize_t cgroup_type_write(struct kernfs_open_file *of, char *buf,$/;"	f	file:
cgroup_update_dfl_csses	cgroup/cgroup.c	/^static int cgroup_update_dfl_csses(struct cgroup *cgrp)$/;"	f	file:
cgroup_update_frozen	cgroup/freezer.c	/^void cgroup_update_frozen(struct cgroup *cgrp)$/;"	f
cgroup_update_populated	cgroup/cgroup.c	/^static void cgroup_update_populated(struct cgroup *cgrp, bool populated)$/;"	f	file:
cgroup_vet_subtree_control_enable	cgroup/cgroup.c	/^static int cgroup_vet_subtree_control_enable(struct cgroup *cgrp, u16 enable)$/;"	f	file:
cgroup_wq_init	cgroup/cgroup.c	/^core_initcall(cgroup_wq_init);$/;"	v
cgroup_wq_init	cgroup/cgroup.c	/^static int __init cgroup_wq_init(void)$/;"	f	file:
cgroup_write_notify_on_release	cgroup/cgroup-v1.c	/^static int cgroup_write_notify_on_release(struct cgroup_subsys_state *css,$/;"	f	file:
cgroupns_get	cgroup/namespace.c	/^static struct ns_common *cgroupns_get(struct task_struct *task)$/;"	f	file:
cgroupns_install	cgroup/namespace.c	/^static int cgroupns_install(struct nsproxy *nsproxy, struct ns_common *ns)$/;"	f	file:
cgroupns_operations	cgroup/namespace.c	/^const struct proc_ns_operations cgroupns_operations = {$/;"	v	typeref:struct:proc_ns_operations
cgroupns_owner	cgroup/namespace.c	/^static struct user_namespace *cgroupns_owner(struct ns_common *ns)$/;"	f	file:
cgroupns_put	cgroup/namespace.c	/^static void cgroupns_put(struct ns_common *ns)$/;"	f	file:
cgroupstats_build	cgroup/cgroup-v1.c	/^int cgroupstats_build(struct cgroupstats *stats, struct dentry *dentry)$/;"	f
cgroupstats_cmd_get_policy	taskstats.c	/^static const struct nla_policy cgroupstats_cmd_get_policy[TASKSTATS_CMD_ATTR_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
cgroupstats_user_cmd	taskstats.c	/^static int cgroupstats_user_cmd(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
cgrp	cgroup/cgroup-internal.h	/^	struct cgroup		*cgrp;$/;"	m	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::cgroup
cgrp_cset_link	cgroup/cgroup-internal.h	/^struct cgrp_cset_link {$/;"	s
cgrp_dfl_implicit_ss_mask	cgroup/cgroup.c	/^static u16 cgrp_dfl_implicit_ss_mask;$/;"	v	file:
cgrp_dfl_inhibit_ss_mask	cgroup/cgroup.c	/^static u16 cgrp_dfl_inhibit_ss_mask;$/;"	v	file:
cgrp_dfl_root	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(cgrp_dfl_root);$/;"	v
cgrp_dfl_root	cgroup/cgroup.c	/^struct cgroup_root cgrp_dfl_root = { .cgrp.rstat_cpu = &cgrp_dfl_root_rstat_cpu };$/;"	v	typeref:struct:cgroup_root
cgrp_dfl_threaded_ss_mask	cgroup/cgroup.c	/^static u16 cgrp_dfl_threaded_ss_mask;$/;"	v	file:
cgrp_dfl_visible	cgroup/cgroup.c	/^static bool cgrp_dfl_visible;$/;"	v	file:
cgrp_link	cgroup/cgroup-internal.h	/^	struct list_head	cgrp_link;$/;"	m	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head
chain	futex.c	/^	struct plist_head chain;$/;"	m	struct:futex_hash_bucket	typeref:struct:futex_hash_bucket::plist_head	file:
chain	power/snapshot.c	/^	struct linked_page *chain;	\/* the chain *\/$/;"	m	struct:chain_allocator	typeref:struct:chain_allocator::linked_page	file:
chain_alloc	power/snapshot.c	/^static void *chain_alloc(struct chain_allocator *ca, unsigned int size)$/;"	f	file:
chain_allocator	power/snapshot.c	/^struct chain_allocator {$/;"	s	file:
chain_hlocks	locking/lockdep.c	/^static u16 chain_hlocks[MAX_LOCKDEP_CHAIN_HLOCKS];$/;"	v	file:
chain_init	power/snapshot.c	/^static void chain_init(struct chain_allocator *ca, gfp_t gfp_mask,$/;"	f	file:
chain_lookup_hits	locking/lockdep_internals.h	/^	unsigned long  chain_lookup_hits;$/;"	m	struct:lockdep_stats
chain_lookup_misses	locking/lockdep_internals.h	/^	unsigned int   chain_lookup_misses;$/;"	m	struct:lockdep_stats
chained_action	irq/chip.c	/^struct irqaction chained_action = {$/;"	v	typeref:struct:irqaction
chainhash_table	locking/lockdep.c	/^static struct hlist_head chainhash_table[CHAINHASH_SIZE];$/;"	v	typeref:struct:hlist_head	file:
chainhashentry	locking/lockdep.c	354;"	d	file:
change_clocksource	time/timekeeping.c	/^static int change_clocksource(void *data)$/;"	f	file:
change_pid	pid.c	/^void change_pid(struct task_struct *task, enum pid_type type,$/;"	f
check_alu_op	bpf/verifier.c	/^static int check_alu_op(struct bpf_verifier_env *env, struct bpf_insn *insn)$/;"	f	file:
check_arg_pair_ok	bpf/verifier.c	/^static bool check_arg_pair_ok(const struct bpf_func_proto *fn)$/;"	f	file:
check_args_pair_invalid	bpf/verifier.c	/^static bool check_args_pair_invalid(enum bpf_arg_type arg_curr,$/;"	f	file:
check_asym_packing	sched/fair.c	/^static int check_asym_packing(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
check_btf_func	bpf/verifier.c	/^static int check_btf_func(struct bpf_verifier_env *env,$/;"	f	file:
check_btf_info	bpf/verifier.c	/^static int check_btf_info(struct bpf_verifier_env *env,$/;"	f	file:
check_btf_line	bpf/verifier.c	/^static int check_btf_line(struct bpf_verifier_env *env,$/;"	f	file:
check_cfg	bpf/verifier.c	/^static int check_cfg(struct bpf_verifier_env *env)$/;"	f	file:
check_cfs_rq_runtime	sched/fair.c	/^static bool check_cfs_rq_runtime(struct cfs_rq *cfs_rq) { return false; }$/;"	f	file:
check_cfs_rq_runtime	sched/fair.c	/^static bool check_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
check_cgroupfs_options	cgroup/cgroup-v1.c	/^static int check_cgroupfs_options(struct fs_context *fc)$/;"	f	file:
check_chain_key	locking/lockdep.c	/^static void check_chain_key(struct task_struct *curr)$/;"	f	file:
check_class_changed	sched/core.c	/^static inline void check_class_changed(struct rq *rq, struct task_struct *p,$/;"	f	file:
check_clock	time/posix-cpu-timers.c	/^static int check_clock(const clockid_t which_clock)$/;"	f	file:
check_clocks	time/tick-sched.h	/^	unsigned long			check_clocks;$/;"	m	struct:tick_sched
check_cond_jmp_op	bpf/verifier.c	/^static int check_cond_jmp_op(struct bpf_verifier_env *env,$/;"	f	file:
check_consistency	locking/lockdep.c	/^int check_consistency = 0;$/;"	v
check_cpu_capacity	sched/fair.c	/^check_cpu_capacity(struct rq *rq, struct sched_domain *sd)$/;"	f	file:
check_cpu_itimer	time/posix-cpu-timers.c	/^static void check_cpu_itimer(struct task_struct *tsk, struct cpu_itimer *it,$/;"	f	file:
check_cpu_stall	rcu/tree_stall.h	/^static void check_cpu_stall(struct rcu_data *rdp)$/;"	f
check_cpu_stall_init	rcu/tree_stall.h	/^early_initcall(check_cpu_stall_init);$/;"	v
check_cpu_stall_init	rcu/tree_stall.h	/^static int __init check_cpu_stall_init(void)$/;"	f
check_critical_timing	trace/trace_irqsoff.c	/^check_critical_timing(struct trace_array *tr,$/;"	f	file:
check_ctx_access	bpf/verifier.c	/^static int check_ctx_access(struct bpf_verifier_env *env, int insn_idx, int off, int size,$/;"	f	file:
check_ctx_reg	bpf/verifier.c	/^static int check_ctx_reg(struct bpf_verifier_env *env,$/;"	f	file:
check_data_structures	locking/lockdep.c	/^static inline void check_data_structures(void) { }$/;"	f	file:
check_data_structures	locking/lockdep.c	/^static void check_data_structures(void)$/;"	f	file:
check_deadlock	locking/lockdep.c	/^check_deadlock(struct task_struct *curr, struct held_lock *next)$/;"	f	file:
check_dl_overrun	time/posix-cpu-timers.c	/^static inline void check_dl_overrun(struct task_struct *tsk)$/;"	f	file:
check_enqueue_throttle	sched/fair.c	/^static void check_enqueue_throttle(struct cfs_rq *cfs_rq) {}$/;"	f	file:
check_enqueue_throttle	sched/fair.c	/^static void check_enqueue_throttle(struct cfs_rq *cfs_rq)$/;"	f	file:
check_exported_symbol	module.c	/^static bool check_exported_symbol(const struct symsearch *syms,$/;"	f	file:
check_expr_operands	trace/trace_events_hist.c	/^static int check_expr_operands(struct trace_array *tr,$/;"	f	file:
check_field_for_var_ref	trace/trace_events_hist.c	/^check_field_for_var_ref(struct hist_field *hist_field,$/;"	f	file:
check_flags	bpf/hashtab.c	/^static int check_flags(struct bpf_htab *htab, struct htab_elem *l_old,$/;"	f	file:
check_flags	locking/lockdep.c	/^static void check_flags(unsigned long flags)$/;"	f	file:
check_flow_keys_access	bpf/verifier.c	/^static int check_flow_keys_access(struct bpf_verifier_env *env, int off,$/;"	f	file:
check_flush_dependency	workqueue.c	/^static void check_flush_dependency(struct workqueue_struct *target_wq,$/;"	f	file:
check_for_illegal_area	dma/debug.c	/^static void check_for_illegal_area(struct device *dev, void *addr, unsigned long len)$/;"	f	file:
check_for_stack	dma/debug.c	/^static void check_for_stack(struct device *dev,$/;"	f	file:
check_free_space	acct.c	/^static int check_free_space(struct bsd_acct_struct *acct)$/;"	f	file:
check_func_arg	bpf/verifier.c	/^static int check_func_arg(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
check_func_call	bpf/verifier.c	/^static int check_func_call(struct bpf_verifier_env *env, struct bpf_insn *insn,$/;"	f	file:
check_func_proto	bpf/verifier.c	/^static int check_func_proto(const struct bpf_func_proto *fn, int func_id)$/;"	f	file:
check_generic_ptr_alignment	bpf/verifier.c	/^static int check_generic_ptr_alignment(struct bpf_verifier_env *env,$/;"	f	file:
check_header	power/snapshot.c	/^static int check_header(struct swsusp_info *info)$/;"	f	file:
check_helper_call	bpf/verifier.c	/^static int check_helper_call(struct bpf_verifier_env *env, int func_id, int insn_idx)$/;"	f	file:
check_helper_mem_access	bpf/verifier.c	/^static int check_helper_mem_access(struct bpf_verifier_env *env, int regno,$/;"	f	file:
check_holdout_task	rcu/update.c	/^static void check_holdout_task(struct task_struct *t,$/;"	f	file:
check_hung_task	hung_task.c	/^static void check_hung_task(struct task_struct *t, unsigned long timeout)$/;"	f	file:
check_hung_uninterruptible_tasks	hung_task.c	/^static void check_hung_uninterruptible_tasks(unsigned long timeout)$/;"	f	file:
check_ids	bpf/verifier.c	/^static bool check_ids(u32 old_id, u32 cur_id, struct idpair *idmap)$/;"	f	file:
check_image_kernel	power/power.h	/^static inline char *check_image_kernel(struct swsusp_info *info)$/;"	f
check_image_kernel	power/snapshot.c	/^static char *check_image_kernel(struct swsusp_info *info)$/;"	f	file:
check_init_srcu_struct	rcu/srcutree.c	/^static void check_init_srcu_struct(struct srcu_struct *ssp)$/;"	f	file:
check_irq_entry	trace/trace_functions_graph.c	/^check_irq_entry(struct trace_iterator *iter, u32 flags,$/;"	f	file:
check_irq_resend	irq/resend.c	/^void check_irq_resend(struct irq_desc *desc)$/;"	f
check_irq_return	trace/trace_functions_graph.c	/^check_irq_return(struct trace_iterator *iter, u32 flags, int depth)$/;"	f	file:
check_irq_usage	locking/lockdep.c	/^static inline int check_irq_usage(struct task_struct *curr,$/;"	f	file:
check_irq_usage	locking/lockdep.c	/^static int check_irq_usage(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_kcov_mode	kcov.c	/^static notrace bool check_kcov_mode(enum kcov_mode needed_mode, struct task_struct *t)$/;"	f	file:
check_kflag_member	bpf/btf.c	/^	int (*check_kflag_member)(struct btf_verifier_env *env,$/;"	m	struct:btf_kind_operations	file:
check_kill_permission	signal.c	/^static int check_kill_permission(int sig, struct kernel_siginfo *info,$/;"	f	file:
check_kparam_locked	params.c	/^static inline void check_kparam_locked(struct module *mod)$/;"	f	file:
check_kprobe_address_safe	kprobes.c	/^static int check_kprobe_address_safe(struct kprobe *p,$/;"	f	file:
check_kprobe_rereg	kprobes.c	/^static inline int check_kprobe_rereg(struct kprobe *p)$/;"	f	file:
check_ld_abs	bpf/verifier.c	/^static int check_ld_abs(struct bpf_verifier_env *env, struct bpf_insn *insn)$/;"	f	file:
check_ld_imm	bpf/verifier.c	/^static int check_ld_imm(struct bpf_verifier_env *env, struct bpf_insn *insn)$/;"	f	file:
check_lock_chain_key	locking/lockdep.c	/^static bool check_lock_chain_key(struct lock_chain *chain)$/;"	f	file:
check_map_access	bpf/verifier.c	/^static int check_map_access(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
check_map_access_type	bpf/verifier.c	/^static int check_map_access_type(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
check_map_func_compatibility	bpf/verifier.c	/^static int check_map_func_compatibility(struct bpf_verifier_env *env,$/;"	f	file:
check_map_prealloc	bpf/verifier.c	/^static int check_map_prealloc(struct bpf_map *map)$/;"	f	file:
check_map_prog_compatibility	bpf/verifier.c	/^static int check_map_prog_compatibility(struct bpf_verifier_env *env,$/;"	f	file:
check_max_stack_depth	bpf/verifier.c	/^static int check_max_stack_depth(struct bpf_verifier_env *env)$/;"	f	file:
check_mem_access	bpf/verifier.c	/^static int check_mem_access(struct bpf_verifier_env *env, int insn_idx, u32 regno,$/;"	f	file:
check_member	bpf/btf.c	/^	int (*check_member)(struct btf_verifier_env *env,$/;"	m	struct:btf_kind_operations	file:
check_meta	bpf/btf.c	/^	s32 (*check_meta)(struct btf_verifier_env *env,$/;"	m	struct:btf_kind_operations	file:
check_misfit_status	sched/fair.c	/^static inline int check_misfit_status(struct rq *rq, struct sched_domain *sd)$/;"	f	file:
check_mm	fork.c	/^static void check_mm(struct mm_struct *mm)$/;"	f	file:
check_modinfo	module.c	/^static int check_modinfo(struct module *mod, struct load_info *info, int flags)$/;"	f	file:
check_modinfo_livepatch	module.c	/^static int check_modinfo_livepatch(struct module *mod, struct load_info *info)$/;"	f	file:
check_modinfo_retpoline	module.c	/^static void check_modinfo_retpoline(struct module *mod, struct load_info *info)$/;"	f	file:
check_modstruct_version	module.c	/^static inline int check_modstruct_version(const struct load_info *info,$/;"	f	file:
check_module_license_and_versions	module.c	/^static int check_module_license_and_versions(struct module *mod)$/;"	f	file:
check_no_collision	locking/lockdep.c	/^static int check_no_collision(struct task_struct *curr,$/;"	f	file:
check_noncircular	locking/lockdep.c	/^check_noncircular(struct held_lock *src, struct held_lock *target,$/;"	f	file:
check_packet_access	bpf/verifier.c	/^static int check_packet_access(struct bpf_verifier_env *env, u32 regno, int off,$/;"	f	file:
check_path	locking/lockdep.c	/^check_path(struct lock_class *target, struct lock_list *src_entry,$/;"	f	file:
check_pkt_ptr_alignment	bpf/verifier.c	/^static int check_pkt_ptr_alignment(struct bpf_verifier_env *env,$/;"	f	file:
check_preempt_curr	sched/core.c	/^void check_preempt_curr(struct rq *rq, struct task_struct *p, int flags)$/;"	f
check_preempt_curr	sched/sched.h	/^	void (*check_preempt_curr)(struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
check_preempt_curr_dl	sched/deadline.c	/^static void check_preempt_curr_dl(struct rq *rq, struct task_struct *p,$/;"	f	file:
check_preempt_curr_idle	sched/idle.c	/^static void check_preempt_curr_idle(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_curr_rt	sched/rt.c	/^static void check_preempt_curr_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_curr_stop	sched/stop_task.c	/^check_preempt_curr_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_equal_dl	sched/deadline.c	/^static void check_preempt_equal_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
check_preempt_equal_prio	sched/rt.c	/^static void check_preempt_equal_prio(struct rq *rq, struct task_struct *p)$/;"	f	file:
check_preempt_tick	sched/fair.c	/^check_preempt_tick(struct cfs_rq *cfs_rq, struct sched_entity *curr)$/;"	f	file:
check_preempt_wakeup	sched/fair.c	/^static void check_preempt_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)$/;"	f	file:
check_prev_add	locking/lockdep.c	/^check_prev_add(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_prevs_add	locking/lockdep.c	/^check_prevs_add(struct task_struct *curr, struct held_lock *next)$/;"	f	file:
check_prlimit_permission	sys.c	/^static int check_prlimit_permission(struct task_struct *task,$/;"	f	file:
check_process_timers	time/posix-cpu-timers.c	/^static void check_process_timers(struct task_struct *tsk,$/;"	f	file:
check_ptr_alignment	bpf/verifier.c	/^static int check_ptr_alignment(struct bpf_verifier_env *env,$/;"	f	file:
check_raw_mode_ok	bpf/verifier.c	/^static bool check_raw_mode_ok(const struct bpf_func_proto *fn)$/;"	f	file:
check_redundant	locking/lockdep.c	/^check_redundant(struct held_lock *src, struct held_lock *target)$/;"	f	file:
check_refcount_ok	bpf/verifier.c	/^static bool check_refcount_ok(const struct bpf_func_proto *fn, int func_id)$/;"	f	file:
check_reference_leak	bpf/verifier.c	/^static int check_reference_leak(struct bpf_verifier_env *env)$/;"	f	file:
check_reg_arg	bpf/verifier.c	/^static int check_reg_arg(struct bpf_verifier_env *env, u32 regno,$/;"	f	file:
check_reg_sane_offset	bpf/verifier.c	/^static bool check_reg_sane_offset(struct bpf_verifier_env *env,$/;"	f	file:
check_return_code	bpf/verifier.c	/^static int check_return_code(struct bpf_verifier_env *env)$/;"	f	file:
check_same_owner	sched/core.c	/^static bool check_same_owner(struct task_struct *p)$/;"	f	file:
check_schedstat_required	sched/fair.c	/^static inline void check_schedstat_required(void)$/;"	f	file:
check_sg_segment	dma/debug.c	/^static void check_sg_segment(struct device *dev, struct scatterlist *sg)$/;"	f	file:
check_sock_access	bpf/verifier.c	/^static int check_sock_access(struct bpf_verifier_env *env, int insn_idx,$/;"	f	file:
check_spread	sched/fair.c	/^static void check_spread(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
check_stack	trace/trace_stack.c	/^static void check_stack(unsigned long ip, unsigned long *stack)$/;"	f	file:
check_stack_access	bpf/verifier.c	/^static int check_stack_access(struct bpf_verifier_env *env,$/;"	f	file:
check_stack_boundary	bpf/verifier.c	/^static int check_stack_boundary(struct bpf_verifier_env *env, int regno,$/;"	f	file:
check_stack_read	bpf/verifier.c	/^static int check_stack_read(struct bpf_verifier_env *env,$/;"	f	file:
check_stack_usage	exit.c	/^static inline void check_stack_usage(void) {}$/;"	f	file:
check_stack_usage	exit.c	/^static void check_stack_usage(void)$/;"	f	file:
check_stack_write	bpf/verifier.c	/^static int check_stack_write(struct bpf_verifier_env *env,$/;"	f	file:
check_subprogs	bpf/verifier.c	/^static int check_subprogs(struct bpf_verifier_env *env)$/;"	f	file:
check_sync	dma/debug.c	/^static void check_sync(struct device *dev,$/;"	f	file:
check_synth_field	trace/trace_events_hist.c	/^static int check_synth_field(struct synth_event *event,$/;"	f	file:
check_syslog_permissions	printk/printk.c	/^static int check_syslog_permissions(int type, int source)$/;"	f	file:
check_thread_timers	time/posix-cpu-timers.c	/^static void check_thread_timers(struct task_struct *tsk,$/;"	f	file:
check_tick_dependency	time/tick-sched.c	/^static bool check_tick_dependency(atomic_t *dep)$/;"	f	file:
check_timers_list	time/posix-cpu-timers.c	/^check_timers_list(struct list_head *timers,$/;"	f	file:
check_tp_buffer_access	bpf/verifier.c	/^static int check_tp_buffer_access(struct bpf_verifier_env *env,$/;"	f	file:
check_track_val	trace/trace_events_hist.c	/^static bool check_track_val(struct tracing_map_elt *elt,$/;"	f	file:
check_track_val_changed	trace/trace_events_hist.c	/^static bool check_track_val_changed(u64 track_val, u64 var_val)$/;"	f	file:
check_track_val_fn_t	trace/trace_events_hist.c	/^typedef bool (*check_track_val_fn_t) (u64 track_val, u64 var_val);$/;"	t	file:
check_track_val_max	trace/trace_events_hist.c	/^static bool check_track_val_max(u64 track_val, u64 var_val)$/;"	f	file:
check_unmap	dma/debug.c	/^static void check_unmap(struct dma_debug_entry *ref)$/;"	f	file:
check_unshare_flags	fork.c	/^static int check_unshare_flags(unsigned long unshare_flags)$/;"	f	file:
check_usage_backwards	locking/lockdep.c	/^check_usage_backwards(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
check_usage_f	locking/lockdep.c	/^typedef int (*check_usage_f)(struct task_struct *, struct held_lock *,$/;"	t	file:
check_usage_forwards	locking/lockdep.c	/^check_usage_forwards(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
check_val	trace/trace_events_hist.c	/^			check_track_val_fn_t	check_val;$/;"	m	struct:action_data::__anon46::__anon48	file:
check_var_refs	trace/trace_events_hist.c	/^static bool check_var_refs(struct hist_trigger_data *hist_data)$/;"	f	file:
check_version	module.c	/^static inline int check_version(const struct load_info *info,$/;"	f	file:
check_version	module.c	/^static int check_version(const struct load_info *info,$/;"	f	file:
check_xadd	bpf/verifier.c	/^static int check_xadd(struct bpf_verifier_env *env, int insn_idx, struct bpf_insn *insn)$/;"	f	file:
checksum	gcov/clang.c	/^	u32 checksum;$/;"	m	struct:gcov_fn_info	file:
checksum	gcov/clang.c	/^	u32 checksum;$/;"	m	struct:gcov_info	file:
checksum	gcov/gcc_3_4.c	/^	unsigned int checksum;$/;"	m	struct:gcov_fn_info	file:
child	bpf/lpm_trie.c	/^	struct lpm_trie_node __rcu	*child[2];$/;"	m	struct:lpm_trie_node	typeref:struct:lpm_trie_node::__rcu	file:
child	sysctl_binary.c	/^	const struct bin_table	*child;$/;"	m	struct:bin_table	typeref:struct:bin_table::bin_table	file:
child_ecpus_count	cgroup/cpuset.c	/^	int child_ecpus_count;$/;"	m	struct:cpuset	file:
child_wait	exit.c	/^	wait_queue_entry_t		child_wait;$/;"	m	struct:wait_opts	file:
child_wait_callback	exit.c	/^static int child_wait_callback(wait_queue_entry_t *wait, unsigned mode,$/;"	f	file:
children	gcov/fs.c	/^	struct list_head children;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
children	sched/sched.h	/^	struct list_head	children;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
chip_bus_lock	irq/internals.h	/^static inline void chip_bus_lock(struct irq_desc *desc)$/;"	f
chip_bus_sync_unlock	irq/internals.h	/^static inline void chip_bus_sync_unlock(struct irq_desc *desc)$/;"	f
chip_name	irq/irqdesc.c	/^IRQ_ATTR_RO(chip_name);$/;"	v
chip_name_show	irq/irqdesc.c	/^static ssize_t chip_name_show(struct kobject *kobj,$/;"	f	file:
chown16	sys_ni.c	/^COND_SYSCALL(chown16);$/;"	v
chunk	audit_tree.c	/^	struct audit_chunk *chunk;$/;"	m	struct:audit_tree_mark	typeref:struct:audit_tree_mark::audit_chunk	file:
chunk_count_trees	audit_tree.c	/^static int chunk_count_trees(struct audit_chunk *chunk)$/;"	f	file:
chunk_hash	audit_tree.c	/^static inline struct list_head *chunk_hash(unsigned long key)$/;"	f	file:
chunk_hash_heads	audit_tree.c	/^static struct list_head chunk_hash_heads[HASH_SIZE];$/;"	v	typeref:struct:list_head	file:
chunks	audit_tree.c	/^	struct list_head chunks;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
circ_timings	irq/timings.c	/^	int	circ_timings[IRQ_TIMINGS_SIZE];$/;"	m	struct:irqt_stat	file:
circular_queue	locking/lockdep.c	/^struct circular_queue {$/;"	s	file:
claim_allocations	sched/topology.c	/^static void claim_allocations(int cpu, struct sched_domain *sd)$/;"	f	file:
class	locking/lockdep_proc.c	/^	struct lock_class *class;$/;"	m	struct:lock_stat_data	typeref:struct:lock_stat_data::lock_class	file:
class	trace/trace_events_hist.c	/^	struct trace_event_class		class;$/;"	m	struct:synth_event	typeref:struct:synth_event::trace_event_class	file:
class_equal	locking/lockdep.c	/^static inline int class_equal(struct lock_list *entry, void *data)$/;"	f	file:
class_filter	locking/lockdep.c	/^static int class_filter(struct lock_class *class)$/;"	f	file:
class_lock_list_valid	locking/lockdep.c	/^static bool class_lock_list_valid(struct lock_class *c, struct list_head *h)$/;"	f	file:
classes	auditfilter.c	/^static __u32 *classes[AUDIT_SYSCALL_CLASSES];$/;"	v	file:
classhash_table	locking/lockdep.c	/^static struct hlist_head classhash_table[CLASSHASH_SIZE];$/;"	v	typeref:struct:hlist_head	file:
classhashentry	locking/lockdep.c	343;"	d	file:
clean-files	Makefile	/^clean-files := kheaders_data.tar.xz kheaders.md5$/;"	m
clean-files	debug/kdb/Makefile	/^clean-files := gen-kdb_cmds.c$/;"	m
clean_func_state	bpf/verifier.c	/^static void clean_func_state(struct bpf_verifier_env *env,$/;"	f	file:
clean_live_states	bpf/verifier.c	/^static void clean_live_states(struct bpf_verifier_env *env, int insn,$/;"	f	file:
clean_pages_on_decompress	power/swap.c	/^static bool clean_pages_on_decompress;$/;"	v	file:
clean_pages_on_read	power/swap.c	/^static bool clean_pages_on_read;$/;"	v	file:
clean_sort_range	range.c	/^int clean_sort_range(struct range *range, int az)$/;"	f
clean_verifier_state	bpf/verifier.c	/^static void clean_verifier_state(struct bpf_verifier_env *env,$/;"	f	file:
cleanup	rcu/rcuperf.c	/^	void (*cleanup)(void);$/;"	m	struct:rcu_perf_ops	file:
cleanup	rcu/rcutorture.c	/^	void (*cleanup)(void);$/;"	m	struct:rcu_torture_ops	file:
cleanup_return_instances	events/uprobes.c	/^static void cleanup_return_instances(struct uprobe_task *utask, bool chained,$/;"	f	file:
cleanup_rp_inst	kprobes.c	/^NOKPROBE_SYMBOL(cleanup_rp_inst);$/;"	v
cleanup_rp_inst	kprobes.c	/^static void cleanup_rp_inst(struct kretprobe *rp)$/;"	f	file:
cleanup_srcu_struct	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(cleanup_srcu_struct);$/;"	v
cleanup_srcu_struct	rcu/srcutiny.c	/^void cleanup_srcu_struct(struct srcu_struct *ssp)$/;"	f
cleanup_srcu_struct	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(cleanup_srcu_struct);$/;"	v
cleanup_srcu_struct	rcu/srcutree.c	/^void cleanup_srcu_struct(struct srcu_struct *ssp)$/;"	f
cleanup_timers	time/posix-cpu-timers.c	/^static void cleanup_timers(struct list_head *head)$/;"	f	file:
cleanup_timers_list	time/posix-cpu-timers.c	/^static void cleanup_timers_list(struct list_head *head)$/;"	f	file:
clear	trace/trace_events_hist.c	/^	bool		clear;$/;"	m	struct:hist_trigger_attrs	file:
clear_all_pkt_pointers	bpf/verifier.c	/^static void clear_all_pkt_pointers(struct bpf_verifier_env *env)$/;"	f	file:
clear_boot_tracer	trace/trace.c	/^__init static int clear_boot_tracer(void)$/;"	f	file:
clear_boot_tracer	trace/trace.c	/^late_initcall_sync(clear_boot_tracer);$/;"	v
clear_buddies	sched/fair.c	/^static void clear_buddies(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
clear_event_triggers	trace/trace_events_trigger.c	/^clear_event_triggers(struct trace_array *tr)$/;"	f
clear_free_pages	power/snapshot.c	/^void clear_free_pages(void)$/;"	f
clear_ftrace_function_probes	trace/ftrace.c	/^void clear_ftrace_function_probes(struct trace_array *tr)$/;"	f
clear_ftrace_function_probes	trace/trace.h	/^static inline void clear_ftrace_function_probes(struct trace_array *tr)$/;"	f
clear_ftrace_mod_list	trace/ftrace.c	/^static void clear_ftrace_mod_list(struct list_head *head)$/;"	f	file:
clear_ftrace_pids	trace/ftrace.c	/^static void clear_ftrace_pids(struct trace_array *tr)$/;"	f	file:
clear_func_from_hash	trace/ftrace.c	/^clear_func_from_hash(struct ftrace_init_func *func, struct ftrace_hash *hash)$/;"	f	file:
clear_func_from_hashes	trace/ftrace.c	/^clear_func_from_hashes(struct ftrace_init_func *func)$/;"	f	file:
clear_global_latency_tracing	latencytop.c	/^static void clear_global_latency_tracing(void)$/;"	f	file:
clear_idx	printk/printk.c	/^static u32 clear_idx;$/;"	v	file:
clear_jmp_history	bpf/verifier.c	/^static void clear_jmp_history(struct bpf_verifier_state *state)$/;"	f	file:
clear_lock_stats	locking/lockdep.c	/^void clear_lock_stats(struct lock_class *class)$/;"	f
clear_mod_from_hash	trace/ftrace.c	/^clear_mod_from_hash(struct ftrace_page *pg, struct ftrace_hash *hash)$/;"	f	file:
clear_mod_from_hashes	trace/ftrace.c	/^static void clear_mod_from_hashes(struct ftrace_page *pg)$/;"	f	file:
clear_pending	locking/qspinlock.c	/^static __always_inline void clear_pending(struct qspinlock *lock)$/;"	f	file:
clear_pending_set_locked	locking/qspinlock.c	/^static __always_inline void clear_pending_set_locked(struct qspinlock *lock)$/;"	f	file:
clear_rseq_cs	rseq.c	/^static int clear_rseq_cs(struct task_struct *t)$/;"	f	file:
clear_rt_mutex_waiters	locking/rtmutex.c	/^static inline void clear_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
clear_sched_clock_stable	sched/clock.c	/^void clear_sched_clock_stable(void)$/;"	f
clear_seq	printk/printk.c	/^static u64 clear_seq;$/;"	v	file:
clear_tasks_mm_cpumask	cpu.c	/^void clear_tasks_mm_cpumask(int cpu)$/;"	f
clear_trace	trace/trace.h	/^	bool			clear_trace;$/;"	m	struct:trace_array
clear_tracing_err_log	trace/trace.c	/^static void clear_tracing_err_log(struct trace_array *tr)$/;"	f	file:
clear_tsk_latency_tracing	latencytop.c	/^void clear_tsk_latency_tracing(struct task_struct *p)$/;"	f
clear_warn_once_set	panic.c	/^static int clear_warn_once_set(void *data, u64 val)$/;"	f	file:
clear_work_data	workqueue.c	/^static void clear_work_data(struct work_struct *work)$/;"	f	file:
clear_wr_nonspinnable	locking/rwsem.c	/^static inline void clear_wr_nonspinnable(struct rw_semaphore *sem) { }$/;"	f	file:
clear_wr_nonspinnable	locking/rwsem.c	/^static inline void clear_wr_nonspinnable(struct rw_semaphore *sem)$/;"	f	file:
clk	time/posix-clock.c	/^	struct posix_clock *clk;$/;"	m	struct:posix_clock_desc	typeref:struct:posix_clock_desc::posix_clock	file:
clk	time/timer.c	/^	unsigned long		clk;$/;"	m	struct:timer_base	file:
clock	sched/clock.c	/^	u64			clock;$/;"	m	struct:sched_clock_data	file:
clock	sched/sched.h	/^	u64			clock;$/;"	m	struct:rq
clock	trace/ring_buffer.c	/^	u64				(*clock)(void);$/;"	m	struct:ring_buffer	file:
clock	trace/trace_events_hist.c	/^	char		*clock;$/;"	m	struct:hist_trigger_attrs	file:
clock2alarm	time/alarmtimer.c	/^static enum alarmtimer_type clock2alarm(clockid_t clockid)$/;"	f	file:
clock_adj	time/posix-timers.h	/^	int	(*clock_adj)(const clockid_t which_clock, struct __kernel_timex *tx);$/;"	m	struct:k_clock
clock_adjtime	time/posix-stubs.c	/^SYS_NI(clock_adjtime);$/;"	v
clock_adjtime32	time/posix-stubs.c	/^SYS_NI(clock_adjtime32);$/;"	v
clock_boottime	time/posix-timers.c	/^static const struct k_clock clock_boottime = {$/;"	v	typeref:struct:k_clock	file:
clock_data	time/sched_clock.c	/^struct clock_data {$/;"	s	file:
clock_get	time/posix-timers.h	/^	int	(*clock_get)(const clockid_t which_clock,$/;"	m	struct:k_clock
clock_getres	time/posix-timers.h	/^	int	(*clock_getres)(const clockid_t which_clock,$/;"	m	struct:k_clock
clock_id	trace/trace.h	/^	int			clock_id;$/;"	m	struct:trace_array
clock_monotonic	time/posix-timers.c	/^static const struct k_clock clock_monotonic = {$/;"	v	typeref:struct:k_clock	file:
clock_monotonic	time/posix-timers.c	/^static const struct k_clock clock_realtime, clock_monotonic;$/;"	v	typeref:struct:	file:
clock_monotonic_coarse	time/posix-timers.c	/^static const struct k_clock clock_monotonic_coarse = {$/;"	v	typeref:struct:k_clock	file:
clock_monotonic_raw	time/posix-timers.c	/^static const struct k_clock clock_monotonic_raw = {$/;"	v	typeref:struct:k_clock	file:
clock_pelt	sched/sched.h	/^	u64			clock_pelt;$/;"	m	struct:rq
clock_posix_cpu	time/posix-cpu-timers.c	/^const struct k_clock clock_posix_cpu = {$/;"	v	typeref:struct:k_clock
clock_posix_dynamic	time/posix-clock.c	/^const struct k_clock clock_posix_dynamic = {$/;"	v	typeref:struct:k_clock
clock_process	time/posix-cpu-timers.c	/^const struct k_clock clock_process = {$/;"	v	typeref:struct:k_clock
clock_read_data	time/sched_clock.c	/^struct clock_read_data {$/;"	s	file:
clock_realtime	time/posix-timers.c	/^static const struct k_clock clock_realtime = {$/;"	v	typeref:struct:k_clock	file:
clock_realtime	time/posix-timers.c	/^static const struct k_clock clock_realtime, clock_monotonic;$/;"	v	typeref:struct:k_clock	file:
clock_realtime_coarse	time/posix-timers.c	/^static const struct k_clock clock_realtime_coarse = {$/;"	v	typeref:struct:k_clock	file:
clock_set	time/posix-timers.h	/^	int	(*clock_set)(const clockid_t which_clock,$/;"	m	struct:k_clock
clock_t_to_compat_clock_t	sys.c	/^static compat_clock_t clock_t_to_compat_clock_t(clock_t x)$/;"	f	file:
clock_t_to_jiffies	time/time.c	/^EXPORT_SYMBOL(clock_t_to_jiffies);$/;"	v
clock_t_to_jiffies	time/time.c	/^unsigned long clock_t_to_jiffies(unsigned long x)$/;"	f
clock_tai	time/posix-timers.c	/^static const struct k_clock clock_tai = {$/;"	v	typeref:struct:k_clock	file:
clock_thread	time/posix-cpu-timers.c	/^const struct k_clock clock_thread = {$/;"	v	typeref:struct:k_clock
clock_update_flags	sched/sched.h	/^	unsigned int		clock_update_flags;$/;"	m	struct:rq
clock_update_flags	sched/sched.h	/^	unsigned int clock_update_flags;$/;"	m	struct:rq_flags
clock_was_set	time/hrtimer.c	/^void clock_was_set(void)$/;"	f
clock_was_set_delayed	time/hrtimer.c	/^void clock_was_set_delayed(void)$/;"	f
clock_was_set_work	time/hrtimer.c	/^static void clock_was_set_work(struct work_struct *work)$/;"	f	file:
clockevent_delta2ns	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevent_delta2ns);$/;"	v
clockevent_delta2ns	time/clockevents.c	/^u64 clockevent_delta2ns(unsigned long latch, struct clock_event_device *evt)$/;"	f
clockevent_get_state	time/tick-internal.h	/^static inline enum clock_event_state clockevent_get_state(struct clock_event_device *dev)$/;"	f
clockevent_set_state	time/tick-internal.h	/^static inline void clockevent_set_state(struct clock_event_device *dev,$/;"	f
clockevents_config	time/clockevents.c	/^static void clockevents_config(struct clock_event_device *dev, u32 freq)$/;"	f	file:
clockevents_config_and_register	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_config_and_register);$/;"	v
clockevents_config_and_register	time/clockevents.c	/^void clockevents_config_and_register(struct clock_event_device *dev,$/;"	f
clockevents_exchange_device	time/clockevents.c	/^void clockevents_exchange_device(struct clock_event_device *old,$/;"	f
clockevents_handle_noop	time/clockevents.c	/^void clockevents_handle_noop(struct clock_event_device *dev)$/;"	f
clockevents_increase_min_delta	time/clockevents.c	/^static int clockevents_increase_min_delta(struct clock_event_device *dev)$/;"	f	file:
clockevents_init_sysfs	time/clockevents.c	/^device_initcall(clockevents_init_sysfs);$/;"	v
clockevents_init_sysfs	time/clockevents.c	/^static int __init clockevents_init_sysfs(void)$/;"	f	file:
clockevents_notify_released	time/clockevents.c	/^static void clockevents_notify_released(void)$/;"	f	file:
clockevents_program_event	time/clockevents.c	/^int clockevents_program_event(struct clock_event_device *dev, ktime_t expires,$/;"	f
clockevents_program_min_delta	time/clockevents.c	/^static int clockevents_program_min_delta(struct clock_event_device *dev)$/;"	f	file:
clockevents_register_device	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_register_device);$/;"	v
clockevents_register_device	time/clockevents.c	/^void clockevents_register_device(struct clock_event_device *dev)$/;"	f
clockevents_replace	time/clockevents.c	/^static int clockevents_replace(struct clock_event_device *ced)$/;"	f	file:
clockevents_resume	time/clockevents.c	/^void clockevents_resume(void)$/;"	f
clockevents_shutdown	time/clockevents.c	/^void clockevents_shutdown(struct clock_event_device *dev)$/;"	f
clockevents_subsys	time/clockevents.c	/^static struct bus_type clockevents_subsys = {$/;"	v	typeref:struct:bus_type	file:
clockevents_suspend	time/clockevents.c	/^void clockevents_suspend(void)$/;"	f
clockevents_switch_state	time/clockevents.c	/^void clockevents_switch_state(struct clock_event_device *dev,$/;"	f
clockevents_tick_resume	time/clockevents.c	/^int clockevents_tick_resume(struct clock_event_device *dev)$/;"	f
clockevents_unbind	time/clockevents.c	/^static int clockevents_unbind(struct clock_event_device *ced, int cpu)$/;"	f	file:
clockevents_unbind_device	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_unbind_device);$/;"	v
clockevents_unbind_device	time/clockevents.c	/^int clockevents_unbind_device(struct clock_event_device *ced, int cpu)$/;"	f
clockevents_update_freq	time/clockevents.c	/^int clockevents_update_freq(struct clock_event_device *dev, u32 freq)$/;"	f
clockid_to_kclock	time/posix-timers.c	/^static const struct k_clock *clockid_to_kclock(const clockid_t id)$/;"	f	file:
clocks_calc_max_nsecs	time/clocksource.c	/^u64 clocks_calc_max_nsecs(u32 mult, u32 shift, u32 maxadj, u64 mask, u64 *max_cyc)$/;"	f
clocks_calc_mult_shift	time/clocksource.c	/^EXPORT_SYMBOL_GPL(clocks_calc_mult_shift);$/;"	v
clocks_calc_mult_shift	time/clocksource.c	/^clocks_calc_mult_shift(u32 *mult, u32 *shift, u32 from, u32 to, u32 maxsec)$/;"	f
clocksource	time/clocksource.c	/^ATTRIBUTE_GROUPS(clocksource);$/;"	v
clocksource_attrs	time/clocksource.c	/^static struct attribute *clocksource_attrs[] = {$/;"	v	typeref:struct:attribute	file:
clocksource_change_rating	time/clocksource.c	/^EXPORT_SYMBOL(clocksource_change_rating);$/;"	v
clocksource_change_rating	time/clocksource.c	/^void clocksource_change_rating(struct clocksource *cs, int rating)$/;"	f
clocksource_default_clock	time/jiffies.c	/^struct clocksource * __init __weak clocksource_default_clock(void)$/;"	f
clocksource_delta	time/timekeeping_internal.h	/^static inline u64 clocksource_delta(u64 now, u64 last, u64 mask)$/;"	f
clocksource_dequeue_watchdog	time/clocksource.c	/^static inline void clocksource_dequeue_watchdog(struct clocksource *cs) { }$/;"	f	file:
clocksource_dequeue_watchdog	time/clocksource.c	/^static void clocksource_dequeue_watchdog(struct clocksource *cs)$/;"	f	file:
clocksource_done_booting	time/clocksource.c	/^fs_initcall(clocksource_done_booting);$/;"	v
clocksource_done_booting	time/clocksource.c	/^static int __init clocksource_done_booting(void)$/;"	f	file:
clocksource_enqueue	time/clocksource.c	/^static void clocksource_enqueue(struct clocksource *cs)$/;"	f	file:
clocksource_enqueue_watchdog	time/clocksource.c	/^static void clocksource_enqueue_watchdog(struct clocksource *cs)$/;"	f	file:
clocksource_find_best	time/clocksource.c	/^static struct clocksource *clocksource_find_best(bool oneshot, bool skipcur)$/;"	f	file:
clocksource_is_suspend	time/clocksource.c	/^static bool clocksource_is_suspend(struct clocksource *cs)$/;"	f	file:
clocksource_is_watchdog	time/clocksource.c	/^static bool clocksource_is_watchdog(struct clocksource *cs) { return false; }$/;"	f	file:
clocksource_is_watchdog	time/clocksource.c	/^static bool clocksource_is_watchdog(struct clocksource *cs)$/;"	f	file:
clocksource_jiffies	time/jiffies.c	/^static struct clocksource clocksource_jiffies = {$/;"	v	typeref:struct:clocksource	file:
clocksource_mark_unstable	time/clocksource.c	/^void clocksource_mark_unstable(struct clocksource *cs) { }$/;"	f
clocksource_mark_unstable	time/clocksource.c	/^void clocksource_mark_unstable(struct clocksource *cs)$/;"	f
clocksource_max_adjustment	time/clocksource.c	/^static u32 clocksource_max_adjustment(struct clocksource *cs)$/;"	f	file:
clocksource_reset_watchdog	time/clocksource.c	/^static inline void clocksource_reset_watchdog(void)$/;"	f	file:
clocksource_resume	time/clocksource.c	/^void clocksource_resume(void)$/;"	f
clocksource_resume_watchdog	time/clocksource.c	/^static inline void clocksource_resume_watchdog(void) { }$/;"	f	file:
clocksource_resume_watchdog	time/clocksource.c	/^static void clocksource_resume_watchdog(void)$/;"	f	file:
clocksource_select	time/clocksource.c	/^static inline void clocksource_select(void) { }$/;"	f	file:
clocksource_select	time/clocksource.c	/^static void clocksource_select(void)$/;"	f	file:
clocksource_select_fallback	time/clocksource.c	/^static inline void clocksource_select_fallback(void) { }$/;"	f	file:
clocksource_select_fallback	time/clocksource.c	/^static void clocksource_select_fallback(void)$/;"	f	file:
clocksource_select_watchdog	time/clocksource.c	/^static void clocksource_select_watchdog(bool fallback) { }$/;"	f	file:
clocksource_select_watchdog	time/clocksource.c	/^static void clocksource_select_watchdog(bool fallback)$/;"	f	file:
clocksource_start_suspend_timing	time/clocksource.c	/^void clocksource_start_suspend_timing(struct clocksource *cs, u64 start_cycles)$/;"	f
clocksource_start_watchdog	time/clocksource.c	/^static inline void clocksource_start_watchdog(void)$/;"	f	file:
clocksource_stop_suspend_timing	time/clocksource.c	/^u64 clocksource_stop_suspend_timing(struct clocksource *cs, u64 cycle_now)$/;"	f
clocksource_stop_watchdog	time/clocksource.c	/^static inline void clocksource_stop_watchdog(void)$/;"	f	file:
clocksource_subsys	time/clocksource.c	/^static struct bus_type clocksource_subsys = {$/;"	v	typeref:struct:bus_type	file:
clocksource_suspend	time/clocksource.c	/^void clocksource_suspend(void)$/;"	f
clocksource_suspend_select	time/clocksource.c	/^static void clocksource_suspend_select(bool fallback)$/;"	f	file:
clocksource_touch_watchdog	time/clocksource.c	/^void clocksource_touch_watchdog(void)$/;"	f
clocksource_unbind	time/clocksource.c	/^static int clocksource_unbind(struct clocksource *cs)$/;"	f	file:
clocksource_unregister	time/clocksource.c	/^EXPORT_SYMBOL(clocksource_unregister);$/;"	v
clocksource_unregister	time/clocksource.c	/^int clocksource_unregister(struct clocksource *cs)$/;"	f
clocksource_update_max_deferment	time/clocksource.c	/^static inline void clocksource_update_max_deferment(struct clocksource *cs)$/;"	f	file:
clocksource_watchdog	time/clocksource.c	/^static void clocksource_watchdog(struct timer_list *unused)$/;"	f	file:
clocksource_watchdog_kthread	time/clocksource.c	/^static int clocksource_watchdog_kthread(void *data)$/;"	f	file:
clocksource_watchdog_lock	time/clocksource.c	/^static inline void clocksource_watchdog_lock(unsigned long *flags) { }$/;"	f	file:
clocksource_watchdog_lock	time/clocksource.c	/^static inline void clocksource_watchdog_lock(unsigned long *flags)$/;"	f	file:
clocksource_watchdog_unlock	time/clocksource.c	/^static inline void clocksource_watchdog_unlock(unsigned long *flags) { }$/;"	f	file:
clocksource_watchdog_unlock	time/clocksource.c	/^static inline void clocksource_watchdog_unlock(unsigned long *flags)$/;"	f	file:
clocksource_watchdog_work	time/clocksource.c	/^static void clocksource_watchdog_work(struct work_struct *work)$/;"	f	file:
clone3	sys_ni.c	/^COND_SYSCALL(clone3);$/;"	v
clone3_args_valid	fork.c	/^static bool clone3_args_valid(const struct kernel_clone_args *kargs)$/;"	f	file:
clone_uts_ns	utsname.c	/^static struct uts_namespace *clone_uts_ns(struct user_namespace *user_ns,$/;"	f	file:
close	trace/trace.h	/^	void			(*close)(struct trace_iterator *iter);$/;"	m	struct:tracer
close_work	acct.c	/^static void close_work(struct work_struct *work)$/;"	f	file:
clr	irq/devres.c	/^	unsigned int clr;$/;"	m	struct:irq_generic_chip_devres	file:
cma_early_percent_memory	dma/contiguous.c	/^static inline __maybe_unused phys_addr_t cma_early_percent_memory(void)$/;"	f	file:
cma_early_percent_memory	dma/contiguous.c	/^static phys_addr_t __init __maybe_unused cma_early_percent_memory(void)$/;"	f	file:
cmap	bpf/cpumap.c	/^	struct bpf_cpu_map *cmap;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::bpf_cpu_map	file:
cmd	trace/trace.c	/^	char			cmd[MAX_FILTER_STR_VAL]; \/* what caused err *\/$/;"	m	struct:tracing_log_err	file:
cmd	trace/trace_events_hist.c	/^	char				*cmd;$/;"	m	struct:field_var_hist	file:
cmd_attr_deregister_cpumask	taskstats.c	/^static int cmd_attr_deregister_cpumask(struct genl_info *info)$/;"	f	file:
cmd_attr_pid	taskstats.c	/^static int cmd_attr_pid(struct genl_info *info)$/;"	f	file:
cmd_attr_register_cpumask	taskstats.c	/^static int cmd_attr_register_cpumask(struct genl_info *info)$/;"	f	file:
cmd_attr_tgid	taskstats.c	/^static int cmd_attr_tgid(struct genl_info *info)$/;"	f	file:
cmd_cur	debug/kdb/kdb_main.c	/^static char cmd_cur[CMD_BUFLEN];$/;"	v	file:
cmd_flags	debug/kdb/kdb_private.h	/^	kdb_cmdflags_t cmd_flags;	\/* Command behaviour flags *\/$/;"	m	struct:_kdbtab
cmd_func	debug/kdb/kdb_private.h	/^	kdb_func_t cmd_func;		\/* Function to execute command *\/$/;"	m	struct:_kdbtab
cmd_gen-kdb	debug/kdb/Makefile	/^      cmd_gen-kdb = $(AWK) 'BEGIN {print "\\#include <linux\/stddef.h>"; print "\\#include <linux\/init.h>"} \\$/;"	m
cmd_genikh	Makefile	/^cmd_genikh = $(CONFIG_SHELL) $(srctree)\/kernel\/gen_kheaders.sh $@$/;"	m
cmd_head	debug/kdb/kdb_main.c	/^static unsigned int cmd_head, cmd_tail;$/;"	v	file:
cmd_help	debug/kdb/kdb_private.h	/^	char    *cmd_help;		\/* Help message for this command *\/$/;"	m	struct:_kdbtab
cmd_hist	debug/kdb/kdb_main.c	/^static char cmd_hist[KDB_CMD_HISTORY_COUNT][CMD_BUFLEN];$/;"	v	file:
cmd_minlen	debug/kdb/kdb_private.h	/^	short    cmd_minlen;		\/* Minimum legal # command$/;"	m	struct:_kdbtab
cmd_name	debug/kdb/kdb_private.h	/^	char    *cmd_name;		\/* Command name *\/$/;"	m	struct:_kdbtab
cmd_ops	trace/trace.h	/^	struct event_command		*cmd_ops;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::event_command
cmd_tail	debug/kdb/kdb_main.c	/^static unsigned int cmd_head, cmd_tail;$/;"	v	file:
cmd_usage	debug/kdb/kdb_private.h	/^	char    *cmd_usage;		\/* Usage String for this command *\/$/;"	m	struct:_kdbtab
cmdline_idx	trace/trace.c	/^	int cmdline_idx;$/;"	m	struct:saved_cmdlines_buffer	file:
cmdline_num	trace/trace.c	/^	unsigned cmdline_num;$/;"	m	struct:saved_cmdlines_buffer	file:
cmdptr	debug/kdb/kdb_main.c	/^static unsigned int cmdptr;$/;"	v	file:
cmp	power/swap.c	/^	unsigned char cmp[LZO_CMP_SIZE];          \/* compressed buffer *\/$/;"	m	struct:cmp_data	file:
cmp	power/swap.c	/^	unsigned char cmp[LZO_CMP_SIZE];          \/* compressed buffer *\/$/;"	m	struct:dec_data	file:
cmp_data	power/swap.c	/^struct cmp_data {$/;"	s	file:
cmp_entries_dup	trace/tracing_map.c	/^static int cmp_entries_dup(const struct tracing_map_sort_entry **a,$/;"	f	file:
cmp_entries_key	trace/tracing_map.c	/^static int cmp_entries_key(const struct tracing_map_sort_entry **a,$/;"	f	file:
cmp_entries_sum	trace/tracing_map.c	/^static int cmp_entries_sum(const struct tracing_map_sort_entry **a,$/;"	f	file:
cmp_extents_forward	user_namespace.c	/^static int cmp_extents_forward(const void *a, const void *b)$/;"	f	file:
cmp_extents_reverse	user_namespace.c	/^static int cmp_extents_reverse(const void *a, const void *b)$/;"	f	file:
cmp_fn	trace/tracing_map.h	/^	tracing_map_cmp_fn_t		cmp_fn;$/;"	m	struct:tracing_map_field
cmp_len	power/swap.c	/^	size_t cmp_len;                           \/* compressed length *\/$/;"	m	struct:cmp_data	file:
cmp_len	power/swap.c	/^	size_t cmp_len;                           \/* compressed length *\/$/;"	m	struct:dec_data	file:
cmp_map_id	user_namespace.c	/^static int cmp_map_id(const void *k, const void *e)$/;"	f	file:
cmp_name	module.c	/^static int cmp_name(const void *va, const void *vb)$/;"	f	file:
cmp_next_hrtimer_event	time/timer.c	/^static u64 cmp_next_hrtimer_event(u64 basem, u64 expires)$/;"	f	file:
cmp_range	range.c	/^static int cmp_range(const void *x1, const void *x2)$/;"	f	file:
cmp_stat_t	trace/trace_stat.c	/^typedef int (*cmp_stat_t)(void *, void *);$/;"	t	file:
cmp_subprogs	bpf/verifier.c	/^static int cmp_subprogs(const void *a, const void *b)$/;"	f	file:
cmp_val_with_extended_s64	bpf/verifier.c	/^static bool cmp_val_with_extended_s64(s64 sval, struct bpf_reg_state *reg)$/;"	f	file:
cmppid	cgroup/cgroup-v1.c	/^static int cmppid(const void *a, const void *b)$/;"	f	file:
cmpxchg_futex_value_locked	futex.c	/^static int cmpxchg_futex_value_locked(u32 *curval, u32 __user *uaddr,$/;"	f	file:
cnt	cgroup/cpuset.c	/^	int cnt;		\/* unprocessed events count *\/$/;"	m	struct:fmeter	file:
cnt	irq/devres.c	/^	unsigned int cnt;$/;"	m	struct:irq_desc_devres	file:
cnt	trace/ring_buffer.c	/^	int			cnt;$/;"	m	struct:rb_test_data	file:
code	trace/trace_probe.h	/^	struct fetch_insn	*code;$/;"	m	struct:probe_arg	typeref:struct:probe_arg::fetch_insn
coerce_reg_to_size	bpf/verifier.c	/^static void coerce_reg_to_size(struct bpf_reg_state *reg, int size)$/;"	f	file:
collect_expired_timers	time/timer.c	/^static inline int collect_expired_timers(struct timer_base *base,$/;"	f	file:
collect_expired_timers	time/timer.c	/^static int collect_expired_timers(struct timer_base *base,$/;"	f	file:
collect_garbage_slots	kprobes.c	/^static int collect_garbage_slots(struct kprobe_insn_cache *c)$/;"	f	file:
collect_one_slot	kprobes.c	/^static int collect_one_slot(struct kprobe_insn_page *kip, int idx)$/;"	f	file:
collect_percpu_times	sched/psi.c	/^static void collect_percpu_times(struct psi_group *group,$/;"	f	file:
collect_signal	signal.c	/^static void collect_signal(int sig, struct sigpending *list, kernel_siginfo_t *info,$/;"	f	file:
comm	events/core.c	/^	char			*comm;$/;"	m	struct:perf_comm_event	file:
comm	trace/trace.h	/^	char			comm[TASK_COMM_LEN];$/;"	m	struct:trace_array_cpu
comm	trace/trace_events_hist.c	/^	char *comm;$/;"	m	struct:hist_elt_data	file:
comm	trace/trace_probe.h	/^	const char		*comm;	\/* Command of this argument *\/$/;"	m	struct:probe_arg
comm_size	events/core.c	/^	int			comm_size;$/;"	m	struct:perf_comm_event	file:
command	debug/kdb/kdb_main.c	/^	char **command;$/;"	m	struct:defcmd_set	file:
commit	trace/ring_buffer.c	/^	local_t		 commit;	\/* write committed index *\/$/;"	m	struct:buffer_data_page	file:
commit	trace/ring_buffer_benchmark.c	/^	local_t		commit;$/;"	m	struct:rb_page	file:
commit_creds	cred.c	/^EXPORT_SYMBOL(commit_creds);$/;"	v
commit_creds	cred.c	/^int commit_creds(struct cred *new)$/;"	f
commit_overrun	trace/ring_buffer.c	/^	local_t				commit_overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
commit_page	trace/ring_buffer.c	/^	struct buffer_page		*commit_page;	\/* committed pages *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
commits	trace/ring_buffer.c	/^	local_t				commits;$/;"	m	struct:ring_buffer_per_cpu	file:
committing	trace/ring_buffer.c	/^	local_t				committing;$/;"	m	struct:ring_buffer_per_cpu	file:
common_hrtimer_arm	time/posix-timers.c	/^static void common_hrtimer_arm(struct k_itimer *timr, ktime_t expires,$/;"	f	file:
common_hrtimer_forward	time/posix-timers.c	/^static s64 common_hrtimer_forward(struct k_itimer *timr, ktime_t now)$/;"	f	file:
common_hrtimer_rearm	time/posix-timers.c	/^static void common_hrtimer_rearm(struct k_itimer *timr)$/;"	f	file:
common_hrtimer_remaining	time/posix-timers.c	/^static ktime_t common_hrtimer_remaining(struct k_itimer *timr, ktime_t now)$/;"	f	file:
common_hrtimer_try_to_cancel	time/posix-timers.c	/^static int common_hrtimer_try_to_cancel(struct k_itimer *timr)$/;"	f	file:
common_lru	bpf/bpf_lru_list.h	/^		struct bpf_common_lru common_lru;$/;"	m	union:bpf_lru::__anon74	typeref:struct:bpf_lru::__anon74::bpf_common_lru
common_nsleep	time/posix-timers.c	/^static int common_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
common_timer_create	time/posix-timers.c	/^static int common_timer_create(struct k_itimer *new_timer)$/;"	f	file:
common_timer_del	time/posix-timers.c	/^int common_timer_del(struct k_itimer *timer)$/;"	f
common_timer_get	time/posix-timers.c	/^void common_timer_get(struct k_itimer *timr, struct itimerspec64 *cur_setting)$/;"	f
common_timer_set	time/posix-timers.c	/^int common_timer_set(struct k_itimer *timr, int flags,$/;"	f
compare_css_sets	cgroup/cgroup.c	/^static bool compare_css_sets(struct css_set *cset,$/;"	f	file:
compare_root	audit_tree.c	/^static int compare_root(struct vfsmount *mnt, void *arg)$/;"	f	file:
compat_alloc_user_space	compat.c	/^EXPORT_SYMBOL_GPL(compat_alloc_user_space);$/;"	v
compat_alloc_user_space	compat.c	/^void __user *compat_alloc_user_space(unsigned long len)$/;"	f
compat_blk_trace_setup	trace/blktrace.c	/^static int compat_blk_trace_setup(struct request_queue *q, char *name,$/;"	f	file:
compat_exit_robust_list	futex.c	/^void compat_exit_robust_list(struct task_struct *curr)$/;"	f
compat_fetch_robust_entry	futex.c	/^compat_fetch_robust_entry(compat_uptr_t *uentry, struct robust_list __user **entry,$/;"	f	file:
compat_get_bitmap	compat.c	/^long compat_get_bitmap(unsigned long *mask, const compat_ulong_t __user *umask,$/;"	f
compat_get_timespec	compat.c	/^EXPORT_SYMBOL_GPL(compat_get_timespec);$/;"	v
compat_get_timespec	compat.c	/^int compat_get_timespec(struct timespec *ts, const void __user *uts)$/;"	f
compat_get_timeval	compat.c	/^EXPORT_SYMBOL_GPL(compat_get_timeval);$/;"	v
compat_get_timeval	compat.c	/^int compat_get_timeval(struct timeval *tv, const void __user *utv)$/;"	f
compat_get_user_cpu_mask	compat.c	/^static int compat_get_user_cpu_mask(compat_ulong_t __user *user_mask_ptr,$/;"	f	file:
compat_ptrace_request	ptrace.c	/^int compat_ptrace_request(struct task_struct *child, compat_long_t request,$/;"	f
compat_put_bitmap	compat.c	/^long compat_put_bitmap(compat_ulong_t __user *umask, unsigned long *mask,$/;"	f
compat_put_timespec	compat.c	/^EXPORT_SYMBOL_GPL(compat_put_timespec);$/;"	v
compat_put_timespec	compat.c	/^int compat_put_timespec(const struct timespec *ts, void __user *uts)$/;"	f
compat_put_timeval	compat.c	/^EXPORT_SYMBOL_GPL(compat_put_timeval);$/;"	v
compat_put_timeval	compat.c	/^int compat_put_timeval(const struct timeval *tv, void __user *utv)$/;"	f
compat_restore_altstack	signal.c	/^int compat_restore_altstack(const compat_stack_t __user *uss)$/;"	f
compat_resume_swap_area	power/user.c	/^struct compat_resume_swap_area {$/;"	s	file:
compat_sig_setmask	compat.c	/^static inline void compat_sig_setmask(sigset_t *blocked, compat_sigset_word set)$/;"	f	file:
compat_sysctl_args	sysctl_binary.c	/^struct compat_sysctl_args {$/;"	s	file:
compat_sysinfo	sys.c	/^struct compat_sysinfo {$/;"	s	file:
compatible_field	trace/trace_events_hist.c	/^static bool compatible_field(struct ftrace_event_field *field,$/;"	f	file:
compatible_keys	trace/trace_events_hist.c	/^static bool compatible_keys(struct hist_trigger_data *target_hist_data,$/;"	f	file:
complete	sched/completion.c	/^EXPORT_SYMBOL(complete);$/;"	v
complete	sched/completion.c	/^void complete(struct completion *x)$/;"	f
complete_all	sched/completion.c	/^EXPORT_SYMBOL(complete_all);$/;"	v
complete_all	sched/completion.c	/^void complete_all(struct completion *x)$/;"	f
complete_and_exit	exit.c	/^EXPORT_SYMBOL(complete_and_exit);$/;"	v
complete_and_exit	exit.c	/^void complete_and_exit(struct completion *comp, long code)$/;"	f
complete_ap_thread	cpu.c	/^static inline void complete_ap_thread(struct cpuhp_cpu_state *st, bool bringup)$/;"	f	file:
complete_formation	module.c	/^static int complete_formation(struct module *mod, struct load_info *info)$/;"	f	file:
complete_signal	signal.c	/^static void complete_signal(int sig, struct task_struct *p, enum pid_type type)$/;"	f	file:
complete_vfork_done	fork.c	/^static void complete_vfork_done(struct task_struct *tsk)$/;"	f	file:
completedqs	rcu/tree.h	/^	unsigned long completedqs; \/* All QSes done for this node. *\/$/;"	m	struct:rcu_node
completion	stop_machine.c	/^	struct completion	completion;	\/* fired if nr_todo reaches 0 *\/$/;"	m	struct:cpu_stop_done	typeref:struct:cpu_stop_done::completion	file:
completion_done	sched/completion.c	/^EXPORT_SYMBOL(completion_done);$/;"	v
completion_done	sched/completion.c	/^bool completion_done(struct completion *x)$/;"	f
compute_capacity	sched/fair.c	/^	unsigned long compute_capacity;$/;"	m	struct:numa_stats	file:
compute_effective_cpumask	cgroup/cpuset.c	/^static void compute_effective_cpumask(struct cpumask *new_cpus,$/;"	f	file:
compute_effective_progs	bpf/cgroup.c	/^static int compute_effective_progs(struct cgroup *cgrp,$/;"	f	file:
compute_energy	sched/fair.c	/^compute_energy(struct task_struct *p, int dst_cpu, struct perf_domain *pd)$/;"	f	file:
compute_real	rcu/rcuperf.c	/^static int compute_real(int n)$/;"	f	file:
con_msg_format_flags	printk/printk.c	/^enum con_msg_format_flags {$/;"	g	file:
cond_data	trace/trace.h	/^	void				*cond_data;$/;"	m	struct:cond_snapshot
cond_snapshot	trace/trace.h	/^	struct cond_snapshot	*cond_snapshot;$/;"	m	struct:trace_array	typeref:struct:trace_array::cond_snapshot
cond_snapshot	trace/trace.h	/^struct cond_snapshot {$/;"	s
cond_snapshot_update	trace/trace_events_hist.c	/^static bool cond_snapshot_update(struct trace_array *tr, void *cond_data)$/;"	f	file:
cond_sync	rcu/rcutorture.c	/^	void (*cond_sync)(unsigned long oldstate);$/;"	m	struct:rcu_torture_ops	file:
cond_synchronize_rcu	rcu/tree.c	/^EXPORT_SYMBOL_GPL(cond_synchronize_rcu);$/;"	v
cond_synchronize_rcu	rcu/tree.c	/^void cond_synchronize_rcu(unsigned long oldstate)$/;"	f
cond_unmask_eoi_irq	irq/chip.c	/^static void cond_unmask_eoi_irq(struct irq_desc *desc, struct irq_chip *chip)$/;"	f	file:
cond_unmask_irq	irq/chip.c	/^static void cond_unmask_irq(struct irq_desc *desc)$/;"	f	file:
cond_update_fn_t	trace/trace.h	/^typedef bool (*cond_update_fn_t)(struct trace_array *tr, void *cond_data);$/;"	t
connect	sys_ni.c	/^COND_SYSCALL(connect);$/;"	v
console_cmdline	printk/console_cmdline.h	/^struct console_cmdline$/;"	s
console_cmdline	printk/printk.c	/^static struct console_cmdline console_cmdline[MAX_CMDLINECONSOLES];$/;"	v	typeref:struct:console_cmdline	file:
console_conditional_schedule	printk/printk.c	/^EXPORT_SYMBOL(console_conditional_schedule);$/;"	v
console_conditional_schedule	printk/printk.c	/^void __sched console_conditional_schedule(void)$/;"	f
console_cpu_notify	printk/printk.c	/^static int console_cpu_notify(unsigned int cpu)$/;"	f	file:
console_device	printk/printk.c	/^struct tty_driver *console_device(int *index)$/;"	f
console_drivers	printk/printk.c	/^EXPORT_SYMBOL_GPL(console_drivers);$/;"	v
console_drivers	printk/printk.c	/^struct console *console_drivers;$/;"	v	typeref:struct:console
console_flush_on_panic	printk/printk.c	/^void console_flush_on_panic(enum con_flush_mode mode)$/;"	f
console_idx	printk/printk.c	/^static u32 console_idx;$/;"	v	file:
console_init	printk/printk.c	/^void __init console_init(void)$/;"	f
console_lock	printk/printk.c	/^EXPORT_SYMBOL(console_lock);$/;"	v
console_lock	printk/printk.c	/^void console_lock(void)$/;"	f
console_lock_dep_map	printk/printk.c	/^static struct lockdep_map console_lock_dep_map = {$/;"	v	typeref:struct:lockdep_map	file:
console_lock_spinning_disable_and_check	printk/printk.c	/^static int console_lock_spinning_disable_and_check(void) { return 0; }$/;"	f	file:
console_lock_spinning_disable_and_check	printk/printk.c	/^static int console_lock_spinning_disable_and_check(void)$/;"	f	file:
console_lock_spinning_enable	printk/printk.c	/^static void console_lock_spinning_enable(void) { }$/;"	f	file:
console_lock_spinning_enable	printk/printk.c	/^static void console_lock_spinning_enable(void)$/;"	f	file:
console_locked	printk/printk.c	/^static int console_locked, console_suspended;$/;"	v	file:
console_may_schedule	printk/printk.c	/^static int console_may_schedule;$/;"	v	file:
console_msg_format	printk/printk.c	/^static int console_msg_format = MSG_FORMAT_DEFAULT;$/;"	v	file:
console_msg_format_setup	printk/printk.c	/^static int __init console_msg_format_setup(char *str)$/;"	f	file:
console_owner	printk/printk.c	/^static struct task_struct *console_owner;$/;"	v	typeref:struct:task_struct	file:
console_owner_dep_map	printk/printk.c	/^static struct lockdep_map console_owner_dep_map = {$/;"	v	typeref:struct:lockdep_map	file:
console_printk	printk/printk.c	/^EXPORT_SYMBOL_GPL(console_printk);$/;"	v
console_printk	printk/printk.c	/^int console_printk[4] = {$/;"	v
console_seq	printk/printk.c	/^static u64 console_seq;$/;"	v	file:
console_set_on_cmdline	printk/printk.c	/^EXPORT_SYMBOL(console_set_on_cmdline);$/;"	v
console_set_on_cmdline	printk/printk.c	/^int console_set_on_cmdline;$/;"	v
console_setup	printk/printk.c	/^static int __init console_setup(char *str)$/;"	f	file:
console_start	printk/printk.c	/^EXPORT_SYMBOL(console_start);$/;"	v
console_start	printk/printk.c	/^void console_start(struct console *console)$/;"	f
console_stop	printk/printk.c	/^EXPORT_SYMBOL(console_stop);$/;"	v
console_stop	printk/printk.c	/^void console_stop(struct console *console)$/;"	f
console_suspend_disable	printk/printk.c	/^static int __init console_suspend_disable(char *str)$/;"	f	file:
console_suspend_enabled	printk/printk.c	/^EXPORT_SYMBOL(console_suspend_enabled);$/;"	v
console_suspend_enabled	printk/printk.c	/^bool console_suspend_enabled = true;$/;"	v
console_suspended	printk/printk.c	/^static int console_locked, console_suspended;$/;"	v	file:
console_trylock	printk/printk.c	/^EXPORT_SYMBOL(console_trylock);$/;"	v
console_trylock	printk/printk.c	/^int console_trylock(void)$/;"	f
console_trylock_spinning	printk/printk.c	/^static int console_trylock_spinning(void)$/;"	f	file:
console_unblank	printk/printk.c	/^void console_unblank(void)$/;"	f
console_unlock	printk/printk.c	/^EXPORT_SYMBOL(console_unlock);$/;"	v
console_unlock	printk/printk.c	/^void console_unlock(void)$/;"	f
console_waiter	printk/printk.c	/^static bool console_waiter;$/;"	v	file:
const_debug	sched/sched.h	1534;"	d
const_debug	sched/sched.h	1536;"	d
constraints	power/qos.c	/^	struct pm_qos_constraints *constraints;$/;"	m	struct:pm_qos_object	typeref:struct:pm_qos_object::pm_qos_constraints	file:
constraints_initialized	events/hw_breakpoint.c	/^static int constraints_initialized;$/;"	v	file:
consumer	trace/ring_buffer_benchmark.c	/^static struct task_struct *consumer;$/;"	v	typeref:struct:task_struct	file:
consumer	trace/trace_uprobe.c	/^	struct uprobe_consumer		consumer;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::uprobe_consumer	file:
consumer_add	events/uprobes.c	/^static void consumer_add(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
consumer_del	events/uprobes.c	/^static bool consumer_del(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
consumer_fifo	trace/ring_buffer_benchmark.c	/^static int consumer_fifo = -1;$/;"	v	file:
consumer_filter	events/uprobes.c	/^static inline bool consumer_filter(struct uprobe_consumer *uc,$/;"	f	file:
consumer_nice	trace/ring_buffer_benchmark.c	/^static int consumer_nice = MAX_NICE;$/;"	v	file:
consumer_rwsem	events/uprobes.c	/^	struct rw_semaphore	consumer_rwsem;$/;"	m	struct:uprobe	typeref:struct:uprobe::rw_semaphore	file:
consumers	events/uprobes.c	/^	struct uprobe_consumer	*consumers;$/;"	m	struct:uprobe	typeref:struct:uprobe::uprobe_consumer	file:
cont	printk/printk.c	/^static struct cont {$/;"	s	file:
cont	printk/printk.c	/^} cont;$/;"	v	typeref:struct:cont	file:
cont	trace/trace.h	/^	bool		cont;$/;"	m	struct:trace_parser
cont	trace/trace_events_hist.c	/^	bool		cont;$/;"	m	struct:hist_trigger_attrs	file:
cont_add	printk/printk.c	/^static bool cont_add(u32 caller_id, int facility, int level,$/;"	f	file:
cont_flush	printk/printk.c	/^static void cont_flush(void)$/;"	f	file:
containing_match	dma/debug.c	/^static bool containing_match(struct dma_debug_entry *a,$/;"	f	file:
contains_operator	trace/trace_events_hist.c	/^static int contains_operator(char *str)$/;"	f	file:
context_equiv	events/core.c	/^static int context_equiv(struct perf_event_context *ctx1,$/;"	f	file:
context_switch	sched/core.c	/^context_switch(struct rq *rq, struct task_struct *prev,$/;"	f	file:
context_tracking	context_tracking.c	/^EXPORT_SYMBOL_GPL(context_tracking);$/;"	v
context_tracking_cpu_set	context_tracking.c	/^void __init context_tracking_cpu_set(int cpu)$/;"	f
context_tracking_enabled	context_tracking.c	/^DEFINE_STATIC_KEY_FALSE(context_tracking_enabled);$/;"	v
context_tracking_enabled	context_tracking.c	/^EXPORT_SYMBOL_GPL(context_tracking_enabled);$/;"	v
context_tracking_enter	context_tracking.c	/^EXPORT_SYMBOL_GPL(context_tracking_enter);$/;"	v
context_tracking_enter	context_tracking.c	/^NOKPROBE_SYMBOL(context_tracking_enter);$/;"	v
context_tracking_enter	context_tracking.c	/^void context_tracking_enter(enum ctx_state state)$/;"	f
context_tracking_exit	context_tracking.c	/^EXPORT_SYMBOL_GPL(context_tracking_exit);$/;"	v
context_tracking_exit	context_tracking.c	/^NOKPROBE_SYMBOL(context_tracking_exit);$/;"	v
context_tracking_exit	context_tracking.c	/^void context_tracking_exit(enum ctx_state state)$/;"	f
context_tracking_init	context_tracking.c	/^void __init context_tracking_init(void)$/;"	f
context_tracking_recursion_enter	context_tracking.c	/^static bool context_tracking_recursion_enter(void)$/;"	f	file:
context_tracking_recursion_exit	context_tracking.c	/^static void context_tracking_recursion_exit(void)$/;"	f	file:
context_tracking_user_enter	context_tracking.c	/^NOKPROBE_SYMBOL(context_tracking_user_enter);$/;"	v
context_tracking_user_enter	context_tracking.c	/^void context_tracking_user_enter(void)$/;"	f
context_tracking_user_exit	context_tracking.c	/^NOKPROBE_SYMBOL(context_tracking_user_exit);$/;"	v
context_tracking_user_exit	context_tracking.c	/^void context_tracking_user_exit(void)$/;"	f
control_devkmsg	printk/printk.c	/^static int __init control_devkmsg(char *str)$/;"	f	file:
convert	sysctl_binary.c	/^	bin_convert_t		*convert;$/;"	m	struct:bin_table	file:
convert_ctx_accesses	bpf/verifier.c	/^static int convert_ctx_accesses(struct bpf_verifier_env *env)$/;"	f	file:
convert_prio	sched/cpupri.c	/^static int convert_prio(int prio)$/;"	f	file:
convert_pseudo_ld_imm64	bpf/verifier.c	/^static void convert_pseudo_ld_imm64(struct bpf_verifier_env *env)$/;"	f	file:
convert_to_gcda	gcov/clang.c	/^static size_t convert_to_gcda(char *buffer, struct gcov_info *info)$/;"	f	file:
convert_to_gcda	gcov/gcc_4_7.c	/^static size_t convert_to_gcda(char *buffer, struct gcov_info *info)$/;"	f	file:
cookie	async.c	/^	async_cookie_t		cookie;$/;"	m	struct:async_entry	file:
cookie	sched/sched.h	/^	struct pin_cookie cookie;$/;"	m	struct:rq_flags	typeref:struct:rq_flags::pin_cookie
copy_bm	power/snapshot.c	/^static struct memory_bitmap copy_bm;$/;"	v	typeref:struct:memory_bitmap	file:
copy_cgroup_ns	cgroup/namespace.c	/^struct cgroup_namespace *copy_cgroup_ns(unsigned long flags,$/;"	f
copy_chunked_from_user	module.c	/^static int copy_chunked_from_user(void *dst, const void __user *usrc, unsigned long len)$/;"	f	file:
copy_clone_args_from_user	fork.c	/^noinline static int copy_clone_args_from_user(struct kernel_clone_args *kargs,$/;"	f	file:
copy_creds	cred.c	/^int copy_creds(struct task_struct *p, unsigned long clone_flags)$/;"	f
copy_data_page	power/snapshot.c	/^static inline void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)$/;"	f	file:
copy_data_page	power/snapshot.c	/^static void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)$/;"	f	file:
copy_data_pages	power/snapshot.c	/^static void copy_data_pages(struct memory_bitmap *copy_bm,$/;"	f	file:
copy_file_range	sys_ni.c	/^COND_SYSCALL(copy_file_range);$/;"	v
copy_files	fork.c	/^static int copy_files(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_from_page	events/uprobes.c	/^static void copy_from_page(struct page *page, unsigned long vaddr, void *dst, int len)$/;"	f	file:
copy_fs	fork.c	/^static int copy_fs(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_func_state	bpf/verifier.c	/^static int copy_func_state(struct bpf_func_state *dst,$/;"	f	file:
copy_init_mm	fork.c	/^struct mm_struct *copy_init_mm(void)$/;"	f
copy_insn	events/uprobes.c	/^static int copy_insn(struct uprobe *uprobe, struct file *filp)$/;"	f	file:
copy_io	fork.c	/^static int copy_io(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_kprobe	kprobes.c	/^static inline void copy_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
copy_last_highmem_page	power/snapshot.c	/^static inline void copy_last_highmem_page(void) {}$/;"	f	file:
copy_last_highmem_page	power/snapshot.c	/^static void copy_last_highmem_page(void)$/;"	f	file:
copy_map_value_locked	bpf/helpers.c	/^void copy_map_value_locked(struct bpf_map *map, void *dst, void *src,$/;"	f
copy_mm	fork.c	/^static int copy_mm(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_module_elf	module.c	/^static int copy_module_elf(struct module *mod, struct load_info *info)$/;"	f	file:
copy_module_from_user	module.c	/^static int copy_module_from_user(const void __user *umod, unsigned long len,$/;"	f	file:
copy_namespaces	nsproxy.c	/^int copy_namespaces(unsigned long flags, struct task_struct *tsk)$/;"	f
copy_page	power/snapshot.c	/^	struct page *copy_page;	\/* data is here now *\/$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::page	file:
copy_pid_ns	pid_namespace.c	/^struct pid_namespace *copy_pid_ns(unsigned long flags,$/;"	f
copy_process	fork.c	/^static __latent_entropy struct task_struct *copy_process($/;"	f	file:
copy_seccomp	fork.c	/^static void copy_seccomp(struct task_struct *p)$/;"	f	file:
copy_sighand	fork.c	/^static int copy_sighand(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_siginfo_from_user	signal.c	/^int copy_siginfo_from_user(kernel_siginfo_t *to, const siginfo_t __user *from)$/;"	f
copy_siginfo_from_user32	signal.c	/^int copy_siginfo_from_user32(struct kernel_siginfo *to,$/;"	f
copy_siginfo_from_user_any	signal.c	/^static int copy_siginfo_from_user_any(kernel_siginfo_t *kinfo, siginfo_t *info)$/;"	f	file:
copy_siginfo_to_user	signal.c	/^int copy_siginfo_to_user(siginfo_t __user *to, const kernel_siginfo_t *from)$/;"	f
copy_siginfo_to_user32	signal.c	/^int copy_siginfo_to_user32(struct compat_siginfo __user *to,$/;"	f
copy_signal	fork.c	/^static int copy_signal(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_sysctl_value	bpf/cgroup.c	/^static int copy_sysctl_value(char *dst, size_t dst_len, char *src,$/;"	f	file:
copy_to_page	events/uprobes.c	/^static void copy_to_page(struct page *page, unsigned long vaddr, const void *src, int len)$/;"	f	file:
copy_user_segment_list	kexec.c	/^static int copy_user_segment_list(struct kimage *image,$/;"	f	file:
copy_utsname	utsname.c	/^struct uts_namespace *copy_utsname(unsigned long flags,$/;"	f
copy_verifier_state	bpf/verifier.c	/^static int copy_verifier_state(struct bpf_verifier_state *dst_state,$/;"	f	file:
copy_workqueue_attrs	workqueue.c	/^static void copy_workqueue_attrs(struct workqueue_attrs *to,$/;"	f	file:
core_kernel_data	extable.c	/^int core_kernel_data(unsigned long addr)$/;"	f
core_kernel_text	extable.c	/^int notrace core_kernel_text(unsigned long addr)$/;"	f
core_needs_qs	rcu/tree.h	/^	bool		core_needs_qs;	\/* Core waits for quiesc state. *\/$/;"	m	struct:rcu_data
core_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	m	struct:load_info
coredump_filter_setup	fork.c	/^static int __init coredump_filter_setup(char *s)$/;"	f	file:
count	acct.c	/^	atomic_long_t		count;$/;"	m	struct:bsd_acct_struct	file:
count	audit_tree.c	/^	int count;$/;"	m	struct:audit_chunk	file:
count	audit_tree.c	/^	refcount_t count;$/;"	m	struct:audit_tree	file:
count	audit_watch.c	/^	refcount_t		count;	\/* reference count *\/$/;"	m	struct:audit_watch	file:
count	bpf/cpumap.c	/^	unsigned int count;$/;"	m	struct:xdp_bulk_queue	file:
count	bpf/devmap.c	/^	unsigned int count;$/;"	m	struct:xdp_bulk_queue	file:
count	bpf/hashtab.c	/^	atomic_t count;	\/* number of elements in this hashtable *\/$/;"	m	struct:bpf_htab	file:
count	debug/kdb/kdb_main.c	/^	int count;$/;"	m	struct:defcmd_set	file:
count	gcov/gcc_3_4.c	/^	unsigned int count;$/;"	m	struct:gcov_iterator	file:
count	irq/internals.h	/^	int	count;$/;"	m	struct:irq_timings
count	irq/timings.c	/^	int	count;$/;"	m	struct:irqt_stat	file:
count	irq/timings.c	/^	size_t count;$/;"	m	struct:timings_intervals	file:
count	livepatch/core.c	/^	unsigned long count;$/;"	m	struct:klp_find_arg	file:
count	locking/mcs_spinlock.h	/^	int count;  \/* nesting count, see qspinlock.c *\/$/;"	m	struct:mcs_spinlock
count	power/swap.c	/^	atomic_t		count;$/;"	m	struct:hib_bio_batch	file:
count	sched/cpupri.h	/^	atomic_t		count;$/;"	m	struct:cpupri_vec
count	trace/trace.h	/^	unsigned long			count;$/;"	m	struct:event_trigger_data
count	trace/trace.h	/^	unsigned long		count;$/;"	m	struct:ftrace_hash
count	trace/trace_events.c	/^	unsigned long			count;$/;"	m	struct:event_probe_data	file:
count	trace/trace_hwlat.c	/^	u64	count;			\/* total since reset *\/$/;"	m	struct:hwlat_data	file:
count	trace/trace_probe.h	/^	unsigned int		count;	\/* Array count *\/$/;"	m	struct:probe_arg
count	user_namespace.c	/^	u32 count; \/* == 0 unless used with map_id_range_down() *\/$/;"	m	struct:idmap_key	file:
count_data_pages	power/snapshot.c	/^static unsigned int count_data_pages(void)$/;"	f	file:
count_free_highmem_pages	power/snapshot.c	/^static unsigned int count_free_highmem_pages(void)$/;"	f	file:
count_highmem_image_pages	power/snapshot.c	/^static unsigned int count_highmem_image_pages(struct memory_bitmap *bm) { return 0; }$/;"	f	file:
count_highmem_image_pages	power/snapshot.c	/^static unsigned int count_highmem_image_pages(struct memory_bitmap *bm)$/;"	f	file:
count_highmem_pages	power/power.h	/^static inline unsigned int count_highmem_pages(void) { return 0; }$/;"	f
count_highmem_pages	power/snapshot.c	/^static unsigned int count_highmem_pages(void)$/;"	f	file:
count_matching_names	locking/lockdep.c	/^static int count_matching_names(struct lock_class *new_class)$/;"	f	file:
count_overruns	trace/trace_mmiotrace.c	/^static unsigned long count_overruns(struct trace_iterator *iter)$/;"	f	file:
count_pages_for_highmem	power/snapshot.c	/^static unsigned int count_pages_for_highmem(unsigned int nr_highmem) { return 0; }$/;"	f	file:
count_pages_for_highmem	power/snapshot.c	/^static unsigned int count_pages_for_highmem(unsigned int nr_highmem)$/;"	f	file:
counter	cgroup/pids.c	/^	atomic64_t			counter;$/;"	m	struct:pids_cgroup	file:
counter	trace/ftrace.c	/^	unsigned long			counter;$/;"	m	struct:ftrace_profile	file:
counter_active	gcov/gcc_3_4.c	/^static int counter_active(struct gcov_info *info, unsigned int type)$/;"	f	file:
counter_active	gcov/gcc_4_7.c	/^static int counter_active(struct gcov_info *info, unsigned int type)$/;"	f	file:
counter_wrap_check	rcu/srcutree.c	/^static ulong counter_wrap_check = (ULONG_MAX >> 2);$/;"	v	file:
counters	gcov/clang.c	/^	u64 *counters;$/;"	m	struct:gcov_fn_info	file:
counts	bpf/bpf_lru_list.h	/^	unsigned int counts[NR_BPF_LRU_LIST_COUNT];$/;"	m	struct:bpf_lru_list
counts	gcov/gcc_3_4.c	/^	struct gcov_ctr_info		counts[0];$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_ctr_info	file:
cpu	bpf/bpf_lru_list.h	/^	u16 cpu;$/;"	m	struct:bpf_lru_node
cpu	bpf/cpumap.c	/^	u32 cpu;    \/* kthread CPU and map index *\/$/;"	m	struct:bpf_cpu_map_entry	file:
cpu	debug/debug_core.h	/^	int			cpu;$/;"	m	struct:kgdb_state
cpu	kthread.c	/^	unsigned int cpu;$/;"	m	struct:kthread	file:
cpu	locking/qspinlock_paravirt.h	/^	int			cpu;$/;"	m	struct:pv_node
cpu	rcu/tree.h	/^	int cpu;$/;"	m	struct:rcu_data
cpu	sched/core.c	/^	int			cpu;$/;"	m	struct:tick_work	file:
cpu	sched/cpudeadline.h	/^	int			cpu;$/;"	m	struct:cpudl_item
cpu	sched/cpufreq_schedutil.c	/^	unsigned int		cpu;$/;"	m	struct:sugov_cpu	file:
cpu	sched/sched.h	/^	int			cpu;$/;"	m	struct:rq
cpu	smp.c	/^	int			cpu;$/;"	m	struct:smp_call_on_cpu_struct	file:
cpu	smpboot.c	/^	unsigned int			cpu;$/;"	m	struct:smpboot_thread_data	file:
cpu	time/timer.c	/^	unsigned int		cpu;$/;"	m	struct:timer_base	file:
cpu	time/timer_list.c	/^	int cpu;$/;"	m	struct:timer_list_iter	file:
cpu	trace/ring_buffer.c	/^	int				cpu;$/;"	m	struct:ring_buffer_per_cpu	file:
cpu	trace/ring_buffer.c	/^	int			cpu;$/;"	m	struct:rb_test_data	file:
cpu	trace/trace.c	/^	int			cpu;$/;"	m	struct:buffer_ref	file:
cpu	trace/trace.h	/^	int				cpu;$/;"	m	struct:trace_buffer
cpu	trace/trace_functions_graph.c	/^	int				cpu;$/;"	m	struct:fgraph_data	file:
cpu	workqueue.c	/^	int			cpu;		\/* I: the associated cpu *\/$/;"	m	struct:worker_pool	file:
cpu_all_bits	cpu.c	/^EXPORT_SYMBOL(cpu_all_bits);$/;"	v
cpu_attach_domain	sched/topology.c	/^cpu_attach_domain(struct sched_domain *sd, struct root_domain *rd, int cpu)$/;"	f	file:
cpu_avg_load_per_task	sched/fair.c	/^static unsigned long cpu_avg_load_per_task(int cpu)$/;"	f	file:
cpu_bit_bitmap	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_bit_bitmap);$/;"	v
cpu_bit_bitmap	cpu.c	/^const unsigned long cpu_bit_bitmap[BITS_PER_LONG+1][BITS_TO_LONGS(NR_CPUS)] = {$/;"	v
cpu_buffer	trace/ring_buffer.c	/^	struct ring_buffer_per_cpu	*cpu_buffer;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::ring_buffer_per_cpu	file:
cpu_bw_dl	sched/sched.h	/^static inline unsigned long cpu_bw_dl(struct rq *rq)$/;"	f
cpu_capacity	sched/sched.h	/^	unsigned long		cpu_capacity;$/;"	m	struct:rq
cpu_capacity_orig	sched/sched.h	/^	unsigned long		cpu_capacity_orig;$/;"	m	struct:rq
cpu_cfs_period_read_u64	sched/core.c	/^static u64 cpu_cfs_period_read_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_cfs_period_write_u64	sched/core.c	/^static int cpu_cfs_period_write_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_cfs_quota_read_s64	sched/core.c	/^static s64 cpu_cfs_quota_read_s64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_cfs_quota_write_s64	sched/core.c	/^static int cpu_cfs_quota_write_s64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_cfs_stat_show	sched/core.c	/^static int cpu_cfs_stat_show(struct seq_file *sf, void *v)$/;"	f	file:
cpu_cgroup_attach	sched/core.c	/^static void cpu_cgroup_attach(struct cgroup_taskset *tset)$/;"	f	file:
cpu_cgroup_can_attach	sched/core.c	/^static int cpu_cgroup_can_attach(struct cgroup_taskset *tset)$/;"	f	file:
cpu_cgroup_css_alloc	sched/core.c	/^cpu_cgroup_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
cpu_cgroup_css_free	sched/core.c	/^static void cpu_cgroup_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
cpu_cgroup_css_online	sched/core.c	/^static int cpu_cgroup_css_online(struct cgroup_subsys_state *css)$/;"	f	file:
cpu_cgroup_css_released	sched/core.c	/^static void cpu_cgroup_css_released(struct cgroup_subsys_state *css)$/;"	f	file:
cpu_cgroup_fork	sched/core.c	/^static void cpu_cgroup_fork(struct task_struct *task)$/;"	f	file:
cpu_cgrp_subsys	sched/core.c	/^struct cgroup_subsys cpu_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpu_check_up_prepare	smpboot.c	/^int cpu_check_up_prepare(int cpu)$/;"	f
cpu_clock_event_add	events/core.c	/^static int cpu_clock_event_add(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_del	events/core.c	/^static void cpu_clock_event_del(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_init	events/core.c	/^static int cpu_clock_event_init(struct perf_event *event)$/;"	f	file:
cpu_clock_event_read	events/core.c	/^static void cpu_clock_event_read(struct perf_event *event)$/;"	f	file:
cpu_clock_event_start	events/core.c	/^static void cpu_clock_event_start(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_stop	events/core.c	/^static void cpu_clock_event_stop(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_update	events/core.c	/^static void cpu_clock_event_update(struct perf_event *event)$/;"	f	file:
cpu_clock_sample	time/posix-cpu-timers.c	/^static int cpu_clock_sample(const clockid_t which_clock,$/;"	f	file:
cpu_clock_sample_group	time/posix-cpu-timers.c	/^static int cpu_clock_sample_group(const clockid_t which_clock,$/;"	f	file:
cpu_cluster_pm_enter	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_cluster_pm_enter);$/;"	v
cpu_cluster_pm_enter	cpu_pm.c	/^int cpu_cluster_pm_enter(void)$/;"	f
cpu_cluster_pm_exit	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_cluster_pm_exit);$/;"	v
cpu_cluster_pm_exit	cpu_pm.c	/^int cpu_cluster_pm_exit(void)$/;"	f
cpu_ctx_sched_in	events/core.c	/^static void cpu_ctx_sched_in(struct perf_cpu_context *cpuctx,$/;"	f	file:
cpu_ctx_sched_out	events/core.c	/^static void cpu_ctx_sched_out(struct perf_cpu_context *cpuctx,$/;"	f	file:
cpu_curr	sched/sched.h	1040;"	d
cpu_data	trace/trace_functions_graph.c	/^	struct fgraph_cpu_data __percpu *cpu_data;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::__percpu	file:
cpu_dma_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_dma_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_dma_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_dma_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_down	cpu.c	/^EXPORT_SYMBOL(cpu_down);$/;"	v
cpu_down	cpu.c	/^int cpu_down(unsigned int cpu)$/;"	f
cpu_down_maps_locked	cpu.c	/^static int cpu_down_maps_locked(unsigned int cpu, enum cpuhp_state target)$/;"	f	file:
cpu_entries	events/callchain.c	/^	struct perf_callchain_entry	*cpu_entries[0];$/;"	m	struct:callchain_cpus_entries	typeref:struct:callchain_cpus_entries::perf_callchain_entry	file:
cpu_extra_stat_show	sched/core.c	/^static int cpu_extra_stat_show(struct seq_file *sf,$/;"	f	file:
cpu_files	sched/core.c	/^static struct cftype cpu_files[] = {$/;"	v	typeref:struct:cftype	file:
cpu_frequency	trace/power-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(cpu_frequency);$/;"	v
cpu_function_call	events/core.c	/^static int cpu_function_call(int cpu, remote_function_f func, void *info)$/;"	f	file:
cpu_hotplug_disable	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_hotplug_disable);$/;"	v
cpu_hotplug_disable	cpu.c	/^void cpu_hotplug_disable(void)$/;"	f
cpu_hotplug_disabled	cpu.c	/^static int cpu_hotplug_disabled;$/;"	v	file:
cpu_hotplug_enable	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_hotplug_enable);$/;"	v
cpu_hotplug_enable	cpu.c	/^void cpu_hotplug_enable(void)$/;"	f
cpu_hotplug_lock	cpu.c	/^DEFINE_STATIC_PERCPU_RWSEM(cpu_hotplug_lock);$/;"	v
cpu_hotplug_pm_callback	cpu.c	/^cpu_hotplug_pm_callback(struct notifier_block *nb,$/;"	f	file:
cpu_hotplug_pm_sync_init	cpu.c	/^core_initcall(cpu_hotplug_pm_sync_init);$/;"	v
cpu_hotplug_pm_sync_init	cpu.c	/^static int __init cpu_hotplug_pm_sync_init(void)$/;"	f	file:
cpu_idle	trace/power-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(cpu_idle);$/;"	v
cpu_idle_force_poll	sched/idle.c	/^static int __read_mostly cpu_idle_force_poll;$/;"	v	file:
cpu_idle_nopoll_setup	sched/idle.c	/^static int __init cpu_idle_nopoll_setup(char *__unused)$/;"	f	file:
cpu_idle_poll	sched/idle.c	/^static noinline int __cpuidle cpu_idle_poll(void)$/;"	f	file:
cpu_idle_poll_ctrl	sched/idle.c	/^void cpu_idle_poll_ctrl(bool enable)$/;"	f
cpu_idle_poll_setup	sched/idle.c	/^static int __init cpu_idle_poll_setup(char *__unused)$/;"	f	file:
cpu_in_idle	sched/idle.c	/^bool cpu_in_idle(unsigned long pc)$/;"	f
cpu_legacy_files	sched/core.c	/^static struct cftype cpu_legacy_files[] = {$/;"	v	typeref:struct:cftype	file:
cpu_map	bpf/cpumap.c	/^	struct bpf_cpu_map_entry **cpu_map;$/;"	m	struct:bpf_cpu_map	typeref:struct:bpf_cpu_map::bpf_cpu_map_entry	file:
cpu_map_alloc	bpf/cpumap.c	/^static struct bpf_map *cpu_map_alloc(union bpf_attr *attr)$/;"	f	file:
cpu_map_build_skb	bpf/cpumap.c	/^static struct sk_buff *cpu_map_build_skb(struct bpf_cpu_map_entry *rcpu,$/;"	f	file:
cpu_map_delete_elem	bpf/cpumap.c	/^static int cpu_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
cpu_map_enqueue	bpf/cpumap.c	/^int cpu_map_enqueue(struct bpf_cpu_map_entry *rcpu, struct xdp_buff *xdp,$/;"	f
cpu_map_free	bpf/cpumap.c	/^static void cpu_map_free(struct bpf_map *map)$/;"	f	file:
cpu_map_get_next_key	bpf/cpumap.c	/^static int cpu_map_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f	file:
cpu_map_kthread_run	bpf/cpumap.c	/^static int cpu_map_kthread_run(void *data)$/;"	f	file:
cpu_map_kthread_stop	bpf/cpumap.c	/^static void cpu_map_kthread_stop(struct work_struct *work)$/;"	f	file:
cpu_map_lookup_elem	bpf/cpumap.c	/^static void *cpu_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
cpu_map_ops	bpf/cpumap.c	/^const struct bpf_map_ops cpu_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
cpu_map_update_elem	bpf/cpumap.c	/^static int cpu_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
cpu_maps_update_begin	cpu.c	/^void cpu_maps_update_begin(void)$/;"	f
cpu_maps_update_done	cpu.c	/^void cpu_maps_update_done(void)$/;"	f
cpu_max_show	sched/core.c	/^static int cpu_max_show(struct seq_file *sf, void *v)$/;"	f	file:
cpu_max_write	sched/core.c	/^static ssize_t cpu_max_write(struct kernfs_open_file *of,$/;"	f	file:
cpu_no_qs	rcu/tree.h	/^	union rcu_noqs	cpu_no_qs;	\/* No QSes yet for this CPU. *\/$/;"	m	struct:rcu_data	typeref:union:rcu_data::rcu_noqs
cpu_of	sched/sched.h	/^static inline int cpu_of(struct rq *rq)$/;"	f
cpu_overutilized	sched/fair.c	/^static inline bool cpu_overutilized(int cpu)$/;"	f	file:
cpu_period_quota_parse	sched/core.c	/^static int __maybe_unused cpu_period_quota_parse(char *buf,$/;"	f	file:
cpu_period_quota_print	sched/core.c	/^static void __maybe_unused cpu_period_quota_print(struct seq_file *sf,$/;"	f	file:
cpu_pinned	events/hw_breakpoint.c	/^	unsigned int	cpu_pinned;$/;"	m	struct:bp_cpuinfo	file:
cpu_pm_enter	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_enter);$/;"	v
cpu_pm_enter	cpu_pm.c	/^int cpu_pm_enter(void)$/;"	f
cpu_pm_exit	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_exit);$/;"	v
cpu_pm_exit	cpu_pm.c	/^int cpu_pm_exit(void)$/;"	f
cpu_pm_init	cpu_pm.c	/^core_initcall(cpu_pm_init);$/;"	v
cpu_pm_init	cpu_pm.c	/^static int cpu_pm_init(void)$/;"	f	file:
cpu_pm_notify	cpu_pm.c	/^static int cpu_pm_notify(enum cpu_pm_event event, int nr_to_call, int *nr_calls)$/;"	f	file:
cpu_pm_register_notifier	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_register_notifier);$/;"	v
cpu_pm_register_notifier	cpu_pm.c	/^int cpu_pm_register_notifier(struct notifier_block *nb)$/;"	f
cpu_pm_resume	cpu_pm.c	/^static void cpu_pm_resume(void)$/;"	f	file:
cpu_pm_suspend	cpu_pm.c	/^static int cpu_pm_suspend(void)$/;"	f	file:
cpu_pm_syscore_ops	cpu_pm.c	/^static struct syscore_ops cpu_pm_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
cpu_pm_unregister_notifier	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_unregister_notifier);$/;"	v
cpu_pm_unregister_notifier	cpu_pm.c	/^int cpu_pm_unregister_notifier(struct notifier_block *nb)$/;"	f
cpu_pwqs	workqueue.c	/^	struct pool_workqueue __percpu *cpu_pwqs; \/* I: per-cpu pwqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::__percpu	file:
cpu_report_death	smpboot.c	/^bool cpu_report_death(void)$/;"	f
cpu_report_state	smpboot.c	/^int cpu_report_state(int cpu)$/;"	f
cpu_rq	sched/sched.h	1037;"	d
cpu_rt_period_read_uint	sched/core.c	/^static u64 cpu_rt_period_read_uint(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_rt_period_write_uint	sched/core.c	/^static int cpu_rt_period_write_uint(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_rt_runtime_read	sched/core.c	/^static s64 cpu_rt_runtime_read(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_rt_runtime_write	sched/core.c	/^static int cpu_rt_runtime_write(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_runnable_load	sched/fair.c	/^static unsigned long cpu_runnable_load(struct rq *rq)$/;"	f	file:
cpu_sdc	sched/clock.c	/^static inline struct sched_clock_data *cpu_sdc(int cpu)$/;"	f	file:
cpu_set_state_online	smpboot.c	/^void cpu_set_state_online(int cpu)$/;"	f
cpu_shares_read_u64	sched/core.c	/^static u64 cpu_shares_read_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_shares_write_u64	sched/core.c	/^static int cpu_shares_write_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_smt_allowed	cpu.c	/^static inline bool cpu_smt_allowed(unsigned int cpu) { return true; }$/;"	f	file:
cpu_smt_allowed	cpu.c	/^static inline bool cpu_smt_allowed(unsigned int cpu)$/;"	f	file:
cpu_smt_check_topology	cpu.c	/^void __init cpu_smt_check_topology(void)$/;"	f
cpu_smt_disable	cpu.c	/^void __init cpu_smt_disable(bool force)$/;"	f
cpu_smt_sysfs_init	cpu.c	/^static int __init cpu_smt_sysfs_init(void)$/;"	f	file:
cpu_startup_entry	sched/idle.c	/^void cpu_startup_entry(enum cpuhp_state state)$/;"	f
cpu_stat_show	cgroup/cgroup.c	/^static int cpu_stat_show(struct seq_file *seq, void *v)$/;"	f	file:
cpu_stop_create	stop_machine.c	/^static void cpu_stop_create(unsigned int cpu)$/;"	f	file:
cpu_stop_done	stop_machine.c	/^struct cpu_stop_done {$/;"	s	file:
cpu_stop_init	stop_machine.c	/^early_initcall(cpu_stop_init);$/;"	v
cpu_stop_init	stop_machine.c	/^static int __init cpu_stop_init(void)$/;"	f	file:
cpu_stop_init_done	stop_machine.c	/^static void cpu_stop_init_done(struct cpu_stop_done *done, unsigned int nr_todo)$/;"	f	file:
cpu_stop_park	stop_machine.c	/^static void cpu_stop_park(unsigned int cpu)$/;"	f	file:
cpu_stop_queue_two_works	stop_machine.c	/^static int cpu_stop_queue_two_works(int cpu1, struct cpu_stop_work *work1,$/;"	f	file:
cpu_stop_queue_work	stop_machine.c	/^static bool cpu_stop_queue_work(unsigned int cpu, struct cpu_stop_work *work)$/;"	f	file:
cpu_stop_should_run	stop_machine.c	/^static int cpu_stop_should_run(unsigned int cpu)$/;"	f	file:
cpu_stop_signal_done	stop_machine.c	/^static void cpu_stop_signal_done(struct cpu_stop_done *done)$/;"	f	file:
cpu_stop_threads	stop_machine.c	/^static struct smp_hotplug_thread cpu_stop_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
cpu_stopper	stop_machine.c	/^struct cpu_stopper {$/;"	s	file:
cpu_stopper_thread	stop_machine.c	/^static void cpu_stopper_thread(unsigned int cpu)$/;"	f	file:
cpu_timer_fire	time/posix-cpu-timers.c	/^static void cpu_timer_fire(struct k_itimer *timer)$/;"	f	file:
cpu_timer_sample_group	time/posix-cpu-timers.c	/^static int cpu_timer_sample_group(const clockid_t which_clock,$/;"	f	file:
cpu_to_pri	sched/cpupri.h	/^	int			*cpu_to_pri;$/;"	m	struct:cpupri
cpu_up	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_up);$/;"	v
cpu_up	cpu.c	/^int cpu_up(unsigned int cpu)$/;"	f
cpu_util	sched/fair.c	/^static inline unsigned long cpu_util(int cpu)$/;"	f	file:
cpu_util_cfs	sched/sched.h	/^static inline unsigned long cpu_util_cfs(struct rq *rq)$/;"	f
cpu_util_dl	sched/sched.h	/^static inline unsigned long cpu_util_dl(struct rq *rq)$/;"	f
cpu_util_irq	sched/sched.h	/^static inline unsigned long cpu_util_irq(struct rq *rq)$/;"	f
cpu_util_next	sched/fair.c	/^static unsigned long cpu_util_next(int cpu, struct task_struct *p, int dst_cpu)$/;"	f	file:
cpu_util_rt	sched/sched.h	/^static inline unsigned long cpu_util_rt(struct rq *rq)$/;"	f
cpu_util_without	sched/fair.c	/^static unsigned long cpu_util_without(int cpu, struct task_struct *p)$/;"	f	file:
cpu_wait_death	smpboot.c	/^bool cpu_wait_death(unsigned int cpu, int seconds)$/;"	f
cpu_weight_nice_read_s64	sched/core.c	/^static s64 cpu_weight_nice_read_s64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_weight_nice_write_s64	sched/core.c	/^static int cpu_weight_nice_write_s64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_weight_read_u64	sched/core.c	/^static u64 cpu_weight_read_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpu_weight_write_u64	sched/core.c	/^static int cpu_weight_write_u64(struct cgroup_subsys_state *css,$/;"	f	file:
cpuacct	sched/cpuacct.c	/^struct cpuacct {$/;"	s	file:
cpuacct_account_field	sched/cpuacct.c	/^void cpuacct_account_field(struct task_struct *tsk, int index, u64 val)$/;"	f
cpuacct_all_seq_show	sched/cpuacct.c	/^static int cpuacct_all_seq_show(struct seq_file *m, void *V)$/;"	f	file:
cpuacct_cgrp_subsys	sched/cpuacct.c	/^struct cgroup_subsys cpuacct_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpuacct_charge	sched/cpuacct.c	/^void cpuacct_charge(struct task_struct *tsk, u64 cputime)$/;"	f
cpuacct_cpuusage_read	sched/cpuacct.c	/^static u64 cpuacct_cpuusage_read(struct cpuacct *ca, int cpu,$/;"	f	file:
cpuacct_cpuusage_write	sched/cpuacct.c	/^static void cpuacct_cpuusage_write(struct cpuacct *ca, int cpu, u64 val)$/;"	f	file:
cpuacct_css_alloc	sched/cpuacct.c	/^cpuacct_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
cpuacct_css_free	sched/cpuacct.c	/^static void cpuacct_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
cpuacct_percpu_seq_show	sched/cpuacct.c	/^static int cpuacct_percpu_seq_show(struct seq_file *m, void *V)$/;"	f	file:
cpuacct_percpu_sys_seq_show	sched/cpuacct.c	/^static int cpuacct_percpu_sys_seq_show(struct seq_file *m, void *V)$/;"	f	file:
cpuacct_percpu_user_seq_show	sched/cpuacct.c	/^static int cpuacct_percpu_user_seq_show(struct seq_file *m, void *V)$/;"	f	file:
cpuacct_stat_desc	sched/cpuacct.c	/^static const char * const cpuacct_stat_desc[] = {$/;"	v	file:
cpuacct_stat_index	sched/cpuacct.c	/^enum cpuacct_stat_index {$/;"	g	file:
cpuacct_stats_show	sched/cpuacct.c	/^static int cpuacct_stats_show(struct seq_file *sf, void *v)$/;"	f	file:
cpuacct_usage	sched/cpuacct.c	/^struct cpuacct_usage {$/;"	s	file:
cpuctx	events/core.c	/^	struct perf_cpu_context *cpuctx;$/;"	m	struct:sched_in_data	typeref:struct:sched_in_data::perf_cpu_context	file:
cpuctx_lock	events/core.c	/^static struct lock_class_key cpuctx_lock;$/;"	v	typeref:struct:lock_class_key	file:
cpuctx_mutex	events/core.c	/^static struct lock_class_key cpuctx_mutex;$/;"	v	typeref:struct:lock_class_key	file:
cpudl	sched/cpudeadline.h	/^struct cpudl {$/;"	s
cpudl	sched/sched.h	/^	struct cpudl		cpudl;$/;"	m	struct:root_domain	typeref:struct:root_domain::cpudl
cpudl_cleanup	sched/cpudeadline.c	/^void cpudl_cleanup(struct cpudl *cp)$/;"	f
cpudl_clear	sched/cpudeadline.c	/^void cpudl_clear(struct cpudl *cp, int cpu)$/;"	f
cpudl_clear_freecpu	sched/cpudeadline.c	/^void cpudl_clear_freecpu(struct cpudl *cp, int cpu)$/;"	f
cpudl_find	sched/cpudeadline.c	/^int cpudl_find(struct cpudl *cp, struct task_struct *p,$/;"	f
cpudl_heapify	sched/cpudeadline.c	/^static void cpudl_heapify(struct cpudl *cp, int idx)$/;"	f	file:
cpudl_heapify_down	sched/cpudeadline.c	/^static void cpudl_heapify_down(struct cpudl *cp, int idx)$/;"	f	file:
cpudl_heapify_up	sched/cpudeadline.c	/^static void cpudl_heapify_up(struct cpudl *cp, int idx)$/;"	f	file:
cpudl_init	sched/cpudeadline.c	/^int cpudl_init(struct cpudl *cp)$/;"	f
cpudl_item	sched/cpudeadline.h	/^struct cpudl_item {$/;"	s
cpudl_maximum	sched/cpudeadline.c	/^static inline int cpudl_maximum(struct cpudl *cp)$/;"	f	file:
cpudl_set	sched/cpudeadline.c	/^void cpudl_set(struct cpudl *cp, int cpu, u64 dl)$/;"	f
cpudl_set_freecpu	sched/cpudeadline.c	/^void cpudl_set_freecpu(struct cpudl *cp, int cpu)$/;"	f
cpudump_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops cpudump_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
cpufreq_add_update_util_hook	sched/cpufreq.c	/^EXPORT_SYMBOL_GPL(cpufreq_add_update_util_hook);$/;"	v
cpufreq_add_update_util_hook	sched/cpufreq.c	/^void cpufreq_add_update_util_hook(int cpu, struct update_util_data *data,$/;"	f
cpufreq_default_governor	sched/cpufreq_schedutil.c	/^struct cpufreq_governor *cpufreq_default_governor(void)$/;"	f
cpufreq_remove_update_util_hook	sched/cpufreq.c	/^EXPORT_SYMBOL_GPL(cpufreq_remove_update_util_hook);$/;"	v
cpufreq_remove_update_util_hook	sched/cpufreq.c	/^void cpufreq_remove_update_util_hook(int cpu)$/;"	f
cpufreq_update_util	sched/sched.h	/^static inline void cpufreq_update_util(struct rq *rq, unsigned int flags) {}$/;"	f
cpufreq_update_util	sched/sched.h	/^static inline void cpufreq_update_util(struct rq *rq, unsigned int flags)$/;"	f
cpuhp_cb_check	cpu.c	/^static int cpuhp_cb_check(enum cpuhp_state state)$/;"	f	file:
cpuhp_complete_idle_dead	cpu.c	/^static void cpuhp_complete_idle_dead(void *arg)$/;"	f	file:
cpuhp_cpu_attr_group	cpu.c	/^static const struct attribute_group cpuhp_cpu_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
cpuhp_cpu_attrs	cpu.c	/^static struct attribute *cpuhp_cpu_attrs[] = {$/;"	v	typeref:struct:attribute	file:
cpuhp_cpu_root_attr_group	cpu.c	/^static const struct attribute_group cpuhp_cpu_root_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
cpuhp_cpu_root_attrs	cpu.c	/^static struct attribute *cpuhp_cpu_root_attrs[] = {$/;"	v	typeref:struct:attribute	file:
cpuhp_cpu_state	cpu.c	/^struct cpuhp_cpu_state {$/;"	s	file:
cpuhp_create	cpu.c	/^static void cpuhp_create(unsigned int cpu)$/;"	f	file:
cpuhp_down_callbacks	cpu.c	/^static int cpuhp_down_callbacks(unsigned int cpu, struct cpuhp_cpu_state *st,$/;"	f	file:
cpuhp_get_step	cpu.c	/^static struct cpuhp_step *cpuhp_get_step(enum cpuhp_state state)$/;"	f	file:
cpuhp_get_teardown_cb	cpu.c	/^static void *cpuhp_get_teardown_cb(enum cpuhp_state state)$/;"	f	file:
cpuhp_hp_states	cpu.c	/^static struct cpuhp_step cpuhp_hp_states[] = {$/;"	v	typeref:struct:cpuhp_step	file:
cpuhp_hp_states	cpu.c	/^static struct cpuhp_step cpuhp_hp_states[];$/;"	v	typeref:struct:cpuhp_step	file:
cpuhp_invoke_ap_callback	cpu.c	/^cpuhp_invoke_ap_callback(int cpu, enum cpuhp_state state, bool bringup,$/;"	f	file:
cpuhp_invoke_callback	cpu.c	/^static int cpuhp_invoke_callback(unsigned int cpu, enum cpuhp_state state,$/;"	f	file:
cpuhp_is_ap_state	cpu.c	/^static bool cpuhp_is_ap_state(enum cpuhp_state state)$/;"	f	file:
cpuhp_is_atomic_state	cpu.c	/^static bool cpuhp_is_atomic_state(enum cpuhp_state state)$/;"	f	file:
cpuhp_issue_call	cpu.c	/^static int cpuhp_issue_call(int cpu, enum cpuhp_state state, bool bringup,$/;"	f	file:
cpuhp_kick_ap	cpu.c	/^static int cpuhp_kick_ap(struct cpuhp_cpu_state *st, enum cpuhp_state target)$/;"	f	file:
cpuhp_kick_ap_work	cpu.c	/^static int cpuhp_kick_ap_work(unsigned int cpu)$/;"	f	file:
cpuhp_lock_acquire	cpu.c	/^static inline void cpuhp_lock_acquire(bool bringup) { }$/;"	f	file:
cpuhp_lock_acquire	cpu.c	/^static inline void cpuhp_lock_acquire(bool bringup)$/;"	f	file:
cpuhp_lock_release	cpu.c	/^static inline void cpuhp_lock_release(bool bringup) { }$/;"	f	file:
cpuhp_lock_release	cpu.c	/^static inline void cpuhp_lock_release(bool bringup)$/;"	f	file:
cpuhp_offline_cpu_device	cpu.c	/^static void cpuhp_offline_cpu_device(unsigned int cpu)$/;"	f	file:
cpuhp_online_cpu_device	cpu.c	/^static void cpuhp_online_cpu_device(unsigned int cpu)$/;"	f	file:
cpuhp_online_idle	cpu.c	/^void cpuhp_online_idle(enum cpuhp_state state)$/;"	f
cpuhp_report_idle_dead	cpu.c	/^void cpuhp_report_idle_dead(void)$/;"	f
cpuhp_reserve_state	cpu.c	/^static int cpuhp_reserve_state(enum cpuhp_state state)$/;"	f	file:
cpuhp_reset_state	cpu.c	/^cpuhp_reset_state(struct cpuhp_cpu_state *st, enum cpuhp_state prev_state)$/;"	f	file:
cpuhp_rollback_install	cpu.c	/^static void cpuhp_rollback_install(int failedcpu, enum cpuhp_state state,$/;"	f	file:
cpuhp_set_state	cpu.c	/^cpuhp_set_state(struct cpuhp_cpu_state *st, enum cpuhp_state target)$/;"	f	file:
cpuhp_should_run	cpu.c	/^static int cpuhp_should_run(unsigned int cpu)$/;"	f	file:
cpuhp_smt_attr_group	cpu.c	/^static const struct attribute_group cpuhp_smt_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
cpuhp_smt_attrs	cpu.c	/^static struct attribute *cpuhp_smt_attrs[] = {$/;"	v	typeref:struct:attribute	file:
cpuhp_smt_disable	cpu.c	/^int cpuhp_smt_disable(enum cpuhp_smt_control ctrlval)$/;"	f
cpuhp_smt_enable	cpu.c	/^int cpuhp_smt_enable(void)$/;"	f
cpuhp_state_down_map	cpu.c	/^static struct lockdep_map cpuhp_state_down_map =$/;"	v	typeref:struct:lockdep_map	file:
cpuhp_state_up_map	cpu.c	/^static struct lockdep_map cpuhp_state_up_map =$/;"	v	typeref:struct:lockdep_map	file:
cpuhp_step	cpu.c	/^struct cpuhp_step {$/;"	s	file:
cpuhp_store_callbacks	cpu.c	/^static int cpuhp_store_callbacks(enum cpuhp_state state, const char *name,$/;"	f	file:
cpuhp_sysfs_init	cpu.c	/^device_initcall(cpuhp_sysfs_init);$/;"	v
cpuhp_sysfs_init	cpu.c	/^static int __init cpuhp_sysfs_init(void)$/;"	f	file:
cpuhp_tasks_frozen	cpu.c	/^EXPORT_SYMBOL_GPL(cpuhp_tasks_frozen);$/;"	v
cpuhp_tasks_frozen	cpu.c	/^bool cpuhp_tasks_frozen;$/;"	v
cpuhp_thread_fun	cpu.c	/^static void cpuhp_thread_fun(unsigned int cpu)$/;"	f	file:
cpuhp_threads	cpu.c	/^static struct smp_hotplug_thread cpuhp_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
cpuhp_threads_init	cpu.c	/^void __init cpuhp_threads_init(void)$/;"	f
cpuhp_up_callbacks	cpu.c	/^static int cpuhp_up_callbacks(unsigned int cpu, struct cpuhp_cpu_state *st,$/;"	f	file:
cpuidle_idle_call	sched/idle.c	/^static void cpuidle_idle_call(void)$/;"	f	file:
cpumap	irq/matrix.c	/^struct cpumap {$/;"	s	file:
cpumask	sched/sched.h	/^	unsigned long		cpumask[0];		\/* Balance mask *\/$/;"	m	struct:sched_group_capacity
cpumask	sched/sched.h	/^	unsigned long		cpumask[0];$/;"	m	struct:sched_group
cpumask	smp.c	/^	cpumask_var_t		cpumask;$/;"	m	struct:call_function_data	file:
cpumask	trace/ring_buffer.c	/^	cpumask_var_t			cpumask;$/;"	m	struct:ring_buffer	file:
cpumask_ipi	smp.c	/^	cpumask_var_t		cpumask_ipi;$/;"	m	struct:call_function_data	file:
cpumask_of_bp	events/hw_breakpoint.c	/^static const struct cpumask *cpumask_of_bp(struct perf_event *bp)$/;"	f	file:
cpupri	sched/cpupri.h	/^struct cpupri {$/;"	s
cpupri	sched/sched.h	/^	struct cpupri		cpupri;$/;"	m	struct:root_domain	typeref:struct:root_domain::cpupri
cpupri_cleanup	sched/cpupri.c	/^void cpupri_cleanup(struct cpupri *cp)$/;"	f
cpupri_find	sched/cpupri.c	/^int cpupri_find(struct cpupri *cp, struct task_struct *p,$/;"	f
cpupri_init	sched/cpupri.c	/^int cpupri_init(struct cpupri *cp)$/;"	f
cpupri_set	sched/cpupri.c	/^void cpupri_set(struct cpupri *cp, int cpu, int newpri)$/;"	f
cpupri_vec	sched/cpupri.h	/^struct cpupri_vec {$/;"	s
cpus	power/power.h	/^	int			cpus;$/;"	m	struct:swsusp_info
cpus	sched/fair.c	/^	struct cpumask		*cpus;$/;"	m	struct:lb_env	typeref:struct:lb_env::cpumask	file:
cpus	trace/ring_buffer.c	/^	int				cpus;$/;"	m	struct:ring_buffer	file:
cpus_allowed	cgroup/cpuset.c	/^	cpumask_var_t cpus_allowed;$/;"	m	struct:cpuset	file:
cpus_attach	cgroup/cpuset.c	/^static cpumask_var_t cpus_attach;$/;"	v	file:
cpus_read_lock	cpu.c	/^EXPORT_SYMBOL_GPL(cpus_read_lock);$/;"	v
cpus_read_lock	cpu.c	/^void cpus_read_lock(void)$/;"	f
cpus_read_trylock	cpu.c	/^EXPORT_SYMBOL_GPL(cpus_read_trylock);$/;"	v
cpus_read_trylock	cpu.c	/^int cpus_read_trylock(void)$/;"	f
cpus_read_unlock	cpu.c	/^EXPORT_SYMBOL_GPL(cpus_read_unlock);$/;"	v
cpus_read_unlock	cpu.c	/^void cpus_read_unlock(void)$/;"	f
cpus_share_cache	sched/core.c	/^bool cpus_share_cache(int this_cpu, int that_cpu)$/;"	f
cpus_write_lock	cpu.c	/^void cpus_write_lock(void)$/;"	f
cpus_write_unlock	cpu.c	/^void cpus_write_unlock(void)$/;"	f
cpuset	cgroup/cpuset.c	/^struct cpuset {$/;"	s	file:
cpuset_attach	cgroup/cpuset.c	/^static void cpuset_attach(struct cgroup_taskset *tset)$/;"	f	file:
cpuset_attach_old_cs	cgroup/cpuset.c	/^static struct cpuset *cpuset_attach_old_cs;$/;"	v	typeref:struct:cpuset	file:
cpuset_being_rebound	cgroup/cpuset.c	/^static void *cpuset_being_rebound;$/;"	v	file:
cpuset_bind	cgroup/cpuset.c	/^static void cpuset_bind(struct cgroup_subsys_state *root_css)$/;"	f	file:
cpuset_can_attach	cgroup/cpuset.c	/^static int cpuset_can_attach(struct cgroup_taskset *tset)$/;"	f	file:
cpuset_cancel_attach	cgroup/cpuset.c	/^static void cpuset_cancel_attach(struct cgroup_taskset *tset)$/;"	f	file:
cpuset_cgrp_subsys	cgroup/cpuset.c	/^struct cgroup_subsys cpuset_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpuset_change_task_nodemask	cgroup/cpuset.c	/^static void cpuset_change_task_nodemask(struct task_struct *tsk,$/;"	f	file:
cpuset_clone_children	cgroup/cgroup-internal.h	/^	bool		cpuset_clone_children;$/;"	m	struct:cgroup_fs_context
cpuset_common_seq_show	cgroup/cpuset.c	/^static int cpuset_common_seq_show(struct seq_file *sf, void *v)$/;"	f	file:
cpuset_cpu_active	sched/core.c	/^static void cpuset_cpu_active(void)$/;"	f	file:
cpuset_cpu_inactive	sched/core.c	/^static int cpuset_cpu_inactive(unsigned int cpu)$/;"	f	file:
cpuset_cpumask_can_shrink	sched/core.c	/^int cpuset_cpumask_can_shrink(const struct cpumask *cur,$/;"	f
cpuset_cpus_allowed	cgroup/cpuset.c	/^void cpuset_cpus_allowed(struct task_struct *tsk, struct cpumask *pmask)$/;"	f
cpuset_cpus_allowed_fallback	cgroup/cpuset.c	/^void cpuset_cpus_allowed_fallback(struct task_struct *tsk)$/;"	f
cpuset_css_alloc	cgroup/cpuset.c	/^cpuset_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
cpuset_css_free	cgroup/cpuset.c	/^static void cpuset_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
cpuset_css_offline	cgroup/cpuset.c	/^static void cpuset_css_offline(struct cgroup_subsys_state *css)$/;"	f	file:
cpuset_css_online	cgroup/cpuset.c	/^static int cpuset_css_online(struct cgroup_subsys_state *css)$/;"	f	file:
cpuset_filetype_t	cgroup/cpuset.c	/^} cpuset_filetype_t;$/;"	t	typeref:enum:__anon11	file:
cpuset_flagbits_t	cgroup/cpuset.c	/^} cpuset_flagbits_t;$/;"	t	typeref:enum:__anon10	file:
cpuset_for_each_child	cgroup/cpuset.c	280;"	d	file:
cpuset_for_each_descendant_pre	cgroup/cpuset.c	295;"	d	file:
cpuset_force_rebuild	cgroup/cpuset.c	/^void cpuset_force_rebuild(void)$/;"	f
cpuset_fork	cgroup/cpuset.c	/^static void cpuset_fork(struct task_struct *task)$/;"	f	file:
cpuset_fs_context_ops	cgroup/cgroup.c	/^static const struct fs_context_operations cpuset_fs_context_ops = {$/;"	v	typeref:struct:fs_context_operations	file:
cpuset_fs_type	cgroup/cgroup.c	/^static struct file_system_type cpuset_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
cpuset_hotplug_update_tasks	cgroup/cpuset.c	/^static void cpuset_hotplug_update_tasks(struct cpuset *cs, struct tmpmasks *tmp)$/;"	f	file:
cpuset_hotplug_workfn	cgroup/cpuset.c	/^static void cpuset_hotplug_workfn(struct work_struct *work)$/;"	f	file:
cpuset_init	cgroup/cpuset.c	/^int __init cpuset_init(void)$/;"	f
cpuset_init_current_mems_allowed	cgroup/cpuset.c	/^void __init cpuset_init_current_mems_allowed(void)$/;"	f
cpuset_init_fs_context	cgroup/cgroup.c	/^static int cpuset_init_fs_context(struct fs_context *fc)$/;"	f	file:
cpuset_init_smp	cgroup/cpuset.c	/^void __init cpuset_init_smp(void)$/;"	f
cpuset_mem_spread_node	cgroup/cpuset.c	/^EXPORT_SYMBOL_GPL(cpuset_mem_spread_node);$/;"	v
cpuset_mem_spread_node	cgroup/cpuset.c	/^int cpuset_mem_spread_node(void)$/;"	f
cpuset_mems_allowed	cgroup/cpuset.c	/^nodemask_t cpuset_mems_allowed(struct task_struct *tsk)$/;"	f
cpuset_mems_allowed_intersects	cgroup/cpuset.c	/^int cpuset_mems_allowed_intersects(const struct task_struct *tsk1,$/;"	f
cpuset_migrate_mm	cgroup/cpuset.c	/^static void cpuset_migrate_mm(struct mm_struct *mm, const nodemask_t *from,$/;"	f	file:
cpuset_migrate_mm_work	cgroup/cpuset.c	/^struct cpuset_migrate_mm_work {$/;"	s	file:
cpuset_migrate_mm_workfn	cgroup/cpuset.c	/^static void cpuset_migrate_mm_workfn(struct work_struct *work)$/;"	f	file:
cpuset_migrate_mm_wq	cgroup/cpuset.c	/^static struct workqueue_struct *cpuset_migrate_mm_wq;$/;"	v	typeref:struct:workqueue_struct	file:
cpuset_nodemask_valid_mems_allowed	cgroup/cpuset.c	/^int cpuset_nodemask_valid_mems_allowed(nodemask_t *nodemask)$/;"	f
cpuset_post_attach	cgroup/cpuset.c	/^static void cpuset_post_attach(void)$/;"	f	file:
cpuset_print_current_mems_allowed	cgroup/cpuset.c	/^void cpuset_print_current_mems_allowed(void)$/;"	f
cpuset_read_s64	cgroup/cpuset.c	/^static s64 cpuset_read_s64(struct cgroup_subsys_state *css, struct cftype *cft)$/;"	f	file:
cpuset_read_u64	cgroup/cpuset.c	/^static u64 cpuset_read_u64(struct cgroup_subsys_state *css, struct cftype *cft)$/;"	f	file:
cpuset_slab_spread_node	cgroup/cpuset.c	/^int cpuset_slab_spread_node(void)$/;"	f
cpuset_spread_node	cgroup/cpuset.c	/^static int cpuset_spread_node(int *rotor)$/;"	f	file:
cpuset_task_status_allowed	cgroup/cpuset.c	/^void cpuset_task_status_allowed(struct seq_file *m, struct task_struct *task)$/;"	f
cpuset_track_online_nodes	cgroup/cpuset.c	/^static int cpuset_track_online_nodes(struct notifier_block *self,$/;"	f	file:
cpuset_track_online_nodes_nb	cgroup/cpuset.c	/^static struct notifier_block cpuset_track_online_nodes_nb = {$/;"	v	typeref:struct:notifier_block	file:
cpuset_update_active_cpus	cgroup/cpuset.c	/^void cpuset_update_active_cpus(void)$/;"	f
cpuset_update_task_spread_flag	cgroup/cpuset.c	/^static void cpuset_update_task_spread_flag(struct cpuset *cs,$/;"	f	file:
cpuset_wait_for_hotplug	cgroup/cpuset.c	/^void cpuset_wait_for_hotplug(void)$/;"	f
cpuset_write_resmask	cgroup/cpuset.c	/^static ssize_t cpuset_write_resmask(struct kernfs_open_file *of,$/;"	f	file:
cpuset_write_s64	cgroup/cpuset.c	/^static int cpuset_write_s64(struct cgroup_subsys_state *css, struct cftype *cft,$/;"	f	file:
cpuset_write_u64	cgroup/cpuset.c	/^static int cpuset_write_u64(struct cgroup_subsys_state *css, struct cftype *cft,$/;"	f	file:
cpusets_enabled_key	cgroup/cpuset.c	/^DEFINE_STATIC_KEY_FALSE(cpusets_enabled_key);$/;"	v
cpusets_overlap	cgroup/cpuset.c	/^static int cpusets_overlap(struct cpuset *a, struct cpuset *b)$/;"	f	file:
cpusets_pre_enable_key	cgroup/cpuset.c	/^DEFINE_STATIC_KEY_FALSE(cpusets_pre_enable_key);$/;"	v
cpustat	sched/cpuacct.c	/^	struct kernel_cpustat __percpu	*cpustat;$/;"	m	struct:cpuacct	typeref:struct:cpuacct::__percpu	file:
cputime_adjust	sched/cputime.c	/^void cputime_adjust(struct task_cputime *curr, struct prev_cputime *prev,$/;"	f
cpuusage	sched/cpuacct.c	/^	struct cpuacct_usage __percpu	*cpuusage;$/;"	m	struct:cpuacct	typeref:struct:cpuacct::__percpu	file:
cpuusage_read	sched/cpuacct.c	/^static u64 cpuusage_read(struct cgroup_subsys_state *css, struct cftype *cft)$/;"	f	file:
cpuusage_sys_read	sched/cpuacct.c	/^static u64 cpuusage_sys_read(struct cgroup_subsys_state *css,$/;"	f	file:
cpuusage_user_read	sched/cpuacct.c	/^static u64 cpuusage_user_read(struct cgroup_subsys_state *css,$/;"	f	file:
cpuusage_write	sched/cpuacct.c	/^static int cpuusage_write(struct cgroup_subsys_state *css, struct cftype *cft,$/;"	f	file:
crash_exclude_mem_range	kexec_file.c	/^int crash_exclude_mem_range(struct crash_mem *mem,$/;"	f
crash_free_reserved_phys_range	kexec_core.c	/^void __weak crash_free_reserved_phys_range(unsigned long begin,$/;"	f
crash_get_memory_size	kexec_core.c	/^size_t crash_get_memory_size(void)$/;"	f
crash_kexec	kexec_core.c	/^void crash_kexec(struct pt_regs *regs)$/;"	f
crash_kexec_post_notifiers	panic.c	/^bool crash_kexec_post_notifiers;$/;"	v
crash_notes	kexec_core.c	/^note_buf_t __percpu *crash_notes;$/;"	v
crash_notes_memory_init	kexec_core.c	/^static int __init crash_notes_memory_init(void)$/;"	f	file:
crash_notes_memory_init	kexec_core.c	/^subsys_initcall(crash_notes_memory_init);$/;"	v
crash_prepare_elf64_headers	kexec_file.c	/^int crash_prepare_elf64_headers(struct crash_mem *mem, int kernel_map,$/;"	f
crash_save_cpu	kexec_core.c	/^void crash_save_cpu(struct pt_regs *regs, int cpu)$/;"	f
crash_save_vmcoreinfo	crash_core.c	/^void crash_save_vmcoreinfo(void)$/;"	f
crash_save_vmcoreinfo_init	crash_core.c	/^static int __init crash_save_vmcoreinfo_init(void)$/;"	f	file:
crash_save_vmcoreinfo_init	crash_core.c	/^subsys_initcall(crash_save_vmcoreinfo_init);$/;"	v
crash_shrink_memory	kexec_core.c	/^int crash_shrink_memory(unsigned long new_size)$/;"	f
crash_smp_send_stop	panic.c	/^void __weak crash_smp_send_stop(void)$/;"	f
crash_update_vmcoreinfo_safecopy	crash_core.c	/^void crash_update_vmcoreinfo_safecopy(void *ptr)$/;"	f
crashk_low_res	kexec_core.c	/^struct resource crashk_low_res = {$/;"	v	typeref:struct:resource
crashk_res	kexec_core.c	/^struct resource crashk_res = {$/;"	v	typeref:struct:resource
crc	module.c	/^	const s32 *crc;$/;"	m	struct:find_symbol_arg	file:
crc32	power/swap.c	/^	u32	crc32;$/;"	m	struct:swsusp_header	file:
crc32	power/swap.c	/^	u32 *crc32;                               \/* points to handle's crc32 *\/$/;"	m	struct:crc_data	file:
crc32	power/swap.c	/^	u32 crc32;$/;"	m	struct:swap_map_handle	file:
crc32_threadfn	power/swap.c	/^static int crc32_threadfn(void *data)$/;"	f	file:
crc_data	power/swap.c	/^struct crc_data {$/;"	s	file:
create	trace/trace_dynevent.h	/^	int (*create)(int argc, const char *argv[]);$/;"	m	struct:dyn_event_operations
create_actions	trace/trace_events_hist.c	/^static int create_actions(struct hist_trigger_data *hist_data)$/;"	f	file:
create_alias	trace/trace_events_hist.c	/^static struct hist_field *create_alias(struct hist_trigger_data *hist_data,$/;"	f	file:
create_basic_memory_bitmaps	power/snapshot.c	/^int create_basic_memory_bitmaps(void)$/;"	f
create_buf_file_default_callback	relay.c	/^static struct dentry *create_buf_file_default_callback(const char *filename,$/;"	f	file:
create_chunk	audit_tree.c	/^static int create_chunk(struct inode *inode, struct audit_tree *tree)$/;"	f	file:
create_dyn_event	trace/trace_dynevent.c	/^static int create_dyn_event(int argc, char **argv)$/;"	f	file:
create_event_filter	trace/trace_events_filter.c	/^int create_event_filter(struct trace_array *tr,$/;"	f
create_event_toplevel_files	trace/trace_events.c	/^create_event_toplevel_files(struct dentry *parent, struct trace_array *tr)$/;"	f	file:
create_field_var	trace/trace_events_hist.c	/^static struct field_var *create_field_var(struct hist_trigger_data *hist_data,$/;"	f	file:
create_field_var_hist	trace/trace_events_hist.c	/^create_field_var_hist(struct hist_trigger_data *target_hist_data,$/;"	f	file:
create_filter	trace/trace_events_filter.c	/^static int create_filter(struct trace_array *tr,$/;"	f	file:
create_filter_finish	trace/trace_events_filter.c	/^static void create_filter_finish(struct filter_parse_error *pe)$/;"	f	file:
create_filter_start	trace/trace_events_filter.c	/^static int create_filter_start(char *filter_string, bool set_str,$/;"	f	file:
create_hist_data	trace/trace_events_hist.c	/^create_hist_data(unsigned int map_bits,$/;"	f	file:
create_hist_field	trace/trace_events_hist.c	/^static struct hist_field *create_hist_field(struct hist_trigger_data *hist_data,$/;"	f	file:
create_hist_fields	trace/trace_events_hist.c	/^static int create_hist_fields(struct hist_trigger_data *hist_data,$/;"	f	file:
create_hitcount_val	trace/trace_events_hist.c	/^static int create_hitcount_val(struct hist_trigger_data *hist_data)$/;"	f	file:
create_image	power/hibernate.c	/^static int create_image(int platform_mode)$/;"	f	file:
create_key_field	trace/trace_events_hist.c	/^static int create_key_field(struct hist_trigger_data *hist_data,$/;"	f	file:
create_key_fields	trace/trace_events_hist.c	/^static int create_key_fields(struct hist_trigger_data *hist_data,$/;"	f	file:
create_kthread	kthread.c	/^static void create_kthread(struct kthread_create_info *create)$/;"	f	file:
create_local_trace_kprobe	trace/trace_kprobe.c	/^create_local_trace_kprobe(char *func, void *addr, unsigned long offs,$/;"	f
create_local_trace_uprobe	trace/trace_uprobe.c	/^create_local_trace_uprobe(char *name, unsigned long offs,$/;"	f
create_mem_extents	power/snapshot.c	/^static int create_mem_extents(struct list_head *list, gfp_t gfp_mask)$/;"	f	file:
create_new_namespaces	nsproxy.c	/^static struct nsproxy *create_new_namespaces(unsigned long flags,$/;"	f	file:
create_new_subsystem	trace/trace_events.c	/^create_new_subsystem(const char *name)$/;"	f	file:
create_nsproxy	nsproxy.c	/^static inline struct nsproxy *create_nsproxy(void)$/;"	f	file:
create_or_delete_synth_event	trace/trace_events_hist.c	/^static int create_or_delete_synth_event(int argc, char **argv)$/;"	f	file:
create_or_delete_trace_kprobe	trace/trace_kprobe.c	/^static int create_or_delete_trace_kprobe(int argc, char **argv)$/;"	f	file:
create_or_delete_trace_uprobe	trace/trace_uprobe.c	/^static int create_or_delete_trace_uprobe(int argc, char **argv)$/;"	f	file:
create_pid_cachep	pid_namespace.c	/^static struct kmem_cache *create_pid_cachep(unsigned int level)$/;"	f	file:
create_pid_namespace	pid_namespace.c	/^static struct pid_namespace *create_pid_namespace(struct user_namespace *user_ns,$/;"	f	file:
create_proc_profile	profile.c	/^int __ref create_proc_profile(void)$/;"	f
create_proc_profile	profile.c	/^subsys_initcall(create_proc_profile);$/;"	v
create_prof_cpu_mask	profile.c	/^void create_prof_cpu_mask(void)$/;"	f
create_sort_entry	trace/tracing_map.c	/^create_sort_entry(void *key, struct tracing_map_elt *elt)$/;"	f	file:
create_sort_keys	trace/trace_events_hist.c	/^static int create_sort_keys(struct hist_trigger_data *hist_data)$/;"	f	file:
create_system_filter	trace/trace_events_filter.c	/^static int create_system_filter(struct trace_subsystem_dir *dir,$/;"	f	file:
create_target_field_var	trace/trace_events_hist.c	/^create_target_field_var(struct hist_trigger_data *target_hist_data,$/;"	f	file:
create_trace_instances	trace/trace.c	/^static __init void create_trace_instances(struct dentry *d_tracer)$/;"	f	file:
create_trace_option_core_file	trace/trace.c	/^create_trace_option_core_file(struct trace_array *tr,$/;"	f	file:
create_trace_option_file	trace/trace.c	/^create_trace_option_file(struct trace_array *tr,$/;"	f	file:
create_trace_option_files	trace/trace.c	/^create_trace_option_files(struct trace_array *tr, struct tracer *tracer)$/;"	f	file:
create_trace_options_dir	trace/trace.c	/^static void create_trace_options_dir(struct trace_array *tr)$/;"	f	file:
create_tracing_map_fields	trace/trace_events_hist.c	/^static int create_tracing_map_fields(struct hist_trigger_data *hist_data)$/;"	f	file:
create_user_ns	user_namespace.c	/^int create_user_ns(struct cred *new)$/;"	f
create_uts_ns	utsname.c	/^static struct uts_namespace *create_uts_ns(void)$/;"	f	file:
create_val_field	trace/trace_events_hist.c	/^static int create_val_field(struct hist_trigger_data *hist_data,$/;"	f	file:
create_val_fields	trace/trace_events_hist.c	/^static int create_val_fields(struct hist_trigger_data *hist_data,$/;"	f	file:
create_var	trace/trace_events_hist.c	/^static struct hist_field *create_var(struct hist_trigger_data *hist_data,$/;"	f	file:
create_var_field	trace/trace_events_hist.c	/^static int create_var_field(struct hist_trigger_data *hist_data,$/;"	f	file:
create_var_fields	trace/trace_events_hist.c	/^static int create_var_fields(struct hist_trigger_data *hist_data,$/;"	f	file:
create_var_ref	trace/trace_events_hist.c	/^static struct hist_field *create_var_ref(struct hist_trigger_data *hist_data,$/;"	f	file:
create_worker	workqueue.c	/^static struct worker *create_worker(struct worker_pool *pool)$/;"	f	file:
create_zone_bm_rtree	power/snapshot.c	/^static struct mem_zone_bm_rtree *create_zone_bm_rtree(gfp_t gfp_mask,$/;"	f	file:
cred_alloc_blank	cred.c	/^struct cred *cred_alloc_blank(void)$/;"	f
cred_cap_issubset	cred.c	/^static bool cred_cap_issubset(const struct cred *set, const struct cred *subset)$/;"	f	file:
cred_fscmp	cred.c	/^EXPORT_SYMBOL(cred_fscmp);$/;"	v
cred_fscmp	cred.c	/^int cred_fscmp(const struct cred *a, const struct cred *b)$/;"	f
cred_init	cred.c	/^void __init cred_init(void)$/;"	f
cred_jar	cred.c	/^static struct kmem_cache *cred_jar;$/;"	v	typeref:struct:kmem_cache	file:
creds_are_invalid	cred.c	/^EXPORT_SYMBOL(creds_are_invalid);$/;"	v
creds_are_invalid	cred.c	/^bool creds_are_invalid(const struct cred *cred)$/;"	f
critical_end	trace/trace.h	/^	unsigned long		critical_end;$/;"	m	struct:trace_array_cpu
critical_sequence	trace/trace.h	/^	unsigned long		critical_sequence;$/;"	m	struct:trace_array_cpu
critical_start	trace/trace.h	/^	unsigned long		critical_start;$/;"	m	struct:trace_array_cpu
csd	smp.c	/^	call_single_data_t	__percpu *csd;$/;"	m	struct:call_function_data	file:
csd_lock	smp.c	/^static __always_inline void csd_lock(call_single_data_t *csd)$/;"	f	file:
csd_lock_wait	smp.c	/^static __always_inline void csd_lock_wait(call_single_data_t *csd)$/;"	f	file:
csd_unlock	smp.c	/^static __always_inline void csd_unlock(call_single_data_t *csd)$/;"	f	file:
cset	cgroup/cgroup-internal.h	/^	struct css_set		*cset;$/;"	m	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::css_set
cset_cgroup_from_root	cgroup/cgroup.c	/^static struct cgroup *cset_cgroup_from_root(struct css_set *cset,$/;"	f	file:
cset_link	cgroup/cgroup-internal.h	/^	struct list_head	cset_link;$/;"	m	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head
csets	cgroup/cgroup-internal.h	/^	struct list_head	*csets;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head
css	cgroup/cpuset.c	/^	struct cgroup_subsys_state css;$/;"	m	struct:cpuset	typeref:struct:cpuset::cgroup_subsys_state	file:
css	cgroup/legacy_freezer.c	/^	struct cgroup_subsys_state	css;$/;"	m	struct:freezer	typeref:struct:freezer::cgroup_subsys_state	file:
css	cgroup/pids.c	/^	struct cgroup_subsys_state	css;$/;"	m	struct:pids_cgroup	typeref:struct:pids_cgroup::cgroup_subsys_state	file:
css	sched/cpuacct.c	/^	struct cgroup_subsys_state	css;$/;"	m	struct:cpuacct	typeref:struct:cpuacct::cgroup_subsys_state	file:
css	sched/sched.h	/^	struct cgroup_subsys_state css;$/;"	m	struct:task_group	typeref:struct:task_group::cgroup_subsys_state
css_ca	sched/cpuacct.c	/^static inline struct cpuacct *css_ca(struct cgroup_subsys_state *css)$/;"	f	file:
css_clear_dir	cgroup/cgroup.c	/^static void css_clear_dir(struct cgroup_subsys_state *css)$/;"	f	file:
css_create	cgroup/cgroup.c	/^static struct cgroup_subsys_state *css_create(struct cgroup *cgrp,$/;"	f	file:
css_cs	cgroup/cpuset.c	/^static inline struct cpuset *css_cs(struct cgroup_subsys_state *css)$/;"	f	file:
css_free_rwork_fn	cgroup/cgroup.c	/^static void css_free_rwork_fn(struct work_struct *work)$/;"	f	file:
css_freezer	cgroup/legacy_freezer.c	/^static inline struct freezer *css_freezer(struct cgroup_subsys_state *css)$/;"	f	file:
css_from_id	cgroup/cgroup.c	/^struct cgroup_subsys_state *css_from_id(int id, struct cgroup_subsys *ss)$/;"	f
css_has_online_children	cgroup/cgroup.c	/^bool css_has_online_children(struct cgroup_subsys_state *css)$/;"	f
css_killed_ref_fn	cgroup/cgroup.c	/^static void css_killed_ref_fn(struct percpu_ref *ref)$/;"	f	file:
css_killed_work_fn	cgroup/cgroup.c	/^static void css_killed_work_fn(struct work_struct *work)$/;"	f	file:
css_leftmost_descendant	cgroup/cgroup.c	/^css_leftmost_descendant(struct cgroup_subsys_state *pos)$/;"	f	file:
css_next_child	cgroup/cgroup.c	/^struct cgroup_subsys_state *css_next_child(struct cgroup_subsys_state *pos,$/;"	f
css_next_descendant_post	cgroup/cgroup.c	/^css_next_descendant_post(struct cgroup_subsys_state *pos,$/;"	f
css_next_descendant_pre	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(css_next_descendant_pre);$/;"	v
css_next_descendant_pre	cgroup/cgroup.c	/^css_next_descendant_pre(struct cgroup_subsys_state *pos,$/;"	f
css_pids	cgroup/pids.c	/^static struct pids_cgroup *css_pids(struct cgroup_subsys_state *css)$/;"	f	file:
css_populate_dir	cgroup/cgroup.c	/^static int css_populate_dir(struct cgroup_subsys_state *css)$/;"	f	file:
css_rdmacg	cgroup/rdma.c	/^static struct rdma_cgroup *css_rdmacg(struct cgroup_subsys_state *css)$/;"	f	file:
css_release	cgroup/cgroup.c	/^static void css_release(struct percpu_ref *ref)$/;"	f	file:
css_release_work_fn	cgroup/cgroup.c	/^static void css_release_work_fn(struct work_struct *work)$/;"	f	file:
css_rightmost_descendant	cgroup/cgroup.c	/^css_rightmost_descendant(struct cgroup_subsys_state *pos)$/;"	f
css_serial_nr_next	cgroup/cgroup.c	/^static u64 css_serial_nr_next = 1;$/;"	v	file:
css_set_count	cgroup/cgroup.c	/^static int css_set_count	= 1;	\/* 1 for init_css_set *\/$/;"	v	file:
css_set_hash	cgroup/cgroup.c	/^static unsigned long css_set_hash(struct cgroup_subsys_state *css[])$/;"	f	file:
css_set_lock	cgroup/cgroup.c	/^DEFINE_SPINLOCK(css_set_lock);$/;"	v
css_set_lock	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(css_set_lock);$/;"	v
css_set_move_task	cgroup/cgroup.c	/^static void css_set_move_task(struct task_struct *task,$/;"	f	file:
css_set_populated	cgroup/cgroup.c	/^static bool css_set_populated(struct css_set *cset)$/;"	f	file:
css_set_skip_task_iters	cgroup/cgroup.c	/^static void css_set_skip_task_iters(struct css_set *cset,$/;"	f	file:
css_set_threaded	cgroup/cgroup.c	/^static bool css_set_threaded(struct css_set *cset)$/;"	f	file:
css_set_update_populated	cgroup/cgroup.c	/^static void css_set_update_populated(struct css_set *cset, bool populated)$/;"	f	file:
css_task_iter_advance	cgroup/cgroup.c	/^static void css_task_iter_advance(struct css_task_iter *it)$/;"	f	file:
css_task_iter_advance_css_set	cgroup/cgroup.c	/^static void css_task_iter_advance_css_set(struct css_task_iter *it)$/;"	f	file:
css_task_iter_end	cgroup/cgroup.c	/^void css_task_iter_end(struct css_task_iter *it)$/;"	f
css_task_iter_next	cgroup/cgroup.c	/^struct task_struct *css_task_iter_next(struct css_task_iter *it)$/;"	f
css_task_iter_next_css_set	cgroup/cgroup.c	/^static struct css_set *css_task_iter_next_css_set(struct css_task_iter *it)$/;"	f	file:
css_task_iter_skip	cgroup/cgroup.c	/^static void css_task_iter_skip(struct css_task_iter *it,$/;"	f	file:
css_task_iter_start	cgroup/cgroup.c	/^void css_task_iter_start(struct cgroup_subsys_state *css, unsigned int flags,$/;"	f
css_tg	sched/core.c	/^static inline struct task_group *css_tg(struct cgroup_subsys_state *css)$/;"	f	file:
css_tryget_online_from_dir	cgroup/cgroup.c	/^struct cgroup_subsys_state *css_tryget_online_from_dir(struct dentry *dentry,$/;"	f
css_visible	cgroup/cgroup.c	/^static bool css_visible(struct cgroup_subsys_state *css)$/;"	f	file:
ctime	audit.h	/^	struct timespec64   ctime;      \/* time of syscall entry *\/$/;"	m	struct:audit_context	typeref:struct:audit_context::timespec64
ctl_name	sysctl_binary.c	/^	int			ctl_name;$/;"	m	struct:bin_table	file:
ctr_mask	gcov/gcc_3_4.c	/^	unsigned int			ctr_mask;$/;"	m	struct:gcov_info	file:
ctr_type	gcov/gcc_3_4.c	/^	int ctr_type;$/;"	m	struct:type_info	file:
ctrl_alt_del	reboot.c	/^void ctrl_alt_del(void)$/;"	f
ctrs	gcov/gcc_4_7.c	/^	struct gcov_ctr_info ctrs[0];$/;"	m	struct:gcov_fn_info	typeref:struct:gcov_fn_info::gcov_ctr_info	file:
ctx	audit.c	/^	struct audit_context *ctx;	\/* NULL or associated context *\/$/;"	m	struct:audit_buffer	typeref:struct:audit_buffer::audit_context	file:
ctx	events/core.c	/^	struct perf_event_context *ctx;$/;"	m	struct:sched_in_data	typeref:struct:sched_in_data::perf_event_context	file:
ctx_first_active	events/core.c	/^ctx_first_active(struct perf_event_context *ctx)$/;"	f	file:
ctx_flexible_sched_in	events/core.c	/^ctx_flexible_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_pinned_sched_in	events/core.c	/^ctx_pinned_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_resched	events/core.c	/^static void ctx_resched(struct perf_cpu_context *cpuctx,$/;"	f	file:
ctx_sched_in	events/core.c	/^ctx_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_sched_out	events/core.c	/^static void ctx_sched_out(struct perf_event_context *ctx,$/;"	f	file:
ctx_trace	trace/trace_nop.c	/^static struct trace_array	*ctx_trace;$/;"	v	typeref:struct:trace_array	file:
cur	bpf/verifier.c	/^	u32 cur;$/;"	m	struct:idpair	file:
cur	power/power.h	/^	unsigned int	cur;	\/* number of the block of PAGE_SIZE bytes the$/;"	m	struct:snapshot_handle
cur	power/snapshot.c	/^	struct bm_position cur;	\/* most recently used bit position *\/$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::bm_position	file:
cur	power/swap.c	/^	struct swap_map_page *cur;$/;"	m	struct:swap_map_handle	typeref:struct:swap_map_handle::swap_map_page	file:
cur_aux	bpf/verifier.c	/^static struct bpf_insn_aux_data *cur_aux(struct bpf_verifier_env *env)$/;"	f	file:
cur_cset	cgroup/cgroup-internal.h	/^	struct css_set		*cur_cset;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::css_set
cur_ops	locking/locktorture.c	/^	struct lock_torture_ops *cur_ops;$/;"	m	struct:lock_torture_cxt	typeref:struct:lock_torture_cxt::lock_torture_ops	file:
cur_ops	rcu/rcuperf.c	/^static struct rcu_perf_ops *cur_ops;$/;"	v	typeref:struct:rcu_perf_ops	file:
cur_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops *cur_ops;$/;"	v	typeref:struct:rcu_torture_ops	file:
cur_swap	power/swap.c	/^	sector_t cur_swap;$/;"	m	struct:swap_map_handle	file:
cur_task	cgroup/cgroup-internal.h	/^	struct task_struct	*cur_task;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::task_struct
curr	sched/sched.h	/^		int		curr; \/* highest queued rt task prio *\/$/;"	m	struct:rt_rq::__anon84
curr	sched/sched.h	/^		u64		curr;$/;"	m	struct:dl_rq::__anon85
curr	sched/sched.h	/^	struct sched_entity	*curr;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
curr	sched/sched.h	/^	struct task_struct	*curr;$/;"	m	struct:rq	typeref:struct:rq::task_struct
curr_clocksource	time/clocksource.c	/^static struct clocksource *curr_clocksource;$/;"	v	typeref:struct:clocksource	file:
curr_task	sched/core.c	/^struct task_struct *curr_task(int cpu)$/;"	f
current_cgns_cgroup_from_root	cgroup/cgroup.c	/^current_cgns_cgroup_from_root(struct cgroup_root *root)$/;"	f	file:
current_clocksource_show	time/clocksource.c	/^static ssize_t current_clocksource_show(struct device *dev,$/;"	f	file:
current_clocksource_store	time/clocksource.c	/^static ssize_t current_clocksource_store(struct device *dev,$/;"	f	file:
current_context	trace/ring_buffer.c	/^	unsigned int			current_context;$/;"	m	struct:ring_buffer_per_cpu	file:
current_cpuset_is_being_rebound	cgroup/cpuset.c	/^bool current_cpuset_is_being_rebound(void)$/;"	f
current_css_set_cg_links_read	cgroup/debug.c	/^static int current_css_set_cg_links_read(struct seq_file *seq, void *v)$/;"	f	file:
current_css_set_read	cgroup/debug.c	/^static int current_css_set_read(struct seq_file *seq, void *v)$/;"	f	file:
current_css_set_refcount_read	cgroup/debug.c	/^static u64 current_css_set_refcount_read(struct cgroup_subsys_state *css,$/;"	f	file:
current_func	workqueue_internal.h	/^	work_func_t		current_func;	\/* L: current_work's fn *\/$/;"	m	struct:worker
current_in_userns	user_namespace.c	/^EXPORT_SYMBOL(current_in_userns);$/;"	v
current_in_userns	user_namespace.c	/^bool current_in_userns(const struct user_namespace *target_ns)$/;"	f
current_info	gcov/clang.c	/^static struct gcov_info *current_info;$/;"	v	typeref:struct:gcov_info	file:
current_is_async	async.c	/^EXPORT_SYMBOL_GPL(current_is_async);$/;"	v
current_is_async	async.c	/^bool current_is_async(void)$/;"	f
current_is_workqueue_rescuer	workqueue.c	/^bool current_is_workqueue_rescuer(void)$/;"	f
current_pwq	workqueue_internal.h	/^	struct pool_workqueue	*current_pwq; \/* L: current_work's pwq *\/$/;"	m	struct:worker	typeref:struct:worker::pool_workqueue
current_state	audit.h	/^	enum audit_state    state, current_state;$/;"	m	struct:audit_context	typeref:enum:audit_context::
current_trace	trace/trace.h	/^	struct tracer		*current_trace;$/;"	m	struct:trace_array	typeref:struct:trace_array::tracer
current_work	workqueue.c	/^EXPORT_SYMBOL(current_work);$/;"	v
current_work	workqueue.c	/^struct work_struct *current_work(void)$/;"	f
current_work	workqueue_internal.h	/^	struct work_struct	*current_work;	\/* L: work being processed *\/$/;"	m	struct:worker	typeref:struct:worker::work_struct
current_wq_worker	workqueue_internal.h	/^static inline struct worker *current_wq_worker(void)$/;"	f
curtail	rcu/tiny.c	/^	struct rcu_head **curtail;	\/* ->next pointer of last CB. *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head	file:
cwt_wait	workqueue.c	/^struct cwt_wait {$/;"	s	file:
cwt_wakefn	workqueue.c	/^static int cwt_wakefn(wait_queue_entry_t *wait, unsigned mode, int sync, void *key)$/;"	f	file:
cxt	locking/locktorture.c	/^static struct lock_torture_cxt cxt = { 0, 0, false,$/;"	v	typeref:struct:lock_torture_cxt	file:
cyc_to_ns	time/sched_clock.c	/^static inline u64 notrace cyc_to_ns(u64 cyc, u32 mult, u32 shift)$/;"	f	file:
cycle_between	time/timekeeping.c	/^static bool cycle_between(u64 before, u64 test, u64 after)$/;"	f	file:
cycles_at_suspend	time/timekeeping.c	/^static u64 cycles_at_suspend;$/;"	v	file:
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_aux_data	file:
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_pids	typeref:struct:audit_aux_data_pids::audit_aux_data	file:
dah_align	debug/kdb/kdb_support.c	705;"	d	file:
dah_first	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_first_call	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_overhead	debug/kdb/kdb_support.c	706;"	d	file:
dah_used	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_used_max	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dash2underscore	params.c	/^static char dash2underscore(char c)$/;"	f	file:
data	async.c	/^	void			*data;$/;"	m	struct:async_entry	file:
data	bpf/btf.c	/^	void *data;$/;"	m	struct:btf	file:
data	bpf/lpm_trie.c	/^	u8				data[0];$/;"	m	struct:lpm_trie_node	file:
data	bpf/stackmap.c	/^	u64 data[];$/;"	m	struct:stack_map_bucket	file:
data	events/core.c	/^	void *data;$/;"	m	struct:event_function_struct	file:
data	irq/irqdomain.c	/^	void *data;$/;"	m	struct:irqchip_fwid	file:
data	kthread.c	/^	void *data;$/;"	m	struct:kthread	file:
data	kthread.c	/^	void *data;$/;"	m	struct:kthread_create_info	file:
data	livepatch/shadow.c	/^	char data[];$/;"	m	struct:klp_shadow	file:
data	power/snapshot.c	/^	char data[LINKED_PAGE_DATA_SIZE];$/;"	m	struct:linked_page	file:
data	power/snapshot.c	/^	unsigned long *data;$/;"	m	struct:rtree_node	file:
data	seccomp.c	/^	const struct seccomp_data *data;$/;"	m	struct:seccomp_knotif	typeref:struct:seccomp_knotif::seccomp_data	file:
data	smp.c	/^	void			*data;$/;"	m	struct:smp_call_on_cpu_struct	file:
data	stop_machine.c	/^	void			*data;$/;"	m	struct:multi_stop_data	file:
data	trace/ftrace.c	/^	void				*data;$/;"	m	struct:ftrace_func_map	file:
data	trace/ftrace.c	/^	void			*data;$/;"	m	struct:ftrace_func_probe	file:
data	trace/ring_buffer_benchmark.c	/^	char		data[4080];$/;"	m	struct:rb_page	file:
data	trace/trace.h	/^	struct trace_array_cpu __percpu	*data;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::__percpu
data	trace/trace_probe.h	/^		void *data;$/;"	m	union:fetch_insn::__anon21
data_of	power/power.h	148;"	d
data_page_nr	events/ring_buffer.c	/^static int data_page_nr(struct ring_buffer *rb)$/;"	f	file:
data_pages	events/internal.h	/^	void				*data_pages[0];$/;"	m	struct:ring_buffer
data_size	bpf/btf.c	/^	u32 data_size;$/;"	m	struct:btf	file:
data_size	bpf/lpm_trie.c	/^	size_t				data_size;$/;"	m	struct:lpm_trie	file:
datasec_ops	bpf/btf.c	/^static const struct btf_kind_operations datasec_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
dattr_cur	sched/topology.c	/^static struct sched_domain_attr		*dattr_cur;$/;"	v	typeref:struct:sched_domain_attr	file:
dattrs_equal	sched/topology.c	/^static int dattrs_equal(struct sched_domain_attr *cur, int idx_cur,$/;"	f	file:
dbg_activate_sw_breakpoints	debug/debug_core.c	/^int dbg_activate_sw_breakpoints(void)$/;"	f
dbg_deactivate_sw_breakpoints	debug/debug_core.c	/^int dbg_deactivate_sw_breakpoints(void)$/;"	f
dbg_io_get_char	debug/debug_core.c	/^int dbg_io_get_char(void)$/;"	f
dbg_io_ops	debug/debug_core.c	/^struct kgdb_io		*dbg_io_ops;$/;"	v	typeref:struct:kgdb_io
dbg_is_early	debug/debug_core.c	/^bool dbg_is_early = true;$/;"	v
dbg_kdb_mode	debug/debug_core.c	/^int dbg_kdb_mode = 1;$/;"	v
dbg_late_init	debug/debug_core.c	/^void __init dbg_late_init(void)$/;"	f
dbg_module_load_nb	debug/debug_core.c	/^static struct notifier_block dbg_module_load_nb = {$/;"	v	typeref:struct:notifier_block	file:
dbg_notify_reboot	debug/debug_core.c	/^dbg_notify_reboot(struct notifier_block *this, unsigned long code, void *x)$/;"	f	file:
dbg_reboot_notifier	debug/debug_core.c	/^static struct notifier_block dbg_reboot_notifier = {$/;"	v	typeref:struct:notifier_block	file:
dbg_release_bp_slot	events/hw_breakpoint.c	/^int dbg_release_bp_slot(struct perf_event *bp)$/;"	f
dbg_remove_all_break	debug/debug_core.c	/^int dbg_remove_all_break(void)$/;"	f
dbg_remove_sw_break	debug/debug_core.c	/^int dbg_remove_sw_break(unsigned long addr)$/;"	f
dbg_reserve_bp_slot	events/hw_breakpoint.c	/^int dbg_reserve_bp_slot(struct perf_event *bp)$/;"	f
dbg_set_sw_break	debug/debug_core.c	/^int dbg_set_sw_break(unsigned long addr)$/;"	f
dbg_switch_cpu	debug/debug_core.c	/^int dbg_switch_cpu;$/;"	v
dbg_touch_watchdogs	debug/debug_core.c	/^static void dbg_touch_watchdogs(void)$/;"	f	file:
ddir_act	trace/blktrace.c	/^static const u32 ddir_act[2] = { BLK_TC_ACT(BLK_TC_READ),$/;"	v	file:
deactivate_task	sched/core.c	/^void deactivate_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f
dead_events_mask	watchdog_hld.c	/^static struct cpumask dead_events_mask;$/;"	v	typeref:struct:cpumask	file:
deadline	locking/rtmutex_common.h	/^	u64 deadline;$/;"	m	struct:rt_mutex_waiter
deadline_queue_pull_task	sched/deadline.c	/^static inline void deadline_queue_pull_task(struct rq *rq)$/;"	f	file:
deadline_queue_push_tasks	sched/deadline.c	/^static inline void deadline_queue_push_tasks(struct rq *rq)$/;"	f	file:
deadlock_lock	locking/rtmutex_common.h	/^	struct rt_mutex		*deadlock_lock;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex
deadlock_task_pid	locking/rtmutex_common.h	/^	struct pid		*deadlock_task_pid;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::pid
debug	module-internal.h	/^	struct _ddebug *debug;$/;"	m	struct:load_info	typeref:struct:load_info::_ddebug
debug_activate	time/hrtimer.c	/^static inline void debug_activate(struct hrtimer *timer,$/;"	f	file:
debug_align	module.c	71;"	d	file:
debug_align	module.c	73;"	d	file:
debug_alloc_header	debug/kdb/kdb_support.c	/^struct debug_alloc_header {$/;"	s	file:
debug_alloc_pool	debug/kdb/kdb_support.c	/^static char *debug_alloc_pool = (char *)debug_alloc_pool_aligned;$/;"	v	file:
debug_alloc_pool_aligned	debug/kdb/kdb_support.c	/^static u64 debug_alloc_pool_aligned[256*1024\/dah_align];	\/* 256K pool *\/$/;"	v	file:
debug_assert_init	time/timer.c	/^static inline void debug_assert_init(struct timer_list *timer)$/;"	f	file:
debug_atomic_dec	locking/lockdep_internals.h	196;"	d
debug_atomic_dec	locking/lockdep_internals.h	234;"	d
debug_atomic_inc	locking/lockdep_internals.h	191;"	d
debug_atomic_inc	locking/lockdep_internals.h	233;"	d
debug_atomic_read	locking/lockdep_internals.h	201;"	d
debug_atomic_read	locking/lockdep_internals.h	235;"	d
debug_cgrp_subsys	cgroup/debug.c	/^struct cgroup_subsys debug_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
debug_check_no_locks_freed	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(debug_check_no_locks_freed);$/;"	v
debug_check_no_locks_freed	locking/lockdep.c	/^void debug_check_no_locks_freed(const void *mem_from, unsigned long mem_len)$/;"	f
debug_check_no_locks_held	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(debug_check_no_locks_held);$/;"	v
debug_check_no_locks_held	locking/lockdep.c	/^void debug_check_no_locks_held(void)$/;"	f
debug_class_ops_inc	locking/lockdep_internals.h	/^static inline void debug_class_ops_inc(struct lock_class *class)$/;"	f
debug_class_ops_inc	locking/lockdep_internals.h	236;"	d
debug_class_ops_read	locking/lockdep_internals.h	/^static inline unsigned long debug_class_ops_read(struct lock_class *class)$/;"	f
debug_css_alloc	cgroup/debug.c	/^debug_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
debug_css_free	cgroup/debug.c	/^static void debug_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
debug_deactivate	time/hrtimer.c	/^static inline void debug_deactivate(struct hrtimer *timer)$/;"	f	file:
debug_deactivate	time/timer.c	/^static inline void debug_deactivate(struct timer_list *timer)$/;"	f	file:
debug_dma_alloc_coherent	dma/debug.c	/^void debug_dma_alloc_coherent(struct device *dev, size_t size,$/;"	f
debug_dma_assert_idle	dma/debug.c	/^void debug_dma_assert_idle(struct page *page)$/;"	f
debug_dma_dump_mappings	dma/debug.c	/^void debug_dma_dump_mappings(struct device *dev)$/;"	f
debug_dma_free_coherent	dma/debug.c	/^void debug_dma_free_coherent(struct device *dev, size_t size,$/;"	f
debug_dma_map_page	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_map_page);$/;"	v
debug_dma_map_page	dma/debug.c	/^void debug_dma_map_page(struct device *dev, struct page *page, size_t offset,$/;"	f
debug_dma_map_resource	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_map_resource);$/;"	v
debug_dma_map_resource	dma/debug.c	/^void debug_dma_map_resource(struct device *dev, phys_addr_t addr, size_t size,$/;"	f
debug_dma_map_sg	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_map_sg);$/;"	v
debug_dma_map_sg	dma/debug.c	/^void debug_dma_map_sg(struct device *dev, struct scatterlist *sg,$/;"	f
debug_dma_map_single	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_map_single);$/;"	v
debug_dma_map_single	dma/debug.c	/^void debug_dma_map_single(struct device *dev, const void *addr,$/;"	f
debug_dma_mapping_error	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_mapping_error);$/;"	v
debug_dma_mapping_error	dma/debug.c	/^void debug_dma_mapping_error(struct device *dev, dma_addr_t dma_addr)$/;"	f
debug_dma_sync_sg_for_cpu	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_sync_sg_for_cpu);$/;"	v
debug_dma_sync_sg_for_cpu	dma/debug.c	/^void debug_dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,$/;"	f
debug_dma_sync_sg_for_device	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_sync_sg_for_device);$/;"	v
debug_dma_sync_sg_for_device	dma/debug.c	/^void debug_dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,$/;"	f
debug_dma_sync_single_for_cpu	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_sync_single_for_cpu);$/;"	v
debug_dma_sync_single_for_cpu	dma/debug.c	/^void debug_dma_sync_single_for_cpu(struct device *dev, dma_addr_t dma_handle,$/;"	f
debug_dma_sync_single_for_device	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_sync_single_for_device);$/;"	v
debug_dma_sync_single_for_device	dma/debug.c	/^void debug_dma_sync_single_for_device(struct device *dev,$/;"	f
debug_dma_unmap_page	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_unmap_page);$/;"	v
debug_dma_unmap_page	dma/debug.c	/^void debug_dma_unmap_page(struct device *dev, dma_addr_t addr,$/;"	f
debug_dma_unmap_resource	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_unmap_resource);$/;"	v
debug_dma_unmap_resource	dma/debug.c	/^void debug_dma_unmap_resource(struct device *dev, dma_addr_t dma_addr,$/;"	f
debug_dma_unmap_sg	dma/debug.c	/^EXPORT_SYMBOL(debug_dma_unmap_sg);$/;"	v
debug_dma_unmap_sg	dma/debug.c	/^void debug_dma_unmap_sg(struct device *dev, struct scatterlist *sglist,$/;"	f
debug_files	cgroup/debug.c	/^static struct cftype debug_files[] =  {$/;"	v	typeref:struct:cftype	file:
debug_hrtimer_activate	time/hrtimer.c	/^static inline void debug_hrtimer_activate(struct hrtimer *timer,$/;"	f	file:
debug_hrtimer_deactivate	time/hrtimer.c	/^static inline void debug_hrtimer_deactivate(struct hrtimer *timer) { }$/;"	f	file:
debug_hrtimer_deactivate	time/hrtimer.c	/^static inline void debug_hrtimer_deactivate(struct hrtimer *timer)$/;"	f	file:
debug_hrtimer_free	time/hrtimer.c	/^static inline void debug_hrtimer_free(struct hrtimer *timer)$/;"	f	file:
debug_hrtimer_init	time/hrtimer.c	/^static inline void debug_hrtimer_init(struct hrtimer *timer) { }$/;"	f	file:
debug_hrtimer_init	time/hrtimer.c	/^static inline void debug_hrtimer_init(struct hrtimer *timer)$/;"	f	file:
debug_init	time/hrtimer.c	/^debug_init(struct hrtimer *timer, clockid_t clockid,$/;"	f	file:
debug_init	time/timer.c	/^static inline void debug_init(struct timer_list *timer)$/;"	f	file:
debug_kfree	debug/kdb/kdb_support.c	/^void debug_kfree(void *p)$/;"	f
debug_kmalloc	debug/kdb/kdb_support.c	/^void *debug_kmalloc(size_t size, gfp_t flags)$/;"	f
debug_kusage	debug/kdb/kdb_support.c	/^void debug_kusage(void)$/;"	f
debug_legacy_files	cgroup/debug.c	/^static struct cftype debug_legacy_files[] =  {$/;"	v	typeref:struct:cftype	file:
debug_lock	locking/locktorture.c	/^	bool debug_lock;$/;"	m	struct:lock_torture_cxt	file:
debug_lockdep_rcu_enabled	rcu/update.c	/^EXPORT_SYMBOL_GPL(debug_lockdep_rcu_enabled);$/;"	v
debug_lockdep_rcu_enabled	rcu/update.c	/^NOKPROBE_SYMBOL(debug_lockdep_rcu_enabled);$/;"	v
debug_lockdep_rcu_enabled	rcu/update.c	/^int notrace debug_lockdep_rcu_enabled(void)$/;"	f
debug_locks_off_graph_unlock	locking/lockdep.c	/^static inline int debug_locks_off_graph_unlock(void)$/;"	f	file:
debug_mutex_add_waiter	locking/mutex-debug.c	/^void debug_mutex_add_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f
debug_mutex_add_waiter	locking/mutex.h	18;"	d
debug_mutex_free_waiter	locking/mutex-debug.c	/^void debug_mutex_free_waiter(struct mutex_waiter *waiter)$/;"	f
debug_mutex_free_waiter	locking/mutex.h	17;"	d
debug_mutex_init	locking/mutex-debug.c	/^void debug_mutex_init(struct mutex *lock, const char *name,$/;"	f
debug_mutex_init	locking/mutex.h	20;"	d
debug_mutex_lock_common	locking/mutex-debug.c	/^void debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_lock_common	locking/mutex.h	/^debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_unlock	locking/mutex-debug.c	/^void debug_mutex_unlock(struct mutex *lock)$/;"	f
debug_mutex_unlock	locking/mutex.h	19;"	d
debug_mutex_wake_waiter	locking/mutex-debug.c	/^void debug_mutex_wake_waiter(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_wake_waiter	locking/mutex.h	16;"	d
debug_print_probes	tracepoint.c	/^static void debug_print_probes(struct tracepoint_func *funcs)$/;"	f	file:
debug_rcu_head_queue	rcu/rcu.h	/^static inline int debug_rcu_head_queue(struct rcu_head *head)$/;"	f
debug_rcu_head_unqueue	rcu/rcu.h	/^static inline void debug_rcu_head_unqueue(struct rcu_head *head)$/;"	f
debug_rt_mutex_deadlock	locking/rtmutex-debug.c	/^void debug_rt_mutex_deadlock(enum rtmutex_chainwalk chwalk,$/;"	f
debug_rt_mutex_deadlock	locking/rtmutex.h	22;"	d
debug_rt_mutex_detect_deadlock	locking/rtmutex-debug.h	/^static inline bool debug_rt_mutex_detect_deadlock(struct rt_mutex_waiter *waiter,$/;"	f
debug_rt_mutex_detect_deadlock	locking/rtmutex.h	/^static inline bool debug_rt_mutex_detect_deadlock(struct rt_mutex_waiter *w,$/;"	f
debug_rt_mutex_free_waiter	locking/rtmutex-debug.c	/^void debug_rt_mutex_free_waiter(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_free_waiter	locking/rtmutex.h	16;"	d
debug_rt_mutex_init	locking/rtmutex-debug.c	/^void debug_rt_mutex_init(struct rt_mutex *lock, const char *name, struct lock_class_key *key)$/;"	f
debug_rt_mutex_init	locking/rtmutex.h	21;"	d
debug_rt_mutex_init_waiter	locking/rtmutex-debug.c	/^void debug_rt_mutex_init_waiter(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_init_waiter	locking/rtmutex.h	15;"	d
debug_rt_mutex_lock	locking/rtmutex-debug.c	/^void debug_rt_mutex_lock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_lock	locking/rtmutex.h	17;"	d
debug_rt_mutex_print_deadlock	locking/rtmutex-debug.c	/^void debug_rt_mutex_print_deadlock(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_print_deadlock	locking/rtmutex.h	23;"	d
debug_rt_mutex_proxy_lock	locking/rtmutex-debug.c	/^debug_rt_mutex_proxy_lock(struct rt_mutex *lock, struct task_struct *powner)$/;"	f
debug_rt_mutex_proxy_lock	locking/rtmutex.h	18;"	d
debug_rt_mutex_proxy_unlock	locking/rtmutex-debug.c	/^void debug_rt_mutex_proxy_unlock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_proxy_unlock	locking/rtmutex.h	19;"	d
debug_rt_mutex_reset_waiter	locking/rtmutex-debug.h	25;"	d
debug_rt_mutex_reset_waiter	locking/rtmutex.h	24;"	d
debug_rt_mutex_unlock	locking/rtmutex-debug.c	/^void debug_rt_mutex_unlock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_unlock	locking/rtmutex.h	20;"	d
debug_show_all_locks	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(debug_show_all_locks);$/;"	v
debug_show_all_locks	locking/lockdep.c	/^void debug_show_all_locks(void)$/;"	f
debug_show_held_locks	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(debug_show_held_locks);$/;"	v
debug_show_held_locks	locking/lockdep.c	/^void debug_show_held_locks(struct task_struct *task)$/;"	f
debug_spin_lock_after	locking/spinlock_debug.c	/^static inline void debug_spin_lock_after(raw_spinlock_t *lock)$/;"	f	file:
debug_spin_lock_before	locking/spinlock_debug.c	/^debug_spin_lock_before(raw_spinlock_t *lock)$/;"	f	file:
debug_spin_unlock	locking/spinlock_debug.c	/^static inline void debug_spin_unlock(raw_spinlock_t *lock)$/;"	f	file:
debug_table	sysctl.c	/^static struct ctl_table debug_table[] = {$/;"	v	typeref:struct:ctl_table	file:
debug_table	sysctl.c	/^static struct ctl_table debug_table[];$/;"	v	typeref:struct:ctl_table	file:
debug_taskcount_read	cgroup/debug.c	/^static u64 debug_taskcount_read(struct cgroup_subsys_state *css,$/;"	f	file:
debug_timer_activate	time/timer.c	/^static inline void debug_timer_activate(struct timer_list *timer) { }$/;"	f	file:
debug_timer_activate	time/timer.c	/^static inline void debug_timer_activate(struct timer_list *timer)$/;"	f	file:
debug_timer_assert_init	time/timer.c	/^static inline void debug_timer_assert_init(struct timer_list *timer) { }$/;"	f	file:
debug_timer_assert_init	time/timer.c	/^static inline void debug_timer_assert_init(struct timer_list *timer)$/;"	f	file:
debug_timer_deactivate	time/timer.c	/^static inline void debug_timer_deactivate(struct timer_list *timer) { }$/;"	f	file:
debug_timer_deactivate	time/timer.c	/^static inline void debug_timer_deactivate(struct timer_list *timer)$/;"	f	file:
debug_timer_free	time/timer.c	/^static inline void debug_timer_free(struct timer_list *timer)$/;"	f	file:
debug_timer_init	time/timer.c	/^static inline void debug_timer_init(struct timer_list *timer) { }$/;"	f	file:
debug_timer_init	time/timer.c	/^static inline void debug_timer_init(struct timer_list *timer)$/;"	f	file:
debug_work_activate	workqueue.c	/^static inline void debug_work_activate(struct work_struct *work) { }$/;"	f	file:
debug_work_activate	workqueue.c	/^static inline void debug_work_activate(struct work_struct *work)$/;"	f	file:
debug_work_deactivate	workqueue.c	/^static inline void debug_work_deactivate(struct work_struct *work) { }$/;"	f	file:
debug_work_deactivate	workqueue.c	/^static inline void debug_work_deactivate(struct work_struct *work)$/;"	f	file:
debug_write_lock_after	locking/spinlock_debug.c	/^static inline void debug_write_lock_after(rwlock_t *lock)$/;"	f	file:
debug_write_lock_before	locking/spinlock_debug.c	/^static inline void debug_write_lock_before(rwlock_t *lock)$/;"	f	file:
debug_write_unlock	locking/spinlock_debug.c	/^static inline void debug_write_unlock(rwlock_t *lock)$/;"	f	file:
debugfs_add_domain_dir	irq/irqdomain.c	/^static inline void debugfs_add_domain_dir(struct irq_domain *d) { }$/;"	f	file:
debugfs_add_domain_dir	irq/irqdomain.c	/^static void debugfs_add_domain_dir(struct irq_domain *d)$/;"	f	file:
debugfs_kprobe_blacklist_ops	kprobes.c	/^static const struct file_operations debugfs_kprobe_blacklist_ops = {$/;"	v	typeref:struct:file_operations	file:
debugfs_kprobe_init	kprobes.c	/^late_initcall(debugfs_kprobe_init);$/;"	v
debugfs_kprobe_init	kprobes.c	/^static int __init debugfs_kprobe_init(void)$/;"	f	file:
debugfs_kprobes_operations	kprobes.c	/^static const struct file_operations debugfs_kprobes_operations = {$/;"	v	typeref:struct:file_operations	file:
debugfs_remove_domain_dir	irq/irqdomain.c	/^static inline void debugfs_remove_domain_dir(struct irq_domain *d) { }$/;"	f	file:
debugfs_remove_domain_dir	irq/irqdomain.c	/^static void debugfs_remove_domain_dir(struct irq_domain *d)$/;"	f	file:
debuggerinfo	debug/debug_core.h	/^	void			*debuggerinfo;$/;"	m	struct:debuggerinfo_struct
debuggerinfo_struct	debug/debug_core.h	/^struct debuggerinfo_struct {$/;"	s
dec_cgroup_namespaces	cgroup/namespace.c	/^static void dec_cgroup_namespaces(struct ucounts *ucounts)$/;"	f	file:
dec_data	power/swap.c	/^struct dec_data {$/;"	s	file:
dec_dl_deadline	sched/deadline.c	/^static inline void dec_dl_deadline(struct dl_rq *dl_rq, u64 deadline) {}$/;"	f	file:
dec_dl_deadline	sched/deadline.c	/^static void dec_dl_deadline(struct dl_rq *dl_rq, u64 deadline)$/;"	f	file:
dec_dl_migration	sched/deadline.c	/^static void dec_dl_migration(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
dec_dl_migration	sched/deadline.c	/^void dec_dl_migration(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
dec_dl_tasks	sched/deadline.c	/^void dec_dl_tasks(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
dec_pid_namespaces	pid_namespace.c	/^static void dec_pid_namespaces(struct ucounts *ucounts)$/;"	f	file:
dec_rt_group	sched/rt.c	/^dec_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_group	sched/rt.c	/^void dec_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq) {}$/;"	f	file:
dec_rt_migration	sched/rt.c	/^static void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_migration	sched/rt.c	/^void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_prio	sched/rt.c	/^dec_rt_prio(struct rt_rq *rt_rq, int prio)$/;"	f	file:
dec_rt_prio	sched/rt.c	/^static inline void dec_rt_prio(struct rt_rq *rt_rq, int prio) {}$/;"	f	file:
dec_rt_prio_smp	sched/rt.c	/^dec_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio)$/;"	f	file:
dec_rt_prio_smp	sched/rt.c	/^void dec_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio) {}$/;"	f	file:
dec_rt_tasks	sched/rt.c	/^void dec_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_ucount	ucount.c	/^void dec_ucount(struct ucounts *ucounts, enum ucount_type type)$/;"	f
dec_user_namespaces	user_namespace.c	/^static void dec_user_namespaces(struct ucounts *ucounts)$/;"	f	file:
dec_uts_namespaces	utsname.c	/^static void dec_uts_namespaces(struct ucounts *ucounts)$/;"	f	file:
decay_load	sched/pelt.c	/^static u64 decay_load(u64 val, u64 n)$/;"	f	file:
decode_cpu	locking/osq_lock.c	/^static inline struct optimistic_spin_node *decode_cpu(int encoded_cpu_val)$/;"	f	file:
decode_state	power/main.c	/^static suspend_state_t decode_state(const char *buf, size_t n)$/;"	f	file:
decode_suspend_state	power/main.c	/^static suspend_state_t decode_suspend_state(const char *buf, size_t n)$/;"	f	file:
decode_tail	locking/qspinlock.c	/^static inline __pure struct mcs_spinlock *decode_tail(u32 tail)$/;"	f	file:
decrement_wakelocks_number	power/wakelock.c	/^static inline void decrement_wakelocks_number(void) {}$/;"	f	file:
decrement_wakelocks_number	power/wakelock.c	/^static inline void decrement_wakelocks_number(void)$/;"	f	file:
def_dl_bandwidth	sched/deadline.c	/^struct dl_bandwidth def_dl_bandwidth;$/;"	v	typeref:struct:dl_bandwidth
def_root_domain	sched/topology.c	/^struct root_domain def_root_domain;$/;"	v	typeref:struct:root_domain
def_rt_bandwidth	sched/rt.c	/^struct rt_bandwidth def_rt_bandwidth;$/;"	v	typeref:struct:rt_bandwidth
default_affinity_open	irq/proc.c	/^static int default_affinity_open(struct inode *inode, struct file *file)$/;"	f	file:
default_affinity_proc_fops	irq/proc.c	/^static const struct file_operations default_affinity_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
default_affinity_show	irq/proc.c	/^static int default_affinity_show(struct seq_file *m, void *v)$/;"	f	file:
default_affinity_write	irq/proc.c	/^static ssize_t default_affinity_write(struct file *file,$/;"	f	file:
default_arch_gettimeoffset	time/timekeeping.c	/^static u32 default_arch_gettimeoffset(void) { return 0; }$/;"	f	file:
default_bootup_tracer	trace/trace.c	/^static char *default_bootup_tracer;$/;"	v	file:
default_calc_sets	irq/affinity.c	/^static void default_calc_sets(struct irq_affinity *affd, unsigned int affvecs)$/;"	f	file:
default_cfs_period	sched/fair.c	/^static inline u64 default_cfs_period(void)$/;"	f	file:
default_channel_callbacks	relay.c	/^static struct rchan_callbacks default_channel_callbacks = {$/;"	v	typeref:struct:rchan_callbacks	file:
default_dump_filter	fork.c	/^static unsigned long default_dump_filter = MMF_DUMP_FILTER_DEFAULT;$/;"	v	file:
default_idle_call	sched/idle.c	/^void __cpuidle default_idle_call(void)$/;"	f
default_relax_domain_level	sched/topology.c	/^static int default_relax_domain_level = -1;$/;"	v	file:
default_topology	sched/topology.c	/^static struct sched_domain_topology_level default_topology[] = {$/;"	v	typeref:struct:sched_domain_topology_level	file:
default_wake_function	sched/core.c	/^EXPORT_SYMBOL(default_wake_function);$/;"	v
default_wake_function	sched/core.c	/^int default_wake_function(wait_queue_entry_t *curr, unsigned mode, int wake_flags,$/;"	f
defcmd_in_progress	debug/kdb/kdb_main.c	/^static bool defcmd_in_progress;$/;"	v	file:
defcmd_set	debug/kdb/kdb_main.c	/^static struct defcmd_set *defcmd_set;$/;"	v	typeref:struct:defcmd_set	file:
defcmd_set	debug/kdb/kdb_main.c	/^struct defcmd_set {$/;"	s	file:
defcmd_set_count	debug/kdb/kdb_main.c	/^static int defcmd_set_count;$/;"	v	file:
defer_console_output	printk/printk.c	/^void defer_console_output(void)$/;"	f
defer_qs_iw	rcu/tree.h	/^	struct irq_work defer_qs_iw;	\/* Obtain later scheduler attention. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::irq_work
defer_qs_iw_pending	rcu/tree.h	/^	bool defer_qs_iw_pending;	\/* Scheduler attention pending? *\/$/;"	m	struct:rcu_data
deferred_cad	reboot.c	/^static void deferred_cad(struct work_struct *dummy)$/;"	f	file:
deferred_free	rcu/rcutorture.c	/^	void (*deferred_free)(struct rcu_torture *p);$/;"	m	struct:rcu_torture_ops	file:
del_arg	bpf/bpf_lru_list.h	/^	void *del_arg;$/;"	m	struct:bpf_lru
del_event_from_groups	events/core.c	/^del_event_from_groups(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
del_from_htab	bpf/bpf_lru_list.h	/^	del_from_htab_func del_from_htab;$/;"	m	struct:bpf_lru
del_from_htab_func	bpf/bpf_lru_list.h	/^typedef bool (*del_from_htab_func)(void *arg, struct bpf_lru_node *node);$/;"	t
del_named_trigger	trace/trace_events_trigger.c	/^void del_named_trigger(struct event_trigger_data *data)$/;"	f
del_timer	time/timer.c	/^EXPORT_SYMBOL(del_timer);$/;"	v
del_timer	time/timer.c	/^int del_timer(struct timer_list *timer)$/;"	f
del_timer_sync	time/timer.c	/^EXPORT_SYMBOL(del_timer_sync);$/;"	v
del_timer_sync	time/timer.c	/^int del_timer_sync(struct timer_list *timer)$/;"	f
del_usage_links	module.c	/^static void del_usage_links(struct module *mod)$/;"	f	file:
delay	trace/preemptirq_delay_test.c	/^static ulong delay = 100;$/;"	v	file:
delayacct_cache	delayacct.c	/^struct kmem_cache *delayacct_cache;$/;"	v	typeref:struct:kmem_cache
delayacct_end	delayacct.c	/^static void delayacct_end(raw_spinlock_t *lock, u64 *start, u64 *total,$/;"	f	file:
delayacct_init	delayacct.c	/^void delayacct_init(void)$/;"	f
delayacct_on	delayacct.c	/^EXPORT_SYMBOL_GPL(delayacct_on);$/;"	v
delayacct_setup_disable	delayacct.c	/^static int __init delayacct_setup_disable(char *str)$/;"	f	file:
delayed_free	locking/lockdep.c	/^static struct delayed_free {$/;"	s	file:
delayed_free	locking/lockdep.c	/^} delayed_free;$/;"	v	typeref:struct:delayed_free	file:
delayed_free_desc	irq/irqdesc.c	/^static void delayed_free_desc(struct rcu_head *rhp)$/;"	f	file:
delayed_free_pidns	pid_namespace.c	/^static void delayed_free_pidns(struct rcu_head *p)$/;"	f	file:
delayed_free_task	fork.c	/^static __always_inline void delayed_free_task(struct task_struct *tsk)$/;"	f	file:
delayed_put_pid	pid.c	/^static void delayed_put_pid(struct rcu_head *rhp)$/;"	f	file:
delayed_put_task_struct	exit.c	/^static void delayed_put_task_struct(struct rcu_head *rhp)$/;"	f	file:
delayed_ref_ctr_inc	events/uprobes.c	/^static int delayed_ref_ctr_inc(struct vm_area_struct *vma)$/;"	f	file:
delayed_uprobe	events/uprobes.c	/^struct delayed_uprobe {$/;"	s	file:
delayed_uprobe_add	events/uprobes.c	/^static int delayed_uprobe_add(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
delayed_uprobe_check	events/uprobes.c	/^delayed_uprobe_check(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
delayed_uprobe_delete	events/uprobes.c	/^static void delayed_uprobe_delete(struct delayed_uprobe *du)$/;"	f	file:
delayed_uprobe_remove	events/uprobes.c	/^static void delayed_uprobe_remove(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
delayed_work_timer_fn	workqueue.c	/^EXPORT_SYMBOL(delayed_work_timer_fn);$/;"	v
delayed_work_timer_fn	workqueue.c	/^void delayed_work_timer_fn(struct timer_list *t)$/;"	f
delayed_works	workqueue.c	/^	struct list_head	delayed_works;	\/* L: delayed works *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
delegate_show	cgroup/cgroup.c	/^static ssize_t delegate_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
delete_all_elements	bpf/hashtab.c	/^static void delete_all_elements(struct bpf_htab *htab)$/;"	f	file:
delete_clock	time/posix-clock.c	/^static void delete_clock(struct kref *kref)$/;"	f	file:
delete_irq_desc	irq/irqdesc.c	/^static void delete_irq_desc(unsigned int irq)$/;"	f	file:
delete_module	sys_ni.c	/^COND_SYSCALL(delete_module);$/;"	v
delete_uprobe	events/uprobes.c	/^static void delete_uprobe(struct uprobe *uprobe)$/;"	f	file:
delmask	cgroup/cpuset.c	/^	cpumask_var_t addmask, delmask;	\/* For partition root *\/$/;"	m	struct:tmpmasks	file:
delta	trace/ring_buffer.c	/^	u64			delta;$/;"	m	struct:rb_event_info	file:
dentry	gcov/fs.c	/^	struct dentry *dentry;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::dentry	file:
dentry	relay.c	/^	struct dentry *dentry;$/;"	m	struct:rchan_percpu_buf_dispatcher	typeref:struct:rchan_percpu_buf_dispatcher::dentry	file:
deprecated_sysctl_warning	sysctl_binary.c	/^static void deprecated_sysctl_warning(const int *name, int nlen)$/;"	f	file:
depth	trace/trace_functions_graph.c	/^	int		depth;$/;"	m	struct:fgraph_cpu_data	file:
depth_irq	trace/trace_functions_graph.c	/^	int		depth_irq;$/;"	m	struct:fgraph_cpu_data	file:
dequeue_dl_entity	sched/deadline.c	/^static void dequeue_dl_entity(struct sched_dl_entity *dl_se)$/;"	f	file:
dequeue_entity	sched/fair.c	/^dequeue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
dequeue_load_avg	sched/fair.c	/^dequeue_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se) { }$/;"	f	file:
dequeue_load_avg	sched/fair.c	/^dequeue_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
dequeue_pushable_dl_task	sched/deadline.c	/^static void dequeue_pushable_dl_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_pushable_dl_task	sched/deadline.c	/^void dequeue_pushable_dl_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_pushable_task	sched/rt.c	/^static inline void dequeue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_pushable_task	sched/rt.c	/^static void dequeue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_rt_entity	sched/rt.c	/^static void dequeue_rt_entity(struct sched_rt_entity *rt_se, unsigned int flags)$/;"	f	file:
dequeue_rt_stack	sched/rt.c	/^static void dequeue_rt_stack(struct sched_rt_entity *rt_se, unsigned int flags)$/;"	f	file:
dequeue_runnable_load_avg	sched/fair.c	/^dequeue_runnable_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se) { }$/;"	f	file:
dequeue_runnable_load_avg	sched/fair.c	/^dequeue_runnable_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
dequeue_signal	signal.c	/^EXPORT_SYMBOL_GPL(dequeue_signal);$/;"	v
dequeue_signal	signal.c	/^int dequeue_signal(struct task_struct *tsk, sigset_t *mask, kernel_siginfo_t *info)$/;"	f
dequeue_synchronous_signal	signal.c	/^static int dequeue_synchronous_signal(kernel_siginfo_t *info)$/;"	f	file:
dequeue_task	sched/core.c	/^static inline void dequeue_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task	sched/sched.h	/^	void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
dequeue_task_dl	sched/deadline.c	/^static void dequeue_task_dl(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_fair	sched/fair.c	/^static void dequeue_task_fair(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_idle	sched/idle.c	/^dequeue_task_idle(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_rt	sched/rt.c	/^static void dequeue_task_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_stop	sched/stop_task.c	/^dequeue_task_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_top_rt_rq	sched/rt.c	/^dequeue_top_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
deref_curr_numa_group	sched/fair.c	/^static struct numa_group *deref_curr_numa_group(struct task_struct *p)$/;"	f	file:
deref_task_numa_group	sched/fair.c	/^static struct numa_group *deref_task_numa_group(struct task_struct *p)$/;"	f	file:
dereference_module_function_descriptor	module.c	/^void * __weak dereference_module_function_descriptor(struct module *mod,$/;"	f
desc	workqueue_internal.h	/^	char			desc[WORKER_DESC_LEN];$/;"	m	struct:worker
desc_set_defaults	irq/irqdesc.c	/^static void desc_set_defaults(unsigned int irq, struct irq_desc *desc, int node,$/;"	f	file:
desc_smp_init	irq/irqdesc.c	/^desc_smp_init(struct irq_desc *desc, int node, const struct cpumask *affinity) { }$/;"	f	file:
desc_smp_init	irq/irqdesc.c	/^static void desc_smp_init(struct irq_desc *desc, int node,$/;"	f	file:
descending	trace/tracing_map.h	/^	bool				descending;$/;"	m	struct:tracing_map_sort_key
deskew	gcov/fs.c	/^static const char *deskew(const char *basename)$/;"	f	file:
dest_cpu	sched/core.c	/^	int dest_cpu;$/;"	m	struct:migration_arg	file:
destroy_actions	trace/trace_events_hist.c	/^static void destroy_actions(struct hist_trigger_data *hist_data)$/;"	f	file:
destroy_cfs_bandwidth	sched/fair.c	/^static inline void destroy_cfs_bandwidth(struct cfs_bandwidth *cfs_b) {}$/;"	f	file:
destroy_cfs_bandwidth	sched/fair.c	/^static void destroy_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f	file:
destroy_delayed_work_on_stack	workqueue.c	/^EXPORT_SYMBOL_GPL(destroy_delayed_work_on_stack);$/;"	v
destroy_delayed_work_on_stack	workqueue.c	/^void destroy_delayed_work_on_stack(struct delayed_work *work)$/;"	f
destroy_dwork	cgroup/cgroup-v1.c	/^	struct delayed_work destroy_dwork;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::delayed_work	file:
destroy_field_var	trace/trace_events_hist.c	/^static void destroy_field_var(struct field_var *field_var)$/;"	f	file:
destroy_field_var_hists	trace/trace_events_hist.c	/^static void destroy_field_var_hists(struct hist_trigger_data *hist_data)$/;"	f	file:
destroy_field_vars	trace/trace_events_hist.c	/^static void destroy_field_vars(struct hist_trigger_data *hist_data)$/;"	f	file:
destroy_header_iter	trace/trace_mmiotrace.c	/^static void destroy_header_iter(struct header_iter *hiter)$/;"	f	file:
destroy_hist_data	trace/trace_events_hist.c	/^static void destroy_hist_data(struct hist_trigger_data *hist_data)$/;"	f	file:
destroy_hist_field	trace/trace_events_hist.c	/^static void destroy_hist_field(struct hist_field *hist_field,$/;"	f	file:
destroy_hist_fields	trace/trace_events_hist.c	/^static void destroy_hist_fields(struct hist_trigger_data *hist_data)$/;"	f	file:
destroy_hist_trigger_attrs	trace/trace_events_hist.c	/^static void destroy_hist_trigger_attrs(struct hist_trigger_attrs *attrs)$/;"	f	file:
destroy_hrtimer_on_stack	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(destroy_hrtimer_on_stack);$/;"	v
destroy_hrtimer_on_stack	time/hrtimer.c	/^void destroy_hrtimer_on_stack(struct hrtimer *timer)$/;"	f
destroy_local_trace_kprobe	trace/trace_kprobe.c	/^void destroy_local_trace_kprobe(struct trace_event_call *event_call)$/;"	f
destroy_local_trace_uprobe	trace/trace_uprobe.c	/^void destroy_local_trace_uprobe(struct trace_event_call *event_call)$/;"	f
destroy_params	params.c	/^void destroy_params(const struct kernel_param *params, unsigned num)$/;"	f
destroy_perf_domain_rcu	sched/topology.c	/^static void destroy_perf_domain_rcu(struct rcu_head *rp)$/;"	f	file:
destroy_pid_namespace	pid_namespace.c	/^static void destroy_pid_namespace(struct pid_namespace *ns)$/;"	f	file:
destroy_rcu_head	rcu/update.c	/^EXPORT_SYMBOL_GPL(destroy_rcu_head);$/;"	v
destroy_rcu_head	rcu/update.c	/^void destroy_rcu_head(struct rcu_head *head)$/;"	f
destroy_rcu_head_on_stack	rcu/update.c	/^EXPORT_SYMBOL_GPL(destroy_rcu_head_on_stack);$/;"	v
destroy_rcu_head_on_stack	rcu/update.c	/^void destroy_rcu_head_on_stack(struct rcu_head *head)$/;"	f
destroy_rt_bandwidth	sched/rt.c	/^static void destroy_rt_bandwidth(struct rt_bandwidth *rt_b)$/;"	f	file:
destroy_sched_domain	sched/topology.c	/^static void destroy_sched_domain(struct sched_domain *sd)$/;"	f	file:
destroy_sched_domains	sched/topology.c	/^static void destroy_sched_domains(struct sched_domain *sd)$/;"	f	file:
destroy_sched_domains_rcu	sched/topology.c	/^static void destroy_sched_domains_rcu(struct rcu_head *rcu)$/;"	f	file:
destroy_session	trace/trace_stat.c	/^static void destroy_session(struct stat_session *session)$/;"	f	file:
destroy_sort_entry	trace/tracing_map.c	/^static void destroy_sort_entry(struct tracing_map_sort_entry *entry)$/;"	f	file:
destroy_timer_on_stack	time/timer.c	/^EXPORT_SYMBOL_GPL(destroy_timer_on_stack);$/;"	v
destroy_timer_on_stack	time/timer.c	/^void destroy_timer_on_stack(struct timer_list *timer)$/;"	f
destroy_work_on_stack	workqueue.c	/^EXPORT_SYMBOL_GPL(destroy_work_on_stack);$/;"	v
destroy_work_on_stack	workqueue.c	/^void destroy_work_on_stack(struct work_struct *work)$/;"	f
destroy_worker	workqueue.c	/^static void destroy_worker(struct worker *worker)$/;"	f	file:
destroy_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(destroy_workqueue);$/;"	v
destroy_workqueue	workqueue.c	/^void destroy_workqueue(struct workqueue_struct *wq)$/;"	f
detach_completion	workqueue.c	/^	struct completion	*detach_completion; \/* all workers detached *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::completion	file:
detach_destroy_domains	sched/topology.c	/^static void detach_destroy_domains(const struct cpumask *cpu_map)$/;"	f	file:
detach_entity_cfs_rq	sched/fair.c	/^static void detach_entity_cfs_rq(struct sched_entity *se)$/;"	f	file:
detach_entity_load_avg	sched/fair.c	/^detach_entity_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se) {}$/;"	f	file:
detach_entity_load_avg	sched/fair.c	/^static void detach_entity_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
detach_if_pending	time/timer.c	/^static int detach_if_pending(struct timer_list *timer, struct timer_base *base,$/;"	f	file:
detach_one_task	sched/fair.c	/^static struct task_struct *detach_one_task(struct lb_env *env)$/;"	f	file:
detach_pid	pid.c	/^void detach_pid(struct task_struct *task, enum pid_type type)$/;"	f
detach_sb_event	events/core.c	/^static void detach_sb_event(struct perf_event *event)$/;"	f	file:
detach_task	sched/fair.c	/^static void detach_task(struct task_struct *p, struct lb_env *env)$/;"	f	file:
detach_task_cfs_rq	sched/fair.c	/^static void detach_task_cfs_rq(struct task_struct *p)$/;"	f	file:
detach_tasks	sched/fair.c	/^static int detach_tasks(struct lb_env *env)$/;"	f	file:
detach_timer	time/timer.c	/^static inline void detach_timer(struct timer_list *timer, bool clear_pending)$/;"	f	file:
detect_dups	trace/tracing_map.c	/^static void detect_dups(struct tracing_map_sort_entry **sort_entries,$/;"	f	file:
dev	audit.h	/^	dev_t			dev;$/;"	m	struct:audit_names
dev	audit_fsnotify.c	/^	dev_t dev;		\/* associated superblock device *\/$/;"	m	struct:audit_fsnotify_mark	file:
dev	audit_watch.c	/^	dev_t			dev;	\/* associated superblock device *\/$/;"	m	struct:audit_watch	file:
dev	bpf/devmap.c	/^	struct net_device *dev; \/* must be first member, due to tracepoint *\/$/;"	m	struct:bpf_dtab_netdev	typeref:struct:bpf_dtab_netdev::net_device	file:
dev	dma/debug.c	/^	struct device    *dev;$/;"	m	struct:dma_debug_entry	typeref:struct:dma_debug_entry::device	file:
dev	power/console.c	/^	struct device *dev;$/;"	m	struct:pm_vt_switch	typeref:struct:pm_vt_switch::device	file:
dev	power/user.c	/^	u32 dev;$/;"	m	struct:compat_resume_swap_area	file:
dev	trace/trace_mmiotrace.c	/^	struct pci_dev *dev;$/;"	m	struct:header_iter	typeref:struct:header_iter::pci_dev	file:
dev	workqueue.c	/^	struct device			dev;$/;"	m	struct:wq_device	typeref:struct:wq_device::device	file:
dev_addr	dma/debug.c	/^	u64              dev_addr;$/;"	m	struct:dma_debug_entry	file:
dev_get_coherent_memory	dma/coherent.c	/^static inline struct dma_coherent_mem *dev_get_coherent_memory(struct device *dev)$/;"	f	file:
dev_id	irq/devres.c	/^	void *dev_id;$/;"	m	struct:irq_devres	file:
dev_map_alloc	bpf/devmap.c	/^static struct bpf_map *dev_map_alloc(union bpf_attr *attr)$/;"	f	file:
dev_map_delete_elem	bpf/devmap.c	/^static int dev_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
dev_map_enqueue	bpf/devmap.c	/^int dev_map_enqueue(struct bpf_dtab_netdev *dst, struct xdp_buff *xdp,$/;"	f
dev_map_flush_old	bpf/devmap.c	/^static void dev_map_flush_old(struct bpf_dtab_netdev *dev)$/;"	f	file:
dev_map_free	bpf/devmap.c	/^static void dev_map_free(struct bpf_map *map)$/;"	f	file:
dev_map_generic_redirect	bpf/devmap.c	/^int dev_map_generic_redirect(struct bpf_dtab_netdev *dst, struct sk_buff *skb,$/;"	f
dev_map_get_next_key	bpf/devmap.c	/^static int dev_map_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f	file:
dev_map_init	bpf/devmap.c	/^static int __init dev_map_init(void)$/;"	f	file:
dev_map_init	bpf/devmap.c	/^subsys_initcall(dev_map_init);$/;"	v
dev_map_lookup_elem	bpf/devmap.c	/^static void *dev_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
dev_map_notification	bpf/devmap.c	/^static int dev_map_notification(struct notifier_block *notifier,$/;"	f	file:
dev_map_notifier	bpf/devmap.c	/^static struct notifier_block dev_map_notifier = {$/;"	v	typeref:struct:notifier_block	file:
dev_map_ops	bpf/devmap.c	/^const struct bpf_map_ops dev_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
dev_map_update_elem	bpf/devmap.c	/^static int dev_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
dev_node	cgroup/rdma.c	/^	struct list_head	dev_node;$/;"	m	struct:rdmacg_resource_pool	typeref:struct:rdmacg_resource_pool::list_head	file:
dev_rx	bpf/devmap.c	/^	struct net_device *dev_rx;$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::net_device	file:
dev_table	sysctl.c	/^static struct ctl_table dev_table[] = {$/;"	v	typeref:struct:ctl_table	file:
dev_table	sysctl.c	/^static struct ctl_table dev_table[];$/;"	v	typeref:struct:ctl_table	file:
dev_to_wq	workqueue.c	/^static struct workqueue_struct *dev_to_wq(struct device *dev)$/;"	f	file:
devent	trace/trace_events_hist.c	/^	struct dyn_event			devent;$/;"	m	struct:synth_event	typeref:struct:synth_event::dyn_event	file:
devent	trace/trace_kprobe.c	/^	struct dyn_event	devent;$/;"	m	struct:trace_kprobe	typeref:struct:trace_kprobe::dyn_event	file:
devent	trace/trace_uprobe.c	/^	struct dyn_event		devent;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::dyn_event	file:
device	cgroup/rdma.c	/^	struct rdmacg_device	*device;$/;"	m	struct:rdmacg_resource_pool	typeref:struct:rdmacg_resource_pool::rdmacg_device	file:
device_base	dma/coherent.c	/^	dma_addr_t	device_base;$/;"	m	struct:dma_coherent_mem	file:
device_clocksource	time/clocksource.c	/^static struct device device_clocksource = {$/;"	v	typeref:struct:device	file:
device_dma_allocations	dma/debug.c	/^static int device_dma_allocations(struct device *dev, struct dma_debug_entry **out_entry)$/;"	f	file:
device_id	dma.c	/^	const char *device_id;$/;"	m	struct:dma_chan	file:
devkmsg_emit	printk/printk.c	/^int devkmsg_emit(int facility, int level, const char *fmt, ...)$/;"	f
devkmsg_llseek	printk/printk.c	/^static loff_t devkmsg_llseek(struct file *file, loff_t offset, int whence)$/;"	f	file:
devkmsg_log	printk/printk.c	/^static unsigned int __read_mostly devkmsg_log = DEVKMSG_LOG_MASK_DEFAULT;$/;"	v	file:
devkmsg_log_bits	printk/printk.c	/^enum devkmsg_log_bits {$/;"	g	file:
devkmsg_log_masks	printk/printk.c	/^enum devkmsg_log_masks {$/;"	g	file:
devkmsg_log_str	printk/printk.c	/^char devkmsg_log_str[DEVKMSG_STR_MAX_SIZE] = "ratelimit";$/;"	v
devkmsg_open	printk/printk.c	/^static int devkmsg_open(struct inode *inode, struct file *file)$/;"	f	file:
devkmsg_poll	printk/printk.c	/^static __poll_t devkmsg_poll(struct file *file, poll_table *wait)$/;"	f	file:
devkmsg_read	printk/printk.c	/^static ssize_t devkmsg_read(struct file *file, char __user *buf,$/;"	f	file:
devkmsg_release	printk/printk.c	/^static int devkmsg_release(struct inode *inode, struct file *file)$/;"	f	file:
devkmsg_sysctl_set_loglvl	printk/printk.c	/^int devkmsg_sysctl_set_loglvl(struct ctl_table *table, int write,$/;"	f
devkmsg_user	printk/printk.c	/^struct devkmsg_user {$/;"	s	file:
devkmsg_write	printk/printk.c	/^static ssize_t devkmsg_write(struct kiocb *iocb, struct iov_iter *from)$/;"	f	file:
devm_free_irq	irq/devres.c	/^EXPORT_SYMBOL(devm_free_irq);$/;"	v
devm_free_irq	irq/devres.c	/^void devm_free_irq(struct device *dev, unsigned int irq, void *dev_id)$/;"	f
devm_irq_alloc_generic_chip	irq/devres.c	/^EXPORT_SYMBOL_GPL(devm_irq_alloc_generic_chip);$/;"	v
devm_irq_alloc_generic_chip	irq/devres.c	/^devm_irq_alloc_generic_chip(struct device *dev, const char *name, int num_ct,$/;"	f
devm_irq_desc_release	irq/devres.c	/^static void devm_irq_desc_release(struct device *dev, void *res)$/;"	f	file:
devm_irq_match	irq/devres.c	/^static int devm_irq_match(struct device *dev, void *res, void *data)$/;"	f	file:
devm_irq_release	irq/devres.c	/^static void devm_irq_release(struct device *dev, void *res)$/;"	f	file:
devm_irq_remove_generic_chip	irq/devres.c	/^static void devm_irq_remove_generic_chip(struct device *dev, void *res)$/;"	f	file:
devm_irq_setup_generic_chip	irq/devres.c	/^EXPORT_SYMBOL_GPL(devm_irq_setup_generic_chip);$/;"	v
devm_irq_setup_generic_chip	irq/devres.c	/^int devm_irq_setup_generic_chip(struct device *dev, struct irq_chip_generic *gc,$/;"	f
devm_irq_sim_init	irq/irq_sim.c	/^EXPORT_SYMBOL_GPL(devm_irq_sim_init);$/;"	v
devm_irq_sim_init	irq/irq_sim.c	/^int devm_irq_sim_init(struct device *dev, struct irq_sim *sim,$/;"	f
devm_irq_sim_release	irq/irq_sim.c	/^static void devm_irq_sim_release(struct device *dev, void *res)$/;"	f	file:
devm_memremap	iomem.c	/^EXPORT_SYMBOL(devm_memremap);$/;"	v
devm_memremap	iomem.c	/^void *devm_memremap(struct device *dev, resource_size_t offset,$/;"	f
devm_memremap_match	iomem.c	/^static int devm_memremap_match(struct device *dev, void *res, void *match_data)$/;"	f	file:
devm_memremap_release	iomem.c	/^static void devm_memremap_release(struct device *dev, void *res)$/;"	f	file:
devm_memunmap	iomem.c	/^EXPORT_SYMBOL(devm_memunmap);$/;"	v
devm_memunmap	iomem.c	/^void devm_memunmap(struct device *dev, void *addr)$/;"	f
devm_region_match	resource.c	/^static int devm_region_match(struct device *dev, void *res, void *match_data)$/;"	f	file:
devm_region_release	resource.c	/^static void devm_region_release(struct device *dev, void *res)$/;"	f	file:
devm_register_reboot_notifier	reboot.c	/^EXPORT_SYMBOL(devm_register_reboot_notifier);$/;"	v
devm_register_reboot_notifier	reboot.c	/^int devm_register_reboot_notifier(struct device *dev, struct notifier_block *nb)$/;"	f
devm_release_resource	resource.c	/^EXPORT_SYMBOL(devm_release_resource);$/;"	v
devm_release_resource	resource.c	/^void devm_release_resource(struct device *dev, struct resource *new)$/;"	f
devm_request_any_context_irq	irq/devres.c	/^EXPORT_SYMBOL(devm_request_any_context_irq);$/;"	v
devm_request_any_context_irq	irq/devres.c	/^int devm_request_any_context_irq(struct device *dev, unsigned int irq,$/;"	f
devm_request_free_mem_region	resource.c	/^EXPORT_SYMBOL_GPL(devm_request_free_mem_region);$/;"	v
devm_request_free_mem_region	resource.c	/^struct resource *devm_request_free_mem_region(struct device *dev,$/;"	f
devm_request_resource	resource.c	/^EXPORT_SYMBOL(devm_request_resource);$/;"	v
devm_request_resource	resource.c	/^int devm_request_resource(struct device *dev, struct resource *root,$/;"	f
devm_request_threaded_irq	irq/devres.c	/^EXPORT_SYMBOL(devm_request_threaded_irq);$/;"	v
devm_request_threaded_irq	irq/devres.c	/^int devm_request_threaded_irq(struct device *dev, unsigned int irq,$/;"	f
devm_resource_match	resource.c	/^static int devm_resource_match(struct device *dev, void *res, void *data)$/;"	f	file:
devm_resource_release	resource.c	/^static void devm_resource_release(struct device *dev, void *ptr)$/;"	f	file:
devm_unregister_reboot_notifier	reboot.c	/^static void devm_unregister_reboot_notifier(struct device *dev, void *res)$/;"	f	file:
dfl_files	cgroup/cpuset.c	/^static struct cftype dfl_files[] = {$/;"	v	typeref:struct:cftype	file:
dfl_pwq	workqueue.c	/^	struct pool_workqueue	*dfl_pwq;	\/* PW: only for unbound wqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::pool_workqueue	file:
dfl_pwq	workqueue.c	/^	struct pool_workqueue	*dfl_pwq;$/;"	m	struct:apply_wqattrs_ctx	typeref:struct:apply_wqattrs_ctx::pool_workqueue	file:
dfs_irq_ops	irq/debugfs.c	/^static const struct file_operations dfs_irq_ops = {$/;"	v	typeref:struct:file_operations	file:
dict_len	printk/printk.c	/^	u16 dict_len;		\/* length of dictionary buffer *\/$/;"	m	struct:printk_log	file:
did_panic	hung_task.c	/^static int __read_mostly did_panic;$/;"	v	file:
dir	gcov/gcov.h	/^	} dir;$/;"	m	struct:gcov_link	typeref:enum:gcov_link::__anon20
dir	module.c	/^	struct kobject *dir;$/;"	m	struct:module_notes_attrs	typeref:struct:module_notes_attrs::kobject	file:
dir	trace/trace.h	/^	struct dentry		*dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
dir2name	dma/debug.c	/^static const char *dir2name[4] = { "DMA_BIDIRECTIONAL", "DMA_TO_DEVICE",$/;"	v	file:
direction	dma/debug.c	/^	int              direction;$/;"	m	struct:dma_debug_entry	file:
dirty_bytes_min	sysctl.c	/^static unsigned long dirty_bytes_min = 2 * PAGE_SIZE;$/;"	v	file:
dirty_sched_domain_sysctl	sched/debug.c	/^void dirty_sched_domain_sysctl(int cpu)$/;"	f
dirty_sched_domain_sysctl	sched/sched.h	/^static inline void dirty_sched_domain_sysctl(int cpu)$/;"	f
disable_branch_tracing	trace/trace_branch.c	/^void disable_branch_tracing(void)$/;"	f
disable_hardirq	irq/manage.c	/^EXPORT_SYMBOL_GPL(disable_hardirq);$/;"	v
disable_hardirq	irq/manage.c	/^bool disable_hardirq(unsigned int irq)$/;"	f
disable_irq	irq/manage.c	/^EXPORT_SYMBOL(disable_irq);$/;"	v
disable_irq	irq/manage.c	/^void disable_irq(unsigned int irq)$/;"	f
disable_irq_nosync	irq/manage.c	/^EXPORT_SYMBOL(disable_irq_nosync);$/;"	v
disable_irq_nosync	irq/manage.c	/^void disable_irq_nosync(unsigned int irq)$/;"	f
disable_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(disable_kprobe);$/;"	v
disable_kprobe	kprobes.c	/^int disable_kprobe(struct kprobe *kp)$/;"	f
disable_migrate	trace/trace_hwlat.c	/^static bool disable_migrate;$/;"	v	file:
disable_nmi_nosync	irq/manage.c	/^void disable_nmi_nosync(unsigned int irq)$/;"	f
disable_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(disable_percpu_irq);$/;"	v
disable_percpu_irq	irq/manage.c	/^void disable_percpu_irq(unsigned int irq)$/;"	f
disable_percpu_nmi	irq/manage.c	/^void disable_percpu_nmi(unsigned int irq)$/;"	f
disable_pid_allocation	pid.c	/^void disable_pid_allocation(struct pid_namespace *ns)$/;"	f
disable_reader	trace/ring_buffer_benchmark.c	/^static unsigned int disable_reader;$/;"	v	file:
disable_sched_clock_irqtime	sched/cputime.c	/^void disable_sched_clock_irqtime(void)$/;"	f
disable_trace_buffered_event	trace/trace.c	/^static void disable_trace_buffered_event(void *data)$/;"	f	file:
disable_trace_kprobe	trace/trace_kprobe.c	/^disable_trace_kprobe(struct trace_kprobe *tk, struct trace_event_file *file)$/;"	f	file:
disable_trace_on_warning	trace/trace.c	/^void disable_trace_on_warning(void)$/;"	f
disabled	trace/ftrace.c	/^	atomic_t			disabled;$/;"	m	struct:ftrace_profile_stat	file:
disabled	trace/trace.h	/^	atomic_t		disabled;$/;"	m	struct:trace_array_cpu
disarm_all_kprobes	kprobes.c	/^static int disarm_all_kprobes(void)$/;"	f	file:
disarm_kprobe	kprobes.c	/^static int disarm_kprobe(struct kprobe *kp, bool reopt)$/;"	f	file:
disarm_kprobe_ftrace	kprobes.c	/^static int disarm_kprobe_ftrace(struct kprobe *p)$/;"	f	file:
disarm_kprobe_ftrace	kprobes.c	1034;"	d	file:
disk	power/hibernate.c	/^power_attr(disk);$/;"	v
disk_show	power/hibernate.c	/^static ssize_t disk_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
disk_store	power/hibernate.c	/^static ssize_t disk_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
dist	sched/fair.c	/^	int dist;$/;"	m	struct:task_numa_env	file:
distribute_cfs_runtime	sched/fair.c	/^static u64 distribute_cfs_runtime(struct cfs_bandwidth *cfs_b,$/;"	f	file:
distribute_running	sched/sched.h	/^	u8			distribute_running;$/;"	m	struct:cfs_bandwidth
div_factor	test_kprobes.c	14;"	d	file:
dl	sched/cpudeadline.h	/^	u64			dl;$/;"	m	struct:cpudl_item
dl	sched/sched.h	/^	struct dl_rq		dl;$/;"	m	struct:rq	typeref:struct:rq::dl_rq
dl_bandwidth	sched/sched.h	/^struct dl_bandwidth {$/;"	s
dl_bandwidth_enabled	sched/sched.h	/^static inline int dl_bandwidth_enabled(void)$/;"	f
dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	m	struct:dl_rq	typeref:struct:dl_rq::dl_bw
dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	m	struct:root_domain	typeref:struct:root_domain::dl_bw
dl_bw	sched/sched.h	/^struct dl_bw {$/;"	s
dl_bw_cpus	sched/deadline.c	/^static inline int dl_bw_cpus(int i)$/;"	f	file:
dl_bw_of	sched/deadline.c	/^static inline struct dl_bw *dl_bw_of(int i)$/;"	f	file:
dl_change_utilization	sched/deadline.c	/^void dl_change_utilization(struct task_struct *p, u64 new_bw)$/;"	f
dl_check_constrained_dl	sched/deadline.c	/^static inline void dl_check_constrained_dl(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_clear_overload	sched/deadline.c	/^static inline void dl_clear_overload(struct rq *rq)$/;"	f	file:
dl_cpu_busy	sched/deadline.c	/^bool dl_cpu_busy(unsigned int cpu)$/;"	f
dl_cpuset_cpumask_can_shrink	sched/deadline.c	/^int dl_cpuset_cpumask_can_shrink(const struct cpumask *cur,$/;"	f
dl_entity_is_special	sched/sched.h	/^static inline bool dl_entity_is_special(struct sched_dl_entity *dl_se)$/;"	f
dl_entity_overflow	sched/deadline.c	/^static bool dl_entity_overflow(struct sched_dl_entity *dl_se,$/;"	f	file:
dl_entity_preempt	sched/sched.h	/^dl_entity_preempt(struct sched_dl_entity *a, struct sched_dl_entity *b)$/;"	f
dl_is_implicit	sched/deadline.c	/^static inline bool dl_is_implicit(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_next_period	sched/deadline.c	/^static inline u64 dl_next_period(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_nr_migratory	sched/sched.h	/^	unsigned long		dl_nr_migratory;$/;"	m	struct:dl_rq
dl_nr_running	sched/sched.h	/^	unsigned long		dl_nr_running;$/;"	m	struct:dl_rq
dl_overloaded	sched/deadline.c	/^static inline int dl_overloaded(struct rq *rq)$/;"	f	file:
dl_param_changed	sched/deadline.c	/^bool dl_param_changed(struct task_struct *p, const struct sched_attr *attr)$/;"	f
dl_period	sched/sched.h	/^	u64			dl_period;$/;"	m	struct:dl_bandwidth
dl_policy	sched/sched.h	/^static inline int dl_policy(int policy)$/;"	f
dl_rq	sched/sched.h	/^struct dl_rq {$/;"	s
dl_rq_of_se	sched/deadline.c	/^static inline struct dl_rq *dl_rq_of_se(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_runtime	sched/sched.h	/^	u64			dl_runtime;$/;"	m	struct:dl_bandwidth
dl_runtime_exceeded	sched/deadline.c	/^int dl_runtime_exceeded(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_runtime_lock	sched/sched.h	/^	raw_spinlock_t		dl_runtime_lock;$/;"	m	struct:dl_bandwidth
dl_sched_class	sched/deadline.c	/^const struct sched_class dl_sched_class = {$/;"	v	typeref:struct:sched_class
dl_set_overload	sched/deadline.c	/^static inline void dl_set_overload(struct rq *rq)$/;"	f	file:
dl_task_can_attach	sched/deadline.c	/^int dl_task_can_attach(struct task_struct *p, const struct cpumask *cs_cpus_allowed)$/;"	f
dl_task_of	sched/deadline.c	/^static inline struct task_struct *dl_task_of(struct sched_dl_entity *dl_se)$/;"	f	file:
dl_task_offline_migration	sched/deadline.c	/^static struct rq *dl_task_offline_migration(struct rq *rq, struct task_struct *p)$/;"	f	file:
dl_task_timer	sched/deadline.c	/^static enum hrtimer_restart dl_task_timer(struct hrtimer *timer)$/;"	f	file:
dlo_count	sched/sched.h	/^	atomic_t		dlo_count;$/;"	m	struct:root_domain
dlo_mask	sched/sched.h	/^	cpumask_var_t		dlo_mask;$/;"	m	struct:root_domain
dma_alloc_attrs	dma/mapping.c	/^EXPORT_SYMBOL(dma_alloc_attrs);$/;"	v
dma_alloc_attrs	dma/mapping.c	/^void *dma_alloc_attrs(struct device *dev, size_t size, dma_addr_t *dma_handle,$/;"	f
dma_alloc_contiguous	dma/contiguous.c	/^struct page *dma_alloc_contiguous(struct device *dev, size_t size, gfp_t gfp)$/;"	f
dma_alloc_from_contiguous	dma/contiguous.c	/^struct page *dma_alloc_from_contiguous(struct device *dev, size_t count,$/;"	f
dma_alloc_from_dev_coherent	dma/coherent.c	/^int dma_alloc_from_dev_coherent(struct device *dev, ssize_t size,$/;"	f
dma_alloc_from_global_coherent	dma/coherent.c	/^void *dma_alloc_from_global_coherent(ssize_t size, dma_addr_t *dma_handle)$/;"	f
dma_alloc_from_pool	dma/remap.c	/^void *dma_alloc_from_pool(size_t size, struct page **ret_page, gfp_t flags)$/;"	f
dma_assign_coherent_memory	dma/coherent.c	/^static int dma_assign_coherent_memory(struct device *dev,$/;"	f	file:
dma_atomic_pool_init	dma/remap.c	/^int __init dma_atomic_pool_init(gfp_t gfp, pgprot_t prot)$/;"	f
dma_cache_sync	dma/mapping.c	/^EXPORT_SYMBOL(dma_cache_sync);$/;"	v
dma_cache_sync	dma/mapping.c	/^void dma_cache_sync(struct device *dev, void *vaddr, size_t size,$/;"	f
dma_chan	dma.c	/^struct dma_chan {$/;"	s	file:
dma_chan_busy	dma.c	/^static struct dma_chan dma_chan_busy[MAX_DMA_CHANNELS] = {$/;"	v	typeref:struct:dma_chan	file:
dma_check_mask	dma/mapping.c	/^static inline void dma_check_mask(struct device *dev, u64 mask)$/;"	f	file:
dma_coherent_mem	dma/coherent.c	/^struct dma_coherent_mem {$/;"	s	file:
dma_coherent_ok	dma/direct.c	/^static bool dma_coherent_ok(struct device *dev, phys_addr_t phys, size_t size)$/;"	f	file:
dma_common_contiguous_remap	dma/remap.c	/^void *dma_common_contiguous_remap(struct page *page, size_t size,$/;"	f
dma_common_free_remap	dma/remap.c	/^void dma_common_free_remap(void *cpu_addr, size_t size, unsigned long vm_flags)$/;"	f
dma_common_get_sgtable	dma/mapping.c	/^int dma_common_get_sgtable(struct device *dev, struct sg_table *sgt,$/;"	f
dma_common_mmap	dma/mapping.c	/^int dma_common_mmap(struct device *dev, struct vm_area_struct *vma,$/;"	f
dma_common_pages_remap	dma/remap.c	/^void *dma_common_pages_remap(struct page **pages, size_t size,$/;"	f
dma_contiguous_default_area	dma/contiguous.c	/^struct cma *dma_contiguous_default_area;$/;"	v	typeref:struct:cma
dma_contiguous_reserve	dma/contiguous.c	/^void __init dma_contiguous_reserve(phys_addr_t limit)$/;"	f
dma_contiguous_reserve_area	dma/contiguous.c	/^int __init dma_contiguous_reserve_area(phys_addr_t size, phys_addr_t base,$/;"	f
dma_debug_add_bus	dma/debug.c	/^void dma_debug_add_bus(struct bus_type *bus)$/;"	f
dma_debug_cmdline	dma/debug.c	/^static __init int dma_debug_cmdline(char *str)$/;"	f	file:
dma_debug_coherent	dma/debug.c	/^	dma_debug_coherent,$/;"	e	enum:__anon51	file:
dma_debug_create_entries	dma/debug.c	/^static int dma_debug_create_entries(gfp_t gfp)$/;"	f	file:
dma_debug_device_change	dma/debug.c	/^static int dma_debug_device_change(struct notifier_block *nb, unsigned long action, void *data)$/;"	f	file:
dma_debug_disabled	dma/debug.c	/^static inline bool dma_debug_disabled(void)$/;"	f	file:
dma_debug_driver_setup	dma/debug.c	/^static int __init dma_debug_driver_setup(char *str)$/;"	f	file:
dma_debug_entries_cmdline	dma/debug.c	/^static __init int dma_debug_entries_cmdline(char *str)$/;"	f	file:
dma_debug_entry	dma/debug.c	/^struct dma_debug_entry {$/;"	s	file:
dma_debug_fs_init	dma/debug.c	/^static void dma_debug_fs_init(void)$/;"	f	file:
dma_debug_init	dma/debug.c	/^core_initcall(dma_debug_init);$/;"	v
dma_debug_init	dma/debug.c	/^static int dma_debug_init(void)$/;"	f	file:
dma_debug_resource	dma/debug.c	/^	dma_debug_resource,$/;"	e	enum:__anon51	file:
dma_debug_sg	dma/debug.c	/^	dma_debug_sg,$/;"	e	enum:__anon51	file:
dma_debug_single	dma/debug.c	/^	dma_debug_single,$/;"	e	enum:__anon51	file:
dma_declare_coherent_memory	dma/coherent.c	/^EXPORT_SYMBOL(dma_declare_coherent_memory);$/;"	v
dma_declare_coherent_memory	dma/coherent.c	/^int dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,$/;"	f
dma_default_get_required_mask	dma/mapping.c	/^static u64 dma_default_get_required_mask(struct device *dev)$/;"	f	file:
dma_devres	dma/mapping.c	/^struct dma_devres {$/;"	s	file:
dma_direct_alloc	dma/direct.c	/^void *dma_direct_alloc(struct device *dev, size_t size,$/;"	f
dma_direct_alloc_pages	dma/direct.c	/^void *dma_direct_alloc_pages(struct device *dev, size_t size,$/;"	f
dma_direct_free	dma/direct.c	/^void dma_direct_free(struct device *dev, size_t size,$/;"	f
dma_direct_free_pages	dma/direct.c	/^void dma_direct_free_pages(struct device *dev, size_t size, void *cpu_addr,$/;"	f
dma_direct_get_required_mask	dma/direct.c	/^u64 dma_direct_get_required_mask(struct device *dev)$/;"	f
dma_direct_map_page	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_map_page);$/;"	v
dma_direct_map_page	dma/direct.c	/^dma_addr_t dma_direct_map_page(struct device *dev, struct page *page,$/;"	f
dma_direct_map_resource	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_map_resource);$/;"	v
dma_direct_map_resource	dma/direct.c	/^dma_addr_t dma_direct_map_resource(struct device *dev, phys_addr_t paddr,$/;"	f
dma_direct_map_sg	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_map_sg);$/;"	v
dma_direct_map_sg	dma/direct.c	/^int dma_direct_map_sg(struct device *dev, struct scatterlist *sgl, int nents,$/;"	f
dma_direct_max_mapping_size	dma/direct.c	/^size_t dma_direct_max_mapping_size(struct device *dev)$/;"	f
dma_direct_possible	dma/direct.c	/^static inline bool dma_direct_possible(struct device *dev, dma_addr_t dma_addr,$/;"	f	file:
dma_direct_supported	dma/direct.c	/^int dma_direct_supported(struct device *dev, u64 mask)$/;"	f
dma_direct_sync_sg_for_cpu	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_sync_sg_for_cpu);$/;"	v
dma_direct_sync_sg_for_cpu	dma/direct.c	/^void dma_direct_sync_sg_for_cpu(struct device *dev,$/;"	f
dma_direct_sync_sg_for_device	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_sync_sg_for_device);$/;"	v
dma_direct_sync_sg_for_device	dma/direct.c	/^void dma_direct_sync_sg_for_device(struct device *dev,$/;"	f
dma_direct_sync_single_for_cpu	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_sync_single_for_cpu);$/;"	v
dma_direct_sync_single_for_cpu	dma/direct.c	/^void dma_direct_sync_single_for_cpu(struct device *dev,$/;"	f
dma_direct_sync_single_for_device	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_sync_single_for_device);$/;"	v
dma_direct_sync_single_for_device	dma/direct.c	/^void dma_direct_sync_single_for_device(struct device *dev,$/;"	f
dma_direct_unmap_page	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_unmap_page);$/;"	v
dma_direct_unmap_page	dma/direct.c	/^void dma_direct_unmap_page(struct device *dev, dma_addr_t addr,$/;"	f
dma_direct_unmap_sg	dma/direct.c	/^EXPORT_SYMBOL(dma_direct_unmap_sg);$/;"	v
dma_direct_unmap_sg	dma/direct.c	/^void dma_direct_unmap_sg(struct device *dev, struct scatterlist *sgl,$/;"	f
dma_dummy_map_page	dma/dummy.c	/^static dma_addr_t dma_dummy_map_page(struct device *dev, struct page *page,$/;"	f	file:
dma_dummy_map_sg	dma/dummy.c	/^static int dma_dummy_map_sg(struct device *dev, struct scatterlist *sgl,$/;"	f	file:
dma_dummy_mmap	dma/dummy.c	/^static int dma_dummy_mmap(struct device *dev, struct vm_area_struct *vma,$/;"	f	file:
dma_dummy_ops	dma/dummy.c	/^EXPORT_SYMBOL(dma_dummy_ops);$/;"	v
dma_dummy_ops	dma/dummy.c	/^const struct dma_map_ops dma_dummy_ops = {$/;"	v	typeref:struct:dma_map_ops
dma_dummy_supported	dma/dummy.c	/^static int dma_dummy_supported(struct device *hwdev, u64 mask)$/;"	f	file:
dma_entry_alloc	dma/debug.c	/^static struct dma_debug_entry *dma_entry_alloc(void)$/;"	f	file:
dma_entry_free	dma/debug.c	/^static void dma_entry_free(struct dma_debug_entry *entry)$/;"	f	file:
dma_entry_hash	dma/debug.c	/^static struct hash_bucket dma_entry_hash[HASH_SIZE];$/;"	v	typeref:struct:hash_bucket	file:
dma_free_attrs	dma/mapping.c	/^EXPORT_SYMBOL(dma_free_attrs);$/;"	v
dma_free_attrs	dma/mapping.c	/^void dma_free_attrs(struct device *dev, size_t size, void *cpu_addr,$/;"	f
dma_free_contiguous	dma/contiguous.c	/^void dma_free_contiguous(struct device *dev, struct page *page, size_t size)$/;"	f
dma_free_from_pool	dma/remap.c	/^bool dma_free_from_pool(void *start, size_t size)$/;"	f
dma_get_device_base	dma/coherent.c	/^static inline dma_addr_t dma_get_device_base(struct device *dev,$/;"	f	file:
dma_get_required_mask	dma/mapping.c	/^EXPORT_SYMBOL_GPL(dma_get_required_mask);$/;"	v
dma_get_required_mask	dma/mapping.c	/^u64 dma_get_required_mask(struct device *dev)$/;"	f
dma_get_sgtable_attrs	dma/mapping.c	/^EXPORT_SYMBOL(dma_get_sgtable_attrs);$/;"	v
dma_get_sgtable_attrs	dma/mapping.c	/^int dma_get_sgtable_attrs(struct device *dev, struct sg_table *sgt,$/;"	f
dma_handle	dma/mapping.c	/^	dma_addr_t	dma_handle;$/;"	m	struct:dma_devres	file:
dma_in_atomic_pool	dma/remap.c	/^bool dma_in_atomic_pool(void *start, size_t size)$/;"	f
dma_init_coherent_memory	dma/coherent.c	/^static int dma_init_coherent_memory(phys_addr_t phys_addr,$/;"	f	file:
dma_init_reserved_memory	dma/coherent.c	/^core_initcall(dma_init_reserved_memory);$/;"	v
dma_init_reserved_memory	dma/coherent.c	/^static int __init dma_init_reserved_memory(void)$/;"	f	file:
dma_max_mapping_size	dma/mapping.c	/^EXPORT_SYMBOL_GPL(dma_max_mapping_size);$/;"	v
dma_max_mapping_size	dma/mapping.c	/^size_t dma_max_mapping_size(struct device *dev)$/;"	f
dma_mmap_attrs	dma/mapping.c	/^EXPORT_SYMBOL(dma_mmap_attrs);$/;"	v
dma_mmap_attrs	dma/mapping.c	/^int dma_mmap_attrs(struct device *dev, struct vm_area_struct *vma,$/;"	f
dma_mmap_from_dev_coherent	dma/coherent.c	/^EXPORT_SYMBOL(dma_mmap_from_dev_coherent);$/;"	v
dma_mmap_from_dev_coherent	dma/coherent.c	/^int dma_mmap_from_dev_coherent(struct device *dev, struct vm_area_struct *vma,$/;"	f
dma_mmap_from_global_coherent	dma/coherent.c	/^int dma_mmap_from_global_coherent(struct vm_area_struct *vma, void *vaddr,$/;"	f
dma_pgprot	dma/mapping.c	/^pgprot_t dma_pgprot(struct device *dev, pgprot_t prot, unsigned long attrs)$/;"	f
dma_release_coherent_memory	dma/coherent.c	/^static void dma_release_coherent_memory(struct dma_coherent_mem *mem)$/;"	f	file:
dma_release_declared_memory	dma/coherent.c	/^EXPORT_SYMBOL(dma_release_declared_memory);$/;"	v
dma_release_declared_memory	dma/coherent.c	/^void dma_release_declared_memory(struct device *dev)$/;"	f
dma_release_from_contiguous	dma/contiguous.c	/^bool dma_release_from_contiguous(struct device *dev, struct page *pages,$/;"	f
dma_release_from_dev_coherent	dma/coherent.c	/^int dma_release_from_dev_coherent(struct device *dev, int order, void *vaddr)$/;"	f
dma_release_from_global_coherent	dma/coherent.c	/^int dma_release_from_global_coherent(int order, void *vaddr)$/;"	f
dma_set_coherent_mask	dma/mapping.c	/^EXPORT_SYMBOL(dma_set_coherent_mask);$/;"	v
dma_set_coherent_mask	dma/mapping.c	/^int dma_set_coherent_mask(struct device *dev, u64 mask)$/;"	f
dma_set_mask	dma/mapping.c	/^EXPORT_SYMBOL(dma_set_mask);$/;"	v
dma_set_mask	dma/mapping.c	/^int dma_set_mask(struct device *dev, u64 mask)$/;"	f
dma_spin_lock	dma.c	/^DEFINE_SPINLOCK(dma_spin_lock);$/;"	v
dma_spin_lock	dma.c	/^EXPORT_SYMBOL(dma_spin_lock);$/;"	v
dma_supported	dma/mapping.c	/^EXPORT_SYMBOL(dma_supported);$/;"	v
dma_supported	dma/mapping.c	/^int dma_supported(struct device *dev, u64 mask)$/;"	f
dma_virt_alloc	dma/virt.c	/^static void *dma_virt_alloc(struct device *dev, size_t size,$/;"	f	file:
dma_virt_free	dma/virt.c	/^static void dma_virt_free(struct device *dev, size_t size,$/;"	f	file:
dma_virt_map_page	dma/virt.c	/^static dma_addr_t dma_virt_map_page(struct device *dev, struct page *page,$/;"	f	file:
dma_virt_map_sg	dma/virt.c	/^static int dma_virt_map_sg(struct device *dev, struct scatterlist *sgl,$/;"	f	file:
dma_virt_ops	dma/virt.c	/^EXPORT_SYMBOL(dma_virt_ops);$/;"	v
dma_virt_ops	dma/virt.c	/^const struct dma_map_ops dma_virt_ops = {$/;"	v	typeref:struct:dma_map_ops
dmam_alloc_attrs	dma/mapping.c	/^EXPORT_SYMBOL(dmam_alloc_attrs);$/;"	v
dmam_alloc_attrs	dma/mapping.c	/^void *dmam_alloc_attrs(struct device *dev, size_t size, dma_addr_t *dma_handle,$/;"	f
dmam_free_coherent	dma/mapping.c	/^EXPORT_SYMBOL(dmam_free_coherent);$/;"	v
dmam_free_coherent	dma/mapping.c	/^void dmam_free_coherent(struct device *dev, size_t size, void *vaddr,$/;"	f
dmam_match	dma/mapping.c	/^static int dmam_match(struct device *dev, void *res, void *match_data)$/;"	f	file:
dmam_release	dma/mapping.c	/^static void dmam_release(struct device *dev, void *res)$/;"	f	file:
dmesg_restrict	printk/printk.c	/^int dmesg_restrict = IS_ENABLED(CONFIG_SECURITY_DMESG_RESTRICT);$/;"	v
do_acct_process	acct.c	/^static void do_acct_process(struct bsd_acct_struct *acct)$/;"	f	file:
do_adjtimex	time/timekeeping.c	/^int do_adjtimex(struct __kernel_timex *txc)$/;"	f
do_balance_runtime	sched/rt.c	/^static void do_balance_runtime(struct rt_rq *rt_rq)$/;"	f	file:
do_blk_trace_setup	trace/blktrace.c	/^static int do_blk_trace_setup(struct request_queue *q, char *name, dev_t dev,$/;"	f	file:
do_bpf_send_signal	trace/bpf_trace.c	/^static void do_bpf_send_signal(struct irq_work *entry)$/;"	f	file:
do_check	bpf/verifier.c	/^static int do_check(struct bpf_verifier_env *env)$/;"	f	file:
do_clock_adjtime	time/posix-timers.c	/^int do_clock_adjtime(const clockid_t which_clock, struct __kernel_timex * ktx)$/;"	f
do_clock_gettime	time/posix-stubs.c	/^int do_clock_gettime(clockid_t which_clock, struct timespec64 *tp)$/;"	f
do_compat_sigaltstack	signal.c	/^static int do_compat_sigaltstack(const compat_stack_t __user *uss_ptr,$/;"	f	file:
do_copy_page	power/snapshot.c	/^static inline void do_copy_page(long *dst, long *src)$/;"	f	file:
do_cpu_down	cpu.c	/^static int do_cpu_down(unsigned int cpu, enum cpuhp_state target)$/;"	f	file:
do_cpu_nanosleep	time/posix-cpu-timers.c	/^static int do_cpu_nanosleep(const clockid_t which_clock, int flags,$/;"	f	file:
do_cpu_up	cpu.c	/^static int do_cpu_up(unsigned int cpu, enum cpuhp_state target)$/;"	f	file:
do_each_subsys_mask	cgroup/cgroup.c	689;"	d	file:
do_exit	exit.c	/^EXPORT_SYMBOL_GPL(do_exit);$/;"	v
do_exit	exit.c	/^void __noreturn do_exit(long code)$/;"	f
do_for_each_event_file	trace/trace_events.c	61;"	d	file:
do_for_each_event_file_safe	trace/trace_events.c	65;"	d	file:
do_for_each_ftrace_op	trace/ftrace_internal.h	16;"	d
do_for_each_ftrace_rec	trace/ftrace.c	1513;"	d	file:
do_fork	fork.c	/^long do_fork(unsigned long clone_flags,$/;"	f
do_free_cleaned_kprobes	kprobes.c	/^static void do_free_cleaned_kprobes(void)$/;"	f	file:
do_free_init	module.c	/^static void do_free_init(struct work_struct *w)$/;"	f	file:
do_futex	futex.c	/^long do_futex(u32 __user *uaddr, int op, u32 val, ktime_t *timeout,$/;"	f
do_getitimer	time/itimer.c	/^int do_getitimer(int which, struct itimerval *value)$/;"	f
do_getpgid	sys.c	/^static int do_getpgid(pid_t pid)$/;"	f	file:
do_group_exit	exit.c	/^do_group_exit(int exit_code)$/;"	f
do_idle	sched/idle.c	/^static void do_idle(void)$/;"	f	file:
do_init_module	module.c	/^static noinline int do_init_module(struct module *mod)$/;"	f	file:
do_init_timer	time/timer.c	/^static void do_init_timer(struct timer_list *timer,$/;"	f	file:
do_jobctl_trap	signal.c	/^static void do_jobctl_trap(void)$/;"	f	file:
do_kernel_restart	reboot.c	/^void do_kernel_restart(char *cmd)$/;"	f
do_kexec_load	kexec.c	/^static int do_kexec_load(unsigned long entry, unsigned long nr_segments,$/;"	f	file:
do_kimage_alloc_init	kexec_core.c	/^struct kimage *do_kimage_alloc_init(void)$/;"	f
do_mod_ctors	module.c	/^static void do_mod_ctors(struct module *mod)$/;"	f	file:
do_nanosleep	time/hrtimer.c	/^static int __sched do_nanosleep(struct hrtimer_sleeper *t, enum hrtimer_mode mode)$/;"	f	file:
do_no_restart_syscall	signal.c	/^long do_no_restart_syscall(struct restart_block *param)$/;"	f
do_nocb_deferred_wakeup	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup(struct rcu_data *rdp)$/;"	f
do_nocb_deferred_wakeup_common	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup_common(struct rcu_data *rdp)$/;"	f
do_nocb_deferred_wakeup_timer	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup_timer(struct timer_list *t)$/;"	f
do_nothing	smp.c	/^static void do_nothing(void *unused)$/;"	f	file:
do_notify_parent	signal.c	/^bool do_notify_parent(struct task_struct *tsk, int sig)$/;"	f
do_notify_parent_cldstop	signal.c	/^static void do_notify_parent_cldstop(struct task_struct *tsk,$/;"	f	file:
do_notify_pidfd	signal.c	/^static void do_notify_pidfd(struct task_struct *task)$/;"	f	file:
do_oops_enter_exit	panic.c	/^static void do_oops_enter_exit(void)$/;"	f	file:
do_optimize_kprobes	kprobes.c	/^static void do_optimize_kprobes(void)$/;"	f	file:
do_perf_sw_event	events/core.c	/^static void do_perf_sw_event(enum perf_type_id type, u32 event_id,$/;"	f	file:
do_poweroff	power/poweroff.c	/^static void do_poweroff(struct work_struct *dummy)$/;"	f	file:
do_prlimit	sys.c	/^int do_prlimit(struct task_struct *tsk, unsigned int resource,$/;"	f
do_proc_dointvec	sysctl.c	/^static int do_proc_dointvec(struct ctl_table *table, int write,$/;"	f	file:
do_proc_dointvec_conv	sysctl.c	/^static int do_proc_dointvec_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_minmax_conv	sysctl.c	/^static int do_proc_dointvec_minmax_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_minmax_conv_param	sysctl.c	/^struct do_proc_dointvec_minmax_conv_param {$/;"	s	file:
do_proc_dointvec_ms_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_ms_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_userhz_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_userhz_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dopipe_max_size_conv	sysctl.c	/^static int do_proc_dopipe_max_size_conv(unsigned long *lvalp,$/;"	f	file:
do_proc_douintvec	sysctl.c	/^static int do_proc_douintvec(struct ctl_table *table, int write,$/;"	f	file:
do_proc_douintvec_conv	sysctl.c	/^static int do_proc_douintvec_conv(unsigned long *lvalp,$/;"	f	file:
do_proc_douintvec_minmax_conv	sysctl.c	/^static int do_proc_douintvec_minmax_conv(unsigned long *lvalp,$/;"	f	file:
do_proc_douintvec_minmax_conv_param	sysctl.c	/^struct do_proc_douintvec_minmax_conv_param {$/;"	s	file:
do_proc_douintvec_r	sysctl.c	/^static int do_proc_douintvec_r(unsigned int *tbl_data, void __user *buffer,$/;"	f	file:
do_proc_douintvec_w	sysctl.c	/^static int do_proc_douintvec_w(unsigned int *tbl_data,$/;"	f	file:
do_proc_doulongvec_minmax	sysctl.c	/^static int do_proc_doulongvec_minmax(struct ctl_table *table, int write,$/;"	f	file:
do_profile_hits	profile.c	/^static void do_profile_hits(int type, void *__pc, unsigned int nr_hits)$/;"	f	file:
do_raw_read_lock	locking/spinlock_debug.c	/^void do_raw_read_lock(rwlock_t *lock)$/;"	f
do_raw_read_trylock	locking/spinlock_debug.c	/^int do_raw_read_trylock(rwlock_t *lock)$/;"	f
do_raw_read_unlock	locking/spinlock_debug.c	/^void do_raw_read_unlock(rwlock_t *lock)$/;"	f
do_raw_spin_lock	locking/spinlock_debug.c	/^void do_raw_spin_lock(raw_spinlock_t *lock)$/;"	f
do_raw_spin_trylock	locking/spinlock_debug.c	/^int do_raw_spin_trylock(raw_spinlock_t *lock)$/;"	f
do_raw_spin_unlock	locking/spinlock_debug.c	/^void do_raw_spin_unlock(raw_spinlock_t *lock)$/;"	f
do_raw_write_lock	locking/spinlock_debug.c	/^void do_raw_write_lock(rwlock_t *lock)$/;"	f
do_raw_write_trylock	locking/spinlock_debug.c	/^int do_raw_write_trylock(rwlock_t *lock)$/;"	f
do_raw_write_unlock	locking/spinlock_debug.c	/^void do_raw_write_unlock(rwlock_t *lock)$/;"	f
do_refine_retval_range	bpf/verifier.c	/^static void do_refine_retval_range(struct bpf_reg_state *regs, int ret_type,$/;"	f	file:
do_rt_sigqueueinfo	signal.c	/^static int do_rt_sigqueueinfo(pid_t pid, int sig, kernel_siginfo_t *info)$/;"	f	file:
do_rt_tgsigqueueinfo	signal.c	/^static int do_rt_tgsigqueueinfo(pid_t tgid, pid_t pid, int sig, kernel_siginfo_t *info)$/;"	f	file:
do_sched_cfs_period_timer	sched/fair.c	/^static int do_sched_cfs_period_timer(struct cfs_bandwidth *cfs_b, int overrun, unsigned long flags)$/;"	f	file:
do_sched_cfs_slack_timer	sched/fair.c	/^static void do_sched_cfs_slack_timer(struct cfs_bandwidth *cfs_b)$/;"	f	file:
do_sched_rt_period_timer	sched/rt.c	/^static int do_sched_rt_period_timer(struct rt_bandwidth *rt_b, int overrun)$/;"	f	file:
do_sched_setscheduler	sched/core.c	/^do_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param)$/;"	f	file:
do_sched_yield	sched/core.c	/^static void do_sched_yield(void)$/;"	f	file:
do_seccomp	seccomp.c	/^static long do_seccomp(unsigned int op, unsigned int flags,$/;"	f	file:
do_send_sig_info	signal.c	/^int do_send_sig_info(int sig, struct kernel_siginfo *info, struct task_struct *p,$/;"	f
do_send_specific	signal.c	/^do_send_specific(pid_t tgid, pid_t pid, int sig, struct kernel_siginfo *info)$/;"	f	file:
do_set_cpus_allowed	sched/core.c	/^void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask)$/;"	f
do_setitimer	time/itimer.c	/^int do_setitimer(int which, struct itimerval *value, struct itimerval *ovalue)$/;"	f
do_settimeofday64	time/timekeeping.c	/^EXPORT_SYMBOL(do_settimeofday64);$/;"	v
do_settimeofday64	time/timekeeping.c	/^int do_settimeofday64(const struct timespec64 *ts)$/;"	f
do_sigaction	signal.c	/^int do_sigaction(int sig, struct k_sigaction *act, struct k_sigaction *oact)$/;"	f
do_sigaltstack	signal.c	/^do_sigaltstack (const stack_t *ss, stack_t *oss, unsigned long sp,$/;"	f	file:
do_sigpending	signal.c	/^static void do_sigpending(sigset_t *set)$/;"	f	file:
do_sigtimedwait	signal.c	/^static int do_sigtimedwait(const sigset_t *which, kernel_siginfo_t *info,$/;"	f	file:
do_softirq	softirq.c	/^asmlinkage __visible void do_softirq(void)$/;"	f
do_sys_settimeofday64	time/time.c	/^int do_sys_settimeofday64(const struct timespec64 *tv, const struct timezone *tz)$/;"	f
do_sys_times	sys.c	/^static void do_sys_times(struct tms *tms)$/;"	f	file:
do_sysctl	sysctl_binary.c	/^static ssize_t do_sysctl(int __user *args_name, int nlen,$/;"	f	file:
do_sysinfo	sys.c	/^static int do_sysinfo(struct sysinfo *info)$/;"	f	file:
do_syslog	printk/printk.c	/^int do_syslog(int type, char __user *buf, int len, int source)$/;"	f
do_task_dead	sched/core.c	/^void __noreturn do_task_dead(void)$/;"	f
do_timer	time/timekeeping.c	/^void do_timer(unsigned long ticks)$/;"	f
do_timer_create	time/posix-timers.c	/^static int do_timer_create(clockid_t which_clock, struct sigevent *event,$/;"	f	file:
do_timer_gettime	time/posix-timers.c	/^static int do_timer_gettime(timer_t timer_id,  struct itimerspec64 *setting)$/;"	f	file:
do_timer_last	time/tick-sched.h	/^	unsigned int			do_timer_last	: 1;$/;"	m	struct:tick_sched
do_timer_settime	time/posix-timers.c	/^static int do_timer_settime(timer_t timer_id, int flags,$/;"	f	file:
do_tkill	signal.c	/^static int do_tkill(pid_t tgid, pid_t pid, int sig)$/;"	f	file:
do_trace_rcu_torture_read	rcu/rcu.h	478;"	d
do_trace_rcu_torture_read	rcu/update.c	/^EXPORT_SYMBOL_GPL(do_trace_rcu_torture_read);$/;"	v
do_trace_rcu_torture_read	rcu/update.c	/^void do_trace_rcu_torture_read(const char *rcutorturename, struct rcu_head *rhp,$/;"	f
do_trace_rcu_torture_read	rcu/update.c	422;"	d	file:
do_unoptimize_kprobes	kprobes.c	/^static void do_unoptimize_kprobes(void)$/;"	f	file:
do_up_read	bpf/stackmap.c	/^static void do_up_read(struct irq_work *entry)$/;"	f	file:
do_wait	exit.c	/^static long do_wait(struct wait_opts *wo)$/;"	f	file:
do_wait_for_common	sched/completion.c	/^do_wait_for_common(struct completion *x,$/;"	f	file:
do_wait_intr	sched/wait.c	/^EXPORT_SYMBOL(do_wait_intr);$/;"	v
do_wait_intr	sched/wait.c	/^int do_wait_intr(wait_queue_head_t *wq, wait_queue_entry_t *wait)$/;"	f
do_wait_intr_irq	sched/wait.c	/^EXPORT_SYMBOL(do_wait_intr_irq);$/;"	v
do_wait_intr_irq	sched/wait.c	/^int do_wait_intr_irq(wait_queue_head_t *wq, wait_queue_entry_t *wait)$/;"	f
do_wait_thread	exit.c	/^static int do_wait_thread(struct wait_opts *wo, struct task_struct *tsk)$/;"	f	file:
domain	async.c	/^	struct async_domain	*domain;$/;"	m	struct:async_entry	typeref:struct:async_entry::async_domain	file:
domain_dir	irq/irqdomain.c	/^static struct dentry *domain_dir;$/;"	v	typeref:struct:dentry	file:
domain_list	async.c	/^	struct list_head	domain_list;$/;"	m	struct:async_entry	typeref:struct:async_entry::list_head	file:
doms_cur	sched/topology.c	/^static cpumask_var_t			*doms_cur;$/;"	v	file:
done	acct.c	/^	struct completion	done;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::completion	file:
done	bpf/inode.c	/^	bool done;$/;"	m	struct:map_iter	file:
done	kthread.c	/^	struct completion	done;$/;"	m	struct:kthread_flush_work	typeref:struct:kthread_flush_work::completion	file:
done	kthread.c	/^	struct completion *done;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::completion	file:
done	locking/test-ww_mutex.c	/^	struct completion ready, go, done;$/;"	m	struct:test_mutex	typeref:struct:test_mutex::	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* compression done *\/$/;"	m	struct:cmp_data	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* crc update done *\/$/;"	m	struct:crc_data	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* decompression done *\/$/;"	m	struct:dec_data	file:
done	sched/idle.c	/^	int done;$/;"	m	struct:idle_timer	file:
done	smp.c	/^	struct completion	done;$/;"	m	struct:smp_call_on_cpu_struct	typeref:struct:smp_call_on_cpu_struct::completion	file:
done	workqueue.c	/^	struct completion	done;		\/* flush completion *\/$/;"	m	struct:wq_flusher	typeref:struct:wq_flusher::completion	file:
done	workqueue.c	/^	struct completion	done;$/;"	m	struct:wq_barrier	typeref:struct:wq_barrier::completion	file:
done_down	cpu.c	/^	struct completion	done_down;$/;"	m	struct:cpuhp_cpu_state	typeref:struct:cpuhp_cpu_state::completion	file:
done_up	cpu.c	/^	struct completion	done_up;$/;"	m	struct:cpuhp_cpu_state	typeref:struct:cpuhp_cpu_state::completion	file:
donetail	rcu/tiny.c	/^	struct rcu_head **donetail;	\/* ->next pointer of last "done" CB. *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head	file:
double_lock	sched/sched.h	/^static inline void double_lock(spinlock_t *l1, spinlock_t *l2)$/;"	f
double_lock_balance	sched/sched.h	/^static inline int double_lock_balance(struct rq *this_rq, struct rq *busiest)$/;"	f
double_lock_hb	futex.c	/^double_lock_hb(struct futex_hash_bucket *hb1, struct futex_hash_bucket *hb2)$/;"	f	file:
double_lock_irq	sched/sched.h	/^static inline void double_lock_irq(spinlock_t *l1, spinlock_t *l2)$/;"	f
double_raw_lock	sched/sched.h	/^static inline void double_raw_lock(raw_spinlock_t *l1, raw_spinlock_t *l2)$/;"	f
double_unlock_hb	futex.c	/^double_unlock_hb(struct futex_hash_bucket *hb1, struct futex_hash_bucket *hb2)$/;"	f	file:
down	locking/semaphore.c	/^EXPORT_SYMBOL(down);$/;"	v
down	locking/semaphore.c	/^void down(struct semaphore *sem)$/;"	f
down_console_sem	printk/printk.c	211;"	d	file:
down_interruptible	locking/semaphore.c	/^EXPORT_SYMBOL(down_interruptible);$/;"	v
down_interruptible	locking/semaphore.c	/^int down_interruptible(struct semaphore *sem)$/;"	f
down_killable	locking/semaphore.c	/^EXPORT_SYMBOL(down_killable);$/;"	v
down_killable	locking/semaphore.c	/^int down_killable(struct semaphore *sem)$/;"	f
down_read	locking/rwsem.c	/^EXPORT_SYMBOL(down_read);$/;"	v
down_read	locking/rwsem.c	/^void __sched down_read(struct rw_semaphore *sem)$/;"	f
down_read_killable	locking/rwsem.c	/^EXPORT_SYMBOL(down_read_killable);$/;"	v
down_read_killable	locking/rwsem.c	/^int __sched down_read_killable(struct rw_semaphore *sem)$/;"	f
down_read_nested	locking/rwsem.c	/^EXPORT_SYMBOL(down_read_nested);$/;"	v
down_read_nested	locking/rwsem.c	/^void down_read_nested(struct rw_semaphore *sem, int subclass)$/;"	f
down_read_non_owner	locking/rwsem.c	/^EXPORT_SYMBOL(down_read_non_owner);$/;"	v
down_read_non_owner	locking/rwsem.c	/^void down_read_non_owner(struct rw_semaphore *sem)$/;"	f
down_read_trylock	locking/rwsem.c	/^EXPORT_SYMBOL(down_read_trylock);$/;"	v
down_read_trylock	locking/rwsem.c	/^int down_read_trylock(struct rw_semaphore *sem)$/;"	f
down_timeout	locking/semaphore.c	/^EXPORT_SYMBOL(down_timeout);$/;"	v
down_timeout	locking/semaphore.c	/^int down_timeout(struct semaphore *sem, long timeout)$/;"	f
down_trylock	locking/semaphore.c	/^EXPORT_SYMBOL(down_trylock);$/;"	v
down_trylock	locking/semaphore.c	/^int down_trylock(struct semaphore *sem)$/;"	f
down_trylock_console_sem	printk/printk.c	235;"	d	file:
down_write	locking/rwsem.c	/^EXPORT_SYMBOL(down_write);$/;"	v
down_write	locking/rwsem.c	/^void __sched down_write(struct rw_semaphore *sem)$/;"	f
down_write_killable	locking/rwsem.c	/^EXPORT_SYMBOL(down_write_killable);$/;"	v
down_write_killable	locking/rwsem.c	/^int __sched down_write_killable(struct rw_semaphore *sem)$/;"	f
down_write_killable_nested	locking/rwsem.c	/^EXPORT_SYMBOL(down_write_killable_nested);$/;"	v
down_write_killable_nested	locking/rwsem.c	/^int __sched down_write_killable_nested(struct rw_semaphore *sem, int subclass)$/;"	f
down_write_nested	locking/rwsem.c	/^EXPORT_SYMBOL(down_write_nested);$/;"	v
down_write_nested	locking/rwsem.c	/^void down_write_nested(struct rw_semaphore *sem, int subclass)$/;"	f
down_write_trylock	locking/rwsem.c	/^EXPORT_SYMBOL(down_write_trylock);$/;"	v
down_write_trylock	locking/rwsem.c	/^int down_write_trylock(struct rw_semaphore *sem)$/;"	f
downgrade_write	locking/rwsem.c	/^EXPORT_SYMBOL(downgrade_write);$/;"	v
downgrade_write	locking/rwsem.c	/^void downgrade_write(struct rw_semaphore *sem)$/;"	f
drain_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(drain_workqueue);$/;"	v
drain_workqueue	workqueue.c	/^void drain_workqueue(struct workqueue_struct *wq)$/;"	f
driver_filter	dma/debug.c	/^static bool driver_filter(struct device *dev)$/;"	f	file:
drop_futex_key_refs	futex.c	/^static void drop_futex_key_refs(union futex_key *key)$/;"	f	file:
drop_newline	debug/kdb/kdb_main.c	/^static void drop_newline(char *buf)$/;"	f	file:
dropped_count	trace/trace_mmiotrace.c	/^static atomic_t dropped_count;$/;"	v	file:
dropped_events	trace/ring_buffer.c	/^	local_t				dropped_events;$/;"	m	struct:ring_buffer_per_cpu	file:
drops	trace/tracing_map.h	/^	atomic64_t			drops;$/;"	m	struct:tracing_map
dst_cpu	sched/core.c	/^	int src_cpu, dst_cpu;$/;"	m	struct:migration_swap_arg	file:
dst_cpu	sched/fair.c	/^	int			dst_cpu;$/;"	m	struct:lb_env	file:
dst_cpu	sched/fair.c	/^	int dst_cpu, dst_nid;$/;"	m	struct:task_numa_env	file:
dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	dst_csets;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head
dst_grpmask	sched/fair.c	/^	struct cpumask		*dst_grpmask;$/;"	m	struct:lb_env	typeref:struct:lb_env::cpumask	file:
dst_nid	sched/fair.c	/^	int dst_cpu, dst_nid;$/;"	m	struct:task_numa_env	file:
dst_rq	sched/fair.c	/^	struct rq		*dst_rq;$/;"	m	struct:lb_env	typeref:struct:lb_env::rq	file:
dst_stats	sched/fair.c	/^	struct numa_stats src_stats, dst_stats;$/;"	m	struct:task_numa_env	typeref:struct:task_numa_env::	file:
dst_task	sched/core.c	/^	struct task_struct *src_task, *dst_task;$/;"	m	struct:migration_swap_arg	typeref:struct:migration_swap_arg::	file:
dtab	bpf/devmap.c	/^	struct bpf_dtab *dtab;$/;"	m	struct:bpf_dtab_netdev	typeref:struct:bpf_dtab_netdev::bpf_dtab	file:
dummy	audit.h	/^	int		    dummy;	\/* must be the first element *\/$/;"	m	struct:audit_context
dummy_bpf_prog	bpf/core.c	/^} dummy_bpf_prog = {$/;"	v	typeref:struct:bpf_prog_dummy	file:
dummy_clock	time/timekeeping.c	/^static struct clocksource dummy_clock = {$/;"	v	typeref:struct:clocksource	file:
dummy_clock_read	time/timekeeping.c	/^static u64 dummy_clock_read(struct clocksource *cs)$/;"	f	file:
dummy_cmp	trace/trace_stat.c	/^static int dummy_cmp(void *p1, void *p2)$/;"	f	file:
dummy_irq_chip	irq/dummychip.c	/^EXPORT_SYMBOL_GPL(dummy_irq_chip);$/;"	v
dummy_irq_chip	irq/dummychip.c	/^struct irq_chip dummy_irq_chip = {$/;"	v	typeref:struct:irq_chip
dummy_load	locking/test-ww_mutex.c	/^static void dummy_load(struct stress *stress)$/;"	f	file:
dummy_set_flag	trace/trace.c	/^dummy_set_flag(struct trace_array *tr, u32 old_flags, u32 bit, int set)$/;"	f	file:
dummy_tracer_opt	trace/trace.c	/^static struct tracer_opt dummy_tracer_opt[] = {$/;"	v	typeref:struct:tracer_opt	file:
dump	dma/debug.c	/^DEFINE_SHOW_ATTRIBUTE(dump);$/;"	v
dump_blkd_tasks	rcu/tree_plugin.h	/^dump_blkd_tasks(struct rcu_node *rnp, int ncheck)$/;"	f
dump_cpu_task	sched/core.c	/^void dump_cpu_task(int cpu)$/;"	f
dump_entry_trace	dma/debug.c	/^static inline void dump_entry_trace(struct dma_debug_entry *entry)$/;"	f	file:
dump_invalid_creds	cred.c	/^static void dump_invalid_creds(const struct cred *cred, const char *label,$/;"	f	file:
dump_kprobe	kprobes.c	/^NOKPROBE_SYMBOL(dump_kprobe);$/;"	v
dump_kprobe	kprobes.c	/^void dump_kprobe(struct kprobe *kp)$/;"	f
dump_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops dump_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
dump_show	dma/debug.c	/^static int dump_show(struct seq_file *seq, void *v)$/;"	f	file:
dump_tree	rcu/tree.c	/^static bool dump_tree;$/;"	v	file:
dup	trace/tracing_map.h	/^	bool				dup;$/;"	m	struct:tracing_map_sort_entry
dup_mm	fork.c	/^static struct mm_struct *dup_mm(struct task_struct *tsk,$/;"	f	file:
dup_mmap	fork.c	/^static __latent_entropy int dup_mmap(struct mm_struct *mm,$/;"	f	file:
dup_mmap	fork.c	/^static int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)$/;"	f	file:
dup_mmap_sem	events/uprobes.c	/^DEFINE_STATIC_PERCPU_RWSEM(dup_mmap_sem);$/;"	v
dup_task_struct	fork.c	/^static struct task_struct *dup_task_struct(struct task_struct *orig, int node)$/;"	f	file:
dup_utask	events/uprobes.c	/^static int dup_utask(struct task_struct *t, struct uprobe_task *o_utask)$/;"	f	file:
dup_xol_work	events/uprobes.c	/^static void dup_xol_work(struct callback_head *work)$/;"	f	file:
duplicate_memory_bitmap	power/snapshot.c	/^static void duplicate_memory_bitmap(struct memory_bitmap *dst,$/;"	f	file:
duration	trace/trace_hwlat.c	/^	u64			duration;	\/* delta *\/$/;"	m	struct:hwlat_sample	file:
dyn_event	trace/trace_dynevent.h	/^struct dyn_event {$/;"	s
dyn_event_add	trace/trace_dynevent.h	/^static inline int dyn_event_add(struct dyn_event *ev)$/;"	f
dyn_event_init	trace/trace_dynevent.h	/^int dyn_event_init(struct dyn_event *ev, struct dyn_event_operations *ops)$/;"	f
dyn_event_list	trace/trace_dynevent.c	/^LIST_HEAD(dyn_event_list);$/;"	v
dyn_event_open	trace/trace_dynevent.c	/^static int dyn_event_open(struct inode *inode, struct file *file)$/;"	f	file:
dyn_event_operations	trace/trace_dynevent.h	/^struct dyn_event_operations {$/;"	s
dyn_event_register	trace/trace_dynevent.c	/^int dyn_event_register(struct dyn_event_operations *ops)$/;"	f
dyn_event_release	trace/trace_dynevent.c	/^int dyn_event_release(int argc, char **argv, struct dyn_event_operations *type)$/;"	f
dyn_event_remove	trace/trace_dynevent.h	/^static inline void dyn_event_remove(struct dyn_event *ev)$/;"	f
dyn_event_seq_next	trace/trace_dynevent.c	/^void *dyn_event_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f
dyn_event_seq_op	trace/trace_dynevent.c	/^static const struct seq_operations dyn_event_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
dyn_event_seq_show	trace/trace_dynevent.c	/^static int dyn_event_seq_show(struct seq_file *m, void *v)$/;"	f	file:
dyn_event_seq_start	trace/trace_dynevent.c	/^void *dyn_event_seq_start(struct seq_file *m, loff_t *pos)$/;"	f
dyn_event_seq_stop	trace/trace_dynevent.c	/^void dyn_event_seq_stop(struct seq_file *m, void *v)$/;"	f
dyn_event_write	trace/trace_dynevent.c	/^static ssize_t dyn_event_write(struct file *file, const char __user *buffer,$/;"	f	file:
dyn_events_release_all	trace/trace_dynevent.c	/^int dyn_events_release_all(struct dyn_event_operations *type)$/;"	f
dynamic	trace/trace_probe.h	/^	bool			dynamic;\/* Dynamic array (string) is used *\/$/;"	m	struct:probe_arg
dynamic_debug_remove	module.c	/^static void dynamic_debug_remove(struct module *mod, struct _ddebug *debug)$/;"	f	file:
dynamic_debug_setup	module.c	/^static void dynamic_debug_setup(struct module *mod, struct _ddebug *debug, unsigned int num)$/;"	f	file:
dynamic_events_ops	trace/trace_dynevent.c	/^static const struct file_operations dynamic_events_ops = {$/;"	v	typeref:struct:file_operations	file:
dyntick_save_progress_counter	rcu/tree.c	/^static int dyntick_save_progress_counter(struct rcu_data *rdp)$/;"	f	file:
dynticks	rcu/tree.h	/^	atomic_t dynticks;		\/* Even value for idle, else odd. *\/$/;"	m	struct:rcu_data
dynticks_nesting	rcu/tree.h	/^	long dynticks_nesting;		\/* Track process nesting level. *\/$/;"	m	struct:rcu_data
dynticks_nmi_nesting	rcu/tree.h	/^	long dynticks_nmi_nesting;	\/* Track irq\/NMI nesting level. *\/$/;"	m	struct:rcu_data
dynticks_snap	rcu/tree.h	/^	int dynticks_snap;		\/* Per-GP tracking for dynticks. *\/$/;"	m	struct:rcu_data
each_symbol_in_section	module.c	/^static bool each_symbol_in_section(const struct symsearch *arr,$/;"	f	file:
each_symbol_section	module.c	/^EXPORT_SYMBOL_GPL(each_symbol_section);$/;"	v
each_symbol_section	module.c	/^bool each_symbol_section(bool (*fn)(const struct symsearch *arr,$/;"	f
earliest_dl	sched/sched.h	/^	} earliest_dl;$/;"	m	struct:dl_rq	typeref:struct:dl_rq::__anon85
early_boot_test_call_rcu	rcu/update.c	/^static void early_boot_test_call_rcu(void)$/;"	f	file:
early_cma	dma/contiguous.c	/^static int __init early_cma(char *p)$/;"	f	file:
early_coherent_pool	dma/remap.c	/^static int __init early_coherent_pool(char *p)$/;"	f	file:
early_console	printk/printk.c	/^struct console *early_console;$/;"	v	typeref:struct:console
early_enable_events	trace/trace_events.c	/^early_enable_events(struct trace_array *tr, bool disable_first)$/;"	f	file:
early_event_add_tracer	trace/trace_events.c	/^early_event_add_tracer(struct dentry *parent, struct trace_array *tr)$/;"	f	file:
early_irq_init	irq/irqdesc.c	/^int __init early_irq_init(void)$/;"	f
early_irq_init	softirq.c	/^int __init __weak early_irq_init(void)$/;"	f
early_printk	printk/printk.c	/^asmlinkage __visible void early_printk(const char *fmt, ...)$/;"	f
early_probes	tracepoint.c	/^static struct rcu_head *early_probes;$/;"	v	typeref:struct:rcu_head	file:
early_srcu	rcu/update.c	/^DEFINE_STATIC_SRCU(early_srcu);$/;"	v
early_trace_init	trace/trace.c	/^void __init early_trace_init(void)$/;"	f
effective	audit.h	/^		kernel_cap_t	effective;	\/* effective set of process *\/$/;"	m	union:audit_cap_data::__anon52
effective_cpus	cgroup/cpuset.c	/^	cpumask_var_t effective_cpus;$/;"	m	struct:cpuset	file:
effective_mems	cgroup/cpuset.c	/^	nodemask_t effective_mems;$/;"	m	struct:cpuset	file:
effective_prio	sched/core.c	/^static int effective_prio(struct task_struct *p)$/;"	f	file:
egid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
elem_size	bpf/hashtab.c	/^	u32 elem_size;	\/* size of each element in bytes *\/$/;"	m	struct:bpf_htab	file:
element	locking/lockdep.c	/^	struct lock_list *element[MAX_CIRCULAR_QUEUE_SIZE];$/;"	m	struct:circular_queue	typeref:struct:circular_queue::lock_list	file:
elements	sched/cpudeadline.h	/^	struct cpudl_item	*elements;$/;"	m	struct:cpudl	typeref:struct:cpudl::cpudl_item
elems	bpf/hashtab.c	/^	void *elems;$/;"	m	struct:bpf_htab	file:
elems	bpf/stackmap.c	/^	void *elems;$/;"	m	struct:bpf_stack_map	file:
elf_core_extra_data_size	elfcore.c	/^size_t __weak elf_core_extra_data_size(void)$/;"	f
elf_core_extra_phdrs	elfcore.c	/^Elf_Half __weak elf_core_extra_phdrs(void)$/;"	f
elf_core_write_extra_data	elfcore.c	/^int __weak elf_core_write_extra_data(struct coredump_params *cprm)$/;"	f
elf_core_write_extra_phdrs	elfcore.c	/^int __weak elf_core_write_extra_phdrs(struct coredump_params *cprm, loff_t offset)$/;"	f
elf_header_check	module.c	/^static int elf_header_check(struct load_info *info)$/;"	f	file:
elf_type	module.c	/^static char elf_type(const Elf_Sym *sym, const struct load_info *info)$/;"	f	file:
elfcorehdr_addr	crash_dump.c	/^EXPORT_SYMBOL_GPL(elfcorehdr_addr);$/;"	v
elfcorehdr_addr	crash_dump.c	/^unsigned long long elfcorehdr_addr = ELFCORE_ADDR_MAX;$/;"	v
elfcorehdr_size	crash_dump.c	/^unsigned long long elfcorehdr_size;$/;"	v
eligible_child	exit.c	/^eligible_child(struct wait_opts *wo, bool ptrace, struct task_struct *p)$/;"	f	file:
eligible_pid	exit.c	/^static int eligible_pid(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
elt	trace/trace_events_hist.c	/^	struct tracing_map_elt		elt;$/;"	m	struct:track_data	typeref:struct:track_data::tracing_map_elt	file:
elt	trace/trace_events_hist.c	/^	struct tracing_map_elt	*elt;$/;"	m	struct:snapshot_context	typeref:struct:snapshot_context::tracing_map_elt	file:
elt	trace/tracing_map.h	/^	struct tracing_map_elt		*elt;$/;"	m	struct:tracing_map_sort_entry	typeref:struct:tracing_map_sort_entry::tracing_map_elt
elt_alloc	trace/tracing_map.h	/^	int			(*elt_alloc)(struct tracing_map_elt *elt);$/;"	m	struct:tracing_map_ops
elt_clear	trace/tracing_map.h	/^	void			(*elt_clear)(struct tracing_map_elt *elt);$/;"	m	struct:tracing_map_ops
elt_copied	trace/tracing_map.h	/^	bool				elt_copied;$/;"	m	struct:tracing_map_sort_entry
elt_free	trace/tracing_map.h	/^	void			(*elt_free)(struct tracing_map_elt *elt);$/;"	m	struct:tracing_map_ops
elt_init	trace/tracing_map.h	/^	void			(*elt_init)(struct tracing_map_elt *elt);$/;"	m	struct:tracing_map_ops
elts	trace/tracing_map.h	/^	struct tracing_map_array	*elts;$/;"	m	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array
em_cpu_get	power/energy_model.c	/^EXPORT_SYMBOL_GPL(em_cpu_get);$/;"	v
em_cpu_get	power/energy_model.c	/^struct em_perf_domain *em_cpu_get(int cpu)$/;"	f
em_create_pd	power/energy_model.c	/^static struct em_perf_domain *em_create_pd(cpumask_t *span, int nr_states,$/;"	f	file:
em_debug_cpus	power/energy_model.c	/^DEFINE_SHOW_ATTRIBUTE(em_debug_cpus);$/;"	v
em_debug_cpus_show	power/energy_model.c	/^static int em_debug_cpus_show(struct seq_file *s, void *unused)$/;"	f	file:
em_debug_create_cs	power/energy_model.c	/^static void em_debug_create_cs(struct em_cap_state *cs, struct dentry *pd)$/;"	f	file:
em_debug_create_pd	power/energy_model.c	/^static void em_debug_create_pd(struct em_perf_domain *pd, int cpu) {}$/;"	f	file:
em_debug_create_pd	power/energy_model.c	/^static void em_debug_create_pd(struct em_perf_domain *pd, int cpu)$/;"	f	file:
em_debug_init	power/energy_model.c	/^core_initcall(em_debug_init);$/;"	v
em_debug_init	power/energy_model.c	/^static int __init em_debug_init(void)$/;"	f	file:
em_pd	sched/sched.h	/^	struct em_perf_domain *em_pd;$/;"	m	struct:perf_domain	typeref:struct:perf_domain::em_perf_domain
em_register_perf_domain	power/energy_model.c	/^EXPORT_SYMBOL_GPL(em_register_perf_domain);$/;"	v
em_register_perf_domain	power/energy_model.c	/^int em_register_perf_domain(cpumask_t *span, unsigned int nr_states,$/;"	f
ema_time	irq/timings.c	/^	u64	ema_time[PREDICTION_BUFFER_SIZE];$/;"	m	struct:irqt_stat	file:
emergency_restart	reboot.c	/^EXPORT_SYMBOL_GPL(emergency_restart);$/;"	v
emergency_restart	reboot.c	/^void emergency_restart(void)$/;"	f
empty_buckets	trace/ftrace.c	/^static const struct hlist_head empty_buckets[1];$/;"	v	typeref:struct:hlist_head	file:
empty_hash	trace/ftrace.c	/^static const struct ftrace_hash empty_hash = {$/;"	v	typeref:struct:ftrace_hash	file:
empty_prog_array	bpf/core.c	/^} empty_prog_array = {$/;"	v	typeref:struct:__anon67	file:
enable	trace/trace.h	/^	bool				enable;$/;"	m	struct:enable_trigger_data
enable	trace/trace.h	/^	int			 enable;$/;"	m	struct:ftrace_mod_load
enable	trace/trace_events.c	/^	bool				enable;$/;"	m	struct:event_probe_data	file:
enable_boot_kprobe_events	trace/trace_kprobe.c	/^static __init void enable_boot_kprobe_events(void)$/;"	f	file:
enable_branch_tracing	trace/trace_branch.c	/^int enable_branch_tracing(struct trace_array *tr)$/;"	f
enable_cgroup_debug	cgroup/cgroup.c	/^static int __init enable_cgroup_debug(char *str)$/;"	f	file:
enable_debug_cgroup	cgroup/cgroup.c	/^void __init __weak enable_debug_cgroup(void) { }$/;"	f
enable_debug_cgroup	cgroup/debug.c	/^void __init enable_debug_cgroup(void)$/;"	f
enable_irq	irq/manage.c	/^EXPORT_SYMBOL(enable_irq);$/;"	v
enable_irq	irq/manage.c	/^void enable_irq(unsigned int irq)$/;"	f
enable_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(enable_kprobe);$/;"	v
enable_kprobe	kprobes.c	/^int enable_kprobe(struct kprobe *kp)$/;"	f
enable_nmi	irq/manage.c	/^void enable_nmi(unsigned int irq)$/;"	f
enable_nonboot_cpus	cpu.c	/^void enable_nonboot_cpus(void)$/;"	f
enable_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(enable_percpu_irq);$/;"	v
enable_percpu_irq	irq/manage.c	/^void enable_percpu_irq(unsigned int irq, unsigned int type)$/;"	f
enable_percpu_nmi	irq/manage.c	/^void enable_percpu_nmi(unsigned int irq, unsigned int type)$/;"	f
enable_restore_image_protection	power/power.h	/^static inline void enable_restore_image_protection(void) {}$/;"	f
enable_restore_image_protection	power/snapshot.c	/^void enable_restore_image_protection(void)$/;"	f
enable_sched_clock_irqtime	sched/cputime.c	/^void enable_sched_clock_irqtime(void)$/;"	f
enable_stacktrace	trace/trace_stack.c	/^static __init int enable_stacktrace(char *str)$/;"	f	file:
enable_timestamps	trace/trace_events_hist.c	/^	bool				enable_timestamps;$/;"	m	struct:hist_trigger_data	file:
enable_trace_buffered_event	trace/trace.c	/^static void enable_trace_buffered_event(void *data)$/;"	f	file:
enable_trace_kprobe	trace/trace_kprobe.c	/^enable_trace_kprobe(struct trace_kprobe *tk, struct trace_event_file *file)$/;"	f	file:
enable_trigger_data	trace/trace.h	/^struct enable_trigger_data {$/;"	s
enabled	stop_machine.c	/^	bool			enabled;	\/* is this stopper enabled? *\/$/;"	m	struct:cpu_stopper	file:
enabled	trace/trace.h	/^	int			enabled;$/;"	m	struct:tracer
enabled_kobj_attr	livepatch/core.c	/^static struct kobj_attribute enabled_kobj_attr = __ATTR_RW(enabled);$/;"	v	typeref:struct:kobj_attribute	file:
enabled_show	livepatch/core.c	/^static ssize_t enabled_show(struct kobject *kobj,$/;"	f	file:
enabled_store	livepatch/core.c	/^static ssize_t enabled_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
encode_comp2_t	acct.c	/^static comp2_t encode_comp2_t(u64 value)$/;"	f	file:
encode_comp_t	acct.c	/^static comp_t encode_comp_t(unsigned long value)$/;"	f	file:
encode_cpu	locking/osq_lock.c	/^static inline int encode_cpu(int cpu_nr)$/;"	f	file:
encode_float	acct.c	/^static u32 encode_float(u64 value)$/;"	f	file:
encode_tail	locking/qspinlock.c	/^static inline __pure u32 encode_tail(int cpu, int idx)$/;"	f	file:
end	power/snapshot.c	/^	unsigned long end;$/;"	m	struct:mem_extent	file:
end	power/swap.c	/^	unsigned long end;$/;"	m	struct:swsusp_extent	file:
end	trace/trace.c	/^	const char			*end;	\/* points to NULL *\/$/;"	m	struct:trace_eval_map_tail	file:
end_addr	trace/ftrace.c	/^	unsigned long		end_addr;$/;"	m	struct:ftrace_mod_map	file:
end_pfn	power/snapshot.c	/^	unsigned long end_pfn;		\/* Zone end page frame + 1     *\/$/;"	m	struct:mem_zone_bm_rtree	file:
end_pfn	power/snapshot.c	/^	unsigned long end_pfn;$/;"	m	struct:nosave_region	file:
enough_free_mem	power/snapshot.c	/^static int enough_free_mem(unsigned int nr_pages, unsigned int nr_highmem)$/;"	f	file:
enough_swap	power/swap.c	/^static int enough_swap(unsigned int nr_pages)$/;"	f	file:
enqueue_dl_entity	sched/deadline.c	/^enqueue_dl_entity(struct sched_dl_entity *dl_se,$/;"	f	file:
enqueue_entity	sched/fair.c	/^enqueue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
enqueue_hrtimer	time/hrtimer.c	/^static int enqueue_hrtimer(struct hrtimer *timer,$/;"	f	file:
enqueue_load_avg	sched/fair.c	/^enqueue_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se) { }$/;"	f	file:
enqueue_load_avg	sched/fair.c	/^enqueue_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
enqueue_pushable_dl_task	sched/deadline.c	/^static void enqueue_pushable_dl_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_pushable_dl_task	sched/deadline.c	/^void enqueue_pushable_dl_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_pushable_task	sched/rt.c	/^static inline void enqueue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_pushable_task	sched/rt.c	/^static void enqueue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_rt_entity	sched/rt.c	/^static void enqueue_rt_entity(struct sched_rt_entity *rt_se, unsigned int flags)$/;"	f	file:
enqueue_runnable_load_avg	sched/fair.c	/^enqueue_runnable_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se) { }$/;"	f	file:
enqueue_runnable_load_avg	sched/fair.c	/^enqueue_runnable_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
enqueue_task	sched/core.c	/^static inline void enqueue_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task	sched/sched.h	/^	void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
enqueue_task_dl	sched/deadline.c	/^static void enqueue_task_dl(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task_fair	sched/fair.c	/^enqueue_task_fair(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task_rt	sched/rt.c	/^enqueue_task_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task_stop	sched/stop_task.c	/^enqueue_task_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_timer	time/timer.c	/^static void enqueue_timer(struct timer_base *base, struct timer_list *timer,$/;"	f	file:
enqueue_top_rt_rq	sched/rt.c	/^enqueue_top_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:kprobe_trace_entry_head	typeref:struct:kprobe_trace_entry_head::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:kretprobe_trace_entry_head	typeref:struct:kretprobe_trace_entry_head::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:syscall_trace_enter	typeref:struct:syscall_trace_enter::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:syscall_trace_exit	typeref:struct:syscall_trace_exit::trace_entry
ent	trace/trace_events_hist.c	/^	struct trace_entry	ent;$/;"	m	struct:synth_trace_event	typeref:struct:synth_trace_event::trace_entry	file:
ent	trace/trace_functions_graph.c	/^	struct ftrace_graph_ent_entry	ent;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::ftrace_graph_ent_entry	file:
ent	trace/trace_uprobe.c	/^	struct trace_entry	ent;$/;"	m	struct:uprobe_trace_entry_head	typeref:struct:uprobe_trace_entry_head::trace_entry	file:
enter_funcs	trace/trace_functions_graph.c	/^	unsigned long	enter_funcs[FTRACE_RETFUNC_DEPTH];$/;"	m	struct:fgraph_cpu_data	file:
enter_kgdb	debug/debug_core.h	/^	int			enter_kgdb;$/;"	m	struct:debuggerinfo_struct
enter_record	trace/ftrace.c	/^enter_record(struct ftrace_hash *hash, struct dyn_ftrace *rec, int clear_filter)$/;"	f	file:
enter_state	power/suspend.c	/^static int enter_state(suspend_state_t state)$/;"	f	file:
enter_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *enter_syscall_files[NR_syscalls];$/;"	m	struct:trace_array	typeref:struct:trace_array::__rcu
enter_syscall_print_funcs	trace/trace_syscalls.c	/^struct trace_event_functions enter_syscall_print_funcs = {$/;"	v	typeref:struct:trace_event_functions
entering_platform_hibernation	power/hibernate.c	/^static bool entering_platform_hibernation;$/;"	v	file:
entity_before	sched/fair.c	/^static inline int entity_before(struct sched_entity *a,$/;"	f	file:
entity_is_task	sched/sched.h	683;"	d
entity_is_task	sched/sched.h	685;"	d
entity_tick	sched/fair.c	/^entity_tick(struct cfs_rq *cfs_rq, struct sched_entity *curr, int queued)$/;"	f	file:
entries	jump_label.c	/^	struct jump_entry *entries;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::jump_entry	file:
entries	power/swap.c	/^	sector_t entries[MAP_PAGE_ENTRIES];$/;"	m	struct:swap_map_page	file:
entries	trace/ring_buffer.c	/^	local_t				entries;$/;"	m	struct:ring_buffer_per_cpu	file:
entries	trace/ring_buffer.c	/^	local_t		 entries;	\/* entries on this page *\/$/;"	m	struct:buffer_page	file:
entries	trace/trace.h	/^	unsigned long		entries;$/;"	m	struct:trace_array_cpu
entries_bytes	trace/ring_buffer.c	/^	local_t				entries_bytes;$/;"	m	struct:ring_buffer_per_cpu	file:
entries_per_page	trace/tracing_map.h	/^	unsigned int entries_per_page;$/;"	m	struct:tracing_map_array
entry	trace/ftrace.c	/^	struct ftrace_func_entry	*entry;$/;"	m	struct:ftrace_graph_data	typeref:struct:ftrace_graph_data::ftrace_func_entry	file:
entry	trace/ftrace.c	/^	struct ftrace_func_entry	entry;$/;"	m	struct:ftrace_func_map	typeref:struct:ftrace_func_map::ftrace_func_entry	file:
entry	trace/trace.h	/^	struct dentry			*entry;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::dentry
entry	trace/trace.h	/^	struct dentry			*entry;$/;"	m	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::dentry
entry	workqueue_internal.h	/^		struct list_head	entry;	\/* L: while idle *\/$/;"	m	union:worker::__anon13	typeref:struct:worker::__anon13::list_head
entry_count	async.c	/^static atomic_t entry_count;$/;"	v	file:
entry_handler	test_kprobes.c	/^static int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
entry_mask	trace/tracing_map.h	/^	unsigned int entry_mask;$/;"	m	struct:tracing_map_array
entry_shift	trace/tracing_map.h	/^	unsigned int entry_shift;$/;"	m	struct:tracing_map_array
entry_size_shift	trace/tracing_map.h	/^	unsigned int entry_size_shift;$/;"	m	struct:tracing_map_array
enum_ops	bpf/btf.c	/^static struct btf_kind_operations enum_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
env_resolve_init	bpf/btf.c	/^static int env_resolve_init(struct btf_verifier_env *env)$/;"	f	file:
env_stack_peak	bpf/btf.c	/^static const struct resolve_vertex *env_stack_peak(struct btf_verifier_env *env)$/;"	f	file:
env_stack_pop_resolved	bpf/btf.c	/^static void env_stack_pop_resolved(struct btf_verifier_env *env,$/;"	f	file:
env_stack_push	bpf/btf.c	/^static int env_stack_push(struct btf_verifier_env *env,$/;"	f	file:
env_stack_set_next_member	bpf/btf.c	/^static void env_stack_set_next_member(struct btf_verifier_env *env,$/;"	f	file:
env_type_is_resolve_sink	bpf/btf.c	/^static bool env_type_is_resolve_sink(const struct btf_verifier_env *env,$/;"	f	file:
env_type_is_resolved	bpf/btf.c	/^static bool env_type_is_resolved(const struct btf_verifier_env *env,$/;"	f	file:
epoch_cyc	time/sched_clock.c	/^	u64 epoch_cyc;$/;"	m	struct:clock_read_data	file:
epoch_ns	time/sched_clock.c	/^	u64 epoch_ns;$/;"	m	struct:clock_read_data	file:
epoll_create	sys_ni.c	/^COND_SYSCALL(epoll_create);$/;"	v
epoll_create1	sys_ni.c	/^COND_SYSCALL(epoll_create1);$/;"	v
epoll_ctl	sys_ni.c	/^COND_SYSCALL(epoll_ctl);$/;"	v
epoll_pwait	sys_ni.c	/^COND_SYSCALL(epoll_pwait);$/;"	v
epoll_pwait	sys_ni.c	/^COND_SYSCALL_COMPAT(epoll_pwait);$/;"	v
epoll_wait	sys_ni.c	/^COND_SYSCALL(epoll_wait);$/;"	v
err	events/core.c	/^	int			err;$/;"	m	struct:remote_output	file:
err_broadcast	time/tick-broadcast.c	/^static void err_broadcast(const struct cpumask *mask)$/;"	f	file:
err_code	debug/debug_core.h	/^	int			err_code;$/;"	m	struct:kgdb_state
err_info	trace/trace.c	/^struct err_info {$/;"	s	file:
err_log	trace/trace.h	/^	struct list_head	err_log;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
err_pos	trace/trace.c	/^unsigned int err_pos(char *cmd, const char *str)$/;"	f
err_printk	dma/debug.c	211;"	d	file:
err_segs	rcu/rcutorture.c	/^static struct rt_read_seg err_segs[RCUTORTURE_RDR_MAX_SEGS];$/;"	v	typeref:struct:rt_read_seg	file:
err_segs_recorded	rcu/rcutorture.c	/^static int err_segs_recorded;$/;"	v	file:
err_text	trace/trace_events_filter.c	/^static const char *err_text[] = { ERRORS };$/;"	v	file:
err_text	trace/trace_events_hist.c	/^static const char *err_text[] = { ERRORS };$/;"	v	file:
error	power/swap.c	/^	blk_status_t		error;$/;"	m	struct:hib_bio_batch	file:
error	seccomp.c	/^	int error;$/;"	m	struct:seccomp_knotif	file:
error_count	dma/debug.c	/^static u32 error_count;$/;"	v	file:
error_packet	debug/gdbstub.c	/^static void error_packet(char *pkt, int error)$/;"	f	file:
errors	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
errpos	trace/trace_events_hist.c	/^static int errpos(char *str)$/;"	f	file:
errs	trace/trace.c	/^	const char	**errs;	\/* ptr to loc-specific array of err strings *\/$/;"	m	struct:err_info	file:
euid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
eval_map_next	trace/trace.c	/^static void *eval_map_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
eval_map_show	trace/trace.c	/^static int eval_map_show(struct seq_file *m, void *v)$/;"	f	file:
eval_map_start	trace/trace.c	/^static void *eval_map_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
eval_map_stop	trace/trace.c	/^static void eval_map_stop(struct seq_file *m, void *v)$/;"	f	file:
eval_replace	trace/trace_events.c	/^static char *eval_replace(char *ptr, struct trace_eval_map *map, int len)$/;"	f	file:
event	events/core.c	/^	struct perf_event	*event;$/;"	m	struct:stop_event_data	typeref:struct:stop_event_data::perf_event	file:
event	events/core.c	/^	struct perf_event *event;$/;"	m	struct:event_function_struct	typeref:struct:event_function_struct::perf_event	file:
event	events/core.c	/^	struct perf_event *event;$/;"	m	struct:perf_read_data	typeref:struct:perf_read_data::perf_event	file:
event	trace/trace_events_hist.c	/^			char			*event;$/;"	m	struct:action_data::__anon46::__anon47	file:
event_class_syscall_enter	trace/trace_syscalls.c	/^struct trace_event_class __refdata event_class_syscall_enter = {$/;"	v	typeref:struct:__refdata
event_class_syscall_exit	trace/trace_syscalls.c	/^struct trace_event_class __refdata event_class_syscall_exit = {$/;"	v	typeref:struct:__refdata
event_clear_filter	trace/trace_events_filter.c	/^static inline void event_clear_filter(struct trace_event_file *file)$/;"	f	file:
event_clear_no_set_filter_flag	trace/trace_events_filter.c	/^event_clear_no_set_filter_flag(struct trace_event_file *file)$/;"	f	file:
event_command	trace/trace.h	/^struct event_command {$/;"	s
event_command_flags	trace/trace.h	/^enum event_command_flags {$/;"	g
event_command_needs_rec	trace/trace.h	/^static inline bool event_command_needs_rec(struct event_command *cmd_ops)$/;"	f
event_command_post_trigger	trace/trace.h	/^static inline bool event_command_post_trigger(struct event_command *cmd_ops)$/;"	f
event_create_dir	trace/trace_events.c	/^event_create_dir(struct dentry *parent, struct trace_event_file *file)$/;"	f	file:
event_dir	trace/trace.h	/^	struct dentry		*event_dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
event_disable_cmd	trace/trace_events.c	/^static struct ftrace_func_command event_disable_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
event_disable_count_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_disable_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_disable_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops event_disable_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_disable_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_disable_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_disable_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops event_disable_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_enable_cmd	trace/trace_events.c	/^static struct ftrace_func_command event_enable_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
event_enable_count_probe	trace/trace_events.c	/^event_enable_count_probe(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
event_enable_count_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_enable_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_enable_count_trigger	trace/trace_events_trigger.c	/^event_enable_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
event_enable_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops event_enable_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_enable_free	trace/trace_events.c	/^event_enable_free(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
event_enable_func	trace/trace_events.c	/^event_enable_func(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
event_enable_get_trigger_ops	trace/trace_events_trigger.c	/^event_enable_get_trigger_ops(char *cmd, char *param)$/;"	f	file:
event_enable_init	trace/trace_events.c	/^event_enable_init(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
event_enable_on_exec	events/core.c	/^static int event_enable_on_exec(struct perf_event *event,$/;"	f	file:
event_enable_print	trace/trace_events.c	/^event_enable_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
event_enable_probe	trace/trace_events.c	/^event_enable_probe(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
event_enable_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_enable_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_enable_read	trace/trace_events.c	/^event_enable_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
event_enable_register_trigger	trace/trace_events_trigger.c	/^int event_enable_register_trigger(char *glob,$/;"	f
event_enable_trigger	trace/trace_events_trigger.c	/^event_enable_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
event_enable_trigger_free	trace/trace_events_trigger.c	/^void event_enable_trigger_free(struct event_trigger_ops *ops,$/;"	f
event_enable_trigger_func	trace/trace_events_trigger.c	/^int event_enable_trigger_func(struct event_command *cmd_ops,$/;"	f
event_enable_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops event_enable_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_enable_trigger_print	trace/trace_events_trigger.c	/^int event_enable_trigger_print(struct seq_file *m,$/;"	f
event_enable_unregister_trigger	trace/trace_events_trigger.c	/^void event_enable_unregister_trigger(char *glob,$/;"	f
event_enable_write	trace/trace_events.c	/^event_enable_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
event_f	events/core.c	/^typedef void (*event_f)(struct perf_event *, struct perf_cpu_context *,$/;"	t	file:
event_file	trace/trace_events_hist.c	/^	struct trace_event_file		*event_file;$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::trace_event_file	file:
event_file	trace/trace_events_hist.c	/^static struct trace_event_file *event_file(struct trace_array *tr,$/;"	f	file:
event_file_data	trace/trace.h	/^static inline void *event_file_data(struct file *filp)$/;"	f
event_file_link	trace/trace_probe.h	/^struct event_file_link {$/;"	s
event_filter	trace/trace.h	/^struct event_filter {$/;"	s
event_filter	trace/trace_events_filter.c	/^static inline struct event_filter *event_filter(struct trace_event_file *file)$/;"	f	file:
event_filter_match	events/core.c	/^event_filter_match(struct perf_event *event)$/;"	f	file:
event_filter_pid_sched_process_exit	trace/trace_events.c	/^event_filter_pid_sched_process_exit(void *data, struct task_struct *task)$/;"	f	file:
event_filter_pid_sched_process_fork	trace/trace_events.c	/^event_filter_pid_sched_process_fork(void *data,$/;"	f	file:
event_filter_pid_sched_switch_probe_post	trace/trace_events.c	/^event_filter_pid_sched_switch_probe_post(void *data, bool preempt,$/;"	f	file:
event_filter_pid_sched_switch_probe_pre	trace/trace_events.c	/^event_filter_pid_sched_switch_probe_pre(void *data, bool preempt,$/;"	f	file:
event_filter_pid_sched_wakeup_probe_post	trace/trace_events.c	/^event_filter_pid_sched_wakeup_probe_post(void *data, struct task_struct *task)$/;"	f	file:
event_filter_pid_sched_wakeup_probe_pre	trace/trace_events.c	/^event_filter_pid_sched_wakeup_probe_pre(void *data, struct task_struct *task)$/;"	f	file:
event_filter_read	trace/trace_events.c	/^event_filter_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
event_filter_write	trace/trace_events.c	/^event_filter_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
event_function	events/core.c	/^static int event_function(void *info)$/;"	f	file:
event_function_call	events/core.c	/^static void event_function_call(struct perf_event *event, event_f func, void *data)$/;"	f	file:
event_function_local	events/core.c	/^static void event_function_local(struct perf_event *event, event_f func, void *data)$/;"	f	file:
event_function_struct	events/core.c	/^struct event_function_struct {$/;"	s	file:
event_hist_fops	trace/trace_events_hist.c	/^const struct file_operations event_hist_fops = {$/;"	v	typeref:struct:file_operations
event_hist_get_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops *event_hist_get_trigger_ops(char *cmd,$/;"	f	file:
event_hist_open	trace/trace_events_hist.c	/^static int event_hist_open(struct inode *inode, struct file *file)$/;"	f	file:
event_hist_trigger	trace/trace_events_hist.c	/^static void event_hist_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
event_hist_trigger_free	trace/trace_events_hist.c	/^static void event_hist_trigger_free(struct event_trigger_ops *ops,$/;"	f	file:
event_hist_trigger_func	trace/trace_events_hist.c	/^static int event_hist_trigger_func(struct event_command *cmd_ops,$/;"	f	file:
event_hist_trigger_init	trace/trace_events_hist.c	/^static int event_hist_trigger_init(struct event_trigger_ops *ops,$/;"	f	file:
event_hist_trigger_named_free	trace/trace_events_hist.c	/^static void event_hist_trigger_named_free(struct event_trigger_ops *ops,$/;"	f	file:
event_hist_trigger_named_init	trace/trace_events_hist.c	/^static int event_hist_trigger_named_init(struct event_trigger_ops *ops,$/;"	f	file:
event_hist_trigger_named_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops event_hist_trigger_named_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_hist_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops event_hist_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
event_hist_trigger_print	trace/trace_events_hist.c	/^static int event_hist_trigger_print(struct seq_file *m,$/;"	f	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_bpf_event	typeref:struct:perf_bpf_event::__anon7	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_comm_event	typeref:struct:perf_comm_event::__anon2	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_ksymbol_event	typeref:struct:perf_ksymbol_event::__anon6	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_mmap_event	typeref:struct:perf_mmap_event::__anon4	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_namespaces_event	typeref:struct:perf_namespaces_event::__anon3	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_switch_event	typeref:struct:perf_switch_event::__anon5	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::__anon1	file:
event_id_read	trace/trace_events.c	/^event_id_read(struct file *filp, char __user *ubuf, size_t cnt, loff_t *ppos)$/;"	f	file:
event_init	trace/trace_events.c	/^static int event_init(struct trace_event_call *call)$/;"	f	file:
event_list	events/internal.h	/^	struct list_head		event_list;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::list_head
event_lock	events/internal.h	/^	spinlock_t			event_lock;$/;"	m	struct:ring_buffer
event_mutex	trace/trace_events.c	/^DEFINE_MUTEX(event_mutex);$/;"	v
event_name	trace/trace_events_hist.c	/^	char				*event_name;$/;"	m	struct:hist_field	file:
event_no_set_filter_flag	trace/trace_events_filter.c	/^event_no_set_filter_flag(struct trace_event_file *file)$/;"	f	file:
event_probe_data	trace/trace_events.c	/^struct event_probe_data {$/;"	s	file:
event_remove	trace/trace_events.c	/^static void event_remove(struct trace_event_call *call)$/;"	f	file:
event_sched_in	events/core.c	/^event_sched_in(struct perf_event *event,$/;"	f	file:
event_sched_out	events/core.c	/^event_sched_out(struct perf_event *event,$/;"	f	file:
event_set_filter	trace/trace_events_filter.c	/^static inline void event_set_filter(struct trace_event_file *file,$/;"	f	file:
event_set_filtered_flag	trace/trace_events_filter.c	/^static inline void event_set_filtered_flag(struct trace_event_file *file)$/;"	f	file:
event_set_no_set_filter_flag	trace/trace_events_filter.c	/^event_set_no_set_filter_flag(struct trace_event_file *file)$/;"	f	file:
event_status	trace/ring_buffer_benchmark.c	/^enum event_status {$/;"	g	file:
event_subsystem	trace/trace.h	/^struct event_subsystem {$/;"	s
event_subsystem_dir	trace/trace_events.c	/^event_subsystem_dir(struct trace_array *tr, const char *name,$/;"	f	file:
event_system	trace/trace_events_hist.c	/^			char			*event_system;$/;"	m	struct:action_data::__anon46::__anon47	file:
event_test_stuff	trace/trace_events.c	/^static __init void event_test_stuff(void)$/;"	f	file:
event_test_thread	trace/trace_events.c	/^static __init int event_test_thread(void *unused)$/;"	f	file:
event_trace_add_tracer	trace/trace_events.c	/^int event_trace_add_tracer(struct dentry *parent, struct trace_array *tr)$/;"	f
event_trace_del_tracer	trace/trace_events.c	/^int event_trace_del_tracer(struct trace_array *tr)$/;"	f
event_trace_enable	trace/trace_events.c	/^static __init int event_trace_enable(void)$/;"	f	file:
event_trace_enable_again	trace/trace_events.c	/^early_initcall(event_trace_enable_again);$/;"	v
event_trace_enable_again	trace/trace_events.c	/^static __init int event_trace_enable_again(void)$/;"	f	file:
event_trace_init	trace/trace_events.c	/^__init int event_trace_init(void)$/;"	f
event_trace_memsetup	trace/trace_events.c	/^static __init int event_trace_memsetup(void)$/;"	f	file:
event_trace_self_test_with_function	trace/trace_events.c	/^static __init void event_trace_self_test_with_function(void)$/;"	f	file:
event_trace_self_tests	trace/trace_events.c	/^static __init void event_trace_self_tests(void)$/;"	f	file:
event_trace_self_tests_init	trace/trace_events.c	/^late_initcall(event_trace_self_tests_init);$/;"	v
event_trace_self_tests_init	trace/trace_events.c	/^static __init int event_trace_self_tests_init(void)$/;"	f	file:
event_trigger_callback	trace/trace_events_trigger.c	/^event_trigger_callback(struct event_command *cmd_ops,$/;"	f	file:
event_trigger_data	trace/trace.h	/^struct event_trigger_data {$/;"	s
event_trigger_fops	trace/trace_events_trigger.c	/^const struct file_operations event_trigger_fops = {$/;"	v	typeref:struct:file_operations
event_trigger_free	trace/trace_events_trigger.c	/^event_trigger_free(struct event_trigger_ops *ops,$/;"	f	file:
event_trigger_init	trace/trace_events_trigger.c	/^int event_trigger_init(struct event_trigger_ops *ops,$/;"	f
event_trigger_open	trace/trace_events_trigger.c	/^event_trigger_open(struct inode *inode, struct file *filp)$/;"	f	file:
event_trigger_ops	trace/trace.h	/^struct event_trigger_ops {$/;"	s
event_trigger_print	trace/trace_events_trigger.c	/^event_trigger_print(const char *name, struct seq_file *m,$/;"	f	file:
event_trigger_regex_open	trace/trace_events_trigger.c	/^static int event_trigger_regex_open(struct inode *inode, struct file *file)$/;"	f	file:
event_trigger_regex_release	trace/trace_events_trigger.c	/^static int event_trigger_regex_release(struct inode *inode, struct file *file)$/;"	f	file:
event_trigger_regex_write	trace/trace_events_trigger.c	/^static ssize_t event_trigger_regex_write(struct file *file,$/;"	f	file:
event_trigger_release	trace/trace_events_trigger.c	/^event_trigger_release(struct inode *inode, struct file *file)$/;"	f	file:
event_trigger_unlock_commit	trace/trace.h	/^event_trigger_unlock_commit(struct trace_event_file *file,$/;"	f
event_trigger_unlock_commit_regs	trace/trace.h	/^event_trigger_unlock_commit_regs(struct trace_event_file *file,$/;"	f
event_trigger_write	trace/trace_events_trigger.c	/^event_trigger_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
event_triggers_call	trace/trace_events_trigger.c	/^EXPORT_SYMBOL_GPL(event_triggers_call);$/;"	v
event_triggers_call	trace/trace_events_trigger.c	/^event_triggers_call(struct trace_event_file *file, void *rec,$/;"	f
event_triggers_post_call	trace/trace_events_trigger.c	/^EXPORT_SYMBOL_GPL(event_triggers_post_call);$/;"	v
event_triggers_post_call	trace/trace_events_trigger.c	/^event_triggers_post_call(struct trace_event_file *file,$/;"	f
event_triggers_seq_ops	trace/trace_events_trigger.c	/^static const struct seq_operations event_triggers_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
event_type_t	events/core.c	/^enum event_type_t {$/;"	g	file:
eventfd	sys_ni.c	/^COND_SYSCALL(eventfd);$/;"	v
eventfd2	sys_ni.c	/^COND_SYSCALL(eventfd2);$/;"	v
events	events/internal.h	/^	local_t				events;		\/* event limit       *\/$/;"	m	struct:ring_buffer
events	trace/ring_buffer.c	/^	unsigned long		events;$/;"	m	struct:rb_test_data	file:
events	trace/trace.h	/^	struct list_head	events;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
events_file	cgroup/pids.c	/^	struct cgroup_file		events_file;$/;"	m	struct:pids_cgroup	typeref:struct:pids_cgroup::cgroup_file	file:
events_limit	cgroup/pids.c	/^	atomic64_t			events_limit;$/;"	m	struct:pids_cgroup	file:
events_nested	trace/ring_buffer.c	/^	unsigned long		events_nested;$/;"	m	struct:rb_test_data	file:
evict_chunk	audit_tree.c	/^static void evict_chunk(struct audit_chunk *chunk)$/;"	f	file:
evtdev	time/tick-sched.h	/^	struct clock_event_device *evtdev;$/;"	m	struct:tick_device	typeref:struct:tick_device::clock_event_device
ex_vector	debug/debug_core.h	/^	int			ex_vector;$/;"	m	struct:kgdb_state
exact_match	dma/debug.c	/^static bool exact_match(struct dma_debug_entry *a, struct dma_debug_entry *b)$/;"	f	file:
exception_level	debug/debug_core.c	/^static int			exception_level;$/;"	v	file:
exception_state	debug/debug_core.h	/^	int			exception_state;$/;"	m	struct:debuggerinfo_struct
exclusive_bit	locking/lockdep.c	/^static int exclusive_bit(int new_bit)$/;"	f	file:
exclusive_console	printk/printk.c	/^static struct console *exclusive_console;$/;"	v	typeref:struct:console	file:
exclusive_console_stop_seq	printk/printk.c	/^static u64 exclusive_console_stop_seq;$/;"	v	file:
exclusive_event_destroy	events/core.c	/^static void exclusive_event_destroy(struct perf_event *event)$/;"	f	file:
exclusive_event_init	events/core.c	/^static int exclusive_event_init(struct perf_event *event)$/;"	f	file:
exclusive_event_installable	events/core.c	/^static bool exclusive_event_installable(struct perf_event *event,$/;"	f	file:
exclusive_event_match	events/core.c	/^static bool exclusive_event_match(struct perf_event *e1, struct perf_event *e2)$/;"	f	file:
exclusive_mask	locking/lockdep.c	/^static unsigned long exclusive_mask(unsigned long mask)$/;"	f	file:
exec_clock	sched/sched.h	/^	u64			exec_clock;$/;"	m	struct:cfs_rq
execdomains_proc_show	exec_domain.c	/^static int execdomains_proc_show(struct seq_file *m, void *v)$/;"	f	file:
execute_in_process_context	workqueue.c	/^EXPORT_SYMBOL_GPL(execute_in_process_context);$/;"	v
execute_in_process_context	workqueue.c	/^int execute_in_process_context(work_func_t fn, struct execute_work *ew)$/;"	f
execve	audit.h	/^		} execve;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon62
execveat	sys_ni.c	/^COND_SYSCALL(execveat);$/;"	v
exit_creds	cred.c	/^void exit_creds(struct task_struct *tsk)$/;"	f
exit_itimers	time/posix-timers.c	/^void exit_itimers(struct signal_struct *sig)$/;"	f
exit_mm	exit.c	/^static void exit_mm(void)$/;"	f	file:
exit_notify	exit.c	/^static void exit_notify(struct task_struct *tsk, int group_dead)$/;"	f	file:
exit_pi_state_list	futex.c	/^void exit_pi_state_list(struct task_struct *curr)$/;"	f
exit_ptrace	ptrace.c	/^void exit_ptrace(struct task_struct *tracer, struct list_head *dead)$/;"	f
exit_rcu	rcu/tree_plugin.h	/^void exit_rcu(void)$/;"	f
exit_robust_list	futex.c	/^void exit_robust_list(struct task_struct *curr)$/;"	f
exit_signals	signal.c	/^void exit_signals(struct task_struct *tsk)$/;"	f
exit_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *exit_syscall_files[NR_syscalls];$/;"	m	struct:trace_array	typeref:struct:trace_array::__rcu
exit_syscall_print_funcs	trace/trace_syscalls.c	/^struct trace_event_functions exit_syscall_print_funcs = {$/;"	v	typeref:struct:trace_event_functions
exit_task_namespaces	nsproxy.c	/^void exit_task_namespaces(struct task_struct *p)$/;"	f
exit_tasks_rcu_finish	rcu/update.c	/^void exit_tasks_rcu_finish(void)$/;"	f
exit_tasks_rcu_start	rcu/update.c	/^void exit_tasks_rcu_start(void)$/;"	f
exited	kthread.c	/^	struct completion exited;$/;"	m	struct:kthread	typeref:struct:kthread::completion	file:
exitf	backtracetest.c	/^module_exit(exitf);$/;"	v
exitf	backtracetest.c	/^static void exitf(void)$/;"	f	file:
exp	rcu/tree.h	/^		u8 exp;$/;"	m	struct:rcu_noqs::__anon65
exp_completed	rcu/rcuperf.c	/^	unsigned long (*exp_completed)(void);$/;"	m	struct:rcu_perf_ops	file:
exp_deferred_qs	rcu/tree.h	/^	bool		exp_deferred_qs; \/* This CPU awaiting a deferred QS? *\/$/;"	m	struct:rcu_data
exp_dynticks_snap	rcu/tree.h	/^	int exp_dynticks_snap;		\/* Double-check need for IPI. *\/$/;"	m	struct:rcu_data
exp_funnel_lock	rcu/tree_exp.h	/^static bool exp_funnel_lock(unsigned long s)$/;"	f
exp_holdoff	rcu/srcutree.c	/^static ulong exp_holdoff = DEFAULT_SRCU_EXP_HOLDOFF;$/;"	v	file:
exp_mutex	rcu/tree.h	/^	struct mutex exp_mutex;			\/* Serialize expedited GP. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::mutex
exp_need_flush	rcu/tree.h	/^	bool exp_need_flush;	\/* Need to flush workitem? *\/$/;"	m	struct:rcu_node
exp_seq_rq	rcu/tree.h	/^	unsigned long exp_seq_rq;$/;"	m	struct:rcu_node
exp_sync	rcu/rcuperf.c	/^	void (*exp_sync)(void);$/;"	m	struct:rcu_perf_ops	file:
exp_sync	rcu/rcutorture.c	/^	void (*exp_sync)(void);$/;"	m	struct:rcu_torture_ops	file:
exp_tasks	rcu/tree.h	/^	struct list_head *exp_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
exp_wake_mutex	rcu/tree.h	/^	struct mutex exp_wake_mutex;		\/* Serialize wakeup. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::mutex
exp_wq	rcu/tree.h	/^	wait_queue_head_t exp_wq[4];$/;"	m	struct:rcu_node
expedited_need_qs	rcu/tree.h	/^	atomic_t expedited_need_qs;		\/* # CPUs left to check in. *\/$/;"	m	struct:rcu_state
expedited_sequence	rcu/tree.h	/^	unsigned long expedited_sequence;	\/* Take a ticket. *\/$/;"	m	struct:rcu_state
expedited_wq	rcu/tree.h	/^	struct swait_queue_head expedited_wq;	\/* Wait for check-ins. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head
expire_cfs_rq_runtime	sched/fair.c	/^static void expire_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
expire_timers	time/timer.c	/^static void expire_timers(struct timer_base *base, struct hlist_head *head)$/;"	f	file:
expires_gt	time/posix-cpu-timers.c	/^static inline int expires_gt(u64 expires, u64 new_exp)$/;"	f	file:
expires_seq	sched/sched.h	/^	int			expires_seq;$/;"	m	struct:cfs_bandwidth
expires_seq	sched/sched.h	/^	int			expires_seq;$/;"	m	struct:cfs_rq
explored_state	bpf/verifier.c	/^static struct bpf_verifier_state_list **explored_state($/;"	f	file:
expmask	rcu/tree.h	/^	unsigned long expmask;	\/* CPUs or groups that need to check in *\/$/;"	m	struct:rcu_node
expmaskinit	rcu/tree.h	/^	unsigned long expmaskinit;$/;"	m	struct:rcu_node
expmaskinitnext	rcu/tree.h	/^	unsigned long expmaskinitnext;$/;"	m	struct:rcu_node
exported	kallsyms.c	/^	int exported;$/;"	m	struct:kallsym_iter	file:
expr	trace/trace_events_hist.c	/^	char		*expr[TRACING_MAP_VARS_MAX];$/;"	m	struct:var_defs	file:
expr_field_str	trace/trace_events_hist.c	/^static void expr_field_str(struct hist_field *field, char *expr)$/;"	f	file:
expr_str	trace/trace_events_hist.c	/^static char *expr_str(struct hist_field *field, unsigned int level)$/;"	f	file:
ext	gcov/gcov.h	/^	const char *ext;$/;"	m	struct:gcov_link
extendables	rcu/rcutorture.c	/^	int extendables;$/;"	m	struct:rcu_torture_ops	file:
extended_time	trace/ring_buffer.c	144;"	d	file:
extra_bw	sched/sched.h	/^	u64			extra_bw;$/;"	m	struct:dl_rq
extra_elems	bpf/hashtab.c	/^	struct htab_elem *__percpu *extra_elems;$/;"	m	struct:bpf_htab	typeref:struct:bpf_htab::__percpu	file:
extract_bit	bpf/lpm_trie.c	/^static inline int extract_bit(const u8 *data, size_t index)$/;"	f	file:
fE	audit.h	/^		unsigned int	fE;		\/* effective bit of file cap *\/$/;"	m	union:audit_cap_data::__anon52
f_next	trace/trace_events.c	/^static void *f_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
f_show	trace/trace_events.c	/^static int f_show(struct seq_file *m, void *v)$/;"	f	file:
f_start	trace/trace_events.c	/^static void *f_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
f_stop	trace/trace_events.c	/^static void f_stop(struct seq_file *m, void *p)$/;"	f	file:
facility	printk/printk.c	/^	u8 facility;			\/* log facility of first message *\/$/;"	m	struct:cont	file:
facility	printk/printk.c	/^	u8 facility;		\/* syslog facility *\/$/;"	m	struct:printk_log	file:
fadvise64	sys_ni.c	/^COND_SYSCALL(fadvise64);$/;"	v
fadvise64_64	sys_ni.c	/^COND_SYSCALL(fadvise64_64);$/;"	v
fail	cpu.c	/^	enum cpuhp_state	fail;$/;"	m	struct:cpuhp_cpu_state	typeref:enum:cpuhp_cpu_state::cpuhp_state	file:
fail_futex	futex.c	/^} fail_futex = {$/;"	v	typeref:struct:__anon92	file:
fail_futex_debugfs	futex.c	/^late_initcall(fail_futex_debugfs);$/;"	v
fail_futex_debugfs	futex.c	/^static int __init fail_futex_debugfs(void)$/;"	f	file:
failed	trace/trace_functions_graph.c	/^	int				failed;$/;"	m	struct:fgraph_data	file:
fair_policy	sched/sched.h	/^static inline int fair_policy(int policy)$/;"	f
fair_sched_class	sched/fair.c	/^const struct sched_class fair_sched_class = {$/;"	v	typeref:struct:sched_class
fair_sched_class	sched/fair.c	/^const struct sched_class fair_sched_class;$/;"	v	typeref:struct:sched_class
fake_sched_class	sched/core.c	/^static const struct sched_class fake_sched_class = {$/;"	v	typeref:struct:sched_class	file:
fake_signal_wake_up	freezer.c	/^static void fake_signal_wake_up(struct task_struct *p)$/;"	f	file:
fake_task	sched/core.c	/^static struct task_struct fake_task = {$/;"	v	typeref:struct:task_struct	file:
fakewriter_tasks	rcu/rcutorture.c	/^static struct task_struct **fakewriter_tasks;$/;"	v	typeref:struct:task_struct	file:
fallback_doms	sched/topology.c	/^static cpumask_var_t			fallback_doms;$/;"	v	file:
family	taskstats.c	/^static struct genl_family family;$/;"	v	typeref:struct:genl_family	file:
family_registered	taskstats.c	/^static int family_registered;$/;"	v	file:
fanotify_init	sys_ni.c	/^COND_SYSCALL(fanotify_init);$/;"	v
fanotify_mark	sys_ni.c	/^COND_SYSCALL(fanotify_mark);$/;"	v
fanotify_mark	sys_ni.c	/^COND_SYSCALL_COMPAT(fanotify_mark);$/;"	v
fastpath_timer_check	time/posix-cpu-timers.c	/^static inline int fastpath_timer_check(struct task_struct *tsk)$/;"	f	file:
fault_in_user_writeable	futex.c	/^static int fault_in_user_writeable(u32 __user *uaddr)$/;"	f	file:
faults	sched/fair.c	/^	unsigned long faults[0];$/;"	m	struct:numa_group	file:
faults_cpu	sched/fair.c	/^	unsigned long *faults_cpu;$/;"	m	struct:numa_group	file:
fbq_classify_group	sched/fair.c	/^static inline enum fbq_type fbq_classify_group(struct sg_lb_stats *sgs)$/;"	f	file:
fbq_classify_rq	sched/fair.c	/^static inline enum fbq_type fbq_classify_rq(struct rq *rq)$/;"	f	file:
fbq_type	sched/fair.c	/^	enum fbq_type		fbq_type;$/;"	m	struct:lb_env	typeref:enum:lb_env::fbq_type	file:
fbq_type	sched/fair.c	/^enum fbq_type { regular, remote, all };$/;"	g	file:
fcap	audit.h	/^	struct audit_cap_data	fcap;$/;"	m	struct:audit_names	typeref:struct:audit_names::audit_cap_data
fcap	auditsc.c	/^	struct audit_cap_data	fcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
fcap_ver	audit.h	/^	unsigned int		fcap_ver;$/;"	m	struct:audit_names
fcap_ver	auditsc.c	/^	unsigned int		fcap_ver;$/;"	m	struct:audit_aux_data_bprm_fcaps	file:
fchown16	sys_ni.c	/^COND_SYSCALL(fchown16);$/;"	v
fd	audit.h	/^			int			fd;$/;"	m	struct:audit_context::__anon53::__anon61
fd_array_map_alloc_check	bpf/arraymap.c	/^static int fd_array_map_alloc_check(union bpf_attr *attr)$/;"	f	file:
fd_array_map_delete_elem	bpf/arraymap.c	/^static int fd_array_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
fd_array_map_free	bpf/arraymap.c	/^static void fd_array_map_free(struct bpf_map *map)$/;"	f	file:
fd_array_map_lookup_elem	bpf/arraymap.c	/^static void *fd_array_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
fd_htab_map_alloc_check	bpf/hashtab.c	/^static int fd_htab_map_alloc_check(union bpf_attr *attr)$/;"	f	file:
fd_htab_map_free	bpf/hashtab.c	/^static void fd_htab_map_free(struct bpf_map *map)$/;"	f	file:
fd_htab_map_get_ptr	bpf/hashtab.c	/^static void *fd_htab_map_get_ptr(const struct bpf_map *map, struct htab_elem *l)$/;"	f	file:
fd_htab_map_needs_adjust	bpf/hashtab.c	/^static bool fd_htab_map_needs_adjust(const struct bpf_htab *htab)$/;"	f	file:
fds	audit.h	/^	int fds[2];$/;"	m	struct:audit_context
features_show	cgroup/cgroup.c	/^static ssize_t features_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
fei_attr	fail_function.c	/^struct fei_attr {$/;"	s	file:
fei_attr_free	fail_function.c	/^static void fei_attr_free(struct fei_attr *attr)$/;"	f	file:
fei_attr_is_valid	fail_function.c	/^static bool fei_attr_is_valid(struct fei_attr *_attr)$/;"	f	file:
fei_attr_lookup	fail_function.c	/^static struct fei_attr *fei_attr_lookup(const char *sym)$/;"	f	file:
fei_attr_new	fail_function.c	/^static struct fei_attr *fei_attr_new(const char *sym, unsigned long addr)$/;"	f	file:
fei_attr_remove	fail_function.c	/^static void fei_attr_remove(struct fei_attr *attr)$/;"	f	file:
fei_attr_remove_all	fail_function.c	/^static void fei_attr_remove_all(void)$/;"	f	file:
fei_debugfs_add_attr	fail_function.c	/^static void fei_debugfs_add_attr(struct fei_attr *attr)$/;"	f	file:
fei_debugfs_dir	fail_function.c	/^static struct dentry *fei_debugfs_dir;$/;"	v	typeref:struct:dentry	file:
fei_debugfs_init	fail_function.c	/^late_initcall(fei_debugfs_init);$/;"	v
fei_debugfs_init	fail_function.c	/^static int __init fei_debugfs_init(void)$/;"	f	file:
fei_debugfs_remove_attr	fail_function.c	/^static void fei_debugfs_remove_attr(struct fei_attr *attr)$/;"	f	file:
fei_kprobe_handler	fail_function.c	/^static int fei_kprobe_handler(struct kprobe *kp, struct pt_regs *regs)$/;"	f	file:
fei_open	fail_function.c	/^static int fei_open(struct inode *inode, struct file *file)$/;"	f	file:
fei_ops	fail_function.c	/^static const struct file_operations fei_ops = {$/;"	v	typeref:struct:file_operations	file:
fei_post_handler	fail_function.c	/^static void fei_post_handler(struct kprobe *kp, struct pt_regs *regs,$/;"	f	file:
fei_retval_get	fail_function.c	/^static int fei_retval_get(void *data, u64 *val)$/;"	f	file:
fei_retval_set	fail_function.c	/^static int fei_retval_set(void *data, u64 val)$/;"	f	file:
fei_seq_next	fail_function.c	/^static void *fei_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
fei_seq_ops	fail_function.c	/^static const struct seq_operations fei_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
fei_seq_show	fail_function.c	/^static int fei_seq_show(struct seq_file *m, void *v)$/;"	f	file:
fei_seq_start	fail_function.c	/^static void *fei_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
fei_seq_stop	fail_function.c	/^static void fei_seq_stop(struct seq_file *m, void *v)$/;"	f	file:
fei_write	fail_function.c	/^static ssize_t fei_write(struct file *file, const char __user *buffer,$/;"	f	file:
fetch_apply_bitfield	trace/trace_probe_tmpl.h	/^fetch_apply_bitfield(struct fetch_insn *code, void *buf)$/;"	f
fetch_bp_busy_slots	events/hw_breakpoint.c	/^fetch_bp_busy_slots(struct bp_busy_slots *slots, struct perf_event *bp,$/;"	f	file:
fetch_insn	trace/trace_probe.h	/^struct fetch_insn {$/;"	s
fetch_op	trace/trace_probe.h	/^enum fetch_op {$/;"	g
fetch_or	sched/core.c	347;"	d	file:
fetch_robust_entry	futex.c	/^static inline int fetch_robust_entry(struct robust_list __user **entry,$/;"	f	file:
fetch_store_raw	trace/trace_probe_tmpl.h	/^fetch_store_raw(unsigned long val, struct fetch_insn *code, void *buf)$/;"	f
fetch_store_string	trace/trace_kprobe.c	/^fetch_store_string(unsigned long addr, void *dest, void *base)$/;"	f	file:
fetch_store_string	trace/trace_uprobe.c	/^fetch_store_string(unsigned long addr, void *dest, void *base)$/;"	f	file:
fetch_store_string_user	trace/trace_kprobe.c	/^fetch_store_string_user(unsigned long addr, void *dest, void *base)$/;"	f	file:
fetch_store_string_user	trace/trace_uprobe.c	/^fetch_store_string_user(unsigned long addr, void *dest, void *base)$/;"	f	file:
fetch_store_strlen	trace/trace_kprobe.c	/^fetch_store_strlen(unsigned long addr)$/;"	f	file:
fetch_store_strlen	trace/trace_uprobe.c	/^fetch_store_strlen(unsigned long addr)$/;"	f	file:
fetch_store_strlen_user	trace/trace_kprobe.c	/^fetch_store_strlen_user(unsigned long addr)$/;"	f	file:
fetch_store_strlen_user	trace/trace_uprobe.c	/^fetch_store_strlen_user(unsigned long addr)$/;"	f	file:
fetch_this_slot	events/hw_breakpoint.c	/^fetch_this_slot(struct bp_busy_slots *slots, int weight)$/;"	f	file:
fetch_type	trace/trace_probe.h	/^struct fetch_type {$/;"	s
ffmask	rcu/tree.h	/^	unsigned long ffmask;	\/* Fully functional CPUs. *\/$/;"	m	struct:rcu_node
fgraph_cpu_data	trace/trace_functions_graph.c	/^struct fgraph_cpu_data {$/;"	s	file:
fgraph_data	trace/trace_functions_graph.c	/^struct fgraph_data {$/;"	s	file:
fgraph_graph_time	trace/ftrace.c	/^static bool fgraph_graph_time = true;$/;"	v	file:
fgraph_max_depth	trace/trace_functions_graph.c	/^unsigned int fgraph_max_depth;$/;"	v
fgraph_ops	trace/trace_irqsoff.c	/^static struct fgraph_ops fgraph_ops = {$/;"	v	typeref:struct:fgraph_ops	file:
fgraph_sleep_time	trace/fgraph.c	/^static bool fgraph_sleep_time = true;$/;"	v	file:
fgraph_wakeup_ops	trace/trace_sched_wakeup.c	/^static struct fgraph_ops fgraph_wakeup_ops = {$/;"	v	typeref:struct:fgraph_ops	file:
field	trace/trace.h	/^	struct ftrace_event_field *field;$/;"	m	struct:filter_pred	typeref:struct:filter_pred::ftrace_event_field
field	trace/trace_events_hist.c	/^	struct ftrace_event_field	*field;$/;"	m	struct:hist_field	typeref:struct:hist_field::ftrace_event_field	file:
field_cachep	trace/trace_events.c	/^static struct kmem_cache *field_cachep;$/;"	v	typeref:struct:kmem_cache	file:
field_has_hist_vars	trace/trace_events_hist.c	/^static bool field_has_hist_vars(struct hist_field *hist_field,$/;"	f	file:
field_idx	trace/tracing_map.h	/^	unsigned int			field_idx;$/;"	m	struct:tracing_map_sort_key
field_len	trace/trace.h	/^	int			field_len;$/;"	m	struct:regex
field_name_from_var	trace/trace_events_hist.c	/^static char *field_name_from_var(struct hist_trigger_data *hist_data,$/;"	f	file:
field_op_id	trace/trace_events_hist.c	/^enum field_op_id {$/;"	g	file:
field_var	trace/trace_events_hist.c	/^struct field_var {$/;"	s	file:
field_var_hist	trace/trace_events_hist.c	/^struct field_var_hist {$/;"	s	file:
field_var_hists	trace/trace_events_hist.c	/^	struct field_var_hist		*field_var_hists[SYNTH_FIELDS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::field_var_hist	file:
field_var_str	trace/trace_events_hist.c	/^	char *field_var_str[SYNTH_FIELDS_MAX];$/;"	m	struct:hist_elt_data	file:
field_vars	trace/trace_events_hist.c	/^	struct field_var		*field_vars[SYNTH_FIELDS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::field_var	file:
fields	trace/trace_events_hist.c	/^	struct hist_field               *fields[HIST_FIELDS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::hist_field	file:
fields	trace/trace_events_hist.c	/^	struct synth_field			**fields;$/;"	m	struct:synth_event	typeref:struct:synth_event::synth_field	file:
fields	trace/trace_events_hist.c	/^	u64			fields[];$/;"	m	struct:synth_trace_event	file:
fields	trace/tracing_map.h	/^	struct tracing_map_field	*fields;$/;"	m	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map_field
fields	trace/tracing_map.h	/^	struct tracing_map_field	fields[TRACING_MAP_FIELDS_MAX];$/;"	m	struct:tracing_map	typeref:struct:tracing_map::tracing_map_field
file	acct.c	/^	struct file		*file;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::file	file:
file	trace/trace.h	/^	struct trace_event_file		*file;$/;"	m	struct:enable_trigger_data	typeref:struct:enable_trigger_data::trace_event_file
file	trace/trace_events.c	/^	struct trace_event_file	*file;$/;"	m	struct:event_probe_data	typeref:struct:event_probe_data::trace_event_file	file:
file	trace/trace_probe.h	/^	struct trace_event_file		*file;$/;"	m	struct:event_file_link	typeref:struct:event_file_link::trace_event_file
file	trace/trace_stat.c	/^	struct dentry		*file;$/;"	m	struct:stat_session	typeref:struct:stat_session::dentry	file:
file_cachep	trace/trace_events.c	/^static struct kmem_cache *file_cachep;$/;"	v	typeref:struct:kmem_cache	file:
file_caps_disable	capability.c	/^static int __init file_caps_disable(char *str)$/;"	f	file:
file_caps_enabled	capability.c	/^int file_caps_enabled = 1;$/;"	v
file_name	events/core.c	/^	const char		*file_name;$/;"	m	struct:perf_mmap_event	file:
file_ns_capable	capability.c	/^EXPORT_SYMBOL(file_ns_capable);$/;"	v
file_ns_capable	capability.c	/^bool file_ns_capable(const struct file *file, struct user_namespace *ns,$/;"	f
file_size	events/core.c	/^	int			file_size;$/;"	m	struct:perf_mmap_event	file:
filename	gcov/clang.c	/^	const char *filename;$/;"	m	struct:gcov_info	file:
filename	gcov/gcc_3_4.c	/^	const char			*filename;$/;"	m	struct:gcov_info	file:
filename	gcov/gcc_4_7.c	/^	const char *filename;$/;"	m	struct:gcov_info	file:
filename	trace/trace_uprobe.c	/^	char				*filename;$/;"	m	struct:trace_uprobe	file:
files	cgroup/legacy_freezer.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	sched/cpuacct.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	trace/trace_probe.h	/^	struct list_head 		files;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::list_head
files_cachep	fork.c	/^struct kmem_cache *files_cachep;$/;"	v	typeref:struct:kmem_cache
fill_ac	acct.c	/^static void fill_ac(acct_t *ac)$/;"	f	file:
fill_rwbs	trace/blktrace.c	/^static void fill_rwbs(char *rwbs, const struct blk_io_trace *t)$/;"	f	file:
fill_stats	taskstats.c	/^static void fill_stats(struct user_namespace *user_ns,$/;"	f	file:
fill_stats_for_pid	taskstats.c	/^static int fill_stats_for_pid(pid_t pid, struct taskstats *stats)$/;"	f	file:
fill_stats_for_tgid	taskstats.c	/^static int fill_stats_for_tgid(pid_t tgid, struct taskstats *stats)$/;"	f	file:
fill_tgid_exit	taskstats.c	/^static void fill_tgid_exit(struct task_struct *tsk)$/;"	f	file:
filter	trace/trace.h	/^	struct event_filter	*filter;$/;"	m	struct:event_subsystem	typeref:struct:event_subsystem::event_filter
filter	trace/trace.h	/^	struct event_filter __rcu	*filter;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::__rcu
filter	trace/trace_events_filter.c	/^	char *filter;$/;"	m	struct:test_filter_data_t	file:
filter	trace/trace_events_filter.c	/^	struct event_filter	*filter;$/;"	m	struct:filter_list	typeref:struct:filter_list::event_filter	file:
filter	trace/trace_uprobe.c	/^	struct trace_uprobe_filter	filter;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::trace_uprobe_filter	file:
filter_assign_type	trace/trace_events_filter.c	/^int filter_assign_type(const char *type)$/;"	f
filter_build_regex	trace/trace_events_filter.c	/^static void filter_build_regex(struct filter_pred *pred)$/;"	f	file:
filter_chain	events/uprobes.c	/^static bool filter_chain(struct uprobe *uprobe,$/;"	f	file:
filter_disable	trace/trace_events_filter.c	/^static void filter_disable(struct trace_event_file *file)$/;"	f	file:
filter_fops	dma/debug.c	/^static const struct file_operations filter_fops = {$/;"	v	typeref:struct:file_operations	file:
filter_free_subsystem_filters	trace/trace_events_filter.c	/^static void filter_free_subsystem_filters(struct trace_subsystem_dir *dir,$/;"	f	file:
filter_free_subsystem_preds	trace/trace_events_filter.c	/^static void filter_free_subsystem_preds(struct trace_subsystem_dir *dir,$/;"	f	file:
filter_func_t	trace/trace_uprobe.c	/^typedef bool (*filter_func_t)(struct uprobe_consumer *self,$/;"	t	file:
filter_list	trace/trace_events_filter.c	/^struct filter_list {$/;"	s	file:
filter_match_preds	trace/trace_events_filter.c	/^EXPORT_SYMBOL_GPL(filter_match_preds);$/;"	v
filter_match_preds	trace/trace_events_filter.c	/^int filter_match_preds(struct event_filter *filter, void *rec)$/;"	f
filter_op_ids	trace/trace_events_filter.c	/^enum filter_op_ids { OPS };$/;"	g	file:
filter_parse_error	trace/trace_events_filter.c	/^struct filter_parse_error {$/;"	s	file:
filter_parse_regex	trace/trace_events_filter.c	/^enum regex_type filter_parse_regex(char *buff, int len, char **search, int *not)$/;"	f
filter_pred	trace/trace.h	/^struct filter_pred {$/;"	s
filter_pred_comm	trace/trace_events_filter.c	/^static int filter_pred_comm(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_cpu	trace/trace_events_filter.c	/^static int filter_pred_cpu(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_fn_t	trace/trace.h	/^typedef int (*filter_pred_fn_t) (struct filter_pred *pred, void *event);$/;"	t
filter_pred_none	trace/trace_events_filter.c	/^static int filter_pred_none(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_pchar	trace/trace_events_filter.c	/^static int filter_pred_pchar(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_string	trace/trace_events_filter.c	/^static int filter_pred_string(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_strloc	trace/trace_events_filter.c	/^static int filter_pred_strloc(struct filter_pred *pred, void *event)$/;"	f	file:
filter_read	dma/debug.c	/^static ssize_t filter_read(struct file *file, char __user *user_buf,$/;"	f	file:
filter_str	trace/trace.h	/^	char				*filter_str;$/;"	m	struct:event_trigger_data
filter_string	trace/trace.h	/^	char			*filter_string;$/;"	m	struct:event_filter
filter_type	trace/trace.h	/^	int			filter_type;$/;"	m	struct:ftrace_event_field
filter_write	dma/debug.c	/^static ssize_t filter_write(struct file *file, const char __user *userbuf,$/;"	f	file:
filtered_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *filtered_pids;$/;"	m	struct:trace_array	typeref:struct:trace_array::__rcu
filterkey	audit.h	/^	char		    *filterkey;	\/* key for rule that triggered record *\/$/;"	m	struct:audit_context
final_note	crash_core.c	/^void final_note(Elf_Word *buf)$/;"	f
find_active_uprobe	events/uprobes.c	/^static struct uprobe *find_active_uprobe(unsigned long bp_vaddr, int *is_swbp)$/;"	f	file:
find_alive_thread	exit.c	/^static struct task_struct *find_alive_thread(struct task_struct *p)$/;"	f	file:
find_and_alloc_map	bpf/syscall.c	/^static struct bpf_map *find_and_alloc_map(union bpf_attr *attr)$/;"	f	file:
find_any_var_ref	trace/trace_events_hist.c	/^static struct hist_field *find_any_var_ref(struct hist_trigger_data *hist_data,$/;"	f	file:
find_busiest_group	sched/fair.c	/^static struct sched_group *find_busiest_group(struct lb_env *env)$/;"	f	file:
find_busiest_queue	sched/fair.c	/^static struct rq *find_busiest_queue(struct lb_env *env,$/;"	f	file:
find_cg_rpool_locked	cgroup/rdma.c	/^find_cg_rpool_locked(struct rdma_cgroup *cg,$/;"	f	file:
find_chunk	audit_tree.c	/^static struct audit_chunk *find_chunk(struct node *p)$/;"	f	file:
find_compatible_hist	trace/trace_events_hist.c	/^find_compatible_hist(struct hist_trigger_data *target_hist_data,$/;"	f	file:
find_css_set	cgroup/cgroup.c	/^static struct css_set *find_css_set(struct css_set *old_cset,$/;"	f	file:
find_energy_efficient_cpu	sched/fair.c	/^static int find_energy_efficient_cpu(struct task_struct *p, int prev_cpu)$/;"	f	file:
find_event_file	trace/trace_events.c	/^find_event_file(struct trace_array *tr, const char *system, const char *event)$/;"	f
find_event_var	trace/trace_events_hist.c	/^static struct hist_field *find_event_var(struct hist_trigger_data *hist_data,$/;"	f	file:
find_exclusive_match	locking/lockdep.c	/^static int find_exclusive_match(unsigned long mask,$/;"	f	file:
find_existing_css_set	cgroup/cgroup.c	/^static struct css_set *find_existing_css_set(struct css_set *old_cset,$/;"	f	file:
find_exported_symbol_in_section	module.c	/^static bool find_exported_symbol_in_section(const struct symsearch *syms,$/;"	f	file:
find_fetch_type	trace/trace_probe.c	/^static const struct fetch_type *find_fetch_type(const char *type)$/;"	f	file:
find_file_var	trace/trace_events_hist.c	/^static struct hist_field *find_file_var(struct trace_event_file *file,$/;"	f	file:
find_ge_pid	pid.c	/^struct pid *find_ge_pid(int nr, struct pid_namespace *ns)$/;"	f
find_get_context	events/core.c	/^find_get_context(struct pmu *pmu, struct task_struct *task,$/;"	f	file:
find_get_pid	pid.c	/^EXPORT_SYMBOL_GPL(find_get_pid);$/;"	v
find_get_pid	pid.c	/^struct pid *find_get_pid(pid_t nr)$/;"	f
find_get_task_by_vpid	pid.c	/^struct task_struct *find_get_task_by_vpid(pid_t nr)$/;"	f
find_good_pkt_pointers	bpf/verifier.c	/^static void find_good_pkt_pointers(struct bpf_verifier_state *vstate,$/;"	f	file:
find_held_lock	locking/lockdep.c	/^static struct held_lock *find_held_lock(struct task_struct *curr,$/;"	f	file:
find_hist_vars	trace/trace_events_hist.c	/^static struct hist_var_data *find_hist_vars(struct hist_trigger_data *hist_data)$/;"	f	file:
find_idlest_cpu	sched/fair.c	/^static inline int find_idlest_cpu(struct sched_domain *sd, struct task_struct *p,$/;"	f	file:
find_idlest_group	sched/fair.c	/^find_idlest_group(struct sched_domain *sd, struct task_struct *p,$/;"	f	file:
find_idlest_group_cpu	sched/fair.c	/^find_idlest_group_cpu(struct sched_group *group, struct task_struct *p, int this_cpu)$/;"	f	file:
find_kallsyms_symbol	module.c	/^static const char *find_kallsyms_symbol(struct module *mod,$/;"	f	file:
find_kallsyms_symbol_value	module.c	/^static unsigned long find_kallsyms_symbol_value(struct module *mod, const char *name)$/;"	f	file:
find_later_rq	sched/deadline.c	/^static int find_later_rq(struct task_struct *task)$/;"	f	file:
find_linfo	bpf/verifier.c	/^find_linfo(const struct bpf_verifier_env *env, u32 insn_off)$/;"	f	file:
find_lively_task_by_vpid	events/core.c	/^find_lively_task_by_vpid(pid_t vpid)$/;"	f	file:
find_lock_later_rq	sched/deadline.c	/^static struct rq *find_lock_later_rq(struct task_struct *task, struct rq *rq)$/;"	f	file:
find_lock_lowest_rq	sched/rt.c	/^static struct rq *find_lock_lowest_rq(struct task_struct *task, struct rq *rq)$/;"	f	file:
find_lowest_rq	sched/rt.c	/^static int find_lowest_rq(struct task_struct *task)$/;"	f	file:
find_match_var	trace/trace_events_hist.c	/^find_match_var(struct hist_trigger_data *hist_data, char *var_name)$/;"	f	file:
find_matching_se	sched/fair.c	/^find_matching_se(struct sched_entity **se, struct sched_entity **pse)$/;"	f	file:
find_module	module.c	/^EXPORT_SYMBOL_GPL(find_module);$/;"	v
find_module	module.c	/^struct module *find_module(const char *name)$/;"	f
find_module_all	module.c	/^static struct module *find_module_all(const char *name, size_t len,$/;"	f	file:
find_module_sections	module.c	/^static int find_module_sections(struct module *mod, struct load_info *info)$/;"	f	file:
find_named_trigger	trace/trace_events_trigger.c	/^struct event_trigger_data *find_named_trigger(const char *name)$/;"	f
find_new_ilb	sched/fair.c	/^static inline int find_new_ilb(void)$/;"	f	file:
find_new_reaper	exit.c	/^static struct task_struct *find_new_reaper(struct task_struct *father,$/;"	f	file:
find_next	trace/trace_printk.c	/^static const char **find_next(void *v, loff_t *pos)$/;"	f	file:
find_next_iomem_res	resource.c	/^static int find_next_iomem_res(resource_size_t start, resource_size_t end,$/;"	f	file:
find_next_mod_format	trace/trace_printk.c	/^find_next_mod_format(int start_index, void *v, const char **fmt, loff_t *pos)$/;"	f	file:
find_next_ret_chain	events/uprobes.c	/^static struct return_instance *find_next_ret_chain(struct return_instance *ri)$/;"	f	file:
find_node_in_range	events/uprobes.c	/^find_node_in_range(struct inode *inode, loff_t min, loff_t max)$/;"	f	file:
find_numa_distance	sched/topology.c	/^bool find_numa_distance(int distance)$/;"	f
find_old_trace_uprobe	trace/trace_uprobe.c	/^static struct trace_uprobe *find_old_trace_uprobe(struct trace_uprobe *new)$/;"	f	file:
find_pcpusec	module.c	/^static unsigned int find_pcpusec(struct load_info *info)$/;"	f	file:
find_pd	sched/topology.c	/^static struct perf_domain *find_pd(struct perf_domain *pd, int cpu)$/;"	f	file:
find_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(find_pid_ns);$/;"	v
find_pid_ns	pid.c	/^struct pid *find_pid_ns(int nr, struct pid_namespace *ns)$/;"	f
find_pm_qos_object_by_minor	power/qos.c	/^static int find_pm_qos_object_by_minor(int minor)$/;"	f	file:
find_pmu_context	events/core.c	/^static struct perf_cpu_context __percpu *find_pmu_context(int ctxn)$/;"	f	file:
find_probe_event	trace/trace_uprobe.c	/^static struct trace_uprobe *find_probe_event(const char *event, const char *group)$/;"	f	file:
find_process_by_pid	sched/core.c	/^static struct task_struct *find_process_by_pid(pid_t pid)$/;"	f	file:
find_prog_type	bpf/syscall.c	/^static int find_prog_type(enum bpf_prog_type type, struct bpf_prog *prog)$/;"	f	file:
find_ref_ctr_vma	events/uprobes.c	/^find_ref_ctr_vma(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
find_regset	ptrace.c	/^find_regset(const struct user_regset_view *view, unsigned int type)$/;"	f	file:
find_resource	resource.c	/^static int find_resource(struct resource *root, struct resource *new,$/;"	f	file:
find_sec	module.c	/^static unsigned int find_sec(const struct load_info *info, const char *name)$/;"	f	file:
find_slot_idx	events/hw_breakpoint.c	/^static inline enum bp_type_idx find_slot_idx(u64 bp_type)$/;"	f	file:
find_subprog	bpf/verifier.c	/^static int find_subprog(struct bpf_verifier_env *env, int off)$/;"	f	file:
find_swevent_head	events/core.c	/^find_swevent_head(struct swevent_htable *swhash, struct perf_event *event)$/;"	f	file:
find_swevent_head_rcu	events/core.c	/^find_swevent_head_rcu(struct swevent_htable *swhash, u64 type, u32 event_id)$/;"	f	file:
find_symbol	module.c	/^EXPORT_SYMBOL_GPL(find_symbol);$/;"	v
find_symbol	module.c	/^const struct kernel_symbol *find_symbol(const char *name,$/;"	f
find_symbol_arg	module.c	/^struct find_symbol_arg {$/;"	s	file:
find_synth_event	trace/trace_events_hist.c	/^static struct synth_event *find_synth_event(const char *name)$/;"	f	file:
find_synthetic_field_var	trace/trace_events_hist.c	/^find_synthetic_field_var(struct hist_trigger_data *target_hist_data,$/;"	f	file:
find_syscall_meta	trace/trace_syscalls.c	/^find_syscall_meta(unsigned long syscall)$/;"	f	file:
find_target_event_var	trace/trace_events_hist.c	/^find_target_event_var(struct hist_trigger_data *hist_data,$/;"	f	file:
find_task_by_pid_ns	pid.c	/^struct task_struct *find_task_by_pid_ns(pid_t nr, struct pid_namespace *ns)$/;"	f
find_task_by_vpid	pid.c	/^struct task_struct *find_task_by_vpid(pid_t vnr)$/;"	f
find_trace_kprobe	trace/trace_kprobe.c	/^static struct trace_kprobe *find_trace_kprobe(const char *event,$/;"	f	file:
find_trace_probe_file	trace/trace_kprobe.c	/^find_trace_probe_file(struct trace_kprobe *tk, struct trace_array *tr)$/;"	f	file:
find_trigger_filter	trace/trace_events_hist.c	/^static char *find_trigger_filter(struct hist_trigger_data *hist_data,$/;"	f	file:
find_ucounts	ucount.c	/^static struct ucounts *find_ucounts(struct user_namespace *ns, kuid_t uid, struct hlist_head *hashent)$/;"	f	file:
find_uprobe	events/uprobes.c	/^static struct uprobe *find_uprobe(struct inode *inode, loff_t offset)$/;"	f	file:
find_usage_backwards	locking/lockdep.c	/^find_usage_backwards(struct lock_list *root, unsigned long usage_mask,$/;"	f	file:
find_usage_forwards	locking/lockdep.c	/^find_usage_forwards(struct lock_list *root, unsigned long usage_mask,$/;"	f	file:
find_user	user.c	/^struct user_struct *find_user(kuid_t uid)$/;"	f
find_var	trace/trace_events_hist.c	/^static struct hist_field *find_var(struct hist_trigger_data *hist_data,$/;"	f	file:
find_var_field	trace/trace_events_hist.c	/^static struct hist_field *find_var_field(struct hist_trigger_data *hist_data,$/;"	f	file:
find_var_file	trace/trace_events_hist.c	/^static struct trace_event_file *find_var_file(struct trace_array *tr,$/;"	f	file:
find_var_ref	trace/trace_events_hist.c	/^static struct hist_field *find_var_ref(struct hist_trigger_data *hist_data,$/;"	f	file:
find_vpid	pid.c	/^EXPORT_SYMBOL_GPL(find_vpid);$/;"	v
find_vpid	pid.c	/^struct pid *find_vpid(int nr)$/;"	f
find_worker_executing_work	workqueue.c	/^static struct worker *find_worker_executing_work(struct worker_pool *pool,$/;"	f	file:
finish_arch_post_lock_switch	sched/core.c	3016;"	d	file:
finish_lock_switch	sched/core.c	/^static inline void finish_lock_switch(struct rq *rq)$/;"	f	file:
finish_swait	sched/swait.c	/^EXPORT_SYMBOL(finish_swait);$/;"	v
finish_swait	sched/swait.c	/^void finish_swait(struct swait_queue_head *q, struct swait_queue *wait)$/;"	f
finish_task	sched/core.c	/^static inline void finish_task(struct task_struct *prev)$/;"	f	file:
finish_wait	sched/wait.c	/^EXPORT_SYMBOL(finish_wait);$/;"	v
finish_wait	sched/wait.c	/^void finish_wait(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)$/;"	f
finished_booting	time/clocksource.c	/^static int finished_booting;$/;"	v	file:
finished_loading	module.c	/^static bool finished_loading(const char *name)$/;"	f	file:
finit_module	sys_ni.c	/^COND_SYSCALL(finit_module);$/;"	v
fire_sched_in_preempt_notifiers	sched/core.c	/^static __always_inline void fire_sched_in_preempt_notifiers(struct task_struct *curr)$/;"	f	file:
fire_sched_in_preempt_notifiers	sched/core.c	/^static inline void fire_sched_in_preempt_notifiers(struct task_struct *curr)$/;"	f	file:
fire_sched_out_preempt_notifiers	sched/core.c	/^fire_sched_out_preempt_notifiers(struct task_struct *curr,$/;"	f	file:
fire_user_return_notifiers	user-return-notifier.c	/^void fire_user_return_notifiers(void)$/;"	f
first	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *first;$/;"	m	struct:pcpu_freelist_head	typeref:struct:pcpu_freelist_head::pcpu_freelist_node
first_filter	trace/trace_events_filter.c	/^	int first_filter;$/;"	m	struct:function_filter_data	file:
first_flusher	workqueue.c	/^	struct wq_flusher	*first_flusher;	\/* WQ: first flusher *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::wq_flusher	file:
first_fqs_jiffies_ops	rcu/tree.c	/^static struct kernel_param_ops first_fqs_jiffies_ops = {$/;"	v	typeref:struct:kernel_param_ops	file:
first_idle_worker	workqueue.c	/^static struct worker *first_idle_worker(struct worker_pool *pool)$/;"	f	file:
first_notrace	trace/trace_events_filter.c	/^	int first_notrace;$/;"	m	struct:function_filter_data	file:
first_sector	power/swap.c	/^	sector_t first_sector;$/;"	m	struct:swap_map_handle	file:
first_trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::
fix_small_imbalance	sched/fair.c	/^void fix_small_imbalance(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
fixed_power_int	sched/loadavg.c	/^fixed_power_int(unsigned long x, unsigned int frac_bits, unsigned int n)$/;"	f	file:
fixup_bpf_calls	bpf/verifier.c	/^static int fixup_bpf_calls(struct bpf_verifier_env *env)$/;"	f	file:
fixup_call_args	bpf/verifier.c	/^static int fixup_call_args(struct bpf_verifier_env *env)$/;"	f	file:
fixup_owner	futex.c	/^static int fixup_owner(u32 __user *uaddr, struct futex_q *q, int locked)$/;"	f	file:
fixup_pi_state_owner	futex.c	/^static int fixup_pi_state_owner(u32 __user *uaddr, struct futex_q *q,$/;"	f	file:
fixup_rt_mutex_waiters	locking/rtmutex.c	/^static void fixup_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
flag_changed	trace/trace.h	/^	int			(*flag_changed)(struct trace_array *tr,$/;"	m	struct:tracer
flags	audit.h	/^			int			flags;$/;"	m	struct:audit_context::__anon53::__anon61
flags	bpf/lpm_trie.c	/^	u32				flags;$/;"	m	struct:lpm_trie_node	file:
flags	cgroup/cgroup-internal.h	/^	unsigned int	flags;			\/* CGRP_ROOT_* flags *\/$/;"	m	struct:cgroup_fs_context
flags	cgroup/cpuset.c	/^	unsigned long flags;		\/* "unsigned long" so bitops work *\/$/;"	m	struct:cpuset	file:
flags	events/core.c	/^		u16				flags;$/;"	m	struct:perf_bpf_event::__anon7	file:
flags	events/core.c	/^		u16				flags;$/;"	m	struct:perf_ksymbol_event::__anon6	file:
flags	events/core.c	/^	u32			prot, flags;$/;"	m	struct:perf_mmap_event	file:
flags	events/uprobes.c	/^	unsigned long		flags;$/;"	m	struct:uprobe	file:
flags	kthread.c	/^	unsigned long flags;$/;"	m	struct:kthread	file:
flags	locking/locktorture.c	/^	unsigned long flags; \/* for irq spinlocks *\/$/;"	m	struct:lock_torture_ops	file:
flags	locking/test-ww_mutex.c	/^	unsigned int flags;$/;"	m	struct:test_mutex	file:
flags	power/swap.c	/^	unsigned int flags;	\/* Flags to pass to the "boot" kernel *\/$/;"	m	struct:swsusp_header	file:
flags	printk/printk.c	/^	enum log_flags flags;		\/* prefix, newline flags *\/$/;"	m	struct:cont	typeref:enum:cont::log_flags	file:
flags	printk/printk.c	/^	u8 flags:5;		\/* internal record flags *\/$/;"	m	struct:printk_log	file:
flags	sched/fair.c	/^	unsigned int		flags;$/;"	m	struct:lb_env	file:
flags	sched/sched.h	/^	unsigned long flags;$/;"	m	struct:rq_flags
flags	trace/ftrace.c	/^	unsigned			flags;$/;"	m	struct:ftrace_iterator	file:
flags	trace/ring_buffer.c	/^	unsigned			flags;$/;"	m	struct:ring_buffer	file:
flags	trace/trace.h	/^	int			flags;$/;"	m	struct:event_command
flags	trace/trace.h	/^	struct tracer_flags		*flags;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_flags
flags	trace/trace.h	/^	struct tracer_flags	*flags;$/;"	m	struct:tracer	typeref:struct:tracer::tracer_flags
flags	trace/trace.h	/^	unsigned int		flags;$/;"	m	struct:trace_array
flags	trace/trace.h	/^	unsigned long		flags;$/;"	m	struct:ftrace_hash
flags	trace/trace_events_hist.c	/^	unsigned long			flags;$/;"	m	struct:hist_field	file:
flags	trace/trace_probe.h	/^	unsigned int			flags;	\/* For TP_FLAG_* *\/$/;"	m	struct:trace_probe
flags	workqueue.c	/^	unsigned int		flags;		\/* X: flags *\/$/;"	m	struct:worker_pool	file:
flags	workqueue_internal.h	/^	unsigned int		flags;		\/* X: flags *\/$/;"	m	struct:worker
flexible	events/hw_breakpoint.c	/^	unsigned int	flexible; \/* XXX: placeholder, see fetch_this_slot() *\/$/;"	m	struct:bp_cpuinfo	file:
flexible	events/hw_breakpoint.c	/^	unsigned int flexible;$/;"	m	struct:bp_busy_slots	file:
flexible_sched_in	events/core.c	/^static int flexible_sched_in(struct perf_event *event, void *data)$/;"	f	file:
flock	sys_ni.c	/^COND_SYSCALL(flock);$/;"	v
flush_color	workqueue.c	/^	int			flush_color;	\/* L: flushing color *\/$/;"	m	struct:pool_workqueue	file:
flush_color	workqueue.c	/^	int			flush_color;	\/* WQ: current flush color *\/$/;"	m	struct:workqueue_struct	file:
flush_color	workqueue.c	/^	int			flush_color;	\/* WQ: flush color waiting for *\/$/;"	m	struct:wq_flusher	file:
flush_delayed_work	workqueue.c	/^EXPORT_SYMBOL(flush_delayed_work);$/;"	v
flush_delayed_work	workqueue.c	/^bool flush_delayed_work(struct delayed_work *dwork)$/;"	f
flush_itimer_signals	signal.c	/^void flush_itimer_signals(void)$/;"	f
flush_list	bpf/cpumap.c	/^	struct list_head __percpu *flush_list;$/;"	m	struct:bpf_cpu_map	typeref:struct:bpf_cpu_map::__percpu	file:
flush_list	bpf/devmap.c	/^	struct list_head __percpu *flush_list;$/;"	m	struct:bpf_dtab	typeref:struct:bpf_dtab::__percpu	file:
flush_list	bpf/xskmap.c	/^	struct list_head __percpu *flush_list;$/;"	m	struct:xsk_map	typeref:struct:xsk_map::__percpu	file:
flush_module_icache	module.c	/^static void flush_module_icache(const struct module *mod)$/;"	f	file:
flush_node	bpf/cpumap.c	/^	struct list_head flush_node;$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::list_head	file:
flush_node	bpf/devmap.c	/^	struct list_head flush_node;$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::list_head	file:
flush_rcu_work	workqueue.c	/^EXPORT_SYMBOL(flush_rcu_work);$/;"	v
flush_rcu_work	workqueue.c	/^bool flush_rcu_work(struct rcu_work *rwork)$/;"	f
flush_signal_handlers	signal.c	/^flush_signal_handlers(struct task_struct *t, int force_default)$/;"	f
flush_signals	signal.c	/^EXPORT_SYMBOL(flush_signals);$/;"	v
flush_signals	signal.c	/^void flush_signals(struct task_struct *t)$/;"	f
flush_sigqueue	signal.c	/^void flush_sigqueue(struct sigpending *queue)$/;"	f
flush_sigqueue_mask	signal.c	/^static void flush_sigqueue_mask(sigset_t *mask, struct sigpending *s)$/;"	f	file:
flush_smp_call_function_queue	smp.c	/^static void flush_smp_call_function_queue(bool warn_cpu_offline)$/;"	f	file:
flush_swap_writer	power/swap.c	/^static int flush_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
flush_work	workqueue.c	/^EXPORT_SYMBOL_GPL(flush_work);$/;"	v
flush_work	workqueue.c	/^bool flush_work(struct work_struct *work)$/;"	f
flush_workqueue	workqueue.c	/^EXPORT_SYMBOL(flush_workqueue);$/;"	v
flush_workqueue	workqueue.c	/^void flush_workqueue(struct workqueue_struct *wq)$/;"	f
flush_workqueue_prep_pwqs	workqueue.c	/^static bool flush_workqueue_prep_pwqs(struct workqueue_struct *wq,$/;"	f	file:
flusher_overflow	workqueue.c	/^	struct list_head	flusher_overflow; \/* WQ: flush overflow list *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
flusher_queue	workqueue.c	/^	struct list_head	flusher_queue;	\/* WQ: flush waiters *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
fmeter	cgroup/cpuset.c	/^	struct fmeter fmeter;		\/* memory_pressure filter *\/$/;"	m	struct:cpuset	typeref:struct:cpuset::fmeter	file:
fmeter	cgroup/cpuset.c	/^struct fmeter {$/;"	s	file:
fmeter_getrate	cgroup/cpuset.c	/^static int fmeter_getrate(struct fmeter *fmp)$/;"	f	file:
fmeter_init	cgroup/cpuset.c	/^static void fmeter_init(struct fmeter *fmp)$/;"	f	file:
fmeter_markevent	cgroup/cpuset.c	/^static void fmeter_markevent(struct fmeter *fmp)$/;"	f	file:
fmeter_update	cgroup/cpuset.c	/^static void fmeter_update(struct fmeter *fmp)$/;"	f	file:
fmt	panic.c	/^	const char *fmt;$/;"	m	struct:warn_args	file:
fmt	trace/trace_printk.c	/^	const char *fmt;$/;"	m	struct:trace_bprintk_fmt	file:
fmt	trace/trace_probe.h	/^	char			*fmt;	\/* Format string if needed *\/$/;"	m	struct:probe_arg
fmt	trace/trace_probe.h	/^	const char		*fmt;		\/* Fromat string *\/$/;"	m	struct:fetch_type
fmttype	trace/trace_probe.h	/^	const char		*fmttype;	\/* Name in format file *\/$/;"	m	struct:fetch_type
fn	stop_machine.c	/^	cpu_stop_fn_t		fn;$/;"	m	struct:multi_stop_data	file:
fn	trace/trace.h	/^	filter_pred_fn_t 	fn;$/;"	m	struct:filter_pred
fn	trace/trace_events_hist.c	/^	action_fn_t		fn;$/;"	m	struct:action_data	file:
fn	trace/trace_events_hist.c	/^	hist_field_fn_t			fn;$/;"	m	struct:hist_field	file:
fn	workqueue.c	/^	long (*fn)(void *);$/;"	m	struct:work_for_cpu	file:
fnode	bpf/hashtab.c	/^				struct pcpu_freelist_node fnode;$/;"	m	union:htab_elem::__anon70::__anon71::__anon72	typeref:struct:htab_elem::__anon70::__anon71::__anon72::pcpu_freelist_node	file:
fnode	bpf/stackmap.c	/^	struct pcpu_freelist_node fnode;$/;"	m	struct:stack_map_bucket	typeref:struct:stack_map_bucket::pcpu_freelist_node	file:
fops	livepatch/patch.h	/^	struct ftrace_ops fops;$/;"	m	struct:klp_ops	typeref:struct:klp_ops::ftrace_ops
fops_kp	kprobes.c	/^static const struct file_operations fops_kp = {$/;"	v	typeref:struct:file_operations	file:
fops_lockevent	locking/lock_events.c	/^static const struct file_operations fops_lockevent = {$/;"	v	typeref:struct:file_operations	file:
for_each_action_of_desc	irq/internals.h	163;"	d
for_each_active_base	time/hrtimer.c	479;"	d	file:
for_each_buffer_cpu	trace/ring_buffer.c	269;"	d	file:
for_each_clamp_id	sched/core.c	788;"	d	file:
for_each_class	sched/sched.h	1771;"	d
for_each_cpu_worker_pool	workqueue.c	378;"	d	file:
for_each_css	cgroup/cgroup.c	658;"	d	file:
for_each_domain	sched/sched.h	1326;"	d
for_each_dyn_event	trace/trace_dynevent.h	108;"	d
for_each_dyn_event_safe	trace/trace_dynevent.h	116;"	d
for_each_e_css	cgroup/cgroup.c	673;"	d	file:
for_each_event	trace/trace_events.c	2375;"	d	file:
for_each_hash_entry	locking/qspinlock_paravirt.h	207;"	d
for_each_hist_field	trace/trace_events_hist.c	268;"	d	file:
for_each_hist_key_field	trace/trace_events_hist.c	274;"	d	file:
for_each_hist_val_field	trace/trace_events_hist.c	271;"	d	file:
for_each_irqts	irq/timings.c	281;"	d	file:
for_each_kdbcmd	debug/kdb/kdb_main.c	93;"	d	file:
for_each_kernel_tracepoint	tracepoint.c	/^EXPORT_SYMBOL_GPL(for_each_kernel_tracepoint);$/;"	v
for_each_kernel_tracepoint	tracepoint.c	/^void for_each_kernel_tracepoint(void (*fct)(struct tracepoint *tp, void *priv),$/;"	f
for_each_kimage_entry	kexec_core.c	598;"	d	file:
for_each_leaf_cfs_rq_safe	sched/fair.c	385;"	d	file:
for_each_leaf_cfs_rq_safe	sched/fair.c	484;"	d	file:
for_each_leaf_node_cpu_mask	rcu/rcu.h	361;"	d
for_each_leaf_node_possible_cpu	rcu/rcu.h	351;"	d
for_each_lower_domain	sched/sched.h	1330;"	d
for_each_member	bpf/btf.c	178;"	d	file:
for_each_member_from	bpf/btf.c	183;"	d	file:
for_each_pool	workqueue.c	395;"	d	file:
for_each_pool_worker	workqueue.c	410;"	d	file:
for_each_pwq	workqueue.c	427;"	d	file:
for_each_root	cgroup/cgroup-internal.h	156;"	d
for_each_rt_rq	sched/rt.c	469;"	d	file:
for_each_rt_rq	sched/rt.c	576;"	d	file:
for_each_sched_entity	sched/fair.c	258;"	d	file:
for_each_sched_entity	sched/fair.c	443;"	d	file:
for_each_sched_rt_entity	sched/rt.c	474;"	d	file:
for_each_sched_rt_entity	sched/rt.c	579;"	d	file:
for_each_sd_topology	sched/topology.c	1448;"	d	file:
for_each_subsys	cgroup/cgroup-internal.h	164;"	d
for_each_task_context_nr	events/core.c	3214;"	d	file:
for_each_trace_kprobe	trace/trace_kprobe.c	78;"	d	file:
for_each_trace_uprobe	trace/trace_uprobe.c	88;"	d	file:
for_each_tracepoint_range	tracepoint.c	/^static void for_each_tracepoint_range($/;"	f	file:
for_each_tracing_cpu	trace/trace.h	755;"	d
for_each_vsi	bpf/btf.c	188;"	d	file:
for_each_vsi_from	bpf/btf.c	193;"	d	file:
forbidden_pages_map	power/snapshot.c	/^static struct memory_bitmap *forbidden_pages_map;$/;"	v	typeref:struct:memory_bitmap	file:
force_irqthreads	irq/manage.c	/^EXPORT_SYMBOL_GPL(force_irqthreads);$/;"	v
force_irqthreads	irq/manage.c	/^__read_mostly bool force_irqthreads;$/;"	v
force_kobj_attr	livepatch/core.c	/^static struct kobj_attribute force_kobj_attr = __ATTR_WO(force);$/;"	v	typeref:struct:kobj_attribute	file:
force_qs_rnp	rcu/tree.c	/^static void force_qs_rnp(int (*f)(struct rcu_data *rdp))$/;"	f	file:
force_rebuild	cgroup/cpuset.c	/^static bool force_rebuild;$/;"	v	file:
force_schedstat_enabled	sched/core.c	/^void force_schedstat_enabled(void)$/;"	f
force_sig	signal.c	/^EXPORT_SYMBOL(force_sig);$/;"	v
force_sig	signal.c	/^void force_sig(int sig)$/;"	f
force_sig_bnderr	signal.c	/^int force_sig_bnderr(void __user *addr, void __user *lower, void __user *upper)$/;"	f
force_sig_fault	signal.c	/^int force_sig_fault(int sig, int code, void __user *addr$/;"	f
force_sig_fault_to_task	signal.c	/^int force_sig_fault_to_task(int sig, int code, void __user *addr$/;"	f
force_sig_info	signal.c	/^int force_sig_info(struct kernel_siginfo *info)$/;"	f
force_sig_info_to_task	signal.c	/^force_sig_info_to_task(struct kernel_siginfo *info, struct task_struct *t)$/;"	f	file:
force_sig_mceerr	signal.c	/^int force_sig_mceerr(int code, void __user *addr, short lsb)$/;"	f
force_sig_pkuerr	signal.c	/^int force_sig_pkuerr(void __user *addr, u32 pkey)$/;"	f
force_sig_ptrace_errno_trap	signal.c	/^int force_sig_ptrace_errno_trap(int errno, void __user *addr)$/;"	f
force_sigsegv	signal.c	/^void force_sigsegv(int sig)$/;"	f
force_store	livepatch/core.c	/^static ssize_t force_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
force_unoptimize_kprobe	kprobes.c	/^static void force_unoptimize_kprobe(struct optimized_kprobe *op)$/;"	f	file:
forget_original_parent	exit.c	/^static void forget_original_parent(struct task_struct *father,$/;"	f	file:
fork_idle	fork.c	/^struct task_struct *fork_idle(int cpu)$/;"	f
fork_init	fork.c	/^void __init fork_init(void)$/;"	f
fork_usermode_blob	umh.c	/^EXPORT_SYMBOL_GPL(fork_usermode_blob);$/;"	v
fork_usermode_blob	umh.c	/^int fork_usermode_blob(void *data, size_t len, struct umh_info *info)$/;"	f
format_mod_start	trace/trace_printk.c	/^static inline void format_mod_start(void) { }$/;"	f	file:
format_mod_start	trace/trace_printk.c	/^static void format_mod_start(void)$/;"	f	file:
format_mod_stop	trace/trace_printk.c	/^static inline void format_mod_stop(void) { }$/;"	f	file:
format_mod_stop	trace/trace_printk.c	/^static void format_mod_stop(void)$/;"	f	file:
forward_timer_base	time/timer.c	/^static inline void forward_timer_base(struct timer_base *base)$/;"	f	file:
four	sysctl.c	/^static int __maybe_unused four = 4;$/;"	v	file:
fp	time/posix-clock.c	/^	struct file *fp;$/;"	m	struct:posix_clock_desc	typeref:struct:posix_clock_desc::file	file:
fpid_next	trace/ftrace.c	/^static void *fpid_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
fpid_show	trace/ftrace.c	/^static int fpid_show(struct seq_file *m, void *v)$/;"	f	file:
fprofiler_ops	trace/ftrace.c	/^static struct fgraph_ops fprofiler_ops = {$/;"	v	typeref:struct:fgraph_ops	file:
fqs	rcu/rcutorture.c	/^	void (*fqs)(void);$/;"	m	struct:rcu_torture_ops	file:
fqs_task	rcu/rcutorture.c	/^static struct task_struct *fqs_task;$/;"	v	typeref:struct:task_struct	file:
free	trace/trace.h	/^	void			(*free)(struct event_trigger_ops *ops,$/;"	m	struct:event_trigger_ops
free	trace/trace.h	/^	void			(*free)(struct ftrace_probe_ops *ops,$/;"	m	struct:ftrace_probe_ops
free	trace/trace_dynevent.h	/^	int (*free)(struct dyn_event *ev);$/;"	m	struct:dyn_event_operations
free_aggr_kprobe	kprobes.c	/^static void free_aggr_kprobe(struct kprobe *p)$/;"	f	file:
free_all_swap_pages	power/swap.c	/^void free_all_swap_pages(int swap)$/;"	f
free_aux	events/internal.h	/^	void				(*free_aux)(void *);$/;"	m	struct:ring_buffer
free_basic_memory_bitmaps	power/snapshot.c	/^void free_basic_memory_bitmaps(void)$/;"	f
free_bitmaps	power/user.c	/^	bool free_bitmaps;$/;"	m	struct:snapshot_data	file:
free_buffer_page	trace/ring_buffer.c	/^static void free_buffer_page(struct buffer_page *bpage)$/;"	f	file:
free_cg_rpool_locked	cgroup/rdma.c	/^static void free_cg_rpool_locked(struct rdmacg_resource_pool *rpool)$/;"	f	file:
free_cgroup_ns	cgroup/namespace.c	/^EXPORT_SYMBOL(free_cgroup_ns);$/;"	v
free_cgroup_ns	cgroup/namespace.c	/^void free_cgroup_ns(struct cgroup_namespace *ns)$/;"	f
free_cgrp_cset_links	cgroup/cgroup.c	/^static void free_cgrp_cset_links(struct list_head *links_to_free)$/;"	f	file:
free_chunk	audit_tree.c	/^static void free_chunk(struct audit_chunk *chunk)$/;"	f	file:
free_copy	module.c	/^static void free_copy(struct load_info *info)$/;"	f	file:
free_cpumasks	cgroup/cpuset.c	/^static inline void free_cpumasks(struct cpuset *cs, struct tmpmasks *tmp)$/;"	f	file:
free_cpus	sched/cpudeadline.h	/^	cpumask_var_t		free_cpus;$/;"	m	struct:cpudl
free_cpuset	cgroup/cpuset.c	/^static inline void free_cpuset(struct cpuset *cs)$/;"	f	file:
free_ctx	events/core.c	/^static void free_ctx(struct rcu_head *head)$/;"	f	file:
free_desc	irq/irqdesc.c	/^static void free_desc(unsigned int irq)$/;"	f	file:
free_dma	dma.c	/^EXPORT_SYMBOL(free_dma);$/;"	v
free_dma	dma.c	/^void free_dma(unsigned int dmanr)$/;"	f
free_event	events/core.c	/^static void free_event(struct perf_event *event)$/;"	f	file:
free_event_filter	trace/trace_events_filter.c	/^void free_event_filter(struct event_filter *filter)$/;"	f
free_event_rcu	events/core.c	/^static void free_event_rcu(struct rcu_head *head)$/;"	f	file:
free_fair_sched_group	sched/fair.c	/^void free_fair_sched_group(struct task_group *tg) { }$/;"	f
free_fair_sched_group	sched/fair.c	/^void free_fair_sched_group(struct task_group *tg)$/;"	f
free_filters_list	events/core.c	/^static void free_filters_list(struct list_head *filters)$/;"	f	file:
free_ftrace_func_mapper	trace/ftrace.c	/^void free_ftrace_func_mapper(struct ftrace_func_mapper *mapper,$/;"	f
free_ftrace_hash	trace/ftrace.c	/^static void free_ftrace_hash(struct ftrace_hash *hash)$/;"	f	file:
free_ftrace_hash_rcu	trace/ftrace.c	/^static void free_ftrace_hash_rcu(struct ftrace_hash *hash)$/;"	f	file:
free_ftrace_mod	trace/ftrace.c	/^static void free_ftrace_mod(struct ftrace_mod_load *ftrace_mod)$/;"	f	file:
free_func_state	bpf/verifier.c	/^static void free_func_state(struct bpf_func_state *state)$/;"	f	file:
free_hash_entry	trace/ftrace.c	/^free_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
free_highmem_data	power/snapshot.c	/^static inline void free_highmem_data(void) {}$/;"	f	file:
free_highmem_data	power/snapshot.c	/^static inline void free_highmem_data(void)$/;"	f	file:
free_htab_elem	bpf/hashtab.c	/^static void free_htab_elem(struct bpf_htab *htab, struct htab_elem *l)$/;"	f	file:
free_image_page	power/snapshot.c	/^static inline void free_image_page(void *addr, int clear_nosave_free)$/;"	f	file:
free_insn_page	kprobes.c	/^void __weak free_insn_page(void *page)$/;"	f
free_irq	irq/manage.c	/^EXPORT_SYMBOL(free_irq);$/;"	v
free_irq	irq/manage.c	/^const void *free_irq(unsigned int irq, void *dev_id)$/;"	f
free_kthread_struct	kthread.c	/^void free_kthread_struct(struct task_struct *k)$/;"	f
free_list_of_pages	power/snapshot.c	/^static inline void free_list_of_pages(struct linked_page *list,$/;"	f	file:
free_map_info	events/uprobes.c	/^static inline struct map_info *free_map_info(struct map_info *info)$/;"	f	file:
free_masks	irq/irqdesc.c	/^static inline void free_masks(struct irq_desc *desc) { }$/;"	f	file:
free_masks	irq/irqdesc.c	/^static void free_masks(struct irq_desc *desc)$/;"	f	file:
free_mem_extents	power/snapshot.c	/^static void free_mem_extents(struct list_head *list)$/;"	f	file:
free_mm	fork.c	666;"	d	file:
free_modinfo	module.c	/^static void free_modinfo(struct module *mod)$/;"	f	file:
free_modprobe_argv	kmod.c	/^static void free_modprobe_argv(struct subprocess_info *info)$/;"	f	file:
free_module	module.c	/^static void free_module(struct module *mod)$/;"	f	file:
free_module_elf	module.c	/^static void free_module_elf(struct module *mod)$/;"	f	file:
free_module_param_attrs	params.c	/^static void free_module_param_attrs(struct module_kobject *mk)$/;"	f	file:
free_msi_entry	irq/msi.c	/^void free_msi_entry(struct msi_desc *entry)$/;"	f
free_nmi	irq/manage.c	/^const void *free_nmi(unsigned int irq, void *dev_id)$/;"	f
free_node_to_cpumask	irq/affinity.c	/^static void free_node_to_cpumask(cpumask_var_t *masks)$/;"	f	file:
free_notes_attrs	module.c	/^static void free_notes_attrs(struct module_notes_attrs *notes_attrs,$/;"	f	file:
free_nsproxy	nsproxy.c	/^void free_nsproxy(struct nsproxy *ns)$/;"	f
free_page	trace/ring_buffer.c	/^	struct buffer_data_page		*free_page;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_data_page	file:
free_pages_map	power/snapshot.c	/^static struct memory_bitmap *free_pages_map;$/;"	v	typeref:struct:memory_bitmap	file:
free_pd	sched/topology.c	/^static void free_pd(struct perf_domain *pd) { }$/;"	f	file:
free_pd	sched/topology.c	/^static void free_pd(struct perf_domain *pd)$/;"	f	file:
free_percpu_cgroup_storage_rcu	bpf/local_storage.c	/^static void free_percpu_cgroup_storage_rcu(struct rcu_head *rcu)$/;"	f	file:
free_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(free_percpu_irq);$/;"	v
free_percpu_irq	irq/manage.c	/^void free_percpu_irq(unsigned int irq, void __percpu *dev_id)$/;"	f
free_percpu_nmi	irq/manage.c	/^void free_percpu_nmi(unsigned int irq, void __percpu *dev_id)$/;"	f
free_pid	pid.c	/^void free_pid(struct pid *pid)$/;"	f
free_pid_ns	pid_namespace.c	/^static void free_pid_ns(struct kref *kref)$/;"	f	file:
free_pmu_context	events/core.c	/^static void free_pmu_context(struct pmu *pmu)$/;"	f	file:
free_probe_data	trace/trace_events.c	/^static int free_probe_data(void *data)$/;"	f	file:
free_prog	trace/trace_events_filter.c	/^static void free_prog(struct event_filter *filter)$/;"	f	file:
free_resource	resource.c	/^static void free_resource(struct resource *res)$/;"	f	file:
free_ret_instance	events/uprobes.c	/^static struct return_instance *free_ret_instance(struct return_instance *ri)$/;"	f	file:
free_rootdomain	sched/topology.c	/^static void free_rootdomain(struct rcu_head *rcu)$/;"	f	file:
free_rp_inst	kprobes.c	/^static inline void free_rp_inst(struct kretprobe *rp)$/;"	f	file:
free_rt_sched_group	sched/rt.c	/^void free_rt_sched_group(struct task_group *tg) { }$/;"	f
free_rt_sched_group	sched/rt.c	/^void free_rt_sched_group(struct task_group *tg)$/;"	f
free_saved_cmdlines_buffer	trace/trace.c	/^static void free_saved_cmdlines_buffer(struct saved_cmdlines_buffer *s)$/;"	f	file:
free_sched_domains	sched/topology.c	/^void free_sched_domains(cpumask_var_t doms[], unsigned int ndoms)$/;"	f
free_sched_groups	sched/topology.c	/^static void free_sched_groups(struct sched_group *sg, int free_sgc)$/;"	f	file:
free_sect_attrs	module.c	/^static void free_sect_attrs(struct module_sect_attrs *sect_attrs)$/;"	f	file:
free_shared_cgroup_storage_rcu	bpf/local_storage.c	/^static void free_shared_cgroup_storage_rcu(struct rcu_head *rcu)$/;"	f	file:
free_signal_struct	fork.c	/^static inline void free_signal_struct(struct signal_struct *sig)$/;"	f	file:
free_snapshot	trace/trace.c	/^static void free_snapshot(struct trace_array *tr)$/;"	f	file:
free_states	bpf/verifier.c	/^static void free_states(struct bpf_verifier_env *env)$/;"	f	file:
free_synth_event	trace/trace_events_hist.c	/^static void free_synth_event(struct synth_event *event)$/;"	f	file:
free_synth_event_print_fmt	trace/trace_events_hist.c	/^static void free_synth_event_print_fmt(struct trace_event_call *call)$/;"	f	file:
free_synth_field	trace/trace_events_hist.c	/^static void free_synth_field(struct synth_field *field)$/;"	f	file:
free_synth_tracepoint	trace/trace_events_hist.c	/^static void free_synth_tracepoint(struct tracepoint *tp)$/;"	f	file:
free_syscall_print_fmt	trace/trace_syscalls.c	/^static void __init free_syscall_print_fmt(struct trace_event_call *call)$/;"	f	file:
free_task	fork.c	/^EXPORT_SYMBOL(free_task);$/;"	v
free_task	fork.c	/^void free_task(struct task_struct *tsk)$/;"	f
free_task_struct	fork.c	/^static inline void free_task_struct(struct task_struct *tsk)$/;"	f	file:
free_thread_stack	fork.c	/^static inline void free_thread_stack(struct task_struct *tsk)$/;"	f	file:
free_thread_stack	fork.c	/^static void free_thread_stack(struct task_struct *tsk)$/;"	f	file:
free_trace_buffer	trace/trace.c	/^static void free_trace_buffer(struct trace_buffer *buf)$/;"	f	file:
free_trace_buffers	trace/trace.c	/^static void free_trace_buffers(struct trace_array *tr)$/;"	f	file:
free_trace_kprobe	trace/trace_kprobe.c	/^static void free_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
free_trace_uprobe	trace/trace_uprobe.c	/^static void free_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
free_tree_refs	auditsc.c	/^static void free_tree_refs(struct audit_context *ctx)$/;"	f	file:
free_uid	user.c	/^void free_uid(struct user_struct *up)$/;"	f
free_unnecessary_pages	power/snapshot.c	/^static unsigned long free_unnecessary_pages(void)$/;"	f	file:
free_used_maps	bpf/syscall.c	/^static void free_used_maps(struct bpf_prog_aux *aux)$/;"	f	file:
free_user_ns	user_namespace.c	/^static void free_user_ns(struct work_struct *work)$/;"	f	file:
free_uts_ns	utsname.c	/^void free_uts_ns(struct kref *kref)$/;"	f
free_var_defs	trace/trace_events_hist.c	/^static void free_var_defs(struct hist_trigger_data *hist_data)$/;"	f	file:
free_verifier_state	bpf/verifier.c	/^static void free_verifier_state(struct bpf_verifier_state *state,$/;"	f	file:
free_vm_stack_cache	fork.c	/^static int free_vm_stack_cache(unsigned int cpu)$/;"	f	file:
free_workqueue_attrs	workqueue.c	/^static void free_workqueue_attrs(struct workqueue_attrs *attrs)$/;"	f	file:
free_zapped_rcu	locking/lockdep.c	/^static void free_zapped_rcu(struct rcu_head *ch)$/;"	f	file:
free_zone_bm_rtree	power/snapshot.c	/^static void free_zone_bm_rtree(struct mem_zone_bm_rtree *zone,$/;"	f	file:
freehigh	sys.c	/^	u32 freehigh;$/;"	m	struct:compat_sysinfo	file:
freelist	bpf/hashtab.c	/^		struct pcpu_freelist freelist;$/;"	m	union:bpf_htab::__anon69	typeref:struct:bpf_htab::__anon69::pcpu_freelist	file:
freelist	bpf/percpu_freelist.h	/^	struct pcpu_freelist_head __percpu *freelist;$/;"	m	struct:pcpu_freelist	typeref:struct:pcpu_freelist::__percpu
freelist	bpf/stackmap.c	/^	struct pcpu_freelist freelist;$/;"	m	struct:bpf_stack_map	typeref:struct:bpf_stack_map::pcpu_freelist	file:
freeram	sys.c	/^	u32 freeram;$/;"	m	struct:compat_sysinfo	file:
freeswap	sys.c	/^	u32 freeswap;$/;"	m	struct:compat_sysinfo	file:
freeze_cgroup	cgroup/legacy_freezer.c	/^static void freeze_cgroup(struct freezer *freezer)$/;"	f	file:
freeze_kernel_threads	power/process.c	/^int freeze_kernel_threads(void)$/;"	f
freeze_processes	power/process.c	/^int freeze_processes(void)$/;"	f
freeze_secondary_cpus	cpu.c	/^int freeze_secondary_cpus(int primary)$/;"	f
freeze_task	freezer.c	/^bool freeze_task(struct task_struct *p)$/;"	f
freeze_timeout_msecs	power/process.c	/^unsigned int __read_mostly freeze_timeout_msecs = 20 * MSEC_PER_SEC;$/;"	v
freeze_workqueues_begin	workqueue.c	/^void freeze_workqueues_begin(void)$/;"	f
freeze_workqueues_busy	workqueue.c	/^bool freeze_workqueues_busy(void)$/;"	f
freezer	cgroup/legacy_freezer.c	/^struct freezer {$/;"	s	file:
freezer_alarmtype	time/alarmtimer.c	/^static enum alarmtimer_type freezer_alarmtype;$/;"	v	typeref:enum:alarmtimer_type	file:
freezer_apply_state	cgroup/legacy_freezer.c	/^static void freezer_apply_state(struct freezer *freezer, bool freeze,$/;"	f	file:
freezer_attach	cgroup/legacy_freezer.c	/^static void freezer_attach(struct cgroup_taskset *tset)$/;"	f	file:
freezer_cgrp_subsys	cgroup/legacy_freezer.c	/^struct cgroup_subsys freezer_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
freezer_change_state	cgroup/legacy_freezer.c	/^static void freezer_change_state(struct freezer *freezer, bool freeze)$/;"	f	file:
freezer_css_alloc	cgroup/legacy_freezer.c	/^freezer_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
freezer_css_free	cgroup/legacy_freezer.c	/^static void freezer_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
freezer_css_offline	cgroup/legacy_freezer.c	/^static void freezer_css_offline(struct cgroup_subsys_state *css)$/;"	f	file:
freezer_css_online	cgroup/legacy_freezer.c	/^static int freezer_css_online(struct cgroup_subsys_state *css)$/;"	f	file:
freezer_delta	time/alarmtimer.c	/^static ktime_t freezer_delta;$/;"	v	file:
freezer_expires	time/alarmtimer.c	/^static ktime_t freezer_expires;$/;"	v	file:
freezer_fork	cgroup/legacy_freezer.c	/^static void freezer_fork(struct task_struct *task)$/;"	f	file:
freezer_parent_freezing_read	cgroup/legacy_freezer.c	/^static u64 freezer_parent_freezing_read(struct cgroup_subsys_state *css,$/;"	f	file:
freezer_read	cgroup/legacy_freezer.c	/^static int freezer_read(struct seq_file *m, void *v)$/;"	f	file:
freezer_self_freezing_read	cgroup/legacy_freezer.c	/^static u64 freezer_self_freezing_read(struct cgroup_subsys_state *css,$/;"	f	file:
freezer_state_flags	cgroup/legacy_freezer.c	/^enum freezer_state_flags {$/;"	g	file:
freezer_state_strs	cgroup/legacy_freezer.c	/^static const char *freezer_state_strs(unsigned int state)$/;"	f	file:
freezer_test_done	power/hibernate.c	/^bool freezer_test_done;$/;"	v
freezer_write	cgroup/legacy_freezer.c	/^static ssize_t freezer_write(struct kernfs_open_file *of,$/;"	f	file:
freezing_slow_path	freezer.c	/^EXPORT_SYMBOL(freezing_slow_path);$/;"	v
freezing_slow_path	freezer.c	/^bool freezing_slow_path(struct task_struct *p)$/;"	f
freq_update_delay_ns	sched/cpufreq_schedutil.c	/^	s64			freq_update_delay_ns;$/;"	m	struct:sugov_policy	file:
frob_ro_after_init	module.c	/^static void frob_ro_after_init(const struct module_layout *layout,$/;"	f	file:
frob_rodata	module.c	/^static void frob_rodata(const struct module_layout *layout,$/;"	f	file:
frob_text	module.c	/^static void frob_text(const struct module_layout *layout,$/;"	f	file:
frob_writable_data	module.c	/^static void frob_writable_data(const struct module_layout *layout,$/;"	f	file:
from	cgroup/cpuset.c	/^	nodemask_t		from;$/;"	m	struct:cpuset_migrate_mm_work	file:
from	irq/devres.c	/^	unsigned int from;$/;"	m	struct:irq_desc_devres	file:
from_kgid	user_namespace.c	/^EXPORT_SYMBOL(from_kgid);$/;"	v
from_kgid	user_namespace.c	/^gid_t from_kgid(struct user_namespace *targ, kgid_t kgid)$/;"	f
from_kgid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kgid_munged);$/;"	v
from_kgid_munged	user_namespace.c	/^gid_t from_kgid_munged(struct user_namespace *targ, kgid_t kgid)$/;"	f
from_kprojid	user_namespace.c	/^EXPORT_SYMBOL(from_kprojid);$/;"	v
from_kprojid	user_namespace.c	/^projid_t from_kprojid(struct user_namespace *targ, kprojid_t kprojid)$/;"	f
from_kprojid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kprojid_munged);$/;"	v
from_kprojid_munged	user_namespace.c	/^projid_t from_kprojid_munged(struct user_namespace *targ, kprojid_t kprojid)$/;"	f
from_kuid	user_namespace.c	/^EXPORT_SYMBOL(from_kuid);$/;"	v
from_kuid	user_namespace.c	/^uid_t from_kuid(struct user_namespace *targ, kuid_t kuid)$/;"	f
from_kuid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kuid_munged);$/;"	v
from_kuid_munged	user_namespace.c	/^uid_t from_kuid_munged(struct user_namespace *targ, kuid_t kuid)$/;"	f
front	locking/lockdep.c	/^	unsigned int  front, rear;$/;"	m	struct:circular_queue	file:
frozen	power/user.c	/^	bool frozen;$/;"	m	struct:snapshot_data	file:
frozen_cpus	cpu.c	/^static cpumask_var_t frozen_cpus;$/;"	v	file:
fs_cachep	fork.c	/^struct kmem_cache *fs_cachep;$/;"	v	typeref:struct:kmem_cache
fs_overflowgid	sys.c	/^EXPORT_SYMBOL(fs_overflowgid);$/;"	v
fs_overflowgid	sys.c	/^int fs_overflowgid = DEFAULT_FS_OVERFLOWGID;$/;"	v
fs_overflowuid	sys.c	/^EXPORT_SYMBOL(fs_overflowuid);$/;"	v
fs_overflowuid	sys.c	/^int fs_overflowuid = DEFAULT_FS_OVERFLOWUID;$/;"	v
fs_table	sysctl.c	/^static struct ctl_table fs_table[] = {$/;"	v	typeref:struct:ctl_table	file:
fs_table	sysctl.c	/^static struct ctl_table fs_table[];$/;"	v	typeref:struct:ctl_table	file:
fscaps	ksysfs.c	/^KERNEL_ATTR_RO(fscaps);$/;"	v
fscaps_show	ksysfs.c	/^static ssize_t fscaps_show(struct kobject *kobj,$/;"	f	file:
fsgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
fsuid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
ftrace_add_mod	trace/ftrace.c	/^static int ftrace_add_mod(struct trace_array *tr,$/;"	f	file:
ftrace_add_profile	trace/ftrace.c	/^static void ftrace_add_profile(struct ftrace_profile_stat *stat,$/;"	f	file:
ftrace_allocate_pages	trace/ftrace.c	/^ftrace_allocate_pages(unsigned long num_to_init)$/;"	f	file:
ftrace_allocate_records	trace/ftrace.c	/^static int ftrace_allocate_records(struct ftrace_page *pg, int count)$/;"	f	file:
ftrace_arch_code_modify_post_process	trace/ftrace.c	/^int __weak ftrace_arch_code_modify_post_process(void)$/;"	f
ftrace_arch_code_modify_prepare	trace/ftrace.c	/^int __weak ftrace_arch_code_modify_prepare(void)$/;"	f
ftrace_avail_fops	trace/ftrace.c	/^static const struct file_operations ftrace_avail_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_avail_fops	trace/trace_events.c	/^static const struct file_operations ftrace_avail_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_avail_open	trace/ftrace.c	/^ftrace_avail_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_buffer_info	trace/trace.c	/^struct ftrace_buffer_info {$/;"	s	file:
ftrace_bug	trace/ftrace.c	/^void ftrace_bug(int failed, struct dyn_ftrace *rec)$/;"	f
ftrace_bug_type	trace/ftrace.c	/^enum ftrace_bug_type ftrace_bug_type;$/;"	v	typeref:enum:ftrace_bug_type
ftrace_check_record	trace/ftrace.c	/^static int ftrace_check_record(struct dyn_ftrace *rec, bool enable, bool update)$/;"	f	file:
ftrace_clear_event_pids	trace/trace_events.c	/^static void ftrace_clear_event_pids(struct trace_array *tr)$/;"	f	file:
ftrace_clear_events	trace/trace_events.c	/^static void ftrace_clear_events(struct trace_array *tr)$/;"	f	file:
ftrace_clear_pids	trace/ftrace.c	/^void ftrace_clear_pids(struct trace_array *tr)$/;"	f
ftrace_clear_pids	trace/trace.h	/^static inline void ftrace_clear_pids(struct trace_array *tr) { }$/;"	f
ftrace_cmp_ips	trace/ftrace.c	/^static int ftrace_cmp_ips(const void *a, const void *b)$/;"	f	file:
ftrace_cmp_recs	trace/ftrace.c	/^static int ftrace_cmp_recs(const void *a, const void *b)$/;"	f	file:
ftrace_code_disable	trace/ftrace.c	/^ftrace_code_disable(struct module *mod, struct dyn_ftrace *rec)$/;"	f	file:
ftrace_count_free	trace/trace_functions.c	/^ftrace_count_free(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
ftrace_count_init	trace/trace_functions.c	/^ftrace_count_init(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
ftrace_count_snapshot	trace/trace.c	/^ftrace_count_snapshot(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_cpudump_callback	trace/trace_functions.c	/^ftrace_cpudump_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_cpudump_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_cpudump_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_cpudump_print	trace/trace_functions.c	/^ftrace_cpudump_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_cpudump_probe	trace/trace_functions.c	/^ftrace_cpudump_probe(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_create_filter_files	trace/ftrace.c	/^void ftrace_create_filter_files(struct ftrace_ops *ops,$/;"	f
ftrace_create_filter_files	trace/trace.h	1148;"	d
ftrace_create_function_files	trace/trace.h	/^ftrace_create_function_files(struct trace_array *tr,$/;"	f
ftrace_create_function_files	trace/trace_functions.c	/^int ftrace_create_function_files(struct trace_array *tr,$/;"	f
ftrace_destroy_filter_files	trace/ftrace.c	/^void ftrace_destroy_filter_files(struct ftrace_ops *ops)$/;"	f
ftrace_destroy_filter_files	trace/trace.h	1149;"	d
ftrace_destroy_function_files	trace/trace.h	/^static inline void ftrace_destroy_function_files(struct trace_array *tr) { }$/;"	f
ftrace_destroy_function_files	trace/trace_functions.c	/^void ftrace_destroy_function_files(struct trace_array *tr)$/;"	f
ftrace_dump	trace/trace.c	/^EXPORT_SYMBOL_GPL(ftrace_dump);$/;"	v
ftrace_dump	trace/trace.c	/^void ftrace_dump(enum ftrace_dump_mode oops_dump_mode)$/;"	f
ftrace_dump_buf	trace/trace_kdb.c	/^static void ftrace_dump_buf(int skip_entries, long cpu_file)$/;"	f	file:
ftrace_dump_callback	trace/trace_functions.c	/^ftrace_dump_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_dump_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_dump_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_dump_on_oops	trace/trace.c	/^enum ftrace_dump_mode ftrace_dump_on_oops;$/;"	v	typeref:enum:ftrace_dump_mode
ftrace_dump_print	trace/trace_functions.c	/^ftrace_dump_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_dump_probe	trace/trace_functions.c	/^ftrace_dump_probe(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_enable_sysctl	trace/ftrace.c	/^ftrace_enable_sysctl(struct ctl_table *table, int write,$/;"	f
ftrace_enabled_fops	trace/ftrace.c	/^static const struct file_operations ftrace_enabled_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_enabled_open	trace/ftrace.c	/^ftrace_enabled_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_avail_open	trace/trace_events.c	/^ftrace_event_avail_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_enable_disable	trace/trace_events.c	/^static int ftrace_event_enable_disable(struct trace_event_file *file,$/;"	f	file:
ftrace_event_field	trace/trace.h	/^struct ftrace_event_field {$/;"	s
ftrace_event_filter_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_format_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_format_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_id_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_id_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_is_function	trace/trace_export.c	/^bool ftrace_event_is_function(struct trace_event_call *call)$/;"	f
ftrace_event_open	trace/trace_events.c	/^ftrace_event_open(struct inode *inode, struct file *file,$/;"	f	file:
ftrace_event_pid_write	trace/trace_events.c	/^ftrace_event_pid_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ftrace_event_register	trace/trace_export.c	/^static int ftrace_event_register(struct trace_event_call *call,$/;"	f	file:
ftrace_event_release	trace/trace_events.c	/^static int ftrace_event_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_set_open	trace/trace_events.c	/^ftrace_event_set_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_set_pid_open	trace/trace_events.c	/^ftrace_event_set_pid_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_write	trace/trace_events.c	/^ftrace_event_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_events	trace/trace_events.c	/^LIST_HEAD(ftrace_events);$/;"	v
ftrace_expected	trace/ftrace.c	/^const void *ftrace_expected;$/;"	v
ftrace_exports	trace/trace.c	/^static void ftrace_exports(struct ring_buffer_event *event)$/;"	f	file:
ftrace_exports_disable	trace/trace.c	/^static inline void ftrace_exports_disable(void)$/;"	f	file:
ftrace_exports_enable	trace/trace.c	/^static inline void ftrace_exports_enable(void)$/;"	f	file:
ftrace_filter_fops	trace/ftrace.c	/^static const struct file_operations ftrace_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_filter_open	trace/ftrace.c	/^ftrace_filter_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_filter_pid_sched_switch_probe	trace/ftrace.c	/^ftrace_filter_pid_sched_switch_probe(void *data, bool preempt,$/;"	f	file:
ftrace_filter_write	trace/ftrace.c	/^ftrace_filter_write(struct file *file, const char __user *ubuf,$/;"	f
ftrace_find_event	trace/trace_output.c	/^struct trace_event *ftrace_find_event(int type)$/;"	f
ftrace_find_profiled_func	trace/ftrace.c	/^ftrace_find_profiled_func(struct ftrace_profile_stat *stat, unsigned long ip)$/;"	f	file:
ftrace_find_tramp_ops_any	trace/ftrace.c	/^ftrace_find_tramp_ops_any(struct dyn_ftrace *rec)$/;"	f	file:
ftrace_find_tramp_ops_curr	trace/ftrace.c	/^ftrace_find_tramp_ops_curr(struct dyn_ftrace *rec)$/;"	f	file:
ftrace_find_tramp_ops_new	trace/ftrace.c	/^ftrace_find_tramp_ops_new(struct dyn_ftrace *rec)$/;"	f	file:
ftrace_find_tramp_ops_next	trace/ftrace.c	/^ftrace_find_tramp_ops_next(struct dyn_ftrace *rec,$/;"	f	file:
ftrace_formats_fops	trace/trace_printk.c	/^static const struct file_operations ftrace_formats_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_formats_open	trace/trace_printk.c	/^ftrace_formats_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_free_filter	trace/ftrace.c	/^void ftrace_free_filter(struct ftrace_ops *ops)$/;"	f
ftrace_free_init_mem	trace/ftrace.c	/^void __init ftrace_free_init_mem(void)$/;"	f
ftrace_free_mem	trace/ftrace.c	/^void ftrace_free_mem(struct module *mod, void *start_ptr, void *end_ptr)$/;"	f
ftrace_free_mod_map	trace/ftrace.c	/^static void ftrace_free_mod_map(struct rcu_head *rcu)$/;"	f	file:
ftrace_func_address_lookup	trace/ftrace.c	/^ftrace_func_address_lookup(struct ftrace_mod_map *mod_map,$/;"	f	file:
ftrace_func_command	trace/trace.h	/^struct ftrace_func_command {$/;"	s
ftrace_func_entry	trace/ftrace.c	/^struct ftrace_func_entry {$/;"	s	file:
ftrace_func_map	trace/ftrace.c	/^struct ftrace_func_map {$/;"	s	file:
ftrace_func_mapper	trace/ftrace.c	/^struct ftrace_func_mapper {$/;"	s	file:
ftrace_func_mapper_add_ip	trace/ftrace.c	/^int ftrace_func_mapper_add_ip(struct ftrace_func_mapper *mapper,$/;"	f
ftrace_func_mapper_find_ip	trace/ftrace.c	/^void **ftrace_func_mapper_find_ip(struct ftrace_func_mapper *mapper,$/;"	f
ftrace_func_mapper_remove_ip	trace/ftrace.c	/^void *ftrace_func_mapper_remove_ip(struct ftrace_func_mapper *mapper,$/;"	f
ftrace_func_probe	trace/ftrace.c	/^struct ftrace_func_probe {$/;"	s	file:
ftrace_function_check_pred	trace/trace_events_filter.c	/^static int ftrace_function_check_pred(struct filter_pred *pred)$/;"	f	file:
ftrace_function_filter_re	trace/trace_events_filter.c	/^ftrace_function_filter_re(char *buf, int len, int *count)$/;"	f	file:
ftrace_function_set_filter	trace/trace_events_filter.c	/^static int ftrace_function_set_filter(struct perf_event *event,$/;"	f	file:
ftrace_function_set_filter_pred	trace/trace_events_filter.c	/^static int ftrace_function_set_filter_pred(struct filter_pred *pred,$/;"	f	file:
ftrace_function_set_regexp	trace/trace_events_filter.c	/^static int ftrace_function_set_regexp(struct ftrace_ops *ops, int filter,$/;"	f	file:
ftrace_get_addr_curr	trace/ftrace.c	/^unsigned long ftrace_get_addr_curr(struct dyn_ftrace *rec)$/;"	f
ftrace_get_addr_new	trace/ftrace.c	/^unsigned long ftrace_get_addr_new(struct dyn_ftrace *rec)$/;"	f
ftrace_glob	trace/ftrace.c	/^struct ftrace_glob {$/;"	s	file:
ftrace_graph_active	trace/fgraph.c	/^int ftrace_graph_active;$/;"	v
ftrace_graph_active	trace/ftrace_internal.h	68;"	d
ftrace_graph_addr	trace/trace.h	/^static inline int ftrace_graph_addr(struct ftrace_graph_ent *trace)$/;"	f
ftrace_graph_addr_finish	trace/trace.h	/^static inline void ftrace_graph_addr_finish(struct ftrace_graph_ret *trace)$/;"	f
ftrace_graph_data	trace/ftrace.c	/^struct ftrace_graph_data {$/;"	s	file:
ftrace_graph_entry	trace/fgraph.c	/^trace_func_graph_ent_t ftrace_graph_entry = ftrace_graph_entry_stub;$/;"	v
ftrace_graph_entry_stub	trace/fgraph.c	/^int ftrace_graph_entry_stub(struct ftrace_graph_ent *trace)$/;"	f
ftrace_graph_entry_test	trace/fgraph.c	/^static int ftrace_graph_entry_test(struct ftrace_graph_ent *trace)$/;"	f	file:
ftrace_graph_exit_task	trace/fgraph.c	/^void ftrace_graph_exit_task(struct task_struct *t)$/;"	f
ftrace_graph_fops	trace/ftrace.c	/^static const struct file_operations ftrace_graph_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_graph_get_ret_stack	trace/fgraph.c	/^ftrace_graph_get_ret_stack(struct task_struct *task, int idx)$/;"	f
ftrace_graph_graph_time_control	trace/ftrace.c	/^void ftrace_graph_graph_time_control(bool enable)$/;"	f
ftrace_graph_graph_time_control	trace/trace.h	/^static inline void ftrace_graph_graph_time_control(bool enable) { }$/;"	f
ftrace_graph_hash	trace/ftrace.c	/^struct ftrace_hash *ftrace_graph_hash = EMPTY_HASH;$/;"	v	typeref:struct:ftrace_hash
ftrace_graph_ignore_func	trace/trace.h	/^static inline bool ftrace_graph_ignore_func(struct ftrace_graph_ent *trace)$/;"	f
ftrace_graph_ignore_irqs	trace/trace_functions_graph.c	/^static inline int ftrace_graph_ignore_irqs(void)$/;"	f	file:
ftrace_graph_init_idle_task	trace/fgraph.c	/^void ftrace_graph_init_idle_task(struct task_struct *t, int cpu)$/;"	f
ftrace_graph_init_task	trace/fgraph.c	/^void ftrace_graph_init_task(struct task_struct *t)$/;"	f
ftrace_graph_is_dead	trace/fgraph.c	/^bool ftrace_graph_is_dead(void)$/;"	f
ftrace_graph_notrace_addr	trace/trace.h	/^static inline int ftrace_graph_notrace_addr(unsigned long addr)$/;"	f
ftrace_graph_notrace_fops	trace/ftrace.c	/^static const struct file_operations ftrace_graph_notrace_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_graph_notrace_hash	trace/ftrace.c	/^struct ftrace_hash *ftrace_graph_notrace_hash = EMPTY_HASH;$/;"	v	typeref:struct:ftrace_hash
ftrace_graph_notrace_open	trace/ftrace.c	/^ftrace_graph_notrace_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_graph_open	trace/ftrace.c	/^ftrace_graph_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_graph_probe_sched_switch	trace/fgraph.c	/^ftrace_graph_probe_sched_switch(void *ignore, bool preempt,$/;"	f	file:
ftrace_graph_release	trace/ftrace.c	/^ftrace_graph_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_graph_ret_addr	trace/fgraph.c	/^unsigned long ftrace_graph_ret_addr(struct task_struct *task, int *idx,$/;"	f
ftrace_graph_return	trace/fgraph.c	/^trace_func_graph_ret_t ftrace_graph_return =$/;"	v
ftrace_graph_seq_ops	trace/ftrace.c	/^static const struct seq_operations ftrace_graph_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
ftrace_graph_set_hash	trace/ftrace.c	/^ftrace_graph_set_hash(struct ftrace_hash *hash, char *buffer)$/;"	f	file:
ftrace_graph_skip_irqs	trace/trace_functions_graph.c	/^static int ftrace_graph_skip_irqs;$/;"	v	file:
ftrace_graph_sleep_time_control	trace/fgraph.c	/^void ftrace_graph_sleep_time_control(bool enable)$/;"	f
ftrace_graph_stop	trace/fgraph.c	/^void ftrace_graph_stop(void)$/;"	f
ftrace_graph_write	trace/ftrace.c	/^ftrace_graph_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_hash	trace/trace.h	/^struct ftrace_hash {$/;"	s
ftrace_hash_clear	trace/ftrace.c	/^static void ftrace_hash_clear(struct ftrace_hash *hash)$/;"	f	file:
ftrace_hash_empty	trace/trace.h	/^static __always_inline bool ftrace_hash_empty(struct ftrace_hash *hash)$/;"	f
ftrace_hash_ipmodify_disable	trace/ftrace.c	/^static void ftrace_hash_ipmodify_disable(struct ftrace_ops *ops)$/;"	f	file:
ftrace_hash_ipmodify_enable	trace/ftrace.c	/^static int ftrace_hash_ipmodify_enable(struct ftrace_ops *ops)$/;"	f	file:
ftrace_hash_ipmodify_update	trace/ftrace.c	/^static int ftrace_hash_ipmodify_update(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_key	trace/ftrace.c	/^ftrace_hash_key(struct ftrace_hash *hash, unsigned long ip)$/;"	f	file:
ftrace_hash_move	trace/ftrace.c	/^ftrace_hash_move(struct ftrace_ops *ops, int enable,$/;"	f	file:
ftrace_hash_move_and_update_ops	trace/ftrace.c	/^static int ftrace_hash_move_and_update_ops(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_disable	trace/ftrace.c	/^static bool ftrace_hash_rec_disable(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_disable_modify	trace/ftrace.c	/^static void ftrace_hash_rec_disable_modify(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_enable	trace/ftrace.c	/^static bool ftrace_hash_rec_enable(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_enable_modify	trace/ftrace.c	/^static void ftrace_hash_rec_enable_modify(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_update_modify	trace/ftrace.c	/^static void ftrace_hash_rec_update_modify(struct ftrace_ops *ops,$/;"	f	file:
ftrace_ignore_pid	trace/trace.h	/^	bool			ftrace_ignore_pid;$/;"	m	struct:trace_array_cpu
ftrace_init	trace/ftrace.c	/^void __init ftrace_init(void)$/;"	f
ftrace_init_array_ops	trace/ftrace.c	/^void ftrace_init_array_ops(struct trace_array *tr, ftrace_func_t func)$/;"	f
ftrace_init_array_ops	trace/trace.h	1078;"	d
ftrace_init_dyn_tracefs	trace/ftrace.c	/^static __init int ftrace_init_dyn_tracefs(struct dentry *d_tracer)$/;"	f	file:
ftrace_init_dyn_tracefs	trace/ftrace.c	/^static inline int ftrace_init_dyn_tracefs(struct dentry *d_tracer) { return 0; }$/;"	f	file:
ftrace_init_func	trace/ftrace.c	/^struct ftrace_init_func {$/;"	s	file:
ftrace_init_global_array_ops	trace/ftrace.c	/^__init void ftrace_init_global_array_ops(struct trace_array *tr)$/;"	f
ftrace_init_global_array_ops	trace/trace.h	/^ftrace_init_global_array_ops(struct trace_array *tr) { }$/;"	f
ftrace_init_trace_array	trace/ftrace.c	/^void ftrace_init_trace_array(struct trace_array *tr)$/;"	f
ftrace_init_trace_array	trace/trace.h	/^static inline void ftrace_init_trace_array(struct trace_array *tr) { }$/;"	f
ftrace_init_tracefs	trace/ftrace.c	/^void ftrace_init_tracefs(struct trace_array *tr, struct dentry *d_tracer)$/;"	f
ftrace_init_tracefs	trace/trace.h	/^static inline void ftrace_init_tracefs(struct trace_array *tr, struct dentry *d) { }$/;"	f
ftrace_init_tracefs_toplevel	trace/ftrace.c	/^void __init ftrace_init_tracefs_toplevel(struct trace_array *tr,$/;"	f
ftrace_init_tracefs_toplevel	trace/trace.h	/^static inline void ftrace_init_tracefs_toplevel(struct trace_array *tr, struct dentry *d) { }$/;"	f
ftrace_is_dead	trace/ftrace.c	/^int ftrace_is_dead(void)$/;"	f
ftrace_is_dead	trace/trace.h	/^static inline int ftrace_is_dead(void) { return 0; }$/;"	f
ftrace_iterator	trace/ftrace.c	/^struct ftrace_iterator {$/;"	s	file:
ftrace_kill	trace/ftrace.c	/^void ftrace_kill(void)$/;"	f
ftrace_likely_update	trace/trace_branch.c	/^EXPORT_SYMBOL(ftrace_likely_update);$/;"	v
ftrace_likely_update	trace/trace_branch.c	/^void ftrace_likely_update(struct ftrace_likely_data *f, int val,$/;"	f
ftrace_location	trace/ftrace.c	/^unsigned long ftrace_location(unsigned long ip)$/;"	f
ftrace_location_range	trace/ftrace.c	/^unsigned long ftrace_location_range(unsigned long start, unsigned long end)$/;"	f
ftrace_lock	trace/ftrace.c	/^DEFINE_MUTEX(ftrace_lock);$/;"	v
ftrace_lookup_ip	trace/ftrace.c	/^ftrace_lookup_ip(struct ftrace_hash *hash, unsigned long ip)$/;"	f
ftrace_mapper_func	trace/trace.h	/^typedef int (*ftrace_mapper_func)(void *data);$/;"	t
ftrace_match	trace/ftrace.c	/^static int ftrace_match(char *str, struct ftrace_glob *g)$/;"	f	file:
ftrace_match_addr	trace/ftrace.c	/^ftrace_match_addr(struct ftrace_hash *hash, unsigned long ip, int remove)$/;"	f	file:
ftrace_match_record	trace/ftrace.c	/^ftrace_match_record(struct dyn_ftrace *rec, struct ftrace_glob *func_g,$/;"	f	file:
ftrace_match_records	trace/ftrace.c	/^ftrace_match_records(struct ftrace_hash *hash, char *buff, int len)$/;"	f	file:
ftrace_mod_address_lookup	trace/ftrace.c	/^ftrace_mod_address_lookup(unsigned long addr, unsigned long *size,$/;"	f
ftrace_mod_callback	trace/ftrace.c	/^ftrace_mod_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_mod_cmd	trace/ftrace.c	/^static struct ftrace_func_command ftrace_mod_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_mod_cmd_init	trace/ftrace.c	/^core_initcall(ftrace_mod_cmd_init);$/;"	v
ftrace_mod_cmd_init	trace/ftrace.c	/^static int __init ftrace_mod_cmd_init(void)$/;"	f	file:
ftrace_mod_func	trace/ftrace.c	/^struct ftrace_mod_func {$/;"	s	file:
ftrace_mod_get_kallsym	trace/ftrace.c	/^int ftrace_mod_get_kallsym(unsigned int symnum, unsigned long *value,$/;"	f
ftrace_mod_load	trace/trace.h	/^struct ftrace_mod_load {$/;"	s
ftrace_mod_map	trace/ftrace.c	/^struct ftrace_mod_map {$/;"	s	file:
ftrace_modify_all_code	trace/ftrace.c	/^void ftrace_modify_all_code(int command)$/;"	f
ftrace_module_enable	trace/ftrace.c	/^void ftrace_module_enable(struct module *mod)$/;"	f
ftrace_module_init	trace/ftrace.c	/^void ftrace_module_init(struct module *mod)$/;"	f
ftrace_nodyn_init	trace/ftrace.c	/^core_initcall(ftrace_nodyn_init);$/;"	v
ftrace_nodyn_init	trace/ftrace.c	/^static int __init ftrace_nodyn_init(void)$/;"	f	file:
ftrace_notrace_fops	trace/ftrace.c	/^static const struct file_operations ftrace_notrace_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_notrace_open	trace/ftrace.c	/^ftrace_notrace_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_notrace_write	trace/ftrace.c	/^ftrace_notrace_write(struct file *file, const char __user *ubuf,$/;"	f
ftrace_now	trace/trace.c	/^u64 ftrace_now(int cpu)$/;"	f
ftrace_ops_assist_func	trace/ftrace.c	/^NOKPROBE_SYMBOL(ftrace_ops_assist_func);$/;"	v
ftrace_ops_assist_func	trace/ftrace.c	/^static void ftrace_ops_assist_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_ops_get_func	trace/ftrace.c	/^ftrace_func_t ftrace_ops_get_func(struct ftrace_ops *ops)$/;"	f
ftrace_ops_get_list_func	trace/ftrace.c	/^static ftrace_func_t ftrace_ops_get_list_func(struct ftrace_ops *ops)$/;"	f	file:
ftrace_ops_init	trace/ftrace.c	/^static inline void ftrace_ops_init(struct ftrace_ops *ops)$/;"	f	file:
ftrace_ops_list_func	trace/ftrace.c	/^NOKPROBE_SYMBOL(ftrace_ops_list_func);$/;"	v
ftrace_ops_list_func	trace/ftrace.c	/^static void ftrace_ops_list_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_ops_list_func	trace/ftrace.c	129;"	d	file:
ftrace_ops_no_ops	trace/ftrace.c	/^NOKPROBE_SYMBOL(ftrace_ops_no_ops);$/;"	v
ftrace_ops_no_ops	trace/ftrace.c	/^static void ftrace_ops_no_ops(unsigned long ip, unsigned long parent_ip)$/;"	f	file:
ftrace_ops_set_global_filter	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_ops_set_global_filter);$/;"	v
ftrace_ops_set_global_filter	trace/ftrace.c	/^void ftrace_ops_set_global_filter(struct ftrace_ops *ops)$/;"	f
ftrace_ops_test	trace/ftrace.c	/^ftrace_ops_test(struct ftrace_ops *ops, unsigned long ip, void *regs)$/;"	f
ftrace_ops_test	trace/ftrace_internal.h	/^ftrace_ops_test(struct ftrace_ops *ops, unsigned long ip, void *regs)$/;"	f
ftrace_ops_trampoline	trace/ftrace.c	/^struct ftrace_ops *ftrace_ops_trampoline(unsigned long addr)$/;"	f
ftrace_ops_update_code	trace/ftrace.c	/^static void ftrace_ops_update_code(struct ftrace_ops *ops,$/;"	f	file:
ftrace_page	trace/ftrace.c	/^struct ftrace_page {$/;"	s	file:
ftrace_pages	trace/ftrace.c	/^static struct ftrace_page	*ftrace_pages;$/;"	v	typeref:struct:ftrace_page	file:
ftrace_pages_start	trace/ftrace.c	/^static struct ftrace_page	*ftrace_pages_start;$/;"	v	typeref:struct:ftrace_page	file:
ftrace_pid_follow_fork	trace/ftrace.c	/^void ftrace_pid_follow_fork(struct trace_array *tr, bool enable)$/;"	f
ftrace_pid_follow_fork	trace/trace.h	/^static inline void ftrace_pid_follow_fork(struct trace_array *tr, bool enable) { }$/;"	f
ftrace_pid_follow_sched_process_exit	trace/ftrace.c	/^ftrace_pid_follow_sched_process_exit(void *data, struct task_struct *task)$/;"	f	file:
ftrace_pid_follow_sched_process_fork	trace/ftrace.c	/^ftrace_pid_follow_sched_process_fork(void *data,$/;"	f	file:
ftrace_pid_fops	trace/ftrace.c	/^static const struct file_operations ftrace_pid_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_pid_func	trace/ftrace.c	/^static void ftrace_pid_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_pid_open	trace/ftrace.c	/^ftrace_pid_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_pid_release	trace/ftrace.c	/^ftrace_pid_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_pid_reset	trace/ftrace.c	/^static void ftrace_pid_reset(struct trace_array *tr)$/;"	f	file:
ftrace_pid_sops	trace/ftrace.c	/^static const struct seq_operations ftrace_pid_sops = {$/;"	v	typeref:struct:seq_operations	file:
ftrace_pid_write	trace/ftrace.c	/^ftrace_pid_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ftrace_pids_enabled	trace/ftrace.c	/^static bool ftrace_pids_enabled(struct ftrace_ops *ops)$/;"	f	file:
ftrace_pop_return_trace	trace/fgraph.c	/^ftrace_pop_return_trace(struct ftrace_graph_ret *trace, unsigned long *ret,$/;"	f	file:
ftrace_probe_ops	trace/trace.h	/^struct ftrace_probe_ops {$/;"	s
ftrace_probe_print	trace/trace_functions.c	/^ftrace_probe_print(const char *name, struct seq_file *m,$/;"	f	file:
ftrace_process_locs	trace/ftrace.c	/^static int ftrace_process_locs(struct module *mod,$/;"	f	file:
ftrace_process_regex	trace/ftrace.c	/^static int ftrace_process_regex(struct ftrace_iterator *iter,$/;"	f	file:
ftrace_profile	trace/ftrace.c	/^struct ftrace_profile {$/;"	s	file:
ftrace_profile_alloc	trace/ftrace.c	/^ftrace_profile_alloc(struct ftrace_profile_stat *stat, unsigned long ip)$/;"	f	file:
ftrace_profile_fops	trace/ftrace.c	/^static const struct file_operations ftrace_profile_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_profile_free_filter	trace/trace_events_filter.c	/^void ftrace_profile_free_filter(struct perf_event *event)$/;"	f
ftrace_profile_init	trace/ftrace.c	/^static int ftrace_profile_init(void)$/;"	f	file:
ftrace_profile_init_cpu	trace/ftrace.c	/^static int ftrace_profile_init_cpu(int cpu)$/;"	f	file:
ftrace_profile_page	trace/ftrace.c	/^struct ftrace_profile_page {$/;"	s	file:
ftrace_profile_pages_init	trace/ftrace.c	/^int ftrace_profile_pages_init(struct ftrace_profile_stat *stat)$/;"	f
ftrace_profile_read	trace/ftrace.c	/^ftrace_profile_read(struct file *filp, char __user *ubuf,$/;"	f	file:
ftrace_profile_reset	trace/ftrace.c	/^static void ftrace_profile_reset(struct ftrace_profile_stat *stat)$/;"	f	file:
ftrace_profile_set_filter	trace/trace_events_filter.c	/^int ftrace_profile_set_filter(struct perf_event *event, int event_id,$/;"	f
ftrace_profile_stat	trace/ftrace.c	/^struct ftrace_profile_stat {$/;"	s	file:
ftrace_profile_tracefs	trace/ftrace.c	/^static __init void ftrace_profile_tracefs(struct dentry *d_tracer)$/;"	f	file:
ftrace_profile_write	trace/ftrace.c	/^ftrace_profile_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ftrace_push_return_trace	trace/fgraph.c	/^ftrace_push_return_trace(unsigned long ret, unsigned long func,$/;"	f	file:
ftrace_rec_iter	trace/ftrace.c	/^struct ftrace_rec_iter {$/;"	s	file:
ftrace_rec_iter_next	trace/ftrace.c	/^struct ftrace_rec_iter *ftrace_rec_iter_next(struct ftrace_rec_iter *iter)$/;"	f
ftrace_rec_iter_record	trace/ftrace.c	/^struct dyn_ftrace *ftrace_rec_iter_record(struct ftrace_rec_iter *iter)$/;"	f
ftrace_rec_iter_start	trace/ftrace.c	/^struct ftrace_rec_iter *ftrace_rec_iter_start(void)$/;"	f
ftrace_regex_open	trace/ftrace.c	/^ftrace_regex_open(struct ftrace_ops *ops, int flag,$/;"	f
ftrace_regex_release	trace/ftrace.c	/^int ftrace_regex_release(struct inode *inode, struct file *file)$/;"	f
ftrace_regex_write	trace/ftrace.c	/^ftrace_regex_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_release_mod	trace/ftrace.c	/^void ftrace_release_mod(struct module *mod)$/;"	f
ftrace_replace_code	trace/ftrace.c	/^void __weak ftrace_replace_code(int mod_flags)$/;"	f
ftrace_reset_array_ops	trace/ftrace.c	/^void ftrace_reset_array_ops(struct trace_array *tr)$/;"	f
ftrace_reset_array_ops	trace/trace.h	/^static inline void ftrace_reset_array_ops(struct trace_array *tr) { }$/;"	f
ftrace_return_to_handler	trace/fgraph.c	/^unsigned long ftrace_return_to_handler(unsigned long frame_pointer)$/;"	f
ftrace_run_modify_code	trace/ftrace.c	/^static void ftrace_run_modify_code(struct ftrace_ops *ops, int command,$/;"	f	file:
ftrace_run_stop_machine	trace/ftrace.c	/^void ftrace_run_stop_machine(int command)$/;"	f
ftrace_run_update_code	trace/ftrace.c	/^static void ftrace_run_update_code(int command)$/;"	f	file:
ftrace_set_addr	trace/ftrace.c	/^ftrace_set_addr(struct ftrace_ops *ops, unsigned long ip, int remove,$/;"	f	file:
ftrace_set_clr_event	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(ftrace_set_clr_event);$/;"	v
ftrace_set_clr_event	trace/trace_events.c	/^int ftrace_set_clr_event(struct trace_array *tr, char *buf, int set)$/;"	f
ftrace_set_early_filter	trace/ftrace.c	/^ftrace_set_early_filter(struct ftrace_ops *ops, char *buf, int enable)$/;"	f
ftrace_set_event_fops	trace/trace_events.c	/^static const struct file_operations ftrace_set_event_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_set_event_pid_fops	trace/trace_events.c	/^static const struct file_operations ftrace_set_event_pid_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_set_filter	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_filter);$/;"	v
ftrace_set_filter	trace/ftrace.c	/^int ftrace_set_filter(struct ftrace_ops *ops, unsigned char *buf,$/;"	f
ftrace_set_filter_ip	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_filter_ip);$/;"	v
ftrace_set_filter_ip	trace/ftrace.c	/^int ftrace_set_filter_ip(struct ftrace_ops *ops, unsigned long ip,$/;"	f
ftrace_set_global_filter	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_global_filter);$/;"	v
ftrace_set_global_filter	trace/ftrace.c	/^void ftrace_set_global_filter(unsigned char *buf, int len, int reset)$/;"	f
ftrace_set_global_notrace	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_global_notrace);$/;"	v
ftrace_set_global_notrace	trace/ftrace.c	/^void ftrace_set_global_notrace(unsigned char *buf, int len, int reset)$/;"	f
ftrace_set_hash	trace/ftrace.c	/^ftrace_set_hash(struct ftrace_ops *ops, unsigned char *buf, int len,$/;"	f	file:
ftrace_set_notrace	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_notrace);$/;"	v
ftrace_set_notrace	trace/ftrace.c	/^int ftrace_set_notrace(struct ftrace_ops *ops, unsigned char *buf,$/;"	f
ftrace_set_regex	trace/ftrace.c	/^ftrace_set_regex(struct ftrace_ops *ops, unsigned char *buf, int len,$/;"	f	file:
ftrace_show_header_fops	trace/trace_events.c	/^static const struct file_operations ftrace_show_header_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_shutdown	trace/ftrace.c	/^int ftrace_shutdown(struct ftrace_ops *ops, int command)$/;"	f
ftrace_shutdown	trace/ftrace_internal.h	50;"	d
ftrace_shutdown_sysctl	trace/ftrace.c	/^static void ftrace_shutdown_sysctl(void)$/;"	f	file:
ftrace_shutdown_sysctl	trace/ftrace.c	6235;"	d	file:
ftrace_snapshot	trace/trace.c	/^ftrace_snapshot(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_snapshot_cmd	trace/trace.c	/^static struct ftrace_func_command ftrace_snapshot_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_snapshot_free	trace/trace.c	/^ftrace_snapshot_free(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
ftrace_snapshot_init	trace/trace.c	/^ftrace_snapshot_init(struct ftrace_probe_ops *ops, struct trace_array *tr,$/;"	f	file:
ftrace_snapshot_print	trace/trace.c	/^ftrace_snapshot_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_stack	trace/trace.c	/^struct ftrace_stack {$/;"	s	file:
ftrace_stacks	trace/trace.c	/^struct ftrace_stacks {$/;"	s	file:
ftrace_stacktrace	trace/trace_functions.c	/^ftrace_stacktrace(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_stacktrace_callback	trace/trace_functions.c	/^ftrace_stacktrace_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_stacktrace_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_stacktrace_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_stacktrace_count	trace/trace_functions.c	/^ftrace_stacktrace_count(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_stacktrace_print	trace/trace_functions.c	/^ftrace_stacktrace_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_start_up	trace/ftrace.c	/^static int ftrace_start_up;$/;"	v	file:
ftrace_startup	trace/ftrace.c	/^int ftrace_startup(struct ftrace_ops *ops, int command)$/;"	f
ftrace_startup	trace/ftrace_internal.h	43;"	d
ftrace_startup_all	trace/ftrace.c	/^static inline void ftrace_startup_all(int command) { }$/;"	f	file:
ftrace_startup_all	trace/ftrace.c	/^static void ftrace_startup_all(int command)$/;"	f	file:
ftrace_startup_enable	trace/ftrace.c	/^static inline void ftrace_startup_enable(int command) { }$/;"	f	file:
ftrace_startup_enable	trace/ftrace.c	/^static void ftrace_startup_enable(int command)$/;"	f	file:
ftrace_startup_sysctl	trace/ftrace.c	/^static void ftrace_startup_sysctl(void)$/;"	f	file:
ftrace_startup_sysctl	trace/ftrace.c	6234;"	d	file:
ftrace_subsystem_filter_fops	trace/trace_events.c	/^static const struct file_operations ftrace_subsystem_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_suspend_notifier	trace/fgraph.c	/^static struct notifier_block ftrace_suspend_notifier = {$/;"	v	typeref:struct:notifier_block	file:
ftrace_suspend_notifier_call	trace/fgraph.c	/^ftrace_suspend_notifier_call(struct notifier_block *bl, unsigned long state,$/;"	f	file:
ftrace_sync	trace/ftrace.c	/^static void ftrace_sync(struct work_struct *work)$/;"	f	file:
ftrace_sync_ipi	trace/ftrace.c	/^static void ftrace_sync_ipi(void *data)$/;"	f	file:
ftrace_syscall_enter	trace/trace_syscalls.c	/^static void ftrace_syscall_enter(void *data, struct pt_regs *regs, long id)$/;"	f	file:
ftrace_syscall_exit	trace/trace_syscalls.c	/^static void ftrace_syscall_exit(void *data, struct pt_regs *regs, long ret)$/;"	f	file:
ftrace_system_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_system_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_test_event_filter	trace/trace_events_filter.c	/^late_initcall(ftrace_test_event_filter);$/;"	v
ftrace_test_event_filter	trace/trace_events_filter.c	/^static __init int ftrace_test_event_filter(void)$/;"	f	file:
ftrace_test_record	trace/ftrace.c	/^int ftrace_test_record(struct dyn_ftrace *rec, bool enable)$/;"	f
ftrace_text_reserved	trace/ftrace.c	/^int ftrace_text_reserved(const void *start, const void *end)$/;"	f
ftrace_tr_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_tr_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_trace_arrays	trace/trace.c	/^LIST_HEAD(ftrace_trace_arrays);$/;"	v
ftrace_trace_onoff_callback	trace/trace_functions.c	/^ftrace_trace_onoff_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_trace_probe_callback	trace/trace_functions.c	/^ftrace_trace_probe_callback(struct trace_array *tr,$/;"	f	file:
ftrace_trace_snapshot_callback	trace/trace.c	/^ftrace_trace_snapshot_callback(struct trace_array *tr, struct ftrace_hash *hash,$/;"	f	file:
ftrace_trace_stack	trace/trace.c	/^static inline void ftrace_trace_stack(struct trace_array *tr,$/;"	f	file:
ftrace_trace_task	trace/trace.h	/^static inline int ftrace_trace_task(struct trace_array *tr)$/;"	f
ftrace_trace_userstack	trace/trace.c	/^ftrace_trace_userstack(struct ring_buffer *buffer, unsigned long flags, int pc)$/;"	f	file:
ftrace_trace_userstack	trace/trace.c	/^static void ftrace_trace_userstack(struct ring_buffer *buffer,$/;"	f	file:
ftrace_traceoff	trace/trace_functions.c	/^ftrace_traceoff(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_traceoff_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_traceoff_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_traceoff_count	trace/trace_functions.c	/^ftrace_traceoff_count(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_traceoff_print	trace/trace_functions.c	/^ftrace_traceoff_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_traceon	trace/trace_functions.c	/^ftrace_traceon(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_traceon_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_traceon_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_traceon_count	trace/trace_functions.c	/^ftrace_traceon_count(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_traceon_print	trace/trace_functions.c	/^ftrace_traceon_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_update_code	trace/ftrace.c	/^static int ftrace_update_code(struct module *mod, struct ftrace_page *new_pgs)$/;"	f	file:
ftrace_update_pid_func	trace/ftrace.c	/^static void ftrace_update_pid_func(void)$/;"	f	file:
ftrace_update_record	trace/ftrace.c	/^int ftrace_update_record(struct dyn_ftrace *rec, bool enable)$/;"	f
ftrace_update_time	trace/ftrace.c	/^static u64		ftrace_update_time;$/;"	v	file:
ftrace_update_tot_cnt	trace/ftrace.c	/^unsigned long		ftrace_update_tot_cnt;$/;"	v
ftrace_update_trampoline	trace/ftrace.c	/^static void ftrace_update_trampoline(struct ftrace_ops *ops)$/;"	f	file:
full_waiters	trace/ring_buffer.c	/^	wait_queue_head_t		full_waiters;$/;"	m	struct:rb_irq_work	file:
full_waiters_pending	trace/ring_buffer.c	/^	bool				full_waiters_pending;$/;"	m	struct:rb_irq_work	file:
fullstop	torture.c	/^static int fullstop = FULLSTOP_RMMOD;$/;"	v	file:
func	async.c	/^	async_func_t		func;$/;"	m	struct:async_entry	file:
func	bpf/verifier.c	/^static struct bpf_func_state *func(struct bpf_verifier_env *env,$/;"	f	file:
func	events/core.c	/^	event_f func;$/;"	m	struct:event_function_struct	file:
func	events/core.c	/^	remote_function_f	func;$/;"	m	struct:remote_function_call	file:
func	smp.c	/^	int			(*func)(void *);$/;"	m	struct:smp_call_on_cpu_struct	file:
func	trace/ftrace.c	/^	struct dyn_ftrace		*func;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::dyn_ftrace	file:
func	trace/trace.c	/^	u64 (*func)(void);$/;"	m	struct:__anon40	file:
func	trace/trace.h	/^	char			*func;$/;"	m	struct:ftrace_mod_load
func	trace/trace.h	/^	int			(*func)(struct event_command *cmd_ops,$/;"	m	struct:event_command
func	trace/trace.h	/^	int			(*func)(struct trace_array *tr,$/;"	m	struct:ftrace_func_command
func	trace/trace.h	/^	unsigned long		func;$/;"	m	struct:kretprobe_trace_entry_head
func	trace/trace.h	/^	void			(*func)(struct event_trigger_data *data,$/;"	m	struct:event_trigger_ops
func	trace/trace.h	/^	void			(*func)(unsigned long ip,$/;"	m	struct:ftrace_probe_ops
func_add	tracepoint.c	/^func_add(struct tracepoint_func **funcs, struct tracepoint_func *tp_func,$/;"	f	file:
func_flags	trace/trace_functions.c	/^static struct tracer_flags func_flags = {$/;"	v	typeref:struct:tracer_flags	file:
func_flags	trace/trace_functions.c	/^static struct tracer_flags func_flags;$/;"	v	typeref:struct:tracer_flags	file:
func_graph_set_flag	trace/trace_functions_graph.c	/^func_graph_set_flag(struct trace_array *tr, u32 old_flags, u32 bit, int set)$/;"	f	file:
func_id	bpf/verifier.c	/^	int func_id;$/;"	m	struct:bpf_call_arg_meta	file:
func_id_name	bpf/disasm.c	/^const char *func_id_name(int id)$/;"	f
func_id_str	bpf/disasm.c	/^static const char * const func_id_str[] = {$/;"	v	file:
func_ops	bpf/btf.c	/^static struct btf_kind_operations func_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
func_opts	trace/trace_functions.c	/^static struct tracer_opt func_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
func_pos	trace/ftrace.c	/^	loff_t				func_pos;$/;"	m	struct:ftrace_iterator	file:
func_probes	trace/trace.h	/^	struct list_head	func_probes;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
func_prolog_dec	trace/trace_irqsoff.c	/^static int func_prolog_dec(struct trace_array *tr,$/;"	f	file:
func_prolog_preempt_disable	trace/trace_sched_wakeup.c	/^func_prolog_preempt_disable(struct trace_array *tr,$/;"	f	file:
func_proto_ops	bpf/btf.c	/^static struct btf_kind_operations func_proto_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
func_ptr_is_kernel_text	extable.c	/^int func_ptr_is_kernel_text(void *ptr)$/;"	f
func_remove	tracepoint.c	/^static void *func_remove(struct tracepoint_func **funcs,$/;"	f	file:
func_set_flag	trace/trace_functions.c	/^func_set_flag(struct trace_array *tr, u32 old_flags, u32 bit, int set)$/;"	f	file:
func_stack	livepatch/patch.h	/^	struct list_head func_stack;$/;"	m	struct:klp_ops	typeref:struct:klp_ops::list_head
func_states_equal	bpf/verifier.c	/^static bool func_states_equal(struct bpf_func_state *old,$/;"	f	file:
funcgraph_ops	trace/trace_functions_graph.c	/^static struct fgraph_ops funcgraph_ops = {$/;"	v	typeref:struct:fgraph_ops	file:
funcgraph_thresh_ops	trace/trace_functions_graph.c	/^static struct fgraph_ops funcgraph_thresh_ops = {$/;"	v	typeref:struct:fgraph_ops	file:
funcs	trace/ftrace.c	/^	struct list_head	funcs;$/;"	m	struct:ftrace_mod_map	typeref:struct:ftrace_mod_map::list_head	file:
function	gcov/gcc_3_4.c	/^	unsigned int function;$/;"	m	struct:gcov_iterator	file:
function_enabled	trace/trace.h	/^	int			function_enabled;$/;"	m	struct:trace_array
function_enabled	trace/trace_irqsoff.c	/^static bool function_enabled;$/;"	v	file:
function_enabled	trace/trace_sched_wakeup.c	/^static bool function_enabled;$/;"	v	file:
function_filter_data	trace/trace_events_filter.c	/^struct function_filter_data {$/;"	s	file:
function_graph_enter	trace/fgraph.c	/^int function_graph_enter(unsigned long ret, unsigned long func,$/;"	f
function_name	gcov/clang.c	/^	const char *function_name;$/;"	m	struct:gcov_fn_info	file:
function_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *function_pids;$/;"	m	struct:trace_array	typeref:struct:trace_array::__rcu
function_profile_call	trace/ftrace.c	/^function_profile_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_stack_trace_call	trace/trace_functions.c	/^function_stack_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_stat_cmp	trace/ftrace.c	/^static int function_stat_cmp(void *p1, void *p2)$/;"	f	file:
function_stat_headers	trace/ftrace.c	/^static int function_stat_headers(struct seq_file *m)$/;"	f	file:
function_stat_next	trace/ftrace.c	/^function_stat_next(void *v, int idx)$/;"	f	file:
function_stat_show	trace/ftrace.c	/^static int function_stat_show(struct seq_file *m, void *v)$/;"	f	file:
function_stat_start	trace/ftrace.c	/^static void *function_stat_start(struct tracer_stat *trace)$/;"	f	file:
function_test_events_call	trace/trace_events.c	/^function_test_events_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace	trace/trace_functions.c	/^static struct tracer function_trace;$/;"	v	typeref:struct:tracer	file:
function_trace_call	trace/trace_functions.c	/^function_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace_init	trace/trace_functions.c	/^static int function_trace_init(struct trace_array *tr)$/;"	f	file:
function_trace_probe_call	trace/ftrace.c	/^static void function_trace_probe_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace_reset	trace/trace_functions.c	/^static void function_trace_reset(struct trace_array *tr)$/;"	f	file:
function_trace_start	trace/trace_functions.c	/^static void function_trace_start(struct trace_array *tr)$/;"	f	file:
functions	gcov/clang.c	/^	struct list_head functions;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::list_head	file:
functions	gcov/gcc_3_4.c	/^	const struct gcov_fn_info	*functions;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_fn_info	file:
functions	gcov/gcc_4_7.c	/^	struct gcov_fn_info **functions;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_fn_info	file:
futex	sys_ni.c	/^COND_SYSCALL(futex);$/;"	v
futex_access	futex.c	/^enum futex_access {$/;"	g	file:
futex_atomic_op_inuser	futex.c	/^static int futex_atomic_op_inuser(unsigned int encoded_op, u32 __user *uaddr)$/;"	f	file:
futex_cmpxchg_enabled	futex.c	/^static int  __read_mostly futex_cmpxchg_enabled;$/;"	v	file:
futex_cmpxchg_enabled	futex.c	166;"	d	file:
futex_detect_cmpxchg	futex.c	/^static void __init futex_detect_cmpxchg(void)$/;"	f	file:
futex_get_mm	futex.c	/^static inline void futex_get_mm(union futex_key *key)$/;"	f	file:
futex_hash_bucket	futex.c	/^struct futex_hash_bucket {$/;"	s	file:
futex_hashsize	futex.c	269;"	d	file:
futex_init	futex.c	/^core_initcall(futex_init);$/;"	v
futex_init	futex.c	/^static int __init futex_init(void)$/;"	f	file:
futex_lock_pi	futex.c	/^static int futex_lock_pi(u32 __user *uaddr, unsigned int flags,$/;"	f	file:
futex_lock_pi_atomic	futex.c	/^static int futex_lock_pi_atomic(u32 __user *uaddr, struct futex_hash_bucket *hb,$/;"	f	file:
futex_pi_state	futex.c	/^struct futex_pi_state {$/;"	s	file:
futex_proxy_trylock_atomic	futex.c	/^static int futex_proxy_trylock_atomic(u32 __user *pifutex,$/;"	f	file:
futex_q	futex.c	/^struct futex_q {$/;"	s	file:
futex_q_init	futex.c	/^static const struct futex_q futex_q_init = {$/;"	v	typeref:struct:futex_q	file:
futex_queues	futex.c	268;"	d	file:
futex_requeue	futex.c	/^static int futex_requeue(u32 __user *uaddr1, unsigned int flags,$/;"	f	file:
futex_setup_timer	futex.c	/^futex_setup_timer(ktime_t *time, struct hrtimer_sleeper *timeout,$/;"	f	file:
futex_time32	sys_ni.c	/^COND_SYSCALL(futex_time32);$/;"	v
futex_top_waiter	futex.c	/^static struct futex_q *futex_top_waiter(struct futex_hash_bucket *hb,$/;"	f	file:
futex_uaddr	futex.c	/^static void __user *futex_uaddr(struct robust_list __user *entry,$/;"	f	file:
futex_unlock_pi	futex.c	/^static int futex_unlock_pi(u32 __user *uaddr, unsigned int flags)$/;"	f	file:
futex_wait	futex.c	/^static int futex_wait(u32 __user *uaddr, unsigned int flags, u32 val,$/;"	f	file:
futex_wait_queue_me	futex.c	/^static void futex_wait_queue_me(struct futex_hash_bucket *hb, struct futex_q *q,$/;"	f	file:
futex_wait_requeue_pi	futex.c	/^static int futex_wait_requeue_pi(u32 __user *uaddr, unsigned int flags,$/;"	f	file:
futex_wait_restart	futex.c	/^static long futex_wait_restart(struct restart_block *restart)$/;"	f	file:
futex_wait_setup	futex.c	/^static int futex_wait_setup(u32 __user *uaddr, u32 val, unsigned int flags,$/;"	f	file:
futex_wake	futex.c	/^futex_wake(u32 __user *uaddr, unsigned int flags, int nr_wake, u32 bitset)$/;"	f	file:
futex_wake_op	futex.c	/^futex_wake_op(u32 __user *uaddr1, unsigned int flags, u32 __user *uaddr2,$/;"	f	file:
fwd_cb_state	rcu/rcutorture.c	/^struct fwd_cb_state {$/;"	s	file:
fwd_ops	bpf/btf.c	/^static struct btf_kind_operations fwd_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
fwd_prog_task	rcu/rcutorture.c	/^static struct task_struct *fwd_prog_task;$/;"	v	typeref:struct:task_struct	file:
fwnode	irq/irqdomain.c	/^	struct fwnode_handle	fwnode;$/;"	m	struct:irqchip_fwid	typeref:struct:irqchip_fwid::fwnode_handle	file:
g	power/hibernate.c	/^static struct attribute * g[] = {$/;"	v	typeref:struct:attribute	file:
g	power/main.c	/^static struct attribute * g[] = {$/;"	v	typeref:struct:attribute	file:
g_next	trace/ftrace.c	/^g_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
g_show	trace/ftrace.c	/^static int g_show(struct seq_file *m, void *v)$/;"	f	file:
g_start	trace/ftrace.c	/^static void *g_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
g_stop	trace/ftrace.c	/^static void g_stop(struct seq_file *m, void *p)$/;"	f	file:
gc	irq/devres.c	/^	struct irq_chip_generic *gc;$/;"	m	struct:irq_generic_chip_devres	typeref:struct:irq_generic_chip_devres::irq_chip_generic	file:
gcov_action	gcov/gcov.h	/^enum gcov_action {$/;"	g
gcov_ctr_info	gcov/gcc_3_4.c	/^struct gcov_ctr_info {$/;"	s	file:
gcov_ctr_info	gcov/gcc_4_7.c	/^struct gcov_ctr_info {$/;"	s	file:
gcov_data_fops	gcov/fs.c	/^static const struct file_operations gcov_data_fops = {$/;"	v	typeref:struct:file_operations	file:
gcov_enable_events	gcov/base.c	/^void gcov_enable_events(void)$/;"	f
gcov_event	gcov/fs.c	/^void gcov_event(enum gcov_action action, struct gcov_info *info)$/;"	f
gcov_events_enabled	gcov/base.c	/^int gcov_events_enabled;$/;"	v
gcov_fn_info	gcov/clang.c	/^struct gcov_fn_info {$/;"	s	file:
gcov_fn_info	gcov/gcc_3_4.c	/^struct gcov_fn_info {$/;"	s	file:
gcov_fn_info	gcov/gcc_4_7.c	/^struct gcov_fn_info {$/;"	s	file:
gcov_fn_info_dup	gcov/clang.c	/^static struct gcov_fn_info *gcov_fn_info_dup(struct gcov_fn_info *fn)$/;"	f	file:
gcov_fs_init	gcov/fs.c	/^device_initcall(gcov_fs_init);$/;"	v
gcov_fs_init	gcov/fs.c	/^static __init int gcov_fs_init(void)$/;"	f	file:
gcov_info	gcov/clang.c	/^struct gcov_info {$/;"	s	file:
gcov_info	gcov/gcc_3_4.c	/^struct gcov_info {$/;"	s	file:
gcov_info	gcov/gcc_4_7.c	/^struct gcov_info {$/;"	s	file:
gcov_info_add	gcov/clang.c	/^void gcov_info_add(struct gcov_info *dst, struct gcov_info *src)$/;"	f
gcov_info_add	gcov/gcc_3_4.c	/^void gcov_info_add(struct gcov_info *dest, struct gcov_info *source)$/;"	f
gcov_info_add	gcov/gcc_4_7.c	/^void gcov_info_add(struct gcov_info *dst, struct gcov_info *src)$/;"	f
gcov_info_dup	gcov/clang.c	/^struct gcov_info *gcov_info_dup(struct gcov_info *info)$/;"	f
gcov_info_dup	gcov/gcc_3_4.c	/^struct gcov_info *gcov_info_dup(struct gcov_info *info)$/;"	f
gcov_info_dup	gcov/gcc_4_7.c	/^struct gcov_info *gcov_info_dup(struct gcov_info *info)$/;"	f
gcov_info_filename	gcov/clang.c	/^const char *gcov_info_filename(struct gcov_info *info)$/;"	f
gcov_info_filename	gcov/gcc_3_4.c	/^const char *gcov_info_filename(struct gcov_info *info)$/;"	f
gcov_info_filename	gcov/gcc_4_7.c	/^const char *gcov_info_filename(struct gcov_info *info)$/;"	f
gcov_info_free	gcov/clang.c	/^void gcov_info_free(struct gcov_info *info)$/;"	f
gcov_info_free	gcov/gcc_3_4.c	/^void gcov_info_free(struct gcov_info *info)$/;"	f
gcov_info_free	gcov/gcc_4_7.c	/^void gcov_info_free(struct gcov_info *info)$/;"	f
gcov_info_head	gcov/gcc_3_4.c	/^static struct gcov_info *gcov_info_head;$/;"	v	typeref:struct:gcov_info	file:
gcov_info_head	gcov/gcc_4_7.c	/^static struct gcov_info *gcov_info_head;$/;"	v	typeref:struct:gcov_info	file:
gcov_info_is_compatible	gcov/clang.c	/^int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)$/;"	f
gcov_info_is_compatible	gcov/gcc_3_4.c	/^int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)$/;"	f
gcov_info_is_compatible	gcov/gcc_4_7.c	/^int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)$/;"	f
gcov_info_link	gcov/clang.c	/^void gcov_info_link(struct gcov_info *info)$/;"	f
gcov_info_link	gcov/gcc_3_4.c	/^void gcov_info_link(struct gcov_info *info)$/;"	f
gcov_info_link	gcov/gcc_4_7.c	/^void gcov_info_link(struct gcov_info *info)$/;"	f
gcov_info_next	gcov/clang.c	/^struct gcov_info *gcov_info_next(struct gcov_info *info)$/;"	f
gcov_info_next	gcov/gcc_3_4.c	/^struct gcov_info *gcov_info_next(struct gcov_info *info)$/;"	f
gcov_info_next	gcov/gcc_4_7.c	/^struct gcov_info *gcov_info_next(struct gcov_info *info)$/;"	f
gcov_info_reset	gcov/clang.c	/^void gcov_info_reset(struct gcov_info *info)$/;"	f
gcov_info_reset	gcov/gcc_3_4.c	/^void gcov_info_reset(struct gcov_info *info)$/;"	f
gcov_info_reset	gcov/gcc_4_7.c	/^void gcov_info_reset(struct gcov_info *info)$/;"	f
gcov_info_unlink	gcov/clang.c	/^void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info)$/;"	f
gcov_info_unlink	gcov/gcc_3_4.c	/^void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info)$/;"	f
gcov_info_unlink	gcov/gcc_4_7.c	/^void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info)$/;"	f
gcov_info_version	gcov/clang.c	/^unsigned int gcov_info_version(struct gcov_info *info)$/;"	f
gcov_info_version	gcov/gcc_3_4.c	/^unsigned int gcov_info_version(struct gcov_info *info)$/;"	f
gcov_info_version	gcov/gcc_4_7.c	/^unsigned int gcov_info_version(struct gcov_info *info)$/;"	f
gcov_info_within_module	gcov/clang.c	/^bool gcov_info_within_module(struct gcov_info *info, struct module *mod)$/;"	f
gcov_info_within_module	gcov/gcc_3_4.c	/^bool gcov_info_within_module(struct gcov_info *info, struct module *mod)$/;"	f
gcov_info_within_module	gcov/gcc_4_7.c	/^bool gcov_info_within_module(struct gcov_info *info, struct module *mod)$/;"	f
gcov_init	gcov/base.c	/^device_initcall(gcov_init);$/;"	v
gcov_init	gcov/base.c	/^static int __init gcov_init(void)$/;"	f	file:
gcov_iter_free	gcov/clang.c	/^void gcov_iter_free(struct gcov_iterator *iter)$/;"	f
gcov_iter_free	gcov/gcc_3_4.c	/^void gcov_iter_free(struct gcov_iterator *iter)$/;"	f
gcov_iter_free	gcov/gcc_4_7.c	/^void gcov_iter_free(struct gcov_iterator *iter)$/;"	f
gcov_iter_get_info	gcov/clang.c	/^struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)$/;"	f
gcov_iter_get_info	gcov/gcc_3_4.c	/^struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)$/;"	f
gcov_iter_get_info	gcov/gcc_4_7.c	/^struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)$/;"	f
gcov_iter_new	gcov/clang.c	/^struct gcov_iterator *gcov_iter_new(struct gcov_info *info)$/;"	f
gcov_iter_new	gcov/gcc_3_4.c	/^struct gcov_iterator *gcov_iter_new(struct gcov_info *info)$/;"	f
gcov_iter_new	gcov/gcc_4_7.c	/^struct gcov_iterator *gcov_iter_new(struct gcov_info *info)$/;"	f
gcov_iter_next	gcov/clang.c	/^int gcov_iter_next(struct gcov_iterator *iter)$/;"	f
gcov_iter_next	gcov/gcc_3_4.c	/^int gcov_iter_next(struct gcov_iterator *iter)$/;"	f
gcov_iter_next	gcov/gcc_4_7.c	/^int gcov_iter_next(struct gcov_iterator *iter)$/;"	f
gcov_iter_start	gcov/clang.c	/^void gcov_iter_start(struct gcov_iterator *iter)$/;"	f
gcov_iter_start	gcov/gcc_3_4.c	/^void gcov_iter_start(struct gcov_iterator *iter)$/;"	f
gcov_iter_start	gcov/gcc_4_7.c	/^void gcov_iter_start(struct gcov_iterator *iter)$/;"	f
gcov_iter_write	gcov/clang.c	/^int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)$/;"	f
gcov_iter_write	gcov/gcc_3_4.c	/^int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)$/;"	f
gcov_iter_write	gcov/gcc_4_7.c	/^int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)$/;"	f
gcov_iterator	gcov/clang.c	/^struct gcov_iterator {$/;"	s	file:
gcov_iterator	gcov/gcc_3_4.c	/^struct gcov_iterator {$/;"	s	file:
gcov_iterator	gcov/gcc_4_7.c	/^struct gcov_iterator {$/;"	s	file:
gcov_link	gcov/clang.c	/^const struct gcov_link gcov_link[] = {$/;"	v	typeref:struct:gcov_link
gcov_link	gcov/gcc_3_4.c	/^const struct gcov_link gcov_link[] = {$/;"	v	typeref:struct:gcov_link
gcov_link	gcov/gcc_4_7.c	/^const struct gcov_link gcov_link[] = {$/;"	v	typeref:struct:gcov_link
gcov_link	gcov/gcov.h	/^struct gcov_link {$/;"	s
gcov_lock	gcov/base.c	/^DEFINE_MUTEX(gcov_lock);$/;"	v
gcov_module_notifier	gcov/base.c	/^static int gcov_module_notifier(struct notifier_block *nb, unsigned long event,$/;"	f	file:
gcov_nb	gcov/base.c	/^static struct notifier_block gcov_nb = {$/;"	v	typeref:struct:notifier_block	file:
gcov_node	gcov/fs.c	/^struct gcov_node {$/;"	s	file:
gcov_persist	gcov/fs.c	/^static int gcov_persist = 1;$/;"	v	file:
gcov_persist_setup	gcov/fs.c	/^static int __init gcov_persist_setup(char *str)$/;"	f	file:
gcov_reset_fops	gcov/fs.c	/^static const struct file_operations gcov_reset_fops = {$/;"	v	typeref:struct:file_operations	file:
gcov_seq_next	gcov/fs.c	/^static void *gcov_seq_next(struct seq_file *seq, void *data, loff_t *pos)$/;"	f	file:
gcov_seq_open	gcov/fs.c	/^static int gcov_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
gcov_seq_ops	gcov/fs.c	/^static const struct seq_operations gcov_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
gcov_seq_release	gcov/fs.c	/^static int gcov_seq_release(struct inode *inode, struct file *file)$/;"	f	file:
gcov_seq_show	gcov/fs.c	/^static int gcov_seq_show(struct seq_file *seq, void *data)$/;"	f	file:
gcov_seq_start	gcov/fs.c	/^static void *gcov_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
gcov_seq_stop	gcov/fs.c	/^static void gcov_seq_stop(struct seq_file *seq, void *data)$/;"	f	file:
gcov_seq_write	gcov/fs.c	/^static ssize_t gcov_seq_write(struct file *file, const char __user *addr,$/;"	f	file:
gcov_type	gcov/gcov.h	/^typedef long gcov_type;$/;"	t
gcov_type	gcov/gcov.h	/^typedef long long gcov_type;$/;"	t
gdb_cmd_binwrite	debug/gdbstub.c	/^static void gdb_cmd_binwrite(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_break	debug/gdbstub.c	/^static void gdb_cmd_break(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_detachkill	debug/gdbstub.c	/^static void gdb_cmd_detachkill(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_exception_pass	debug/gdbstub.c	/^static int gdb_cmd_exception_pass(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_getregs	debug/gdbstub.c	/^static void gdb_cmd_getregs(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_memread	debug/gdbstub.c	/^static void gdb_cmd_memread(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_memwrite	debug/gdbstub.c	/^static void gdb_cmd_memwrite(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_query	debug/gdbstub.c	/^static void gdb_cmd_query(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reboot	debug/gdbstub.c	/^static int gdb_cmd_reboot(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reg_get	debug/gdbstub.c	/^static void gdb_cmd_reg_get(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reg_set	debug/gdbstub.c	/^static void gdb_cmd_reg_set(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_setregs	debug/gdbstub.c	/^static void gdb_cmd_setregs(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_status	debug/gdbstub.c	/^static void gdb_cmd_status(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_task	debug/gdbstub.c	/^static void gdb_cmd_task(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_thread	debug/gdbstub.c	/^static void gdb_cmd_thread(struct kgdb_state *ks)$/;"	f	file:
gdb_get_regs_helper	debug/gdbstub.c	/^static void gdb_get_regs_helper(struct kgdb_state *ks)$/;"	f	file:
gdb_hex_reg_helper	debug/gdbstub.c	/^static char *gdb_hex_reg_helper(int regnum, char *out)$/;"	f	file:
gdb_regs	debug/gdbstub.c	/^static unsigned long		gdb_regs[(NUMREGBYTES +$/;"	v	file:
gdb_regs_to_pt_regs	debug/gdbstub.c	/^void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs)$/;"	f
gdb_serial_stub	debug/gdbstub.c	/^int gdb_serial_stub(struct kgdb_state *ks)$/;"	f
gdbmsgbuf	debug/gdbstub.c	/^static char gdbmsgbuf[BUFMAX + 1];$/;"	v	file:
gdbstub_exit	debug/gdbstub.c	/^void gdbstub_exit(int status)$/;"	f
gdbstub_msg_write	debug/gdbstub.c	/^void gdbstub_msg_write(const char *s, int len)$/;"	f
gdbstub_prev_in_buf_pos	debug/gdbstub.c	/^static int			gdbstub_prev_in_buf_pos;$/;"	v	file:
gdbstub_read_wait	debug/gdbstub.c	/^static int gdbstub_read_wait(void)$/;"	f	file:
gdbstub_state	debug/gdbstub.c	/^int gdbstub_state(struct kgdb_state *ks, char *cmd)$/;"	f
gdbstub_use_prev_in_buf	debug/gdbstub.c	/^static int			gdbstub_use_prev_in_buf;$/;"	v	file:
gen_hi_max	bpf/verifier.c	/^static u64 gen_hi_max(struct tnum var)$/;"	f	file:
gen_hi_min	bpf/verifier.c	/^static u64 gen_hi_min(struct tnum var)$/;"	f	file:
generate_sched_domains	cgroup/cpuset.c	/^static int generate_sched_domains(cpumask_var_t **domains,$/;"	f	file:
generic_exec_single	smp.c	/^static int generic_exec_single(int cpu, call_single_data_t *csd,$/;"	f	file:
generic_handle_irq	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(generic_handle_irq);$/;"	v
generic_handle_irq	irq/irqdesc.c	/^int generic_handle_irq(unsigned int irq)$/;"	f
generic_ptrace_peekdata	ptrace.c	/^int generic_ptrace_peekdata(struct task_struct *tsk, unsigned long addr,$/;"	f
generic_ptrace_pokedata	ptrace.c	/^int generic_ptrace_pokedata(struct task_struct *tsk, unsigned long addr,$/;"	f
generic_sched_clock_init	time/sched_clock.c	/^void __init generic_sched_clock_init(void)$/;"	f
generic_smp_call_function_single_interrupt	smp.c	/^void generic_smp_call_function_single_interrupt(void)$/;"	f
get_accumulated_info	gcov/fs.c	/^static struct gcov_info *get_accumulated_info(struct gcov_node *node)$/;"	f	file:
get_avenrun	sched/loadavg.c	/^void get_avenrun(unsigned long *loads, unsigned long offset, int shift)$/;"	f
get_bp_info	events/hw_breakpoint.c	/^static struct bp_cpuinfo *get_bp_info(int cpu, enum bp_type_idx type)$/;"	f	file:
get_bpf_raw_tp_regs	trace/bpf_trace.c	/^static struct pt_regs *get_bpf_raw_tp_regs(void)$/;"	f	file:
get_buffer	power/snapshot.c	/^static void *get_buffer(struct memory_bitmap *bm, struct chain_allocator *ca)$/;"	f	file:
get_cached_msi_msg	irq/msi.c	/^EXPORT_SYMBOL_GPL(get_cached_msi_msg);$/;"	v
get_cached_msi_msg	irq/msi.c	/^void get_cached_msi_msg(unsigned int irq, struct msi_msg *msg)$/;"	f
get_callchain_buffers	events/callchain.c	/^int get_callchain_buffers(int event_max_stack)$/;"	f
get_callchain_entry	events/callchain.c	/^static struct perf_callchain_entry *get_callchain_entry(int *rctx)$/;"	f	file:
get_callee_stack_depth	bpf/verifier.c	/^static int get_callee_stack_depth(struct bpf_verifier_env *env,$/;"	f	file:
get_cg_rpool_locked	cgroup/rdma.c	/^get_cg_rpool_locked(struct rdma_cgroup *cg, struct rdmacg_device *device)$/;"	f	file:
get_child_by_name	gcov/fs.c	/^static struct gcov_node *get_child_by_name(struct gcov_node *parent,$/;"	f	file:
get_clock_desc	time/posix-clock.c	/^static int get_clock_desc(const clockid_t id, struct posix_clock_desc *cd)$/;"	f	file:
get_compat_itimerval	compat.c	/^int get_compat_itimerval(struct itimerval *o, const struct compat_itimerval __user *i)$/;"	f
get_compat_sigevent	compat.c	/^int get_compat_sigevent(struct sigevent *event,$/;"	f
get_compat_sigset	compat.c	/^EXPORT_SYMBOL_GPL(get_compat_sigset);$/;"	v
get_compat_sigset	compat.c	/^get_compat_sigset(sigset_t *set, const compat_sigset_t __user *compat)$/;"	f
get_cpu_idle_time_us	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(get_cpu_idle_time_us);$/;"	v
get_cpu_idle_time_us	time/tick-sched.c	/^u64 get_cpu_idle_time_us(int cpu, u64 *last_update_time)$/;"	f
get_cpu_iowait_time_us	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(get_cpu_iowait_time_us);$/;"	v
get_cpu_iowait_time_us	time/tick-sched.c	/^u64 get_cpu_iowait_time_us(int cpu, u64 *last_update_time)$/;"	f
get_cpu_itimer	time/itimer.c	/^static void get_cpu_itimer(struct task_struct *tsk, unsigned int clock_id,$/;"	f	file:
get_cpu_map_entry	bpf/cpumap.c	/^static void get_cpu_map_entry(struct bpf_cpu_map_entry *rcpu)$/;"	f	file:
get_css_set	cgroup/cgroup-internal.h	/^static inline void get_css_set(struct css_set *cset)$/;"	f
get_ctx	events/core.c	/^static void get_ctx(struct perf_event_context *ctx)$/;"	f	file:
get_current_rdmacg	cgroup/rdma.c	/^static inline struct rdma_cgroup *get_current_rdmacg(void)$/;"	f	file:
get_dep_list	locking/lockdep.c	/^static inline struct list_head *get_dep_list(struct lock_list *lock, int offset)$/;"	f	file:
get_device_system_crosststamp	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(get_device_system_crosststamp);$/;"	v
get_device_system_crosststamp	time/timekeeping.c	/^int get_device_system_crosststamp(int (*get_time_fn)$/;"	f
get_event_groups	events/core.c	/^get_event_groups(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
get_event_type	events/core.c	/^static enum event_type_t get_event_type(struct perf_event *event)$/;"	f	file:
get_file_raw_ptr	kcmp.c	/^get_file_raw_ptr(struct task_struct *task, unsigned int idx)$/;"	f	file:
get_first_held_lock	locking/lockdep.c	/^static inline int get_first_held_lock(struct task_struct *curr,$/;"	f	file:
get_fn_info	gcov/gcc_3_4.c	/^static struct gcov_fn_info *get_fn_info(struct gcov_info *info, unsigned int fn)$/;"	f	file:
get_fn_size	gcov/gcc_3_4.c	/^static size_t get_fn_size(struct gcov_info *info)$/;"	f	file:
get_free_elt	trace/tracing_map.c	/^static struct tracing_map_elt *get_free_elt(struct tracing_map *map)$/;"	f	file:
get_func	gcov/gcc_3_4.c	/^static struct gcov_fn_info *get_func(struct gcov_iterator *iter)$/;"	f	file:
get_futex_key	futex.c	/^get_futex_key(u32 __user *uaddr, int fshared, union futex_key *key, enum futex_access rw)$/;"	f	file:
get_futex_key_refs	futex.c	/^static void get_futex_key_refs(union futex_key *key)$/;"	f	file:
get_futex_value_locked	futex.c	/^static int get_futex_value_locked(u32 *dest, u32 __user *from)$/;"	f	file:
get_gp_seq	rcu/rcuperf.c	/^	unsigned long (*get_gp_seq)(void);$/;"	m	struct:rcu_perf_ops	file:
get_gp_seq	rcu/rcutorture.c	/^	unsigned long (*get_gp_seq)(void);$/;"	m	struct:rcu_torture_ops	file:
get_group	sched/topology.c	/^static struct sched_group *get_group(int cpu, struct sd_data *sdd)$/;"	f	file:
get_highmem_buffer	power/snapshot.c	/^static inline int get_highmem_buffer(int safe_needed) { return 0; }$/;"	f	file:
get_highmem_buffer	power/snapshot.c	/^static inline int get_highmem_buffer(int safe_needed)$/;"	f	file:
get_highmem_page_buffer	power/snapshot.c	/^static inline void *get_highmem_page_buffer(struct page *page,$/;"	f	file:
get_highmem_page_buffer	power/snapshot.c	/^static void *get_highmem_page_buffer(struct page *page,$/;"	f	file:
get_hist_field_flags	trace/trace_events_hist.c	/^static const char *get_hist_field_flags(struct hist_field *hist_field)$/;"	f	file:
get_htab_elem	bpf/hashtab.c	/^static struct htab_elem *get_htab_elem(struct bpf_htab *htab, int i)$/;"	f	file:
get_image_page	power/snapshot.c	/^static void *get_image_page(gfp_t gfp_mask, int safe_needed)$/;"	f	file:
get_incorrect_percent	trace/trace_branch.c	/^static inline long get_incorrect_percent(struct ftrace_branch_data *p)$/;"	f	file:
get_info_index	gcov/fs.c	/^static int get_info_index(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
get_itimerspec64	time/time.c	/^EXPORT_SYMBOL_GPL(get_itimerspec64);$/;"	v
get_itimerspec64	time/time.c	/^int get_itimerspec64(struct itimerspec64 *it,$/;"	f
get_jiffies_64	time/jiffies.c	/^EXPORT_SYMBOL(get_jiffies_64);$/;"	v
get_jiffies_64	time/jiffies.c	/^u64 get_jiffies_64(void)$/;"	f
get_kprobe	kprobes.c	/^NOKPROBE_SYMBOL(get_kprobe);$/;"	v
get_kprobe	kprobes.c	/^struct kprobe *get_kprobe(void *addr)$/;"	f
get_ksymbol_arch	kallsyms.c	/^static int get_ksymbol_arch(struct kallsym_iter *iter)$/;"	f	file:
get_ksymbol_bpf	kallsyms.c	/^static int get_ksymbol_bpf(struct kallsym_iter *iter)$/;"	f	file:
get_ksymbol_core	kallsyms.c	/^static unsigned long get_ksymbol_core(struct kallsym_iter *iter)$/;"	f	file:
get_ksymbol_ftrace_mod	kallsyms.c	/^static int get_ksymbol_ftrace_mod(struct kallsym_iter *iter)$/;"	f	file:
get_ksymbol_mod	kallsyms.c	/^static int get_ksymbol_mod(struct kallsym_iter *iter)$/;"	f	file:
get_last_crashkernel	crash_core.c	/^static __init char *get_last_crashkernel(char *cmdline,$/;"	f	file:
get_link_target	gcov/fs.c	/^static char *get_link_target(const char *filename, const struct gcov_link *ext)$/;"	f	file:
get_loc_data	trace/trace_probe.h	/^static nokprobe_inline void *get_loc_data(u32 *dl, void *ent)$/;"	f
get_loc_len	trace/trace_probe.h	62;"	d
get_loc_offs	trace/trace_probe.h	63;"	d
get_lock_depth	locking/lockdep.c	/^static inline int get_lock_depth(struct lock_list *child)$/;"	f	file:
get_lock_parent	locking/lockdep.c	/^static inline struct lock_list *get_lock_parent(struct lock_list *child)$/;"	f	file:
get_lock_stats	locking/lockdep.c	/^static struct lock_class_stats *get_lock_stats(struct lock_class *class)$/;"	f	file:
get_map_perf_counter	trace/bpf_trace.c	/^get_map_perf_counter(struct bpf_map *map, u64 flags,$/;"	f	file:
get_mempolicy	sys_ni.c	/^COND_SYSCALL(get_mempolicy);$/;"	v
get_mempolicy	sys_ni.c	/^COND_SYSCALL_COMPAT(get_mempolicy);$/;"	v
get_mm_exe_file	fork.c	/^EXPORT_SYMBOL(get_mm_exe_file);$/;"	v
get_mm_exe_file	fork.c	/^struct file *get_mm_exe_file(struct mm_struct *mm)$/;"	f
get_modinfo	module.c	/^static char *get_modinfo(struct load_info *info, const char *tag)$/;"	f	file:
get_named_trigger_data	trace/trace_events_trigger.c	/^get_named_trigger_data(struct event_trigger_data *data)$/;"	f
get_next_cpu	bpf/bpf_lru_list.c	/^static int get_next_cpu(int cpu)$/;"	f	file:
get_next_freq	sched/cpufreq_schedutil.c	/^static unsigned int get_next_freq(struct sugov_policy *sg_policy,$/;"	f	file:
get_next_timer_interrupt	time/timer.c	/^u64 get_next_timer_interrupt(unsigned long basej, u64 basem)$/;"	f
get_node_by_name	gcov/fs.c	/^static struct gcov_node *get_node_by_name(const char *name)$/;"	f	file:
get_node_info	gcov/fs.c	/^static struct gcov_info *get_node_info(struct gcov_node *node)$/;"	f	file:
get_nodes_in_cpumask	irq/affinity.c	/^static int get_nodes_in_cpumask(cpumask_var_t *node_to_cpumask,$/;"	f	file:
get_nohz_timer_target	sched/core.c	/^int get_nohz_timer_target(void)$/;"	f
get_nr_mapped_entries	dma/debug.c	/^static int get_nr_mapped_entries(struct device *dev,$/;"	f	file:
get_nth_filter	seccomp.c	/^static struct seccomp_filter *get_nth_filter(struct task_struct *task,$/;"	f	file:
get_numa_group	sched/fair.c	/^static inline int get_numa_group(struct numa_group *grp)$/;"	f	file:
get_offset	module.c	/^static long get_offset(struct module *mod, unsigned int *size,$/;"	f	file:
get_old_itimerspec32	time/time.c	/^EXPORT_SYMBOL_GPL(get_old_itimerspec32);$/;"	v
get_old_itimerspec32	time/time.c	/^int get_old_itimerspec32(struct itimerspec64 *its,$/;"	f
get_old_timespec32	time/time.c	/^EXPORT_SYMBOL_GPL(get_old_timespec32);$/;"	v
get_old_timespec32	time/time.c	/^int get_old_timespec32(struct timespec64 *ts, const void __user *uts)$/;"	f
get_old_timex32	time/time.c	/^int get_old_timex32(struct __kernel_timex *txc, const struct old_timex32 __user *utp)$/;"	f
get_optimized_kprobe	kprobes.c	/^static struct kprobe *get_optimized_kprobe(unsigned long addr)$/;"	f	file:
get_packet	debug/gdbstub.c	/^static void get_packet(char *buffer)$/;"	f	file:
get_pdu_int	trace/blktrace.c	/^static __u64 get_pdu_int(const struct trace_entry *ent, bool has_cg)$/;"	f	file:
get_pdu_remap	trace/blktrace.c	/^static void get_pdu_remap(const struct trace_entry *ent,$/;"	f	file:
get_pending_free	locking/lockdep.c	/^static struct pending_free *get_pending_free(void)$/;"	f	file:
get_perf_callchain	events/callchain.c	/^get_perf_callchain(struct pt_regs *regs, u32 init_nr, bool kernel, bool user,$/;"	f
get_pi_state	futex.c	/^static void get_pi_state(struct futex_pi_state *pi_state)$/;"	f	file:
get_pid_task	pid.c	/^EXPORT_SYMBOL_GPL(get_pid_task);$/;"	v
get_pid_task	pid.c	/^struct task_struct *get_pid_task(struct pid *pid, enum pid_type type)$/;"	f
get_posix_clock	time/posix-clock.c	/^static struct posix_clock *get_posix_clock(struct file *fp)$/;"	f	file:
get_preempt_disable_ip	sched/core.c	/^static inline unsigned long get_preempt_disable_ip(struct task_struct *p)$/;"	f	file:
get_prev_insn_idx	bpf/verifier.c	/^static int get_prev_insn_idx(struct bpf_verifier_state *st, int i,$/;"	f	file:
get_probe_ref	trace/blktrace.c	/^static void get_probe_ref(void)$/;"	f	file:
get_pwq	workqueue.c	/^static void get_pwq(struct pool_workqueue *pwq)$/;"	f	file:
get_random_order	locking/test-ww_mutex.c	/^static int *get_random_order(int count)$/;"	f	file:
get_recent_times	sched/psi.c	/^static void get_recent_times(struct psi_group *group, int cpu,$/;"	f	file:
get_recursion_context	events/internal.h	/^static inline int get_recursion_context(int *recursion)$/;"	f
get_return_for_leaf	trace/trace_functions_graph.c	/^get_return_for_leaf(struct trace_iterator *iter,$/;"	f	file:
get_robust_list	sys_ni.c	/^COND_SYSCALL(get_robust_list);$/;"	v
get_robust_list	sys_ni.c	/^COND_SYSCALL_COMPAT(get_robust_list);$/;"	v
get_rr_interval	sched/sched.h	/^	unsigned int (*get_rr_interval)(struct rq *rq,$/;"	m	struct:sched_class
get_rr_interval_fair	sched/fair.c	/^static unsigned int get_rr_interval_fair(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_idle	sched/idle.c	/^static unsigned int get_rr_interval_idle(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_rt	sched/rt.c	/^static unsigned int get_rr_interval_rt(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_stop	sched/stop_task.c	/^get_rr_interval_stop(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_safe_page	power/snapshot.c	/^unsigned long get_safe_page(gfp_t gfp_mask)$/;"	f
get_sample	trace/trace_hwlat.c	/^static int get_sample(void)$/;"	f	file:
get_saved_cmdlines	trace/trace.c	/^static inline char *get_saved_cmdlines(int idx)$/;"	f	file:
get_sd_balance_interval	sched/fair.c	/^get_sd_balance_interval(struct sched_domain *sd, int cpu_busy)$/;"	f	file:
get_seccomp_filter	seccomp.c	/^void get_seccomp_filter(struct task_struct *tsk)$/;"	f
get_signal	signal.c	/^bool get_signal(struct ksignal *ksig)$/;"	f
get_softlockup_thresh	watchdog.c	/^static int get_softlockup_thresh(void)$/;"	f	file:
get_state	rcu/rcutorture.c	/^	unsigned long (*get_state)(void);$/;"	m	struct:rcu_torture_ops	file:
get_state_synchronize_rcu	rcu/tree.c	/^EXPORT_SYMBOL_GPL(get_state_synchronize_rcu);$/;"	v
get_state_synchronize_rcu	rcu/tree.c	/^unsigned long get_state_synchronize_rcu(void)$/;"	f
get_swap_reader	power/swap.c	/^static int get_swap_reader(struct swap_map_handle *handle,$/;"	f	file:
get_swap_writer	power/swap.c	/^static int get_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
get_symbol_offset	kallsyms.c	/^static unsigned int get_symbol_offset(unsigned long pos)$/;"	f	file:
get_symbol_pos	kallsyms.c	/^static unsigned long get_symbol_pos(unsigned long addr,$/;"	f	file:
get_syscall_name	trace/trace.h	/^static inline const char *get_syscall_name(int syscall)$/;"	f
get_syscall_name	trace/trace_syscalls.c	/^const char *get_syscall_name(int syscall)$/;"	f
get_sysctl	sysctl_binary.c	/^static const struct bin_table *get_sysctl(const int *name, int nlen, char *path)$/;"	f	file:
get_taint	panic.c	/^unsigned long get_taint(void)$/;"	f
get_target_base	time/hrtimer.c	/^struct hrtimer_cpu_base *get_target_base(struct hrtimer_cpu_base *base,$/;"	f	file:
get_target_base	time/timer.c	/^get_target_base(struct timer_base *base, unsigned tflags)$/;"	f	file:
get_task_cred	cred.c	/^EXPORT_SYMBOL(get_task_cred);$/;"	v
get_task_cred	cred.c	/^const struct cred *get_task_cred(struct task_struct *task)$/;"	f
get_task_exe_file	fork.c	/^EXPORT_SYMBOL(get_task_exe_file);$/;"	v
get_task_exe_file	fork.c	/^struct file *get_task_exe_file(struct task_struct *task)$/;"	f
get_task_mm	fork.c	/^EXPORT_SYMBOL_GPL(get_task_mm);$/;"	v
get_task_mm	fork.c	/^struct mm_struct *get_task_mm(struct task_struct *task)$/;"	f
get_task_pid	pid.c	/^EXPORT_SYMBOL_GPL(get_task_pid);$/;"	v
get_task_pid	pid.c	/^struct pid *get_task_pid(struct task_struct *task, enum pid_type type)$/;"	f
get_timer_base	time/timer.c	/^static inline struct timer_base *get_timer_base(u32 tflags)$/;"	f	file:
get_timer_cpu_base	time/timer.c	/^static inline struct timer_base *get_timer_cpu_base(u32 tflags, u32 cpu)$/;"	f	file:
get_timer_this_cpu_base	time/timer.c	/^static inline struct timer_base *get_timer_this_cpu_base(u32 tflags)$/;"	f	file:
get_timespec64	time/time.c	/^EXPORT_SYMBOL_GPL(get_timespec64);$/;"	v
get_timespec64	time/time.c	/^int get_timespec64(struct timespec64 *ts,$/;"	f
get_timestamp	watchdog.c	/^static unsigned long get_timestamp(void)$/;"	f	file:
get_total_entries	trace/trace.c	/^get_total_entries(struct trace_buffer *buf,$/;"	f	file:
get_total_entries_cpu	trace/trace.c	/^get_total_entries_cpu(struct trace_buffer *buf, unsigned long *total,$/;"	f	file:
get_tr_index	trace/trace.c	/^static void get_tr_index(void *data, struct trace_array **ptr,$/;"	f	file:
get_trace_buf	trace/trace.c	/^static char *get_trace_buf(void)$/;"	f	file:
get_tracer_for_array	trace/trace.c	/^get_tracer_for_array(struct trace_array *tr, struct tracer *t)$/;"	f	file:
get_tracing_log_err	trace/trace.c	/^static struct tracing_log_err *get_tracing_log_err(struct trace_array *tr)$/;"	f	file:
get_track_val	trace/trace_events_hist.c	/^static u64 get_track_val(struct hist_trigger_data *hist_data,$/;"	f	file:
get_trampoline_vaddr	events/uprobes.c	/^static unsigned long get_trampoline_vaddr(void)$/;"	f	file:
get_tree	audit_tree.c	/^static inline void get_tree(struct audit_tree *tree)$/;"	f	file:
get_trigger_ops	trace/trace.h	/^	struct event_trigger_ops *(*get_trigger_ops)(char *cmd, char *param);$/;"	m	struct:event_command	typeref:struct:event_command::get_trigger_ops
get_type	gcov/gcc_3_4.c	/^static struct type_info *get_type(struct gcov_iterator *iter)$/;"	f	file:
get_ucounts	ucount.c	/^static struct ucounts *get_ucounts(struct user_namespace *ns, kuid_t uid)$/;"	f	file:
get_unbound_pool	workqueue.c	/^static struct worker_pool *get_unbound_pool(const struct workqueue_attrs *attrs)$/;"	f	file:
get_update_sysctl_factor	sched/fair.c	/^static unsigned int get_update_sysctl_factor(void)$/;"	f	file:
get_uprobe	events/uprobes.c	/^static struct uprobe *get_uprobe(struct uprobe *uprobe)$/;"	f	file:
get_usage_char	locking/lockdep.c	/^static char get_usage_char(struct lock_class *class, enum lock_usage_bit bit)$/;"	f	file:
get_usage_chars	locking/lockdep.c	/^void get_usage_chars(struct lock_class *class, char usage[LOCK_USAGE_CHARS])$/;"	f
get_user_cpu_mask	sched/core.c	/^static int get_user_cpu_mask(unsigned long __user *user_mask_ptr, unsigned len,$/;"	f	file:
get_user_stack_nth	trace/trace_uprobe.c	/^static unsigned long get_user_stack_nth(struct pt_regs *regs, unsigned int n)$/;"	f	file:
get_utask	events/uprobes.c	/^static struct uprobe_task *get_utask(void)$/;"	f	file:
get_uts	utsname_sysctl.c	/^static void *get_uts(struct ctl_table *table)$/;"	f	file:
get_vtime_delta	sched/cputime.c	/^static u64 get_vtime_delta(struct vtime *vtime)$/;"	f	file:
get_work_color	workqueue.c	/^static int get_work_color(struct work_struct *work)$/;"	f	file:
get_work_pool	workqueue.c	/^static struct worker_pool *get_work_pool(struct work_struct *work)$/;"	f	file:
get_work_pool_id	workqueue.c	/^static int get_work_pool_id(struct work_struct *work)$/;"	f	file:
get_work_pwq	workqueue.c	/^static struct pool_workqueue *get_work_pwq(struct work_struct *work)$/;"	f	file:
get_xol_area	events/uprobes.c	/^static struct xol_area *get_xol_area(void)$/;"	f	file:
getboottime64	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(getboottime64);$/;"	v
getboottime64	time/timekeeping.c	/^void getboottime64(struct timespec64 *ts)$/;"	f
getegid16	sys_ni.c	/^COND_SYSCALL(getegid16);$/;"	v
geteuid16	sys_ni.c	/^COND_SYSCALL(geteuid16);$/;"	v
getgid16	sys_ni.c	/^COND_SYSCALL(getgid16);$/;"	v
getgroups	sys_ni.c	/^COND_SYSCALL(getgroups);$/;"	v
getgroups16	sys_ni.c	/^COND_SYSCALL(getgroups16);$/;"	v
getitimer	time/posix-stubs.c	/^COMPAT_SYS_NI(getitimer);$/;"	v
getitimer	time/posix-stubs.c	/^SYS_NI(getitimer);$/;"	v
getpeername	sys_ni.c	/^COND_SYSCALL(getpeername);$/;"	v
getresgid	sys_ni.c	/^COND_SYSCALL(getresgid);$/;"	v
getresgid16	sys_ni.c	/^COND_SYSCALL(getresgid16);$/;"	v
getresuid	sys_ni.c	/^COND_SYSCALL(getresuid);$/;"	v
getresuid16	sys_ni.c	/^COND_SYSCALL(getresuid16);$/;"	v
getrusage	sys.c	/^void getrusage(struct task_struct *p, int who, struct rusage *r)$/;"	f
getsockname	sys_ni.c	/^COND_SYSCALL(getsockname);$/;"	v
getsockopt	sys_ni.c	/^COND_SYSCALL(getsockopt);$/;"	v
getsockopt	sys_ni.c	/^COND_SYSCALL_COMPAT(getsockopt);$/;"	v
getthread	debug/gdbstub.c	/^static struct task_struct *getthread(struct pt_regs *regs, int tid)$/;"	f	file:
gettime	time/alarmtimer.c	/^	ktime_t			(*gettime)(void);$/;"	m	struct:alarm_base	file:
getuid16	sys_ni.c	/^COND_SYSCALL(getuid16);$/;"	v
gfp_mask	audit.c	/^	gfp_t		     gfp_mask;$/;"	m	struct:audit_buffer	file:
gfp_mask	power/snapshot.c	/^	gfp_t gfp_mask;		\/* mask for allocating pages *\/$/;"	m	struct:chain_allocator	file:
gid	audit.h	/^			kgid_t			gid;$/;"	m	struct:audit_context::__anon53::__anon55
gid	audit.h	/^	kgid_t			gid;$/;"	m	struct:audit_names
gid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
gid	sched/fair.c	/^	pid_t gid;$/;"	m	struct:numa_group	file:
gid_cmp	groups.c	/^static int gid_cmp(const void *_a, const void *_b)$/;"	f	file:
gid_m_show	user_namespace.c	/^static int gid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
gid_m_start	user_namespace.c	/^static void *gid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
giveup_do_timer	time/tick-common.c	/^static void giveup_do_timer(void *info)$/;"	f	file:
global_available	irq/matrix.c	/^	unsigned int		global_available;$/;"	m	struct:irq_matrix	file:
global_list	async.c	/^	struct list_head	global_list;$/;"	m	struct:async_entry	typeref:struct:async_entry::list_head	file:
global_ops	trace/ftrace.c	/^struct ftrace_ops global_ops = {$/;"	v	typeref:struct:ftrace_ops
global_ops	trace/ftrace.c	/^struct ftrace_ops global_ops;$/;"	v	typeref:struct:ftrace_ops
global_reserved	irq/matrix.c	/^	unsigned int		global_reserved;$/;"	m	struct:irq_matrix	file:
global_rt_period	sched/sched.h	/^static inline u64 global_rt_period(void)$/;"	f
global_rt_runtime	sched/sched.h	/^static inline u64 global_rt_runtime(void)$/;"	f
global_trace	trace/trace.c	/^static struct trace_array global_trace = {$/;"	v	typeref:struct:trace_array	file:
global_tunables	sched/cpufreq_schedutil.c	/^static struct sugov_tunables *global_tunables;$/;"	v	typeref:struct:sugov_tunables	file:
go	locking/test-ww_mutex.c	/^	struct completion ready, go, done;$/;"	m	struct:test_mutex	typeref:struct:test_mutex::	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start compression *\/$/;"	m	struct:cmp_data	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start crc update *\/$/;"	m	struct:crc_data	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start decompression *\/$/;"	m	struct:dec_data	file:
go	trace/trace_selftest.c	/^	int			go;$/;"	m	struct:wakeup_test_data	file:
goner	audit_tree.c	/^	int goner;$/;"	m	struct:audit_tree	file:
good_sigevent	time/posix-timers.c	/^static struct pid *good_sigevent(sigevent_t * event)$/;"	f	file:
got_idle_tick	time/tick-sched.h	/^	unsigned int			got_idle_tick	: 1;$/;"	m	struct:tick_sched
got_nohz_idle_kick	sched/core.c	/^static inline bool got_nohz_idle_kick(void)$/;"	f	file:
gp_activity	rcu/tree.h	/^	unsigned long gp_activity;		\/* Time of last GP kthread *\/$/;"	m	struct:rcu_state
gp_barrier	rcu/rcuperf.c	/^	void (*gp_barrier)(void);$/;"	m	struct:rcu_perf_ops	file:
gp_cleanup_delay	rcu/tree.c	/^static int gp_cleanup_delay;$/;"	v	file:
gp_diff	rcu/rcuperf.c	/^	unsigned long (*gp_diff)(unsigned long new, unsigned long old);$/;"	m	struct:rcu_perf_ops	file:
gp_diff	rcu/rcutorture.c	/^	unsigned long (*gp_diff)(unsigned long new, unsigned long old);$/;"	m	struct:rcu_torture_ops	file:
gp_end	rcu/tree.h	/^	unsigned long gp_end;			\/* Time last GP ended, again *\/$/;"	m	struct:rcu_state
gp_flags	rcu/tree.h	/^	short gp_flags;				\/* Commands for GP task. *\/$/;"	m	struct:rcu_state
gp_init_delay	rcu/tree.c	/^static int gp_init_delay;$/;"	v	file:
gp_kthread	rcu/tree.h	/^	struct task_struct *gp_kthread;		\/* Task for grace periods. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::task_struct
gp_max	rcu/tree.h	/^	unsigned long gp_max;			\/* Maximum GP duration in *\/$/;"	m	struct:rcu_state
gp_preinit_delay	rcu/tree.c	/^static int gp_preinit_delay;$/;"	v	file:
gp_req_activity	rcu/tree.h	/^	unsigned long gp_req_activity;		\/* Time of last GP request *\/$/;"	m	struct:rcu_state
gp_seq	rcu/tree.h	/^	unsigned long	gp_seq;		\/* Track rsp->rcu_gp_seq counter. *\/$/;"	m	struct:rcu_data
gp_seq	rcu/tree.h	/^	unsigned long gp_seq;			\/* Grace-period sequence #. *\/$/;"	m	struct:rcu_state
gp_seq	rcu/tree.h	/^	unsigned long gp_seq;	\/* Track rsp->rcu_gp_seq. *\/$/;"	m	struct:rcu_node
gp_seq_needed	rcu/tree.h	/^	unsigned long	gp_seq_needed;	\/* Track furthest future GP request. *\/$/;"	m	struct:rcu_data
gp_seq_needed	rcu/tree.h	/^	unsigned long gp_seq_needed; \/* Track furthest future GP request. *\/$/;"	m	struct:rcu_node
gp_start	rcu/tree.h	/^	unsigned long gp_start;			\/* Time at which GP started, *\/$/;"	m	struct:rcu_state
gp_state	rcu/tree.h	/^	short gp_state;				\/* GP kthread sleep state. *\/$/;"	m	struct:rcu_state
gp_state_getname	rcu/tree.c	/^static const char *gp_state_getname(short gs)$/;"	f	file:
gp_state_names	rcu/tree.h	/^static const char * const gp_state_names[] = {$/;"	v
gp_tasks	rcu/tree.h	/^	struct list_head *gp_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
gp_wake_seq	rcu/tree.h	/^	unsigned long gp_wake_seq;		\/* ->gp_seq at ^^^. *\/$/;"	m	struct:rcu_state
gp_wake_time	rcu/tree.h	/^	unsigned long gp_wake_time;		\/* Last GP kthread wake. *\/$/;"	m	struct:rcu_state
gp_wq	rcu/tree.h	/^	struct swait_queue_head gp_wq;		\/* Where GP task waits. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head
gplok	module.c	/^	bool gplok;$/;"	m	struct:find_symbol_arg	file:
gpwrap	rcu/tree.h	/^	bool		gpwrap;		\/* Possible ->gp_seq wrap. *\/$/;"	m	struct:rcu_data
grab_mcs_node	locking/qspinlock.c	/^struct mcs_spinlock *grab_mcs_node(struct mcs_spinlock *base, int idx)$/;"	f	file:
graph_array	trace/trace_functions_graph.c	/^static struct trace_array *graph_array;$/;"	v	typeref:struct:trace_array	file:
graph_depth_fops	trace/trace_functions_graph.c	/^static const struct file_operations graph_depth_fops = {$/;"	v	typeref:struct:file_operations	file:
graph_depth_read	trace/trace_functions_graph.c	/^graph_depth_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
graph_depth_write	trace/trace_functions_graph.c	/^graph_depth_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
graph_filter_type	trace/ftrace.c	/^enum graph_filter_type {$/;"	g	file:
graph_functions	trace/trace_functions_graph.c	/^static struct trace_event_functions graph_functions = {$/;"	v	typeref:struct:trace_event_functions	file:
graph_hang_thresh	trace/trace_selftest.c	/^static unsigned int graph_hang_thresh;$/;"	v	file:
graph_init_task	trace/fgraph.c	/^graph_init_task(struct task_struct *t, struct ftrace_ret_stack *ret_stack)$/;"	f	file:
graph_lock	locking/lockdep.c	/^static int graph_lock(void)$/;"	f	file:
graph_ops	trace/fgraph.c	/^static struct ftrace_ops graph_ops = {$/;"	v	typeref:struct:ftrace_ops	file:
graph_trace_close	trace/trace_functions_graph.c	/^void graph_trace_close(struct trace_iterator *iter)$/;"	f
graph_trace_entry_event	trace/trace_functions_graph.c	/^static struct trace_event graph_trace_entry_event = {$/;"	v	typeref:struct:trace_event	file:
graph_trace_init	trace/trace_functions_graph.c	/^static int graph_trace_init(struct trace_array *tr)$/;"	f	file:
graph_trace_open	trace/trace_functions_graph.c	/^void graph_trace_open(struct trace_iterator *iter)$/;"	f
graph_trace_reset	trace/trace_functions_graph.c	/^static void graph_trace_reset(struct trace_array *tr)$/;"	f	file:
graph_trace_ret_event	trace/trace_functions_graph.c	/^static struct trace_event graph_trace_ret_event = {$/;"	v	typeref:struct:trace_event	file:
graph_trace_update_thresh	trace/trace_functions_graph.c	/^static int graph_trace_update_thresh(struct trace_array *tr)$/;"	f	file:
graph_unlock	locking/lockdep.c	/^static inline int graph_unlock(void)$/;"	f	file:
group	events/core.c	/^	bool group;$/;"	m	struct:perf_read_data	file:
group_balance_cpu	sched/topology.c	/^int group_balance_cpu(struct sched_group *sg)$/;"	f
group_balance_mask	sched/sched.h	/^static inline struct cpumask *group_balance_mask(struct sched_group *sg)$/;"	f
group_can_go_on	events/core.c	/^static int group_can_go_on(struct perf_event *event,$/;"	f	file:
group_capacity	sched/fair.c	/^	unsigned long group_capacity;$/;"	m	struct:sg_lb_stats	file:
group_cfs_rq	sched/fair.c	/^static inline struct cfs_rq *group_cfs_rq(struct sched_entity *grp)$/;"	f	file:
group_classify	sched/fair.c	/^group_type group_classify(struct sched_group *group,$/;"	f	file:
group_faults	sched/fair.c	/^static inline unsigned long group_faults(struct task_struct *p, int nid)$/;"	f	file:
group_faults_cpu	sched/fair.c	/^static inline unsigned long group_faults_cpu(struct numa_group *group, int nid)$/;"	f	file:
group_faults_priv	sched/fair.c	/^static inline unsigned long group_faults_priv(struct numa_group *ng)$/;"	f	file:
group_faults_shared	sched/fair.c	/^static inline unsigned long group_faults_shared(struct numa_group *ng)$/;"	f	file:
group_first_cpu	sched/sched.h	/^static inline unsigned int group_first_cpu(struct sched_group *group)$/;"	f
group_has_capacity	sched/fair.c	/^group_has_capacity(struct lb_env *env, struct sg_lb_stats *sgs)$/;"	f	file:
group_imbalanced	sched/fair.c	/^	group_imbalanced,$/;"	e	enum:group_type	file:
group_init	sched/psi.c	/^static void group_init(struct psi_group *group)$/;"	f	file:
group_is_overloaded	sched/fair.c	/^group_is_overloaded(struct lb_env *env, struct sg_lb_stats *sgs)$/;"	f	file:
group_load	sched/fair.c	/^	unsigned long group_load; \/* Total load over the CPUs of the group *\/$/;"	m	struct:sg_lb_stats	file:
group_misfit_task	sched/fair.c	/^	group_misfit_task,$/;"	e	enum:group_type	file:
group_misfit_task_load	sched/fair.c	/^	unsigned long group_misfit_task_load; \/* A CPU has a task too big for its capacity *\/$/;"	m	struct:sg_lb_stats	file:
group_no_capacity	sched/fair.c	/^	int group_no_capacity;$/;"	m	struct:sg_lb_stats	file:
group_other	sched/fair.c	/^	group_other = 0,$/;"	e	enum:group_type	file:
group_overloaded	sched/fair.c	/^	group_overloaded,$/;"	e	enum:group_type	file:
group_path	sched/debug.c	/^static char group_path[PATH_MAX];$/;"	v	file:
group_rt_rq	sched/rt.c	/^static inline struct rt_rq *group_rt_rq(struct sched_rt_entity *rt_se)$/;"	f	file:
group_sched_in	events/core.c	/^group_sched_in(struct perf_event *group_event,$/;"	f	file:
group_sched_out	events/core.c	/^group_sched_out(struct perf_event *group_event,$/;"	f	file:
group_send_sig_info	signal.c	/^int group_send_sig_info(int sig, struct kernel_siginfo *info,$/;"	f
group_smaller_max_cpu_capacity	sched/fair.c	/^group_smaller_max_cpu_capacity(struct sched_group *sg, struct sched_group *ref)$/;"	f	file:
group_smaller_min_cpu_capacity	sched/fair.c	/^group_smaller_min_cpu_capacity(struct sched_group *sg, struct sched_group *ref)$/;"	f	file:
group_type	sched/fair.c	/^	enum group_type group_type;$/;"	m	struct:sg_lb_stats	typeref:enum:sg_lb_stats::group_type	file:
group_type	sched/fair.c	/^enum group_type {$/;"	g	file:
group_util	sched/fair.c	/^	unsigned long group_util; \/* Total utilization of the group *\/$/;"	m	struct:sg_lb_stats	file:
group_weight	sched/fair.c	/^	unsigned int group_weight;$/;"	m	struct:sg_lb_stats	file:
group_weight	sched/fair.c	/^static inline unsigned long group_weight(struct task_struct *p, int nid,$/;"	f	file:
group_weight	sched/sched.h	/^	unsigned int		group_weight;$/;"	m	struct:sched_group
groups16_from_user	uid16.c	/^static int groups16_from_user(struct group_info *group_info,$/;"	f	file:
groups16_to_user	uid16.c	/^static int groups16_to_user(old_gid_t __user *grouplist,$/;"	f	file:
groups_alloc	groups.c	/^EXPORT_SYMBOL(groups_alloc);$/;"	v
groups_alloc	groups.c	/^struct group_info *groups_alloc(int gidsetsize)$/;"	f
groups_free	groups.c	/^EXPORT_SYMBOL(groups_free);$/;"	v
groups_free	groups.c	/^void groups_free(struct group_info *group_info)$/;"	f
groups_from_user	groups.c	/^static int groups_from_user(struct group_info *group_info,$/;"	f	file:
groups_search	groups.c	/^int groups_search(const struct group_info *group_info, kgid_t grp)$/;"	f
groups_sort	groups.c	/^EXPORT_SYMBOL(groups_sort);$/;"	v
groups_sort	groups.c	/^void groups_sort(struct group_info *group_info)$/;"	f
groups_to_user	groups.c	/^static int groups_to_user(gid_t __user *grouplist,$/;"	f	file:
grow_tree_refs	auditsc.c	/^static int grow_tree_refs(struct audit_context *ctx)$/;"	f	file:
grp	module.c	/^	struct attribute_group grp;$/;"	m	struct:module_sect_attrs	typeref:struct:module_sect_attrs::attribute_group	file:
grp	params.c	/^	struct attribute_group grp;$/;"	m	struct:module_param_attrs	typeref:struct:module_param_attrs::attribute_group	file:
grphi	rcu/tree.h	/^	int	grphi;		\/* highest-numbered CPU or group here. *\/$/;"	m	struct:rcu_node
grplo	rcu/tree.h	/^	int	grplo;		\/* lowest-numbered CPU or group here. *\/$/;"	m	struct:rcu_node
grpmask	rcu/tree.h	/^	unsigned long grpmask;		\/* Mask to apply to leaf qsmask. *\/$/;"	m	struct:rcu_data
grpmask	rcu/tree.h	/^	unsigned long grpmask;	\/* Mask to apply to parent qsmask. *\/$/;"	m	struct:rcu_node
grpnum	rcu/tree.h	/^	u8	grpnum;		\/* CPU\/group number for next level up. *\/$/;"	m	struct:rcu_node
grub_reclaim	sched/deadline.c	/^static u64 grub_reclaim(u64 delta, struct rq *rq, struct sched_dl_entity *dl_se)$/;"	f	file:
guarantee_online_cpus	cgroup/cpuset.c	/^static void guarantee_online_cpus(struct cpuset *cs, struct cpumask *pmask)$/;"	f	file:
guarantee_online_mems	cgroup/cpuset.c	/^static void guarantee_online_mems(struct cpuset *cs, nodemask_t *pmask)$/;"	f	file:
h_load	sched/sched.h	/^	unsigned long		h_load;$/;"	m	struct:cfs_rq
h_load_next	sched/sched.h	/^	struct sched_entity	*h_load_next;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
h_nr_running	sched/sched.h	/^	unsigned int		h_nr_running;$/;"	m	struct:cfs_rq
halt_fast_timekeeper	time/timekeeping.c	/^static void halt_fast_timekeeper(const struct timekeeper *tk)$/;"	f	file:
handle	power/user.c	/^	struct snapshot_handle handle;$/;"	m	struct:snapshot_data	typeref:struct:snapshot_data::snapshot_handle	file:
handle_bad_irq	irq/handle.c	/^EXPORT_SYMBOL_GPL(handle_bad_irq);$/;"	v
handle_bad_irq	irq/handle.c	/^void handle_bad_irq(struct irq_desc *desc)$/;"	f
handle_ctrl_cmd	debug/kdb/kdb_main.c	/^static int handle_ctrl_cmd(char *cmd)$/;"	f	file:
handle_domain_nmi	irq/irqdesc.c	/^int handle_domain_nmi(struct irq_domain *domain, unsigned int hwirq,$/;"	f
handle_early_requeue_pi_wakeup	futex.c	/^int handle_early_requeue_pi_wakeup(struct futex_hash_bucket *hb,$/;"	f	file:
handle_edge_eoi_irq	irq/chip.c	/^void handle_edge_eoi_irq(struct irq_desc *desc)$/;"	f
handle_edge_irq	irq/chip.c	/^EXPORT_SYMBOL(handle_edge_irq);$/;"	v
handle_edge_irq	irq/chip.c	/^void handle_edge_irq(struct irq_desc *desc)$/;"	f
handle_exit_race	futex.c	/^static int handle_exit_race(u32 __user *uaddr, u32 uval,$/;"	f	file:
handle_fasteoi_ack_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_fasteoi_ack_irq);$/;"	v
handle_fasteoi_ack_irq	irq/chip.c	/^void handle_fasteoi_ack_irq(struct irq_desc *desc)$/;"	f
handle_fasteoi_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_fasteoi_irq);$/;"	v
handle_fasteoi_irq	irq/chip.c	/^void handle_fasteoi_irq(struct irq_desc *desc)$/;"	f
handle_fasteoi_mask_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_fasteoi_mask_irq);$/;"	v
handle_fasteoi_mask_irq	irq/chip.c	/^void handle_fasteoi_mask_irq(struct irq_desc *desc)$/;"	f
handle_fasteoi_nmi	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_fasteoi_nmi);$/;"	v
handle_fasteoi_nmi	irq/chip.c	/^void handle_fasteoi_nmi(struct irq_desc *desc)$/;"	f
handle_futex_death	futex.c	/^static int handle_futex_death(u32 __user *uaddr, struct task_struct *curr, int pi)$/;"	f	file:
handle_irq_event	irq/handle.c	/^irqreturn_t handle_irq_event(struct irq_desc *desc)$/;"	f
handle_irq_event_percpu	irq/handle.c	/^irqreturn_t handle_irq_event_percpu(struct irq_desc *desc)$/;"	f
handle_level_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_level_irq);$/;"	v
handle_level_irq	irq/chip.c	/^void handle_level_irq(struct irq_desc *desc)$/;"	f
handle_nested_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_nested_irq);$/;"	v
handle_nested_irq	irq/chip.c	/^void handle_nested_irq(unsigned int irq)$/;"	f
handle_one	auditsc.c	/^static inline void handle_one(const struct inode *inode)$/;"	f	file:
handle_path	auditsc.c	/^static void handle_path(const struct dentry *dentry)$/;"	f	file:
handle_percpu_devid_fasteoi_nmi	irq/chip.c	/^void handle_percpu_devid_fasteoi_nmi(struct irq_desc *desc)$/;"	f
handle_percpu_devid_irq	irq/chip.c	/^void handle_percpu_devid_irq(struct irq_desc *desc)$/;"	f
handle_percpu_irq	irq/chip.c	/^void handle_percpu_irq(struct irq_desc *desc)$/;"	f
handle_poweroff	power/poweroff.c	/^static void handle_poweroff(int key)$/;"	f	file:
handle_simple_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_simple_irq);$/;"	v
handle_simple_irq	irq/chip.c	/^void handle_simple_irq(struct irq_desc *desc)$/;"	f
handle_singlestep	events/uprobes.c	/^static void handle_singlestep(struct uprobe_task *utask, struct pt_regs *regs)$/;"	f	file:
handle_swbp	events/uprobes.c	/^static void handle_swbp(struct pt_regs *regs)$/;"	f	file:
handle_trampoline	events/uprobes.c	/^static void handle_trampoline(struct pt_regs *regs)$/;"	f	file:
handle_untracked_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_untracked_irq);$/;"	v
handle_untracked_irq	irq/chip.c	/^void handle_untracked_irq(struct irq_desc *desc)$/;"	f
handle_uretprobe_chain	events/uprobes.c	/^handle_uretprobe_chain(struct return_instance *ri, struct pt_regs *regs)$/;"	f	file:
handler	trace/trace_events_hist.c	/^	enum handler_id		handler;$/;"	m	struct:action_data	typeref:enum:action_data::handler_id	file:
handler_chain	events/uprobes.c	/^static void handler_chain(struct uprobe *uprobe, struct pt_regs *regs)$/;"	f	file:
handler_errors	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
handler_id	trace/trace_events_hist.c	/^enum handler_id {$/;"	g	file:
hardirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_off_events;$/;"	m	struct:lockdep_stats
hardirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_on_events;$/;"	m	struct:lockdep_stats
hardlockup_all_cpu_backtrace_setup	watchdog.c	/^static int __init hardlockup_all_cpu_backtrace_setup(char *str)$/;"	f	file:
hardlockup_allcpu_dumped	watchdog_hld.c	/^static unsigned long hardlockup_allcpu_dumped;$/;"	v	file:
hardlockup_detector_disable	watchdog.c	/^void __init hardlockup_detector_disable(void)$/;"	f
hardlockup_detector_event_create	watchdog_hld.c	/^static int hardlockup_detector_event_create(void)$/;"	f	file:
hardlockup_detector_perf_cleanup	watchdog_hld.c	/^void hardlockup_detector_perf_cleanup(void)$/;"	f
hardlockup_detector_perf_disable	watchdog_hld.c	/^void hardlockup_detector_perf_disable(void)$/;"	f
hardlockup_detector_perf_enable	watchdog_hld.c	/^void hardlockup_detector_perf_enable(void)$/;"	f
hardlockup_detector_perf_init	watchdog_hld.c	/^int __init hardlockup_detector_perf_init(void)$/;"	f
hardlockup_detector_perf_restart	watchdog_hld.c	/^void __init hardlockup_detector_perf_restart(void)$/;"	f
hardlockup_detector_perf_stop	watchdog_hld.c	/^void __init hardlockup_detector_perf_stop(void)$/;"	f
hardlockup_panic	watchdog.c	/^unsigned int __read_mostly hardlockup_panic =$/;"	v
hardlockup_panic_setup	watchdog.c	/^static int __init hardlockup_panic_setup(char *str)$/;"	f	file:
hardpps	time/timekeeping.c	/^EXPORT_SYMBOL(hardpps);$/;"	v
hardpps	time/timekeeping.c	/^void hardpps(const struct timespec64 *phase_ts, const struct timespec64 *raw_ts)$/;"	f
hardpps_update_freq	time/ntp.c	/^static long hardpps_update_freq(struct pps_normtime freq_norm)$/;"	f	file:
hardpps_update_phase	time/ntp.c	/^static void hardpps_update_phase(long error)$/;"	f	file:
has_blocked	sched/fair.c	/^	int has_blocked;		\/* Idle CPUS has blocked load *\/$/;"	m	struct:__anon87	file:
has_blocked_load	sched/sched.h	/^	unsigned int		has_blocked_load;$/;"	m	struct:rq
has_capability	capability.c	/^EXPORT_SYMBOL(has_capability);$/;"	v
has_capability	capability.c	/^bool has_capability(struct task_struct *t, int cap)$/;"	f
has_capability_noaudit	capability.c	/^bool has_capability_noaudit(struct task_struct *t, int cap)$/;"	f
has_extended_regs	events/core.c	/^static inline bool has_extended_regs(struct perf_event *event)$/;"	f	file:
has_hist_vars	trace/trace_events_hist.c	/^static bool has_hist_vars(struct hist_trigger_data *hist_data)$/;"	f	file:
has_ns_capability	capability.c	/^bool has_ns_capability(struct task_struct *t,$/;"	f
has_ns_capability_noaudit	capability.c	/^bool has_ns_capability_noaudit(struct task_struct *t,$/;"	f
has_pending_signals	signal.c	/^static inline bool has_pending_signals(sigset_t *signal, sigset_t *blocked)$/;"	f	file:
has_perm	audit.h	/^			int			has_perm;$/;"	m	struct:audit_context::__anon53::__anon55
has_pushable_dl_tasks	sched/deadline.c	/^static inline int has_pushable_dl_tasks(struct rq *rq)$/;"	f	file:
has_pushable_tasks	sched/rt.c	/^static inline int has_pushable_tasks(struct rq *rq)$/;"	f	file:
has_si_pid_and_uid	signal.c	/^static inline bool has_si_pid_and_uid(struct kernel_siginfo *info)$/;"	f	file:
has_stopped_jobs	exit.c	/^static bool has_stopped_jobs(struct pid *pgrp)$/;"	f	file:
has_wakealarm	power/suspend_test.c	/^static int __init has_wakealarm(struct device *dev, const void *data)$/;"	f	file:
hash	audit_tree.c	/^	struct list_head hash;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::list_head	file:
hash	bpf/hashtab.c	/^	u32 hash;$/;"	m	struct:htab_elem	file:
hash	bpf/stackmap.c	/^	u32 hash;$/;"	m	struct:stack_map_bucket	file:
hash	module_signing.c	/^	u8	hash;		\/* Digest algorithm [0] *\/$/;"	m	struct:module_signature	file:
hash	time/posix-timers.c	/^static int hash(struct signal_struct *sig, unsigned int nr)$/;"	f	file:
hash	trace/ftrace.c	/^	struct ftrace_hash		*hash;$/;"	m	struct:ftrace_graph_data	typeref:struct:ftrace_graph_data::ftrace_hash	file:
hash	trace/ftrace.c	/^	struct ftrace_hash		*hash;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_hash	file:
hash	trace/ftrace.c	/^	struct ftrace_hash		hash;$/;"	m	struct:ftrace_func_mapper	typeref:struct:ftrace_func_mapper::ftrace_hash	file:
hash	trace/ftrace.c	/^	struct hlist_head		*hash;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::hlist_head	file:
hash_bucket	dma/debug.c	/^struct hash_bucket {$/;"	s	file:
hash_bucket_add	dma/debug.c	/^static void hash_bucket_add(struct hash_bucket *bucket,$/;"	f	file:
hash_bucket_del	dma/debug.c	/^static void hash_bucket_del(struct dma_debug_entry *entry)$/;"	f	file:
hash_contains_ip	trace/ftrace.c	/^static bool hash_contains_ip(unsigned long ip,$/;"	f	file:
hash_fn	dma/debug.c	/^static int hash_fn(struct dma_debug_entry *entry)$/;"	f	file:
hash_futex	futex.c	/^static struct futex_hash_bucket *hash_futex(union futex_key *key)$/;"	f	file:
hash_node	bpf/hashtab.c	/^		struct hlist_nulls_node hash_node;$/;"	m	union:htab_elem::__anon70	typeref:struct:htab_elem::__anon70::hlist_nulls_node	file:
hash_node	workqueue.c	/^	struct hlist_node	hash_node;	\/* PL: unbound_pool_hash node *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::hlist_node	file:
hash_offset	bpf/bpf_lru_list.h	/^	unsigned int hash_offset;$/;"	m	struct:bpf_lru
hashrnd	bpf/hashtab.c	/^	u32 hashrnd;$/;"	m	struct:bpf_htab	file:
hashsize	futex.c	/^	unsigned long            hashsize;$/;"	m	struct:__anon91	file:
have_callable_console	printk/printk.c	/^static int have_callable_console(void)$/;"	f	file:
have_hist_trigger_match	trace/trace_events_hist.c	/^static bool have_hist_trigger_match(struct event_trigger_data *data,$/;"	f	file:
hb_waiters_dec	futex.c	/^static inline void hb_waiters_dec(struct futex_hash_bucket *hb)$/;"	f	file:
hb_waiters_inc	futex.c	/^static inline void hb_waiters_inc(struct futex_hash_bucket *hb)$/;"	f	file:
hb_waiters_pending	futex.c	/^static inline int hb_waiters_pending(struct futex_hash_bucket *hb)$/;"	f	file:
hdr	bpf/btf.c	/^	struct btf_header hdr;$/;"	m	struct:btf	typeref:struct:btf::btf_header	file:
hdr	bpf/core.c	/^	struct bpf_prog_array hdr;$/;"	m	struct:__anon67	typeref:struct:__anon67::bpf_prog_array	file:
hdr	module-internal.h	/^	Elf_Ehdr *hdr;$/;"	m	struct:load_info
head	audit_tree.c	/^	struct rcu_head head;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::rcu_head	file:
head	audit_tree.c	/^	struct rcu_head head;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::rcu_head	file:
head	bpf/hashtab.c	/^	struct hlist_nulls_head head;$/;"	m	struct:bucket	typeref:struct:bucket::hlist_nulls_head	file:
head	bpf/queue_stack_maps.c	/^	u32 head, tail;$/;"	m	struct:bpf_queue_stack	file:
head	events/internal.h	/^	local_t				head;		\/* write position    *\/$/;"	m	struct:ring_buffer
head	gcov/clang.c	/^	struct list_head head;$/;"	m	struct:gcov_fn_info	typeref:struct:gcov_fn_info::list_head	file:
head	gcov/clang.c	/^	struct list_head head;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::list_head	file:
head	power/console.c	/^	struct list_head head;$/;"	m	struct:pm_vt_switch	typeref:struct:pm_vt_switch::list_head	file:
head	softirq.c	/^	struct tasklet_struct *head;$/;"	m	struct:tasklet_head	typeref:struct:tasklet_head::tasklet_struct	file:
head	trace/ring_buffer.c	/^	unsigned long			head;$/;"	m	struct:ring_buffer_iter	file:
head	trace/trace.c	/^	struct trace_eval_map_head	head;$/;"	m	union:trace_eval_map_item	typeref:struct:trace_eval_map_item::trace_eval_map_head	file:
head_page	trace/ring_buffer.c	/^	struct buffer_page		*head_page;	\/* read from head *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
head_page	trace/ring_buffer.c	/^	struct buffer_page		*head_page;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::buffer_page	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_comm_event::__anon2	typeref:struct:perf_comm_event::__anon2::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_mmap_event::__anon4	typeref:struct:perf_mmap_event::__anon4::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_namespaces_event::__anon3	typeref:struct:perf_namespaces_event::__anon3::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_switch_event::__anon5	typeref:struct:perf_switch_event::__anon5::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_task_event::__anon1	typeref:struct:perf_task_event::__anon1::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header        header;$/;"	m	struct:perf_bpf_event::__anon7	typeref:struct:perf_bpf_event::__anon7::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header        header;$/;"	m	struct:perf_ksymbol_event::__anon6	typeref:struct:perf_ksymbol_event::__anon6::perf_event_header	file:
header	events/core.c	/^	struct perf_event_header	header;$/;"	m	struct:perf_read_event	typeref:struct:perf_read_event::perf_event_header	file:
header_iter	trace/trace_mmiotrace.c	/^struct header_iter {$/;"	s	file:
help	debug/kdb/kdb_main.c	/^	char *help;$/;"	m	struct:defcmd_set	file:
helper_lock	umh.c	/^static void helper_lock(void)$/;"	f	file:
helper_unlock	umh.c	/^static void helper_unlock(void)$/;"	f	file:
hentry	workqueue_internal.h	/^		struct hlist_node	hentry;	\/* L: while busy *\/$/;"	m	union:worker::__anon13	typeref:struct:worker::__anon13::hlist_node
hib_bio_batch	power/swap.c	/^struct hib_bio_batch {$/;"	s	file:
hib_end_io	power/swap.c	/^static void hib_end_io(struct bio *bio)$/;"	f	file:
hib_init_batch	power/swap.c	/^static void hib_init_batch(struct hib_bio_batch *hb)$/;"	f	file:
hib_resume_bdev	power/swap.c	/^static struct block_device *hib_resume_bdev;$/;"	v	typeref:struct:block_device	file:
hib_submit_io	power/swap.c	/^static int hib_submit_io(int op, int op_flags, pgoff_t page_off, void *addr,$/;"	f	file:
hib_wait_io	power/swap.c	/^static blk_status_t hib_wait_io(struct hib_bio_batch *hb)$/;"	f	file:
hibernate	power/hibernate.c	/^int hibernate(void)$/;"	f
hibernate_image_size_init	power/power.h	/^static inline void hibernate_image_size_init(void) {}$/;"	f
hibernate_image_size_init	power/snapshot.c	/^void __init hibernate_image_size_init(void)$/;"	f
hibernate_preallocate_memory	power/snapshot.c	/^int hibernate_preallocate_memory(void)$/;"	f
hibernate_reserved_size_init	power/power.h	/^static inline void hibernate_reserved_size_init(void) {}$/;"	f
hibernate_reserved_size_init	power/snapshot.c	/^void __init hibernate_reserved_size_init(void)$/;"	f
hibernate_restore_protect_page	power/snapshot.c	/^static inline void hibernate_restore_protect_page(void *page_address) {}$/;"	f	file:
hibernate_restore_protect_page	power/snapshot.c	/^static inline void hibernate_restore_protect_page(void *page_address)$/;"	f	file:
hibernate_restore_protection	power/snapshot.c	/^static bool hibernate_restore_protection;$/;"	v	file:
hibernate_restore_protection_active	power/snapshot.c	/^static bool hibernate_restore_protection_active;$/;"	v	file:
hibernate_restore_protection_begin	power/snapshot.c	/^static inline void hibernate_restore_protection_begin(void) {}$/;"	f	file:
hibernate_restore_protection_begin	power/snapshot.c	/^static inline void hibernate_restore_protection_begin(void)$/;"	f	file:
hibernate_restore_protection_end	power/snapshot.c	/^static inline void hibernate_restore_protection_end(void) {}$/;"	f	file:
hibernate_restore_protection_end	power/snapshot.c	/^static inline void hibernate_restore_protection_end(void)$/;"	f	file:
hibernate_restore_unprotect_page	power/snapshot.c	/^static inline void hibernate_restore_unprotect_page(void *page_address) {}$/;"	f	file:
hibernate_restore_unprotect_page	power/snapshot.c	/^static inline void hibernate_restore_unprotect_page(void *page_address)$/;"	f	file:
hibernate_resume_nonboot_cpu_disable	power/hibernate.c	/^int __weak hibernate_resume_nonboot_cpu_disable(void)$/;"	f
hibernate_setup	power/hibernate.c	/^static int __init hibernate_setup(char *str)$/;"	f	file:
hibernation_available	power/hibernate.c	/^bool hibernation_available(void)$/;"	f
hibernation_debug_sleep	power/hibernate.c	/^static void hibernation_debug_sleep(void)$/;"	f	file:
hibernation_mode	power/hibernate.c	/^static int hibernation_mode = HIBERNATION_SHUTDOWN;$/;"	v	file:
hibernation_modes	power/hibernate.c	/^static const char * const hibernation_modes[] = {$/;"	v	file:
hibernation_ops	power/hibernate.c	/^static const struct platform_hibernation_ops *hibernation_ops;$/;"	v	typeref:struct:platform_hibernation_ops	file:
hibernation_platform_enter	power/hibernate.c	/^int hibernation_platform_enter(void)$/;"	f
hibernation_restore	power/hibernate.c	/^int hibernation_restore(int platform_mode)$/;"	f
hibernation_set_ops	power/hibernate.c	/^EXPORT_SYMBOL_GPL(hibernation_set_ops);$/;"	v
hibernation_set_ops	power/hibernate.c	/^void hibernation_set_ops(const struct platform_hibernation_ops *ops)$/;"	f
hibernation_snapshot	power/hibernate.c	/^int hibernation_snapshot(int platform_mode)$/;"	f
hibernation_test	power/hibernate.c	/^static int hibernation_test(int level) { return 0; }$/;"	f	file:
hibernation_test	power/hibernate.c	/^static int hibernation_test(int level)$/;"	f	file:
hidden	audit.h	/^	bool			hidden;		\/* don't log this record *\/$/;"	m	struct:audit_names
hierarchical_quota	sched/sched.h	/^	s64			hierarchical_quota;$/;"	m	struct:cfs_bandwidth
hierarchy_allows_attach	bpf/cgroup.c	/^static bool hierarchy_allows_attach(struct cgroup *cgrp,$/;"	f	file:
highest_flag_domain	sched/sched.h	/^static inline struct sched_domain *highest_flag_domain(int cpu, int flag)$/;"	f
highest_prio	sched/sched.h	/^	} highest_prio;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::__anon84
highmem_pbe	power/snapshot.c	/^struct highmem_pbe {$/;"	s	file:
highmem_pblist	power/snapshot.c	/^static struct highmem_pbe *highmem_pblist;$/;"	v	typeref:struct:highmem_pbe	file:
hist	trace/trace.h	/^	bool				hist;$/;"	m	struct:enable_trigger_data
hist_clear	trace/trace_events_hist.c	/^static void hist_clear(struct event_trigger_data *data)$/;"	f	file:
hist_data	trace/trace_events_hist.c	/^	struct hist_trigger_data	*hist_data;$/;"	m	struct:field_var_hist	typeref:struct:field_var_hist::hist_trigger_data	file:
hist_data	trace/trace_events_hist.c	/^	struct hist_trigger_data	*hist_data;$/;"	m	struct:hist_field	typeref:struct:hist_field::hist_trigger_data	file:
hist_data	trace/trace_events_hist.c	/^	struct hist_trigger_data	*hist_data;$/;"	m	struct:hist_var	typeref:struct:hist_var::hist_trigger_data	file:
hist_data	trace/trace_events_hist.c	/^	struct hist_trigger_data	*hist_data;$/;"	m	struct:track_data	typeref:struct:track_data::hist_trigger_data	file:
hist_data	trace/trace_events_hist.c	/^	struct hist_trigger_data *hist_data;$/;"	m	struct:hist_var_data	typeref:struct:hist_var_data::hist_trigger_data	file:
hist_disable_count_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops hist_disable_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
hist_disable_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops hist_disable_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
hist_elt_data	trace/trace_events_hist.c	/^struct hist_elt_data {$/;"	s	file:
hist_elt_data_free	trace/trace_events_hist.c	/^static void hist_elt_data_free(struct hist_elt_data *elt_data)$/;"	f	file:
hist_enable_count_trigger	trace/trace_events_hist.c	/^hist_enable_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
hist_enable_count_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops hist_enable_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
hist_enable_get_trigger_ops	trace/trace_events_hist.c	/^hist_enable_get_trigger_ops(char *cmd, char *param)$/;"	f	file:
hist_enable_trigger	trace/trace_events_hist.c	/^hist_enable_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
hist_enable_trigger_ops	trace/trace_events_hist.c	/^static struct event_trigger_ops hist_enable_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
hist_enable_unreg_all	trace/trace_events_hist.c	/^static void hist_enable_unreg_all(struct trace_event_file *file)$/;"	f	file:
hist_err	trace/trace_events_hist.c	/^static void hist_err(struct trace_array *tr, u8 err_type, u8 err_pos)$/;"	f	file:
hist_err_clear	trace/trace_events_hist.c	/^static void hist_err_clear(void)$/;"	f	file:
hist_field	trace/trace_events_hist.c	/^struct hist_field {$/;"	s	file:
hist_field_counter	trace/trace_events_hist.c	/^static u64 hist_field_counter(struct hist_field *field,$/;"	f	file:
hist_field_cpu	trace/trace_events_hist.c	/^static u64 hist_field_cpu(struct hist_field *hist_field,$/;"	f	file:
hist_field_dynstring	trace/trace_events_hist.c	/^static u64 hist_field_dynstring(struct hist_field *hist_field,$/;"	f	file:
hist_field_flags	trace/trace_events_hist.c	/^enum hist_field_flags {$/;"	g	file:
hist_field_fn_t	trace/trace_events_hist.c	/^typedef u64 (*hist_field_fn_t) (struct hist_field *field,$/;"	t	file:
hist_field_log2	trace/trace_events_hist.c	/^static u64 hist_field_log2(struct hist_field *hist_field,$/;"	f	file:
hist_field_minus	trace/trace_events_hist.c	/^static u64 hist_field_minus(struct hist_field *hist_field,$/;"	f	file:
hist_field_name	trace/trace_events_hist.c	/^static const char *hist_field_name(struct hist_field *field,$/;"	f	file:
hist_field_none	trace/trace_events_hist.c	/^static u64 hist_field_none(struct hist_field *field,$/;"	f	file:
hist_field_plus	trace/trace_events_hist.c	/^static u64 hist_field_plus(struct hist_field *hist_field,$/;"	f	file:
hist_field_print	trace/trace_events_hist.c	/^static void hist_field_print(struct seq_file *m, struct hist_field *hist_field)$/;"	f	file:
hist_field_pstring	trace/trace_events_hist.c	/^static u64 hist_field_pstring(struct hist_field *hist_field,$/;"	f	file:
hist_field_string	trace/trace_events_hist.c	/^static u64 hist_field_string(struct hist_field *hist_field,$/;"	f	file:
hist_field_timestamp	trace/trace_events_hist.c	/^static u64 hist_field_timestamp(struct hist_field *hist_field,$/;"	f	file:
hist_field_unary_minus	trace/trace_events_hist.c	/^static u64 hist_field_unary_minus(struct hist_field *hist_field,$/;"	f	file:
hist_field_var_ref	trace/trace_events_hist.c	/^static u64 hist_field_var_ref(struct hist_field *hist_field,$/;"	f	file:
hist_file_check_refs	trace/trace_events_hist.c	/^static bool hist_file_check_refs(struct trace_event_file *file)$/;"	f	file:
hist_register_trigger	trace/trace_events_hist.c	/^static int hist_register_trigger(char *glob, struct event_trigger_ops *ops,$/;"	f	file:
hist_show	trace/trace_events_hist.c	/^static int hist_show(struct seq_file *m, void *v)$/;"	f	file:
hist_trigger_actions	trace/trace_events_hist.c	/^hist_trigger_actions(struct hist_trigger_data *hist_data,$/;"	f	file:
hist_trigger_attrs	trace/trace_events_hist.c	/^struct hist_trigger_attrs {$/;"	s	file:
hist_trigger_check_refs	trace/trace_events_hist.c	/^static bool hist_trigger_check_refs(struct event_trigger_data *data,$/;"	f	file:
hist_trigger_data	trace/trace_events_hist.c	/^struct hist_trigger_data {$/;"	s	file:
hist_trigger_elt_data_alloc	trace/trace_events_hist.c	/^static int hist_trigger_elt_data_alloc(struct tracing_map_elt *elt)$/;"	f	file:
hist_trigger_elt_data_free	trace/trace_events_hist.c	/^static void hist_trigger_elt_data_free(struct tracing_map_elt *elt)$/;"	f	file:
hist_trigger_elt_data_init	trace/trace_events_hist.c	/^static void hist_trigger_elt_data_init(struct tracing_map_elt *elt)$/;"	f	file:
hist_trigger_elt_data_ops	trace/trace_events_hist.c	/^static const struct tracing_map_ops hist_trigger_elt_data_ops = {$/;"	v	typeref:struct:tracing_map_ops	file:
hist_trigger_elt_update	trace/trace_events_hist.c	/^static void hist_trigger_elt_update(struct hist_trigger_data *hist_data,$/;"	f	file:
hist_trigger_enable	trace/trace_events_hist.c	/^static int hist_trigger_enable(struct event_trigger_data *data,$/;"	f	file:
hist_trigger_entry_print	trace/trace_events_hist.c	/^static void hist_trigger_entry_print(struct seq_file *m,$/;"	f	file:
hist_trigger_match	trace/trace_events_hist.c	/^static bool hist_trigger_match(struct event_trigger_data *data,$/;"	f	file:
hist_trigger_print_key	trace/trace_events_hist.c	/^static void hist_trigger_print_key(struct seq_file *m,$/;"	f	file:
hist_trigger_show	trace/trace_events_hist.c	/^static void hist_trigger_show(struct seq_file *m,$/;"	f	file:
hist_trigger_stacktrace_print	trace/trace_events_hist.c	/^static void hist_trigger_stacktrace_print(struct seq_file *m,$/;"	f	file:
hist_unreg_all	trace/trace_events_hist.c	/^static void hist_unreg_all(struct trace_event_file *file)$/;"	f	file:
hist_unregister_trigger	trace/trace_events_hist.c	/^static void hist_unregister_trigger(char *glob, struct event_trigger_ops *ops,$/;"	f	file:
hist_var	trace/trace_events_hist.c	/^struct hist_var {$/;"	s	file:
hist_var_data	trace/trace_events_hist.c	/^struct hist_var_data {$/;"	s	file:
hist_vars	trace/trace.h	/^	struct list_head	hist_vars;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
hits	profile.c	/^	u32 pc, hits;$/;"	m	struct:profile_hit	file:
hits	trace/tracing_map.h	/^	atomic64_t			hits;$/;"	m	struct:tracing_map
hlist	trace/ftrace.c	/^	struct hlist_node hlist;$/;"	m	struct:ftrace_func_entry	typeref:struct:ftrace_func_entry::hlist_node	file:
hlist_mutex	events/core.c	/^	struct mutex			hlist_mutex;$/;"	m	struct:swevent_htable	typeref:struct:swevent_htable::mutex	file:
hlist_refcount	events/core.c	/^	int				hlist_refcount;$/;"	m	struct:swevent_htable	file:
hlock_class	locking/lockdep.c	/^static inline struct lock_class *hlock_class(struct held_lock *hlock)$/;"	f	file:
hma	bpf/tnum.c	/^static struct tnum hma(struct tnum acc, u64 value, u64 mask)$/;"	f	file:
hold_module_trace_bprintk_format	trace/trace_printk.c	/^void hold_module_trace_bprintk_format(const char **start, const char **end)$/;"	f	file:
hook	power/snapshot.c	/^	struct list_head hook;$/;"	m	struct:mem_extent	typeref:struct:mem_extent::list_head	file:
hotplug_cpu__broadcast_tick_pull	time/tick-broadcast.c	/^void hotplug_cpu__broadcast_tick_pull(int deadcpu)$/;"	f
hotplug_update_tasks	cgroup/cpuset.c	/^hotplug_update_tasks(struct cpuset *cs,$/;"	f	file:
hotplug_update_tasks_legacy	cgroup/cpuset.c	/^hotplug_update_tasks_legacy(struct cpuset *cs,$/;"	f	file:
housekeeping_affine	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_affine);$/;"	v
housekeeping_affine	sched/isolation.c	/^void housekeeping_affine(struct task_struct *t, enum hk_flags flags)$/;"	f
housekeeping_any_cpu	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_any_cpu);$/;"	v
housekeeping_any_cpu	sched/isolation.c	/^int housekeeping_any_cpu(enum hk_flags flags)$/;"	f
housekeeping_cpumask	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_cpumask);$/;"	v
housekeeping_cpumask	sched/isolation.c	/^const struct cpumask *housekeeping_cpumask(enum hk_flags flags)$/;"	f
housekeeping_enabled	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_enabled);$/;"	v
housekeeping_enabled	sched/isolation.c	/^bool housekeeping_enabled(enum hk_flags flags)$/;"	f
housekeeping_flags	sched/isolation.c	/^static unsigned int housekeeping_flags;$/;"	v	file:
housekeeping_init	sched/isolation.c	/^void __init housekeeping_init(void)$/;"	f
housekeeping_isolcpus_setup	sched/isolation.c	/^static int __init housekeeping_isolcpus_setup(char *str)$/;"	f	file:
housekeeping_mask	sched/isolation.c	/^static cpumask_var_t housekeeping_mask;$/;"	v	file:
housekeeping_nohz_full_setup	sched/isolation.c	/^static int __init housekeeping_nohz_full_setup(char *str)$/;"	f	file:
housekeeping_overridden	sched/isolation.c	/^DEFINE_STATIC_KEY_FALSE(housekeeping_overridden);$/;"	v
housekeeping_overridden	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_overridden);$/;"	v
housekeeping_setup	sched/isolation.c	/^static int __init housekeeping_setup(char *str, enum hk_flags flags)$/;"	f	file:
housekeeping_test_cpu	sched/isolation.c	/^EXPORT_SYMBOL_GPL(housekeeping_test_cpu);$/;"	v
housekeeping_test_cpu	sched/isolation.c	/^bool housekeeping_test_cpu(int cpu, enum hk_flags flags)$/;"	f
hp_online	padata.c	/^static enum cpuhp_state hp_online;$/;"	v	typeref:enum:cpuhp_state	file:
hrtick	sched/core.c	/^static enum hrtimer_restart hrtick(struct hrtimer *timer)$/;"	f	file:
hrtick_clear	sched/core.c	/^static inline void hrtick_clear(struct rq *rq)$/;"	f	file:
hrtick_clear	sched/core.c	/^static void hrtick_clear(struct rq *rq)$/;"	f	file:
hrtick_csd	sched/sched.h	/^	call_single_data_t	hrtick_csd;$/;"	m	struct:rq
hrtick_csd_pending	sched/sched.h	/^	int			hrtick_csd_pending;$/;"	m	struct:rq
hrtick_enabled	sched/sched.h	/^static inline int hrtick_enabled(struct rq *rq)$/;"	f
hrtick_rq_init	sched/core.c	/^static inline void hrtick_rq_init(struct rq *rq)$/;"	f	file:
hrtick_rq_init	sched/core.c	/^static void hrtick_rq_init(struct rq *rq)$/;"	f	file:
hrtick_start	sched/core.c	/^void hrtick_start(struct rq *rq, u64 delay)$/;"	f
hrtick_start_fair	sched/fair.c	/^hrtick_start_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
hrtick_start_fair	sched/fair.c	/^static void hrtick_start_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
hrtick_timer	sched/sched.h	/^	struct hrtimer		hrtick_timer;$/;"	m	struct:rq	typeref:struct:rq::hrtimer
hrtick_update	sched/fair.c	/^static inline void hrtick_update(struct rq *rq)$/;"	f	file:
hrtick_update	sched/fair.c	/^static void hrtick_update(struct rq *rq)$/;"	f	file:
hrtimer_active	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_active);$/;"	v
hrtimer_active	time/hrtimer.c	/^bool hrtimer_active(const struct hrtimer *timer)$/;"	f
hrtimer_cancel	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_cancel);$/;"	v
hrtimer_cancel	time/hrtimer.c	/^int hrtimer_cancel(struct hrtimer *timer)$/;"	f
hrtimer_check_target	time/hrtimer.c	/^hrtimer_check_target(struct hrtimer *timer, struct hrtimer_clock_base *new_base)$/;"	f	file:
hrtimer_clock_to_base_table	time/hrtimer.c	/^static const int hrtimer_clock_to_base_table[MAX_CLOCKS] = {$/;"	v	file:
hrtimer_clockid_to_base	time/hrtimer.c	/^static inline int hrtimer_clockid_to_base(clockid_t clock_id)$/;"	f	file:
hrtimer_debug_descr	time/hrtimer.c	/^static struct debug_obj_descr hrtimer_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
hrtimer_debug_descr	time/hrtimer.c	/^static struct debug_obj_descr hrtimer_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
hrtimer_debug_hint	time/hrtimer.c	/^static void *hrtimer_debug_hint(void *addr)$/;"	f	file:
hrtimer_fixup_activate	time/hrtimer.c	/^static bool hrtimer_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_fixup_free	time/hrtimer.c	/^static bool hrtimer_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_fixup_init	time/hrtimer.c	/^static bool hrtimer_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_force_reprogram	time/hrtimer.c	/^hrtimer_force_reprogram(struct hrtimer_cpu_base *cpu_base, int skip_equal)$/;"	f	file:
hrtimer_forward	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_forward);$/;"	v
hrtimer_forward	time/hrtimer.c	/^u64 hrtimer_forward(struct hrtimer *timer, ktime_t now, ktime_t interval)$/;"	f
hrtimer_get_next_event	time/hrtimer.c	/^u64 hrtimer_get_next_event(void)$/;"	f
hrtimer_hres_active	time/hrtimer.c	/^static inline int hrtimer_hres_active(void)$/;"	f	file:
hrtimer_init	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init);$/;"	v
hrtimer_init	time/hrtimer.c	/^void hrtimer_init(struct hrtimer *timer, clockid_t clock_id,$/;"	f
hrtimer_init_on_stack	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init_on_stack);$/;"	v
hrtimer_init_on_stack	time/hrtimer.c	/^void hrtimer_init_on_stack(struct hrtimer *timer, clockid_t clock_id,$/;"	f
hrtimer_init_sleeper	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init_sleeper);$/;"	v
hrtimer_init_sleeper	time/hrtimer.c	/^void hrtimer_init_sleeper(struct hrtimer_sleeper *sl, struct task_struct *task)$/;"	f
hrtimer_interrupt	time/hrtimer.c	/^void hrtimer_interrupt(struct clock_event_device *dev)$/;"	f
hrtimer_is_hres_enabled	time/hrtimer.c	/^static inline int hrtimer_is_hres_enabled(void) { return 0; }$/;"	f	file:
hrtimer_is_hres_enabled	time/hrtimer.c	/^static inline int hrtimer_is_hres_enabled(void)$/;"	f	file:
hrtimer_nanosleep	time/hrtimer.c	/^long hrtimer_nanosleep(const struct timespec64 *rqtp,$/;"	f
hrtimer_nanosleep_restart	time/hrtimer.c	/^static long __sched hrtimer_nanosleep_restart(struct restart_block *restart)$/;"	f	file:
hrtimer_next_event_without	time/hrtimer.c	/^u64 hrtimer_next_event_without(const struct hrtimer *exclude)$/;"	f
hrtimer_reprogram	time/hrtimer.c	/^static void hrtimer_reprogram(struct hrtimer *timer, bool reprogram)$/;"	f	file:
hrtimer_resolution	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_resolution);$/;"	v
hrtimer_run_queues	time/hrtimer.c	/^void hrtimer_run_queues(void)$/;"	f
hrtimer_run_softirq	time/hrtimer.c	/^static __latent_entropy void hrtimer_run_softirq(struct softirq_action *h)$/;"	f	file:
hrtimer_start_range_ns	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_start_range_ns);$/;"	v
hrtimer_start_range_ns	time/hrtimer.c	/^void hrtimer_start_range_ns(struct hrtimer *timer, ktime_t tim,$/;"	f
hrtimer_switch_to_hres	time/hrtimer.c	/^static inline void hrtimer_switch_to_hres(void) { }$/;"	f	file:
hrtimer_switch_to_hres	time/hrtimer.c	/^static void hrtimer_switch_to_hres(void)$/;"	f	file:
hrtimer_try_to_cancel	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_try_to_cancel);$/;"	v
hrtimer_try_to_cancel	time/hrtimer.c	/^int hrtimer_try_to_cancel(struct hrtimer *timer)$/;"	f
hrtimer_update_base	time/hrtimer.c	/^static inline ktime_t hrtimer_update_base(struct hrtimer_cpu_base *base)$/;"	f	file:
hrtimer_update_lowres	time/hrtimer.c	/^static inline ktime_t hrtimer_update_lowres(struct hrtimer *timer, ktime_t tim,$/;"	f	file:
hrtimer_update_softirq_timer	time/hrtimer.c	/^hrtimer_update_softirq_timer(struct hrtimer_cpu_base *cpu_base, bool reprogram)$/;"	f	file:
hrtimer_wakeup	time/hrtimer.c	/^static enum hrtimer_restart hrtimer_wakeup(struct hrtimer *timer)$/;"	f	file:
hrtimers_dead_cpu	time/hrtimer.c	/^int hrtimers_dead_cpu(unsigned int scpu)$/;"	f
hrtimers_init	time/hrtimer.c	/^void __init hrtimers_init(void)$/;"	f
hrtimers_prepare_cpu	time/hrtimer.c	/^int hrtimers_prepare_cpu(unsigned int cpu)$/;"	f
hrtimers_resume	time/hrtimer.c	/^void hrtimers_resume(void)$/;"	f
ht	smpboot.c	/^	struct smp_hotplug_thread	*ht;$/;"	m	struct:smpboot_thread_data	typeref:struct:smpboot_thread_data::smp_hotplug_thread	file:
htab	bpf/hashtab.c	/^				struct bpf_htab *htab;$/;"	m	union:htab_elem::__anon70::__anon71::__anon72	typeref:struct:htab_elem::__anon70::__anon71::__anon72::bpf_htab	file:
htab_elem	bpf/hashtab.c	/^struct htab_elem {$/;"	s	file:
htab_elem_free	bpf/hashtab.c	/^static void htab_elem_free(struct bpf_htab *htab, struct htab_elem *l)$/;"	f	file:
htab_elem_free_rcu	bpf/hashtab.c	/^static void htab_elem_free_rcu(struct rcu_head *head)$/;"	f	file:
htab_elem_get_ptr	bpf/hashtab.c	/^static inline void __percpu *htab_elem_get_ptr(struct htab_elem *l, u32 key_size)$/;"	f	file:
htab_elem_set_ptr	bpf/hashtab.c	/^static inline void htab_elem_set_ptr(struct htab_elem *l, u32 key_size,$/;"	f	file:
htab_free_elems	bpf/hashtab.c	/^static void htab_free_elems(struct bpf_htab *htab)$/;"	f	file:
htab_is_lru	bpf/hashtab.c	/^static bool htab_is_lru(const struct bpf_htab *htab)$/;"	f	file:
htab_is_percpu	bpf/hashtab.c	/^static bool htab_is_percpu(const struct bpf_htab *htab)$/;"	f	file:
htab_is_prealloc	bpf/hashtab.c	/^static bool htab_is_prealloc(const struct bpf_htab *htab)$/;"	f	file:
htab_lru_map_delete_elem	bpf/hashtab.c	/^static int htab_lru_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_lru_map_delete_node	bpf/hashtab.c	/^static bool htab_lru_map_delete_node(void *arg, struct bpf_lru_node *node)$/;"	f	file:
htab_lru_map_gen_lookup	bpf/hashtab.c	/^static u32 htab_lru_map_gen_lookup(struct bpf_map *map,$/;"	f	file:
htab_lru_map_lookup_elem	bpf/hashtab.c	/^static void *htab_lru_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_lru_map_lookup_elem_sys	bpf/hashtab.c	/^static void *htab_lru_map_lookup_elem_sys(struct bpf_map *map, void *key)$/;"	f	file:
htab_lru_map_ops	bpf/hashtab.c	/^const struct bpf_map_ops htab_lru_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
htab_lru_map_update_elem	bpf/hashtab.c	/^static int htab_lru_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
htab_lru_percpu_map_lookup_elem	bpf/hashtab.c	/^static void *htab_lru_percpu_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_lru_percpu_map_ops	bpf/hashtab.c	/^const struct bpf_map_ops htab_lru_percpu_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
htab_lru_percpu_map_update_elem	bpf/hashtab.c	/^static int htab_lru_percpu_map_update_elem(struct bpf_map *map, void *key,$/;"	f	file:
htab_map_alloc	bpf/hashtab.c	/^static struct bpf_map *htab_map_alloc(union bpf_attr *attr)$/;"	f	file:
htab_map_alloc_check	bpf/hashtab.c	/^static int htab_map_alloc_check(union bpf_attr *attr)$/;"	f	file:
htab_map_delete_elem	bpf/hashtab.c	/^static int htab_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_map_free	bpf/hashtab.c	/^static void htab_map_free(struct bpf_map *map)$/;"	f	file:
htab_map_gen_lookup	bpf/hashtab.c	/^static u32 htab_map_gen_lookup(struct bpf_map *map, struct bpf_insn *insn_buf)$/;"	f	file:
htab_map_get_next_key	bpf/hashtab.c	/^static int htab_map_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f	file:
htab_map_hash	bpf/hashtab.c	/^static inline u32 htab_map_hash(const void *key, u32 key_len, u32 hashrnd)$/;"	f	file:
htab_map_lookup_elem	bpf/hashtab.c	/^static void *htab_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_map_ops	bpf/hashtab.c	/^const struct bpf_map_ops htab_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
htab_map_seq_show_elem	bpf/hashtab.c	/^static void htab_map_seq_show_elem(struct bpf_map *map, void *key,$/;"	f	file:
htab_map_update_elem	bpf/hashtab.c	/^static int htab_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
htab_of_map_alloc	bpf/hashtab.c	/^static struct bpf_map *htab_of_map_alloc(union bpf_attr *attr)$/;"	f	file:
htab_of_map_free	bpf/hashtab.c	/^static void htab_of_map_free(struct bpf_map *map)$/;"	f	file:
htab_of_map_gen_lookup	bpf/hashtab.c	/^static u32 htab_of_map_gen_lookup(struct bpf_map *map,$/;"	f	file:
htab_of_map_lookup_elem	bpf/hashtab.c	/^static void *htab_of_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_of_maps_map_ops	bpf/hashtab.c	/^const struct bpf_map_ops htab_of_maps_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
htab_percpu_map_lookup_elem	bpf/hashtab.c	/^static void *htab_percpu_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
htab_percpu_map_ops	bpf/hashtab.c	/^const struct bpf_map_ops htab_percpu_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
htab_percpu_map_seq_show_elem	bpf/hashtab.c	/^static void htab_percpu_map_seq_show_elem(struct bpf_map *map, void *key,$/;"	f	file:
htab_percpu_map_update_elem	bpf/hashtab.c	/^static int htab_percpu_map_update_elem(struct bpf_map *map, void *key,$/;"	f	file:
hung_detector_suspended	hung_task.c	/^static bool hung_detector_suspended;$/;"	v	file:
hung_task_call_panic	hung_task.c	/^static bool hung_task_call_panic;$/;"	v	file:
hung_task_init	hung_task.c	/^static int __init hung_task_init(void)$/;"	f	file:
hung_task_init	hung_task.c	/^subsys_initcall(hung_task_init);$/;"	v
hung_task_panic	hung_task.c	/^hung_task_panic(struct notifier_block *this, unsigned long event, void *ptr)$/;"	f	file:
hung_task_panic_setup	hung_task.c	/^static int __init hung_task_panic_setup(char *str)$/;"	f	file:
hung_task_show_lock	hung_task.c	/^static bool hung_task_show_lock;$/;"	v	file:
hung_task_timeout_max	sysctl.c	/^static unsigned long hung_task_timeout_max = (LONG_MAX\/HZ);$/;"	v	file:
hung_timeout_jiffies	hung_task.c	/^static long hung_timeout_jiffies(unsigned long last_checked,$/;"	f	file:
hungtask_pm_notify	hung_task.c	/^static int hungtask_pm_notify(struct notifier_block *self,$/;"	f	file:
hw_breakpoint_add	events/hw_breakpoint.c	/^static int hw_breakpoint_add(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_copy_attr	events/hw_breakpoint.c	/^static void hw_breakpoint_copy_attr(struct perf_event_attr *to,$/;"	f	file:
hw_breakpoint_del	events/hw_breakpoint.c	/^static void hw_breakpoint_del(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_event_init	events/hw_breakpoint.c	/^static int hw_breakpoint_event_init(struct perf_event *bp)$/;"	f	file:
hw_breakpoint_exceptions_nb	events/hw_breakpoint.c	/^static struct notifier_block hw_breakpoint_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
hw_breakpoint_parse	events/hw_breakpoint.c	/^static int hw_breakpoint_parse(struct perf_event *bp,$/;"	f	file:
hw_breakpoint_start	events/hw_breakpoint.c	/^static void hw_breakpoint_start(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_stop	events/hw_breakpoint.c	/^static void hw_breakpoint_stop(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_weight	events/hw_breakpoint.c	/^__weak int hw_breakpoint_weight(struct perf_event *bp)$/;"	f
hwirq	irq/irqdesc.c	/^IRQ_ATTR_RO(hwirq);$/;"	v
hwirq_show	irq/irqdesc.c	/^static ssize_t hwirq_show(struct kobject *kobj,$/;"	f	file:
hwlat_busy	trace/trace_hwlat.c	/^static bool hwlat_busy;$/;"	v	file:
hwlat_data	trace/trace_hwlat.c	/^static struct hwlat_data {$/;"	s	file:
hwlat_data	trace/trace_hwlat.c	/^} hwlat_data = {$/;"	v	typeref:struct:hwlat_data	file:
hwlat_kthread	trace/trace_hwlat.c	/^static struct task_struct *hwlat_kthread;$/;"	v	typeref:struct:task_struct	file:
hwlat_read	trace/trace_hwlat.c	/^static ssize_t hwlat_read(struct file *filp, char __user *ubuf,$/;"	f	file:
hwlat_sample	trace/trace_hwlat.c	/^struct hwlat_sample {$/;"	s	file:
hwlat_sample_width	trace/trace_hwlat.c	/^static struct dentry *hwlat_sample_width;	\/* sample width us *\/$/;"	v	typeref:struct:dentry	file:
hwlat_sample_window	trace/trace_hwlat.c	/^static struct dentry *hwlat_sample_window;	\/* sample window us *\/$/;"	v	typeref:struct:dentry	file:
hwlat_trace	trace/trace_hwlat.c	/^static struct trace_array	*hwlat_trace;$/;"	v	typeref:struct:trace_array	file:
hwlat_tracer_init	trace/trace_hwlat.c	/^static int hwlat_tracer_init(struct trace_array *tr)$/;"	f	file:
hwlat_tracer_reset	trace/trace_hwlat.c	/^static void hwlat_tracer_reset(struct trace_array *tr)$/;"	f	file:
hwlat_tracer_start	trace/trace_hwlat.c	/^static void hwlat_tracer_start(struct trace_array *tr)$/;"	f	file:
hwlat_tracer_stop	trace/trace_hwlat.c	/^static void hwlat_tracer_stop(struct trace_array *tr)$/;"	f	file:
hwlat_width_write	trace/trace_hwlat.c	/^hwlat_width_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
hwlat_window_write	trace/trace_hwlat.c	/^hwlat_window_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ia64_set_curr_task	sched/core.c	/^void ia64_set_curr_task(int cpu, struct task_struct *p)$/;"	f
id	bpf/btf.c	/^	u32 id;$/;"	m	struct:btf	file:
id	events/core.c	/^		u32				id;$/;"	m	struct:perf_bpf_event::__anon7	file:
id	livepatch/shadow.c	/^	unsigned long id;$/;"	m	struct:klp_shadow	file:
id	sched/autogroup.h	/^	unsigned long		id;$/;"	m	struct:autogroup
id	sched/sched.h	/^	int			id;$/;"	m	struct:sched_group_capacity
id	seccomp.c	/^	u64 id;$/;"	m	struct:seccomp_knotif	file:
id	user_namespace.c	/^	u32 id; \/* id to find *\/$/;"	m	struct:idmap_key	file:
id	workqueue.c	/^	int			id;		\/* I: pool ID *\/$/;"	m	struct:worker_pool	file:
id	workqueue_internal.h	/^	int			id;		\/* I: worker id *\/$/;"	m	struct:worker
id_type	module_signing.c	/^	u8	id_type;	\/* Key identifier type [PKEY_ID_PKCS7] *\/$/;"	m	struct:module_signature	file:
ident	gcov/clang.c	/^	u32 ident;$/;"	m	struct:gcov_fn_info	file:
ident	gcov/gcc_3_4.c	/^	unsigned int ident;$/;"	m	struct:gcov_fn_info	file:
ident	gcov/gcc_4_7.c	/^	unsigned int ident;$/;"	m	struct:gcov_fn_info	file:
idle	sched/fair.c	/^	enum cpu_idle_type	idle;$/;"	m	struct:lb_env	typeref:enum:lb_env::cpu_idle_type	file:
idle	sched/sched.h	/^	struct task_struct	*idle;$/;"	m	struct:rq	typeref:struct:rq::task_struct
idle	sched/sched.h	/^	u8			idle;$/;"	m	struct:cfs_bandwidth
idle_active	time/tick-sched.h	/^	unsigned int			idle_active	: 1;$/;"	m	struct:tick_sched
idle_balance	sched/fair.c	/^static inline int idle_balance(struct rq *rq, struct rq_flags *rf)$/;"	f	file:
idle_balance	sched/fair.c	/^static int idle_balance(struct rq *this_rq, struct rq_flags *rf)$/;"	f	file:
idle_balance	sched/sched.h	/^	unsigned char		idle_balance;$/;"	m	struct:rq
idle_calls	time/tick-sched.h	/^	unsigned long			idle_calls;$/;"	m	struct:tick_sched
idle_cpu	sched/core.c	/^int idle_cpu(int cpu)$/;"	f
idle_cpus	sched/fair.c	/^	unsigned int idle_cpus;$/;"	m	struct:sg_lb_stats	file:
idle_cpus_mask	sched/fair.c	/^	cpumask_var_t idle_cpus_mask;$/;"	m	struct:__anon87	file:
idle_entrytime	time/tick-sched.h	/^	ktime_t				idle_entrytime;$/;"	m	struct:tick_sched
idle_exittime	time/tick-sched.h	/^	ktime_t				idle_exittime;$/;"	m	struct:tick_sched
idle_expires	time/tick-sched.h	/^	ktime_t				idle_expires;$/;"	m	struct:tick_sched
idle_get_state	sched/sched.h	/^static inline struct cpuidle_state *idle_get_state(struct rq *rq)$/;"	f
idle_init	smpboot.c	/^static inline void idle_init(unsigned int cpu)$/;"	f	file:
idle_inject_timer_fn	sched/idle.c	/^static enum hrtimer_restart idle_inject_timer_fn(struct hrtimer *timer)$/;"	f	file:
idle_jiffies	time/tick-sched.h	/^	unsigned long			idle_jiffies;$/;"	m	struct:tick_sched
idle_list	workqueue.c	/^	struct list_head	idle_list;	\/* X: list of idle workers *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::list_head	file:
idle_policy	sched/sched.h	/^static inline int idle_policy(int policy)$/;"	f
idle_sched_class	sched/idle.c	/^const struct sched_class idle_sched_class = {$/;"	v	typeref:struct:sched_class
idle_set_state	sched/sched.h	/^static inline void idle_set_state(struct rq *rq,$/;"	f
idle_sleeps	time/tick-sched.h	/^	unsigned long			idle_sleeps;$/;"	m	struct:tick_sched
idle_sleeptime	time/tick-sched.h	/^	ktime_t				idle_sleeptime;$/;"	m	struct:tick_sched
idle_stamp	sched/sched.h	/^	u64			idle_stamp;$/;"	m	struct:rq
idle_state	sched/sched.h	/^	struct cpuidle_state	*idle_state;$/;"	m	struct:rq	typeref:struct:rq::cpuidle_state
idle_task	sched/core.c	/^struct task_struct *idle_task(int cpu)$/;"	f
idle_task_exit	sched/core.c	/^void idle_task_exit(void)$/;"	f
idle_thread_get	smpboot.c	/^struct task_struct *idle_thread_get(unsigned int cpu)$/;"	f
idle_thread_get	smpboot.h	/^static inline struct task_struct *idle_thread_get(unsigned int cpu) { return NULL; }$/;"	f
idle_thread_set_boot_cpu	smpboot.c	/^void __init idle_thread_set_boot_cpu(void)$/;"	f
idle_thread_set_boot_cpu	smpboot.h	/^static inline void idle_thread_set_boot_cpu(void) { }$/;"	f
idle_threads_init	smpboot.c	/^void __init idle_threads_init(void)$/;"	f
idle_threads_init	smpboot.h	/^static inline void idle_threads_init(void) { }$/;"	f
idle_timer	sched/idle.c	/^struct idle_timer {$/;"	s	file:
idle_timer	workqueue.c	/^	struct timer_list	idle_timer;	\/* L: worker idle timeout *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::timer_list	file:
idle_waketime	time/tick-sched.h	/^	ktime_t				idle_waketime;$/;"	m	struct:tick_sched
idle_worker_timeout	workqueue.c	/^static void idle_worker_timeout(struct timer_list *t)$/;"	f	file:
idmap_key	user_namespace.c	/^struct idmap_key {$/;"	s	file:
idpair	bpf/verifier.c	/^struct idpair {$/;"	s	file:
idx	printk/printk.c	/^	u32 idx;$/;"	m	struct:devkmsg_user	file:
idx	sched/cpudeadline.h	/^	int			idx;$/;"	m	struct:cpudl_item
idx	trace/ftrace.c	/^	int				idx;   \/* for hash table iteration *\/$/;"	m	struct:ftrace_graph_data	file:
idx	trace/ftrace.c	/^	int				idx;$/;"	m	struct:ftrace_iterator	file:
idx	trace/trace.h	/^	unsigned	idx;$/;"	m	struct:trace_parser
idx	trace/trace_events_hist.c	/^	unsigned int			idx;$/;"	m	struct:hist_var	file:
if_tokens	events/core.c	/^static const match_table_t if_tokens = {$/;"	v	file:
ignore	trace/trace_functions_graph.c	/^	int		ignore;$/;"	m	struct:fgraph_cpu_data	file:
ignore_console_lock_warning	printk/printk.c	/^EXPORT_SYMBOL(ignore_console_lock_warning);$/;"	v
ignore_dl_rate_limit	sched/cpufreq_schedutil.c	/^static inline void ignore_dl_rate_limit(struct sugov_cpu *sg_cpu, struct sugov_policy *sg_policy)$/;"	f	file:
ignore_loglevel	printk/printk.c	/^static bool __read_mostly ignore_loglevel;$/;"	v	file:
ignore_loglevel_setup	printk/printk.c	/^static int __init ignore_loglevel_setup(char *str)$/;"	f	file:
ignore_pid	trace/trace.h	/^	bool			ignore_pid;$/;"	m	struct:trace_array_cpu
ignore_private	futex.c	/^	bool ignore_private;$/;"	m	struct:__anon92	file:
ignore_signals	signal.c	/^void ignore_signals(struct task_struct *t)$/;"	f
ignore_task_cpu	trace/ftrace.c	/^static void ignore_task_cpu(void *data)$/;"	f	file:
ignore_task_cpu	trace/trace_events.c	/^static void ignore_task_cpu(void *data)$/;"	f	file:
ignoring_children	ptrace.c	/^static int ignoring_children(struct sighand_struct *sigh)$/;"	f	file:
ikconfig_cleanup	configs.c	/^module_exit(ikconfig_cleanup);$/;"	v
ikconfig_cleanup	configs.c	/^static void __exit ikconfig_cleanup(void)$/;"	f	file:
ikconfig_file_ops	configs.c	/^static const struct file_operations ikconfig_file_ops = {$/;"	v	typeref:struct:file_operations	file:
ikconfig_init	configs.c	/^module_init(ikconfig_init);$/;"	v
ikconfig_init	configs.c	/^static int __init ikconfig_init(void)$/;"	f	file:
ikconfig_read_current	configs.c	/^ikconfig_read_current(struct file *file, char __user *buf,$/;"	f	file:
ikheaders_cleanup	kheaders.c	/^module_exit(ikheaders_cleanup);$/;"	v
ikheaders_cleanup	kheaders.c	/^static void __exit ikheaders_cleanup(void)$/;"	f	file:
ikheaders_init	kheaders.c	/^module_init(ikheaders_init);$/;"	v
ikheaders_init	kheaders.c	/^static int __init ikheaders_init(void)$/;"	f	file:
ikheaders_read	kheaders.c	/^ikheaders_read(struct file *file,  struct kobject *kobj,$/;"	f	file:
image	power/swap.c	/^	sector_t image;$/;"	m	struct:swsusp_header	file:
image_pages	power/power.h	/^	unsigned long		image_pages;$/;"	m	struct:swsusp_info
image_size	power/hibernate.c	/^power_attr(image_size);$/;"	v
image_size	power/snapshot.c	/^unsigned long image_size;$/;"	v
image_size_show	power/hibernate.c	/^static ssize_t image_size_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
image_size_store	power/hibernate.c	/^static ssize_t image_size_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
imbalance	sched/fair.c	/^	long			imbalance;$/;"	m	struct:lb_env	file:
imbalance	sched/sched.h	/^	int			imbalance;		\/* XXX unrelated to capacity but shared group state *\/$/;"	m	struct:sched_group_capacity
imbalance_pct	sched/fair.c	/^	int imbalance_pct;$/;"	m	struct:task_numa_env	file:
immediate	trace/trace_probe.h	/^		unsigned long immediate;$/;"	m	union:fetch_insn::__anon21
in_any_class_list	locking/lockdep.c	/^static bool in_any_class_list(struct list_head *e)$/;"	f	file:
in_any_zapped_class_list	locking/lockdep.c	/^static bool in_any_zapped_class_list(struct lock_class *class)$/;"	f	file:
in_egroup_p	groups.c	/^EXPORT_SYMBOL(in_egroup_p);$/;"	v
in_egroup_p	groups.c	/^int in_egroup_p(kgid_t grp)$/;"	f
in_group_p	groups.c	/^EXPORT_SYMBOL(in_group_p);$/;"	v
in_group_p	groups.c	/^int in_group_p(kgid_t grp)$/;"	f
in_list	locking/lockdep.c	/^static bool in_list(struct list_head *e, struct list_head *h)$/;"	f	file:
in_lock_functions	locking/spinlock.c	/^EXPORT_SYMBOL(in_lock_functions);$/;"	v
in_lock_functions	locking/spinlock.c	/^notrace int in_lock_functions(unsigned long addr)$/;"	f
in_ns	trace/trace.c	/^	int in_ns;		\/* is this clock in nanoseconds? *\/$/;"	m	struct:__anon40	file:
in_rseq_cs	rseq.c	/^static bool in_rseq_cs(unsigned long ip, struct rseq_cs *rseq_cs)$/;"	f	file:
in_sched_functions	sched/core.c	/^int in_sched_functions(unsigned long addr)$/;"	f
in_syscall	audit.h	/^	int		    in_syscall;	\/* 1 if task is in a syscall *\/$/;"	m	struct:audit_context
in_userns	user_namespace.c	/^bool in_userns(const struct user_namespace *ancestor,$/;"	f
inactive_task_timer	sched/deadline.c	/^static enum hrtimer_restart inactive_task_timer(struct hrtimer *timer)$/;"	f	file:
inc_cgroup_namespaces	cgroup/namespace.c	/^static struct ucounts *inc_cgroup_namespaces(struct user_namespace *ns)$/;"	f	file:
inc_chains	locking/lockdep.c	/^static inline void inc_chains(void)$/;"	f	file:
inc_chains	locking/lockdep.c	/^static void inc_chains(void)$/;"	f	file:
inc_dl_deadline	sched/deadline.c	/^static inline void inc_dl_deadline(struct dl_rq *dl_rq, u64 deadline) {}$/;"	f	file:
inc_dl_deadline	sched/deadline.c	/^static void inc_dl_deadline(struct dl_rq *dl_rq, u64 deadline)$/;"	f	file:
inc_dl_migration	sched/deadline.c	/^static void inc_dl_migration(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
inc_dl_migration	sched/deadline.c	/^void inc_dl_migration(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
inc_dl_tasks	sched/deadline.c	/^void inc_dl_tasks(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
inc_pid_namespaces	pid_namespace.c	/^static struct ucounts *inc_pid_namespaces(struct user_namespace *ns)$/;"	f	file:
inc_rt_group	sched/rt.c	/^inc_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_migration	sched/rt.c	/^static void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_migration	sched/rt.c	/^void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_prio	sched/rt.c	/^inc_rt_prio(struct rt_rq *rt_rq, int prio)$/;"	f	file:
inc_rt_prio	sched/rt.c	/^static inline void inc_rt_prio(struct rt_rq *rt_rq, int prio) {}$/;"	f	file:
inc_rt_prio_smp	sched/rt.c	/^inc_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio)$/;"	f	file:
inc_rt_prio_smp	sched/rt.c	/^void inc_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio) {}$/;"	f	file:
inc_rt_tasks	sched/rt.c	/^void inc_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_ucount	ucount.c	/^struct ucounts *inc_ucount(struct user_namespace *ns, kuid_t uid,$/;"	f
inc_user_namespaces	user_namespace.c	/^static struct ucounts *inc_user_namespaces(struct user_namespace *ns, kuid_t uid)$/;"	f	file:
inc_uts_namespaces	utsname.c	/^static struct ucounts *inc_uts_namespaces(struct user_namespace *ns)$/;"	f	file:
increment_wakelocks_number	power/wakelock.c	/^static inline void increment_wakelocks_number(void) {}$/;"	f	file:
increment_wakelocks_number	power/wakelock.c	/^static inline void increment_wakelocks_number(void)$/;"	f	file:
index	audit_tree.c	/^		unsigned index;		\/* index; upper bit indicates 'will prune' *\/$/;"	m	struct:audit_chunk::node	file:
index	locking/lockdep.c	/^	int			index;$/;"	m	struct:delayed_free	file:
index	module-internal.h	/^	} index;$/;"	m	struct:load_info	typeref:struct:load_info::__anon15
index	printk/console_cmdline.h	/^	int	index;				\/* Minor dev. to use	    *\/$/;"	m	struct:console_cmdline
index	trace/ftrace.c	/^	int			index;$/;"	m	struct:ftrace_page	file:
index	trace/ftrace.c	/^	int			index;$/;"	m	struct:ftrace_rec_iter	file:
index	trace/ftrace.c	/^	unsigned long			index;$/;"	m	struct:ftrace_profile_page	file:
index	trace/trace_probe.h	/^	int		index;$/;"	m	struct:trace_probe_log
inflight	rcu/rcutorture.c	/^	int inflight;$/;"	m	struct:rcu_boost_inflight	file:
info	bpf/offload.c	/^	struct bpf_map_info *info;$/;"	m	struct:ns_get_path_bpf_map_args	typeref:struct:ns_get_path_bpf_map_args::bpf_map_info	file:
info	bpf/offload.c	/^	struct bpf_prog_info *info;$/;"	m	struct:ns_get_path_bpf_prog_args	typeref:struct:ns_get_path_bpf_prog_args::bpf_prog_info	file:
info	events/core.c	/^	void			*info;$/;"	m	struct:remote_function_call	file:
info	gcov/clang.c	/^	struct gcov_info *info;$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::gcov_info	file:
info	gcov/gcc_3_4.c	/^	struct gcov_info *info;$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::gcov_info	file:
info	gcov/gcc_4_7.c	/^	struct gcov_info *info;$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::gcov_info	file:
info	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
info	trace/trace.c	/^	struct err_info		info;$/;"	m	struct:tracing_log_err	typeref:struct:tracing_log_err::err_info	file:
inherit_event	events/core.c	/^inherit_event(struct perf_event *parent_event,$/;"	f	file:
inherit_group	events/core.c	/^static int inherit_group(struct perf_event *parent_event,$/;"	f	file:
inherit_task_group	events/core.c	/^inherit_task_group(struct perf_event *event, struct task_struct *parent,$/;"	f	file:
inheritable	audit.h	/^	kernel_cap_t		inheritable;$/;"	m	struct:audit_cap_data
inidle	time/tick-sched.h	/^	unsigned int			inidle		: 1;$/;"	m	struct:tick_sched
init	locking/locktorture.c	/^	void (*init)(void);$/;"	m	struct:lock_torture_ops	file:
init	rcu/rcuperf.c	/^	void (*init)(void);$/;"	m	struct:rcu_perf_ops	file:
init	rcu/rcutorture.c	/^	void (*init)(void);$/;"	m	struct:rcu_torture_ops	file:
init	trace/trace.h	/^	int			(*init)(struct event_trigger_ops *ops,$/;"	m	struct:event_trigger_ops
init	trace/trace.h	/^	int			(*init)(struct ftrace_probe_ops *ops,$/;"	m	struct:ftrace_probe_ops
init	trace/trace.h	/^	int			(*init)(struct trace_array *tr);$/;"	m	struct:tracer
init_aggr_kprobe	kprobes.c	/^static void init_aggr_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
init_and_link_css	cgroup/cgroup.c	/^static void init_and_link_css(struct cgroup_subsys_state *css,$/;"	f	file:
init_annotated_branch_stats	trace/trace_branch.c	/^__init static int init_annotated_branch_stats(void)$/;"	f	file:
init_annotated_branch_stats	trace/trace_branch.c	/^fs_initcall(init_annotated_branch_stats);$/;"	v
init_blk_tracer	trace/blktrace.c	/^device_initcall(init_blk_tracer);$/;"	v
init_blk_tracer	trace/blktrace.c	/^static int __init init_blk_tracer(void)$/;"	f	file:
init_branch_tracer	trace/trace_branch.c	/^__init static int init_branch_tracer(void)$/;"	f	file:
init_branch_tracer	trace/trace_branch.c	/^core_initcall(init_branch_tracer);$/;"	v
init_cfs_bandwidth	sched/fair.c	/^void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b) {}$/;"	f
init_cfs_bandwidth	sched/fair.c	/^void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f
init_cfs_rq	sched/fair.c	/^void init_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f
init_cfs_rq_runtime	sched/fair.c	/^static void init_cfs_rq_runtime(struct cfs_rq *cfs_rq) {}$/;"	f	file:
init_cfs_rq_runtime	sched/fair.c	/^static void init_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
init_cgroup_housekeeping	cgroup/cgroup.c	/^static void init_cgroup_housekeeping(struct cgroup *cgrp)$/;"	f	file:
init_cgroup_ns	cgroup/cgroup.c	/^struct cgroup_namespace init_cgroup_ns = {$/;"	v	typeref:struct:cgroup_namespace
init_cgroup_root	cgroup/cgroup.c	/^void init_cgroup_root(struct cgroup_fs_context *ctx)$/;"	f
init_clocksource_sysfs	time/clocksource.c	/^device_initcall(init_clocksource_sysfs);$/;"	v
init_clocksource_sysfs	time/clocksource.c	/^static int __init init_clocksource_sysfs(void)$/;"	f	file:
init_cpu_online	cpu.c	/^void init_cpu_online(const struct cpumask *src)$/;"	f
init_cpu_possible	cpu.c	/^void init_cpu_possible(const struct cpumask *src)$/;"	f
init_cpu_present	cpu.c	/^void init_cpu_present(const struct cpumask *src)$/;"	f
init_cred	cred.c	/^struct cred init_cred = {$/;"	v	typeref:struct:cred
init_css_set	cgroup/cgroup.c	/^struct css_set init_css_set = {$/;"	v	typeref:struct:css_set
init_data_structures_once	locking/lockdep.c	/^static void init_data_structures_once(void)$/;"	f	file:
init_defrootdomain	sched/topology.c	/^void init_defrootdomain(void)$/;"	f
init_dl_bandwidth	sched/deadline.c	/^void init_dl_bandwidth(struct dl_bandwidth *dl_b, u64 period, u64 runtime)$/;"	f
init_dl_bw	sched/deadline.c	/^void init_dl_bw(struct dl_bw *dl_b)$/;"	f
init_dl_inactive_task_timer	sched/deadline.c	/^void init_dl_inactive_task_timer(struct sched_dl_entity *dl_se)$/;"	f
init_dl_rq	sched/deadline.c	/^void init_dl_rq(struct dl_rq *dl_rq)$/;"	f
init_dl_rq_bw_ratio	sched/deadline.c	/^void init_dl_rq_bw_ratio(struct dl_rq *dl_rq)$/;"	f
init_dl_task_timer	sched/deadline.c	/^void init_dl_task_timer(struct sched_dl_entity *dl_se)$/;"	f
init_dynamic_event	trace/trace_dynevent.c	/^fs_initcall(init_dynamic_event);$/;"	v
init_dynamic_event	trace/trace_dynevent.c	/^static __init int init_dynamic_event(void)$/;"	f	file:
init_entity_runnable_average	sched/fair.c	/^void init_entity_runnable_average(struct sched_entity *se)$/;"	f
init_event_group	events/core.c	/^static void init_event_group(struct perf_event *event)$/;"	f	file:
init_events	trace/trace_output.c	/^__init static int init_events(void)$/;"	f	file:
init_events	trace/trace_output.c	/^early_initcall(init_events);$/;"	v
init_explored_state	bpf/verifier.c	/^static void init_explored_state(struct bpf_verifier_env *env, int idx)$/;"	f	file:
init_free_list	module.c	/^static struct llist_head init_free_list;$/;"	v	typeref:struct:llist_head	file:
init_free_wq	module.c	/^static struct work_struct init_free_wq;$/;"	v	typeref:struct:work_struct	file:
init_ftrace_syscalls	trace/trace.h	/^static inline void init_ftrace_syscalls(void) { }$/;"	f
init_ftrace_syscalls	trace/trace_syscalls.c	/^void __init init_ftrace_syscalls(void)$/;"	f
init_func_cmd_traceon	trace/trace_functions.c	/^static inline int init_func_cmd_traceon(void)$/;"	f	file:
init_func_cmd_traceon	trace/trace_functions.c	/^static int __init init_func_cmd_traceon(void)$/;"	f	file:
init_func_state	bpf/verifier.c	/^static void init_func_state(struct bpf_verifier_env *env,$/;"	f	file:
init_function_trace	trace/trace.h	/^static inline int init_function_trace(void) { return 0; }$/;"	f
init_function_trace	trace/trace_functions.c	/^__init int init_function_trace(void)$/;"	f
init_graph_trace	trace/trace_functions_graph.c	/^core_initcall(init_graph_trace);$/;"	v
init_graph_trace	trace/trace_functions_graph.c	/^static __init int init_graph_trace(void)$/;"	f	file:
init_graph_tracefs	trace/trace_functions_graph.c	/^fs_initcall(init_graph_tracefs);$/;"	v
init_graph_tracefs	trace/trace_functions_graph.c	/^static __init int init_graph_tracefs(void)$/;"	f	file:
init_groups	cred.c	/^struct group_info init_groups = { .usage = ATOMIC_INIT(2) };$/;"	v	typeref:struct:group_info
init_header	power/snapshot.c	/^static int init_header(struct swsusp_info *info)$/;"	f	file:
init_header_complete	power/power.h	/^static inline int init_header_complete(struct swsusp_info *info)$/;"	f
init_header_complete	power/snapshot.c	/^static int init_header_complete(struct swsusp_info *info)$/;"	f	file:
init_hw_breakpoint	events/hw_breakpoint.c	/^int __init init_hw_breakpoint(void)$/;"	f
init_hwlat_tracer	trace/trace_hwlat.c	/^__init static int init_hwlat_tracer(void)$/;"	f	file:
init_hwlat_tracer	trace/trace_hwlat.c	/^late_initcall(init_hwlat_tracer);$/;"	v
init_idle	sched/core.c	/^void init_idle(struct task_struct *idle, int cpu)$/;"	f
init_idle_pids	fork.c	/^static inline void init_idle_pids(struct task_struct *idle)$/;"	f	file:
init_irq_default_affinity	irq/irqdesc.c	/^static void __init init_irq_default_affinity(void)$/;"	f	file:
init_irq_proc	irq/proc.c	/^void init_irq_proc(void)$/;"	f
init_irqsoff_tracer	trace/trace_irqsoff.c	/^__init static int init_irqsoff_tracer(void)$/;"	f	file:
init_irqsoff_tracer	trace/trace_irqsoff.c	/^core_initcall(init_irqsoff_tracer);$/;"	v
init_jiffies_clocksource	time/jiffies.c	/^core_initcall(init_jiffies_clocksource);$/;"	v
init_jiffies_clocksource	time/jiffies.c	/^static int __init init_jiffies_clocksource(void)$/;"	f	file:
init_kernel_text	extable.c	/^int init_kernel_text(unsigned long addr)$/;"	f
init_kprobe_trace	trace/trace_kprobe.c	/^fs_initcall(init_kprobe_trace);$/;"	v
init_kprobe_trace	trace/trace_kprobe.c	/^static __init int init_kprobe_trace(void)$/;"	f	file:
init_kprobes	kprobes.c	/^static int __init init_kprobes(void)$/;"	f	file:
init_kprobes	kprobes.c	/^subsys_initcall(init_kprobes);$/;"	v
init_listener	seccomp.c	/^static struct file *init_listener(struct seccomp_filter *filter)$/;"	f	file:
init_lockevent_counts	locking/lock_events.c	/^fs_initcall(init_lockevent_counts);$/;"	v
init_lockevent_counts	locking/lock_events.c	/^static int __init init_lockevent_counts(void)$/;"	f	file:
init_lstats_procfs	latencytop.c	/^device_initcall(init_lstats_procfs);$/;"	v
init_lstats_procfs	latencytop.c	/^static int __init init_lstats_procfs(void)$/;"	f	file:
init_mmio_trace	trace/trace_mmiotrace.c	/^__init static int init_mmio_trace(void)$/;"	f	file:
init_mmio_trace	trace/trace_mmiotrace.c	/^device_initcall(init_mmio_trace);$/;"	v
init_module	sys_ni.c	/^COND_SYSCALL(init_module);$/;"	v
init_nocb_callback_list	rcu/tree_plugin.h	/^static bool init_nocb_callback_list(struct rcu_data *rdp)$/;"	f
init_node	gcov/fs.c	/^static void init_node(struct gcov_node *node, struct gcov_info *info,$/;"	f	file:
init_nsproxy	nsproxy.c	/^struct nsproxy init_nsproxy = {$/;"	v	typeref:struct:nsproxy
init_numa_balancing	sched/fair.c	/^void init_numa_balancing(unsigned long clone_flags, struct task_struct *p)$/;"	f
init_numa_balancing	sched/sched.h	/^init_numa_balancing(unsigned long clone_flags, struct task_struct *p)$/;"	f
init_numa_topology_type	sched/topology.c	/^static void init_numa_topology_type(void)$/;"	f	file:
init_oops_id	panic.c	/^late_initcall(init_oops_id);$/;"	v
init_oops_id	panic.c	/^static int init_oops_id(void)$/;"	f	file:
init_overlap_sched_group	sched/topology.c	/^static void init_overlap_sched_group(struct sched_domain *sd,$/;"	f	file:
init_param_lock	module.c	/^static void init_param_lock(struct module *mod)$/;"	f	file:
init_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(init_pid_ns);$/;"	v
init_pid_ns	pid.c	/^struct pid_namespace init_pid_ns = {$/;"	v	typeref:struct:pid_namespace
init_posix_timers	time/posix-timers.c	/^__initcall(init_posix_timers);$/;"	v
init_posix_timers	time/posix-timers.c	/^static __init int init_posix_timers(void)$/;"	f	file:
init_pwq	workqueue.c	/^static void init_pwq(struct pool_workqueue *pwq, struct workqueue_struct *wq,$/;"	f	file:
init_rcu_head	rcu/update.c	/^EXPORT_SYMBOL_GPL(init_rcu_head);$/;"	v
init_rcu_head	rcu/update.c	/^void init_rcu_head(struct rcu_head *head)$/;"	f
init_rcu_head_on_stack	rcu/update.c	/^EXPORT_SYMBOL_GPL(init_rcu_head_on_stack);$/;"	v
init_rcu_head_on_stack	rcu/update.c	/^void init_rcu_head_on_stack(struct rcu_head *head)$/;"	f
init_reg_state	bpf/verifier.c	/^static void init_reg_state(struct bpf_verifier_env *env,$/;"	f	file:
init_rescuer	workqueue.c	/^static int init_rescuer(struct workqueue_struct *wq)$/;"	f	file:
init_rootdomain	sched/topology.c	/^static int init_rootdomain(struct root_domain *rd)$/;"	f	file:
init_rt_bandwidth	sched/rt.c	/^void init_rt_bandwidth(struct rt_bandwidth *rt_b, u64 period, u64 runtime)$/;"	f
init_rt_rq	sched/rt.c	/^void init_rt_rq(struct rt_rq *rt_rq)$/;"	f
init_sched_debug_procfs	sched/debug.c	/^__initcall(init_sched_debug_procfs);$/;"	v
init_sched_debug_procfs	sched/debug.c	/^static int __init init_sched_debug_procfs(void)$/;"	f	file:
init_sched_dl_class	sched/deadline.c	/^void __init init_sched_dl_class(void)$/;"	f
init_sched_fair_class	sched/fair.c	/^__init void init_sched_fair_class(void)$/;"	f
init_sched_groups_capacity	sched/topology.c	/^static void init_sched_groups_capacity(int cpu, struct sched_domain *sd)$/;"	f	file:
init_sched_rt_class	sched/rt.c	/^void __init init_sched_rt_class(void)$/;"	f
init_schedstats	sched/core.c	/^static inline void init_schedstats(void) {}$/;"	f	file:
init_schedstats	sched/core.c	/^static void __init init_schedstats(void)$/;"	f	file:
init_sd_lb_stats	sched/fair.c	/^static inline void init_sd_lb_stats(struct sd_lb_stats *sds)$/;"	f	file:
init_srcu_module_notifier	rcu/srcutree.c	/^late_initcall(init_srcu_module_notifier);$/;"	v
init_srcu_module_notifier	rcu/srcutree.c	/^static __init int init_srcu_module_notifier(void)$/;"	f	file:
init_srcu_struct	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(init_srcu_struct);$/;"	v
init_srcu_struct	rcu/srcutiny.c	/^int init_srcu_struct(struct srcu_struct *ssp)$/;"	f
init_srcu_struct	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(init_srcu_struct);$/;"	v
init_srcu_struct	rcu/srcutree.c	/^int init_srcu_struct(struct srcu_struct *ssp)$/;"	f
init_srcu_struct_fields	rcu/srcutiny.c	/^static int init_srcu_struct_fields(struct srcu_struct *ssp)$/;"	f	file:
init_srcu_struct_fields	rcu/srcutree.c	/^static int init_srcu_struct_fields(struct srcu_struct *ssp, bool is_static)$/;"	f	file:
init_srcu_struct_nodes	rcu/srcutree.c	/^static void init_srcu_struct_nodes(struct srcu_struct *ssp, bool is_static)$/;"	f	file:
init_stat_file	trace/trace_stat.c	/^static int init_stat_file(struct stat_session *session)$/;"	f	file:
init_struct_pid	pid.c	/^struct pid init_struct_pid = {$/;"	v	typeref:struct:pid
init_syscall_trace	trace/trace_syscalls.c	/^static int __init init_syscall_trace(struct trace_event_call *call)$/;"	f	file:
init_task_pid	fork.c	/^init_task_pid(struct task_struct *task, enum pid_type type, struct pid *pid)$/;"	f	file:
init_task_pid_links	fork.c	/^static inline void init_task_pid_links(struct task_struct *task)$/;"	f	file:
init_test_probes	test_kprobes.c	/^int init_test_probes(void)$/;"	f
init_tg_cfs_entry	sched/fair.c	/^void init_tg_cfs_entry(struct task_group *tg, struct cfs_rq *cfs_rq,$/;"	f
init_tg_rt_entry	sched/rt.c	/^void init_tg_rt_entry(struct task_group *tg, struct rt_rq *rt_rq,$/;"	f
init_time	trace/trace_hwlat.c	137;"	d	file:
init_timer_cpu	time/timer.c	/^static void __init init_timer_cpu(int cpu)$/;"	f	file:
init_timer_cpus	time/timer.c	/^static void __init init_timer_cpus(void)$/;"	f	file:
init_timer_key	time/timer.c	/^EXPORT_SYMBOL(init_timer_key);$/;"	v
init_timer_key	time/timer.c	/^void init_timer_key(struct timer_list *timer,$/;"	f
init_timer_list_procfs	time/timer_list.c	/^__initcall(init_timer_list_procfs);$/;"	v
init_timer_list_procfs	time/timer_list.c	/^static int __init init_timer_list_procfs(void)$/;"	f	file:
init_timer_on_stack_key	time/timer.c	/^EXPORT_SYMBOL_GPL(init_timer_on_stack_key);$/;"	v
init_timer_on_stack_key	time/timer.c	/^void init_timer_on_stack_key(struct timer_list *timer,$/;"	f
init_timers	time/timer.c	/^void __init init_timers(void)$/;"	f
init_trace_event_call	trace/trace_kprobe.c	/^static inline void init_trace_event_call(struct trace_kprobe *tk)$/;"	f	file:
init_trace_event_call	trace/trace_uprobe.c	/^static inline void init_trace_event_call(struct trace_uprobe *tu)$/;"	f	file:
init_trace_flags_index	trace/trace.c	/^static void init_trace_flags_index(struct trace_array *tr)$/;"	f	file:
init_trace_printk	trace/trace_printk.c	/^early_initcall(init_trace_printk);$/;"	v
init_trace_printk	trace/trace_printk.c	/^static __init int init_trace_printk(void)$/;"	f	file:
init_trace_printk_function_export	trace/trace_printk.c	/^fs_initcall(init_trace_printk_function_export);$/;"	v
init_trace_printk_function_export	trace/trace_printk.c	/^static __init int init_trace_printk_function_export(void)$/;"	f	file:
init_trace_selftests	trace/trace.c	/^core_initcall(init_trace_selftests);$/;"	v
init_trace_selftests	trace/trace.c	/^static __init int init_trace_selftests(void)$/;"	f	file:
init_trace_uprobe_filter	trace/trace_uprobe.c	/^static inline void init_trace_uprobe_filter(struct trace_uprobe_filter *filter)$/;"	f	file:
init_tracefs	trace/trace_hwlat.c	/^static int init_tracefs(void)$/;"	f	file:
init_tracepoints	tracepoint.c	/^__initcall(init_tracepoints);$/;"	v
init_tracepoints	tracepoint.c	/^static __init int init_tracepoints(void)$/;"	f	file:
init_tracer_tracefs	trace/trace.c	/^init_tracer_tracefs(struct trace_array *tr, struct dentry *d_tracer)$/;"	f	file:
init_triggers	sched/psi.c	/^static void init_triggers(struct psi_group *group, u64 now)$/;"	f	file:
init_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	m	struct:load_info
init_uclamp	sched/core.c	/^static inline void init_uclamp(void) { }$/;"	f	file:
init_uclamp	sched/core.c	/^static void __init init_uclamp(void)$/;"	f	file:
init_uprobe_trace	trace/trace_uprobe.c	/^fs_initcall(init_uprobe_trace);$/;"	v
init_uprobe_trace	trace/trace_uprobe.c	/^static __init int init_uprobe_trace(void)$/;"	f	file:
init_user_ns	user.c	/^EXPORT_SYMBOL_GPL(init_user_ns);$/;"	v
init_user_ns	user.c	/^struct user_namespace init_user_ns = {$/;"	v	typeref:struct:user_namespace
init_var_ref	trace/trace_events_hist.c	/^static int init_var_ref(struct hist_field *ref_field,$/;"	f	file:
init_wait_entry	sched/wait.c	/^EXPORT_SYMBOL(init_wait_entry);$/;"	v
init_wait_entry	sched/wait.c	/^void init_wait_entry(struct wait_queue_entry *wq_entry, int flags)$/;"	f
init_wait_var_entry	sched/wait_bit.c	/^EXPORT_SYMBOL(init_wait_var_entry);$/;"	v
init_wait_var_entry	sched/wait_bit.c	/^void init_wait_var_entry(struct wait_bit_queue_entry *wbq_entry, void *var, int flags)$/;"	f
init_wakeup_tracer	trace/trace_sched_wakeup.c	/^__init static int init_wakeup_tracer(void)$/;"	f	file:
init_wakeup_tracer	trace/trace_sched_wakeup.c	/^core_initcall(init_wakeup_tracer);$/;"	v
init_worker_pool	workqueue.c	/^static int init_worker_pool(struct worker_pool *pool)$/;"	f	file:
initialized	irq/matrix.c	/^	bool			initialized;$/;"	m	struct:cpumap	file:
ino	audit.h	/^	unsigned long		ino;$/;"	m	struct:audit_names
ino	audit_fsnotify.c	/^	unsigned long ino;	\/* associated inode number *\/$/;"	m	struct:audit_fsnotify_mark	file:
ino	audit_watch.c	/^	unsigned long		ino;	\/* associated inode number *\/$/;"	m	struct:audit_watch	file:
ino	events/core.c	/^	u64			ino;$/;"	m	struct:perf_mmap_event	file:
ino_generation	events/core.c	/^	u64			ino_generation;$/;"	m	struct:perf_mmap_event	file:
inode	events/uprobes.c	/^	struct inode		*inode;		\/* Also hold a ref to inode *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::inode	file:
inode	trace/trace_uprobe.c	/^	struct inode			*inode;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::inode	file:
inode_to_key	audit_tree.c	/^static unsigned long inode_to_key(const struct inode *inode)$/;"	f	file:
inotify_add_watch	sys_ni.c	/^COND_SYSCALL(inotify_add_watch);$/;"	v
inotify_init	sys_ni.c	/^COND_SYSCALL(inotify_init);$/;"	v
inotify_init1	sys_ni.c	/^COND_SYSCALL(inotify_init1);$/;"	v
inotify_rm_watch	sys_ni.c	/^COND_SYSCALL(inotify_rm_watch);$/;"	v
insert_extent	user_namespace.c	/^static int insert_extent(struct uid_gid_map *map, struct uid_gid_extent *extent)$/;"	f	file:
insert_hash	audit_tree.c	/^static void insert_hash(struct audit_chunk *chunk)$/;"	f	file:
insert_resource	resource.c	/^EXPORT_SYMBOL_GPL(insert_resource);$/;"	v
insert_resource	resource.c	/^int insert_resource(struct resource *parent, struct resource *new)$/;"	f
insert_resource_conflict	resource.c	/^struct resource *insert_resource_conflict(struct resource *parent, struct resource *new)$/;"	f
insert_resource_expand_to_fit	resource.c	/^void insert_resource_expand_to_fit(struct resource *root, struct resource *new)$/;"	f
insert_stat	trace/trace_stat.c	/^static int insert_stat(struct rb_root *root, void *stat, cmp_stat_t cmp)$/;"	f	file:
insert_uprobe	events/uprobes.c	/^static struct uprobe *insert_uprobe(struct uprobe *uprobe)$/;"	f	file:
insert_work	workqueue.c	/^static void insert_work(struct pool_workqueue *pwq, struct work_struct *work,$/;"	f	file:
insert_wq_barrier	workqueue.c	/^static void insert_wq_barrier(struct pool_workqueue *pwq,$/;"	f	file:
inside_selftest	locking/lockdep.c	/^static bool inside_selftest(void)$/;"	f	file:
insn_has_def32	bpf/verifier.c	/^static bool insn_has_def32(struct bpf_verifier_env *env, struct bpf_insn *insn)$/;"	f	file:
insn_idx	bpf/verifier.c	/^	int insn_idx;$/;"	m	struct:bpf_verifier_stack_elem	file:
insn_is_cond_jump	bpf/verifier.c	/^static bool insn_is_cond_jump(u8 code)$/;"	f	file:
insn_no_def	bpf/verifier.c	/^static bool insn_no_def(struct bpf_insn *insn)$/;"	f	file:
insns	kprobes.c	/^	kprobe_opcode_t *insns;		\/* Page of instruction slots *\/$/;"	m	struct:kprobe_insn_page	file:
install_breakpoint	events/uprobes.c	/^install_breakpoint(struct uprobe *uprobe, struct mm_struct *mm,$/;"	f	file:
instance_mkdir	trace/trace.c	/^static int instance_mkdir(const char *name)$/;"	f	file:
instance_rmdir	trace/trace.c	/^static int instance_rmdir(const char *name)$/;"	f	file:
int_ops	bpf/btf.c	/^static const struct btf_kind_operations int_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
int_ptr_type_to_size	bpf/verifier.c	/^static int int_ptr_type_to_size(enum bpf_arg_type type)$/;"	f	file:
int_to_threadref	debug/gdbstub.c	/^static void int_to_threadref(unsigned char *id, int value)$/;"	f	file:
internal_add_timer	time/timer.c	/^internal_add_timer(struct timer_base *base, struct timer_list *timer)$/;"	f	file:
internal_trace_puts	trace/trace.h	1898;"	d
interpreters	bpf/core.c	/^static unsigned int (*interpreters[])(const void *ctx,$/;"	v	file:
interpreters_args	bpf/core.c	/^static u64 (*interpreters_args[])(u64 r1, u64 r2, u64 r3, u64 r4, u64 r5,$/;"	v	file:
intervals	irq/timings.c	/^	u64 *intervals;$/;"	m	struct:timings_intervals	file:
invert_dir_mask	locking/lockdep.c	/^static unsigned long invert_dir_mask(unsigned long mask)$/;"	f	file:
invoke_padata_reorder	padata.c	/^static void invoke_padata_reorder(struct work_struct *work)$/;"	f	file:
invoke_rcu_core	rcu/tree.c	/^static void invoke_rcu_core(void)$/;"	f	file:
invoke_rcu_core_kthread	rcu/tree.c	/^static void invoke_rcu_core_kthread(void)$/;"	f	file:
invoke_softirq	softirq.c	/^static inline void invoke_softirq(void)$/;"	f	file:
io_cancel	sys_ni.c	/^COND_SYSCALL(io_cancel);$/;"	v
io_destroy	sys_ni.c	/^COND_SYSCALL(io_destroy);$/;"	v
io_getevents	sys_ni.c	/^COND_SYSCALL(io_getevents);$/;"	v
io_getevents_time32	sys_ni.c	/^COND_SYSCALL(io_getevents_time32);$/;"	v
io_pgetevents	sys_ni.c	/^COND_SYSCALL(io_pgetevents);$/;"	v
io_pgetevents	sys_ni.c	/^COND_SYSCALL_COMPAT(io_pgetevents);$/;"	v
io_pgetevents_time32	sys_ni.c	/^COND_SYSCALL(io_pgetevents_time32);$/;"	v
io_pgetevents_time32	sys_ni.c	/^COND_SYSCALL_COMPAT(io_pgetevents_time32);$/;"	v
io_schedule	sched/core.c	/^EXPORT_SYMBOL(io_schedule);$/;"	v
io_schedule	sched/core.c	/^void __sched io_schedule(void)$/;"	f
io_schedule_finish	sched/core.c	/^void io_schedule_finish(int token)$/;"	f
io_schedule_prepare	sched/core.c	/^int io_schedule_prepare(void)$/;"	f
io_schedule_timeout	sched/core.c	/^EXPORT_SYMBOL(io_schedule_timeout);$/;"	v
io_schedule_timeout	sched/core.c	/^long __sched io_schedule_timeout(long timeout)$/;"	f
io_setup	sys_ni.c	/^COND_SYSCALL(io_setup);$/;"	v
io_setup	sys_ni.c	/^COND_SYSCALL_COMPAT(io_setup);$/;"	v
io_submit	sys_ni.c	/^COND_SYSCALL(io_submit);$/;"	v
io_submit	sys_ni.c	/^COND_SYSCALL_COMPAT(io_submit);$/;"	v
io_tlb_end	dma/swiotlb.c	/^phys_addr_t io_tlb_start, io_tlb_end;$/;"	v
io_tlb_index	dma/swiotlb.c	/^static unsigned int io_tlb_index;$/;"	v	file:
io_tlb_list	dma/swiotlb.c	/^static unsigned int *io_tlb_list;$/;"	v	file:
io_tlb_nslabs	dma/swiotlb.c	/^static unsigned long io_tlb_nslabs;$/;"	v	file:
io_tlb_orig_addr	dma/swiotlb.c	/^static phys_addr_t *io_tlb_orig_addr;$/;"	v	file:
io_tlb_start	dma/swiotlb.c	/^phys_addr_t io_tlb_start, io_tlb_end;$/;"	v
io_tlb_used	dma/swiotlb.c	/^static unsigned long io_tlb_used;$/;"	v	file:
io_uring_enter	sys_ni.c	/^COND_SYSCALL(io_uring_enter);$/;"	v
io_uring_register	sys_ni.c	/^COND_SYSCALL(io_uring_register);$/;"	v
io_uring_setup	sys_ni.c	/^COND_SYSCALL(io_uring_setup);$/;"	v
iomem_is_exclusive	resource.c	/^bool iomem_is_exclusive(u64 addr)$/;"	f
iomem_map_sanity_check	resource.c	/^int iomem_map_sanity_check(resource_size_t addr, unsigned long size)$/;"	f
iomem_resource	resource.c	/^EXPORT_SYMBOL(iomem_resource);$/;"	v
iomem_resource	resource.c	/^struct resource iomem_resource = {$/;"	v	typeref:struct:resource
ioport_resource	resource.c	/^EXPORT_SYMBOL(ioport_resource);$/;"	v
ioport_resource	resource.c	/^struct resource ioport_resource = {$/;"	v	typeref:struct:resource
ioprio_get	sys_ni.c	/^COND_SYSCALL(ioprio_get);$/;"	v
ioprio_set	sys_ni.c	/^COND_SYSCALL(ioprio_set);$/;"	v
ioremap_cache	iomem.c	/^__weak void __iomem *ioremap_cache(resource_size_t offset, unsigned long size)$/;"	f
ioresources_init	resource.c	/^__initcall(ioresources_init);$/;"	v
ioresources_init	resource.c	/^static int __init ioresources_init(void)$/;"	f	file:
iowait_boost	sched/cpufreq_schedutil.c	/^	unsigned int		iowait_boost;$/;"	m	struct:sugov_cpu	file:
iowait_boost_pending	sched/cpufreq_schedutil.c	/^	bool			iowait_boost_pending;$/;"	m	struct:sugov_cpu	file:
iowait_sleeptime	time/tick-sched.h	/^	ktime_t				iowait_sleeptime;$/;"	m	struct:tick_sched
ip	locking/rtmutex_common.h	/^	unsigned long		ip;$/;"	m	struct:rt_mutex_waiter
ip	trace/ftrace.c	/^	unsigned long			ip;$/;"	m	struct:ftrace_profile	file:
ip	trace/ftrace.c	/^	unsigned long		ip;$/;"	m	struct:ftrace_mod_func	file:
ip	trace/ftrace.c	/^	unsigned long ip;$/;"	m	struct:ftrace_func_entry	file:
ip	trace/ftrace.c	/^	unsigned long ip;$/;"	m	struct:ftrace_init_func	file:
ip	trace/trace.h	/^	unsigned long		ip;$/;"	m	struct:kprobe_trace_entry_head
ipc	audit.h	/^		} ipc;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon55
ipc	sys_ni.c	/^COND_SYSCALL(ipc);$/;"	v
ipc	sys_ni.c	/^COND_SYSCALL_COMPAT(ipc);$/;"	v
ipi_get_hwirq	irq/ipi.c	/^EXPORT_SYMBOL_GPL(ipi_get_hwirq);$/;"	v
ipi_get_hwirq	irq/ipi.c	/^irq_hw_number_t ipi_get_hwirq(unsigned int irq, unsigned int cpu)$/;"	f
ipi_mb	sched/membarrier.c	/^static void ipi_mb(void *info)$/;"	f	file:
ipi_send_mask	irq/ipi.c	/^EXPORT_SYMBOL_GPL(ipi_send_mask);$/;"	v
ipi_send_mask	irq/ipi.c	/^int ipi_send_mask(unsigned int virq, const struct cpumask *dest)$/;"	f
ipi_send_single	irq/ipi.c	/^EXPORT_SYMBOL_GPL(ipi_send_single);$/;"	v
ipi_send_single	irq/ipi.c	/^int ipi_send_single(unsigned int virq, unsigned int cpu)$/;"	f
ipi_send_verify	irq/ipi.c	/^static int ipi_send_verify(struct irq_chip *chip, struct irq_data *data,$/;"	f	file:
irq	irq/devres.c	/^	unsigned int irq;$/;"	m	struct:irq_devres	file:
irq	irq/irqdesc.c	/^ATTRIBUTE_GROUPS(irq);$/;"	v
irq_activate	irq/chip.c	/^int irq_activate(struct irq_desc *desc)$/;"	f
irq_activate_and_startup	irq/chip.c	/^int irq_activate_and_startup(struct irq_desc *desc, bool resend)$/;"	f
irq_add_debugfs_entry	irq/debugfs.c	/^void irq_add_debugfs_entry(unsigned int irq, struct irq_desc *desc)$/;"	f
irq_add_debugfs_entry	irq/internals.h	/^static inline void irq_add_debugfs_entry(unsigned int irq, struct irq_desc *d)$/;"	f
irq_affinity_hint_proc_show	irq/proc.c	/^static int irq_affinity_hint_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_list_proc_fops	irq/proc.c	/^static const struct file_operations irq_affinity_list_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_affinity_list_proc_open	irq/proc.c	/^static int irq_affinity_list_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_affinity_list_proc_show	irq/proc.c	/^static int irq_affinity_list_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_list_proc_write	irq/proc.c	/^static ssize_t irq_affinity_list_proc_write(struct file *file,$/;"	f	file:
irq_affinity_notify	irq/manage.c	/^static void irq_affinity_notify(struct work_struct *work)$/;"	f	file:
irq_affinity_online_cpu	irq/cpuhotplug.c	/^int irq_affinity_online_cpu(unsigned int cpu)$/;"	f
irq_affinity_proc_fops	irq/proc.c	/^static const struct file_operations irq_affinity_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_affinity_proc_open	irq/proc.c	/^static int irq_affinity_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_affinity_proc_show	irq/proc.c	/^static int irq_affinity_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_proc_write	irq/proc.c	/^static ssize_t irq_affinity_proc_write(struct file *file,$/;"	f	file:
irq_affinity_setup	irq/irqdesc.c	/^static int __init irq_affinity_setup(char *str)$/;"	f	file:
irq_alloc_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_alloc_generic_chip);$/;"	v
irq_alloc_generic_chip	irq/generic-chip.c	/^irq_alloc_generic_chip(const char *name, int num_ct, unsigned int irq_base,$/;"	f
irq_alloc_hwirqs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(irq_alloc_hwirqs);$/;"	v
irq_alloc_hwirqs	irq/irqdesc.c	/^unsigned int irq_alloc_hwirqs(int cnt, int node)$/;"	f
irq_alloc_matrix	irq/matrix.c	/^__init struct irq_matrix *irq_alloc_matrix(unsigned int matrix_bits,$/;"	f
irq_attrs	irq/irqdesc.c	/^static struct attribute *irq_attrs[] = {$/;"	v	typeref:struct:attribute	file:
irq_bit_descr	irq/debugfs.c	/^struct irq_bit_descr {$/;"	s	file:
irq_build_affinity_masks	irq/affinity.c	/^static int irq_build_affinity_masks(unsigned int startvec, unsigned int numvecs,$/;"	f	file:
irq_calc_affinity_vectors	irq/affinity.c	/^unsigned int irq_calc_affinity_vectors(unsigned int minvec, unsigned int maxvec,$/;"	f
irq_can_move_pcntxt	irq/internals.h	/^static inline bool irq_can_move_pcntxt(struct irq_data *data)$/;"	f
irq_can_set_affinity	irq/manage.c	/^int irq_can_set_affinity(unsigned int irq)$/;"	f
irq_can_set_affinity_usr	irq/manage.c	/^bool irq_can_set_affinity_usr(unsigned int irq)$/;"	f
irq_capable	rcu/rcutorture.c	/^	int irq_capable;$/;"	m	struct:rcu_torture_ops	file:
irq_check_poll	irq/chip.c	/^static bool irq_check_poll(struct irq_desc *desc)$/;"	f	file:
irq_chip_ack_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_ack_parent);$/;"	v
irq_chip_ack_parent	irq/chip.c	/^void irq_chip_ack_parent(struct irq_data *data)$/;"	f
irq_chip_compose_msi_msg	irq/chip.c	/^int irq_chip_compose_msi_msg(struct irq_data *data, struct msi_msg *msg)$/;"	f
irq_chip_disable_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_disable_parent);$/;"	v
irq_chip_disable_parent	irq/chip.c	/^void irq_chip_disable_parent(struct irq_data *data)$/;"	f
irq_chip_enable_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_enable_parent);$/;"	v
irq_chip_enable_parent	irq/chip.c	/^void irq_chip_enable_parent(struct irq_data *data)$/;"	f
irq_chip_eoi_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_eoi_parent);$/;"	v
irq_chip_eoi_parent	irq/chip.c	/^void irq_chip_eoi_parent(struct irq_data *data)$/;"	f
irq_chip_mask_ack_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_mask_ack_parent);$/;"	v
irq_chip_mask_ack_parent	irq/chip.c	/^void irq_chip_mask_ack_parent(struct irq_data *data)$/;"	f
irq_chip_mask_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_mask_parent);$/;"	v
irq_chip_mask_parent	irq/chip.c	/^void irq_chip_mask_parent(struct irq_data *data)$/;"	f
irq_chip_pm_get	irq/chip.c	/^int irq_chip_pm_get(struct irq_data *data)$/;"	f
irq_chip_pm_put	irq/chip.c	/^int irq_chip_pm_put(struct irq_data *data)$/;"	f
irq_chip_release_resources_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_release_resources_parent);$/;"	v
irq_chip_release_resources_parent	irq/chip.c	/^void irq_chip_release_resources_parent(struct irq_data *data)$/;"	f
irq_chip_request_resources_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_request_resources_parent);$/;"	v
irq_chip_request_resources_parent	irq/chip.c	/^int irq_chip_request_resources_parent(struct irq_data *data)$/;"	f
irq_chip_retrigger_hierarchy	irq/chip.c	/^int irq_chip_retrigger_hierarchy(struct irq_data *data)$/;"	f
irq_chip_set_affinity_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_set_affinity_parent);$/;"	v
irq_chip_set_affinity_parent	irq/chip.c	/^int irq_chip_set_affinity_parent(struct irq_data *data,$/;"	f
irq_chip_set_type_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_set_type_parent);$/;"	v
irq_chip_set_type_parent	irq/chip.c	/^int irq_chip_set_type_parent(struct irq_data *data, unsigned int type)$/;"	f
irq_chip_set_vcpu_affinity_parent	irq/chip.c	/^int irq_chip_set_vcpu_affinity_parent(struct irq_data *data, void *vcpu_info)$/;"	f
irq_chip_set_wake_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_set_wake_parent);$/;"	v
irq_chip_set_wake_parent	irq/chip.c	/^int irq_chip_set_wake_parent(struct irq_data *data, unsigned int on)$/;"	f
irq_chip_unmask_parent	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_chip_unmask_parent);$/;"	v
irq_chip_unmask_parent	irq/chip.c	/^void irq_chip_unmask_parent(struct irq_data *data)$/;"	f
irq_chip_write_msi_msg	irq/msi.c	/^static inline void irq_chip_write_msi_msg(struct irq_data *data,$/;"	f	file:
irq_copy_pending	irq/internals.h	/^irq_copy_pending(struct irq_desc *desc, const struct cpumask *mask)$/;"	f
irq_cpu_offline	irq/chip.c	/^void irq_cpu_offline(void)$/;"	f
irq_cpu_online	irq/chip.c	/^void irq_cpu_online(void)$/;"	f
irq_create_affinity_masks	irq/affinity.c	/^irq_create_affinity_masks(unsigned int nvecs, struct irq_affinity *affd)$/;"	f
irq_create_direct_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_direct_mapping);$/;"	v
irq_create_direct_mapping	irq/irqdomain.c	/^unsigned int irq_create_direct_mapping(struct irq_domain *domain)$/;"	f
irq_create_fwspec_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_fwspec_mapping);$/;"	v
irq_create_fwspec_mapping	irq/irqdomain.c	/^unsigned int irq_create_fwspec_mapping(struct irq_fwspec *fwspec)$/;"	f
irq_create_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_mapping);$/;"	v
irq_create_mapping	irq/irqdomain.c	/^unsigned int irq_create_mapping(struct irq_domain *domain,$/;"	f
irq_create_of_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_of_mapping);$/;"	v
irq_create_of_mapping	irq/irqdomain.c	/^unsigned int irq_create_of_mapping(struct of_phandle_args *irq_data)$/;"	f
irq_create_strict_mappings	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_strict_mappings);$/;"	v
irq_create_strict_mappings	irq/irqdomain.c	/^int irq_create_strict_mappings(struct irq_domain *domain, unsigned int irq_base,$/;"	f
irq_debug_open	irq/debugfs.c	/^static int irq_debug_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_debug_show	irq/debugfs.c	/^static int irq_debug_show(struct seq_file *m, void *p)$/;"	f	file:
irq_debug_show_bits	irq/debugfs.c	/^static void irq_debug_show_bits(struct seq_file *m, int ind, unsigned int state,$/;"	f	file:
irq_debug_show_chip	irq/debugfs.c	/^irq_debug_show_chip(struct seq_file *m, struct irq_data *data, int ind)$/;"	f	file:
irq_debug_show_data	irq/debugfs.c	/^irq_debug_show_data(struct seq_file *m, struct irq_data *data, int ind)$/;"	f	file:
irq_debug_show_masks	irq/debugfs.c	/^static void irq_debug_show_masks(struct seq_file *m, struct irq_desc *desc) { }$/;"	f	file:
irq_debug_show_masks	irq/debugfs.c	/^static void irq_debug_show_masks(struct seq_file *m, struct irq_desc *desc)$/;"	f	file:
irq_debug_write	irq/debugfs.c	/^static ssize_t irq_debug_write(struct file *file, const char __user *user_buf,$/;"	f	file:
irq_debugfs_copy_devname	irq/debugfs.c	/^void irq_debugfs_copy_devname(int irq, struct device *dev)$/;"	f
irq_debugfs_copy_devname	irq/internals.h	/^static inline void irq_debugfs_copy_devname(int irq, struct device *dev)$/;"	f
irq_debugfs_init	irq/debugfs.c	/^__initcall(irq_debugfs_init);$/;"	v
irq_debugfs_init	irq/debugfs.c	/^static int __init irq_debugfs_init(void)$/;"	f	file:
irq_default_affinity	irq/manage.c	/^cpumask_var_t irq_default_affinity;$/;"	v
irq_default_domain	irq/irqdomain.c	/^static struct irq_domain *irq_default_domain;$/;"	v	typeref:struct:irq_domain	file:
irq_default_primary_handler	irq/manage.c	/^static irqreturn_t irq_default_primary_handler(int irq, void *dev_id)$/;"	f	file:
irq_depth	debug/debug_core.h	/^	int			irq_depth;$/;"	m	struct:debuggerinfo_struct
irq_desc_devres	irq/devres.c	/^struct irq_desc_devres {$/;"	s	file:
irq_desc_get_node	irq/internals.h	/^static inline int irq_desc_get_node(struct irq_desc *desc)$/;"	f
irq_desc_get_pending_mask	irq/internals.h	/^static inline struct cpumask *irq_desc_get_pending_mask(struct irq_desc *desc)$/;"	f
irq_desc_is_chained	irq/internals.h	/^static inline int irq_desc_is_chained(struct irq_desc *desc)$/;"	f
irq_desc_lock_class	irq/irqdesc.c	/^static struct lock_class_key irq_desc_lock_class;$/;"	v	typeref:struct:lock_class_key	file:
irq_destroy_ipi	irq/ipi.c	/^int irq_destroy_ipi(unsigned int irq, const struct cpumask *dest)$/;"	f
irq_devres	irq/devres.c	/^struct irq_devres {$/;"	s	file:
irq_dir	irq/debugfs.c	/^static struct dentry *irq_dir;$/;"	v	typeref:struct:dentry	file:
irq_disable	irq/chip.c	/^void irq_disable(struct irq_desc *desc)$/;"	f
irq_dispose_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_dispose_mapping);$/;"	v
irq_dispose_mapping	irq/irqdomain.c	/^void irq_dispose_mapping(unsigned int virq)$/;"	f
irq_do_set_affinity	irq/manage.c	/^int irq_do_set_affinity(struct irq_data *data, const struct cpumask *mask,$/;"	f
irq_domain_activate_irq	irq/internals.h	/^static inline int irq_domain_activate_irq(struct irq_data *data, bool reserve)$/;"	f
irq_domain_activate_irq	irq/irqdomain.c	/^int irq_domain_activate_irq(struct irq_data *irq_data, bool reserve)$/;"	f
irq_domain_add_legacy	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_legacy);$/;"	v
irq_domain_add_legacy	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_legacy(struct device_node *of_node,$/;"	f
irq_domain_add_simple	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_simple);$/;"	v
irq_domain_add_simple	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_simple(struct device_node *of_node,$/;"	f
irq_domain_alloc_descs	irq/irqdomain.c	/^int irq_domain_alloc_descs(int virq, unsigned int cnt, irq_hw_number_t hwirq,$/;"	f
irq_domain_alloc_irq_data	irq/irqdomain.c	/^static int irq_domain_alloc_irq_data(struct irq_domain *domain,$/;"	f	file:
irq_domain_alloc_irqs_hierarchy	irq/irqdomain.c	/^int irq_domain_alloc_irqs_hierarchy(struct irq_domain *domain,$/;"	f
irq_domain_alloc_irqs_parent	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_alloc_irqs_parent);$/;"	v
irq_domain_alloc_irqs_parent	irq/irqdomain.c	/^int irq_domain_alloc_irqs_parent(struct irq_domain *domain,$/;"	f
irq_domain_associate	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_associate);$/;"	v
irq_domain_associate	irq/irqdomain.c	/^int irq_domain_associate(struct irq_domain *domain, unsigned int virq,$/;"	f
irq_domain_associate_many	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_associate_many);$/;"	v
irq_domain_associate_many	irq/irqdomain.c	/^void irq_domain_associate_many(struct irq_domain *domain, unsigned int irq_base,$/;"	f
irq_domain_check_hierarchy	irq/irqdomain.c	/^static void irq_domain_check_hierarchy(struct irq_domain *domain)$/;"	f	file:
irq_domain_check_msi_remap	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_check_msi_remap);$/;"	v
irq_domain_check_msi_remap	irq/irqdomain.c	/^bool irq_domain_check_msi_remap(void)$/;"	f
irq_domain_clear_mapping	irq/irqdomain.c	/^static void irq_domain_clear_mapping(struct irq_domain *domain,$/;"	f	file:
irq_domain_create_hierarchy	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_create_hierarchy);$/;"	v
irq_domain_create_hierarchy	irq/irqdomain.c	/^struct irq_domain *irq_domain_create_hierarchy(struct irq_domain *parent,$/;"	f
irq_domain_deactivate_irq	irq/internals.h	/^static inline void irq_domain_deactivate_irq(struct irq_data *data)$/;"	f
irq_domain_deactivate_irq	irq/irqdomain.c	/^void irq_domain_deactivate_irq(struct irq_data *irq_data)$/;"	f
irq_domain_debug	irq/irqdomain.c	/^DEFINE_SHOW_ATTRIBUTE(irq_domain_debug);$/;"	v
irq_domain_debug_show	irq/irqdomain.c	/^static int irq_domain_debug_show(struct seq_file *m, void *p)$/;"	f	file:
irq_domain_debug_show_one	irq/irqdomain.c	/^irq_domain_debug_show_one(struct seq_file *m, struct irq_domain *d, int ind)$/;"	f	file:
irq_domain_debugfs_init	irq/internals.h	/^static inline void irq_domain_debugfs_init(struct dentry *root)$/;"	f
irq_domain_debugfs_init	irq/irqdomain.c	/^void __init irq_domain_debugfs_init(struct dentry *root)$/;"	f
irq_domain_disassociate	irq/irqdomain.c	/^void irq_domain_disassociate(struct irq_domain *domain, unsigned int irq)$/;"	f
irq_domain_fix_revmap	irq/irqdomain.c	/^static void irq_domain_fix_revmap(struct irq_data *d)$/;"	f	file:
irq_domain_free_fwnode	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_free_fwnode);$/;"	v
irq_domain_free_fwnode	irq/irqdomain.c	/^void irq_domain_free_fwnode(struct fwnode_handle *fwnode)$/;"	f
irq_domain_free_irq_data	irq/irqdomain.c	/^static void irq_domain_free_irq_data(unsigned int virq, unsigned int nr_irqs)$/;"	f	file:
irq_domain_free_irqs	irq/irqdomain.c	/^void irq_domain_free_irqs(unsigned int virq, unsigned int nr_irqs)$/;"	f
irq_domain_free_irqs_common	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_free_irqs_common);$/;"	v
irq_domain_free_irqs_common	irq/irqdomain.c	/^void irq_domain_free_irqs_common(struct irq_domain *domain, unsigned int virq,$/;"	f
irq_domain_free_irqs_hierarchy	irq/irqdomain.c	/^static void irq_domain_free_irqs_hierarchy(struct irq_domain *domain,$/;"	f	file:
irq_domain_free_irqs_parent	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_free_irqs_parent);$/;"	v
irq_domain_free_irqs_parent	irq/irqdomain.c	/^void irq_domain_free_irqs_parent(struct irq_domain *domain,$/;"	f
irq_domain_free_irqs_top	irq/irqdomain.c	/^void irq_domain_free_irqs_top(struct irq_domain *domain, unsigned int virq,$/;"	f
irq_domain_get_irq_data	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_get_irq_data);$/;"	v
irq_domain_get_irq_data	irq/irqdomain.c	/^struct irq_data *irq_domain_get_irq_data(struct irq_domain *domain,$/;"	f
irq_domain_hierarchical_is_msi_remap	irq/irqdomain.c	/^bool irq_domain_hierarchical_is_msi_remap(struct irq_domain *domain)$/;"	f
irq_domain_insert_irq	irq/irqdomain.c	/^static void irq_domain_insert_irq(int virq)$/;"	f	file:
irq_domain_insert_irq_data	irq/irqdomain.c	/^static struct irq_data *irq_domain_insert_irq_data(struct irq_domain *domain,$/;"	f	file:
irq_domain_pop_irq	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_pop_irq);$/;"	v
irq_domain_pop_irq	irq/irqdomain.c	/^int irq_domain_pop_irq(struct irq_domain *domain, int virq)$/;"	f
irq_domain_push_irq	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_push_irq);$/;"	v
irq_domain_push_irq	irq/irqdomain.c	/^int irq_domain_push_irq(struct irq_domain *domain, int virq, void *arg)$/;"	f
irq_domain_remove	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_remove);$/;"	v
irq_domain_remove	irq/irqdomain.c	/^void irq_domain_remove(struct irq_domain *domain)$/;"	f
irq_domain_remove_irq	irq/irqdomain.c	/^static void irq_domain_remove_irq(int virq)$/;"	f	file:
irq_domain_reset_irq_data	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_reset_irq_data);$/;"	v
irq_domain_reset_irq_data	irq/irqdomain.c	/^void irq_domain_reset_irq_data(struct irq_data *irq_data)$/;"	f
irq_domain_set_hwirq_and_chip	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_set_hwirq_and_chip);$/;"	v
irq_domain_set_hwirq_and_chip	irq/irqdomain.c	/^int irq_domain_set_hwirq_and_chip(struct irq_domain *domain, unsigned int virq,$/;"	f
irq_domain_set_info	irq/irqdomain.c	/^EXPORT_SYMBOL(irq_domain_set_info);$/;"	v
irq_domain_set_info	irq/irqdomain.c	/^void irq_domain_set_info(struct irq_domain *domain, unsigned int virq,$/;"	f
irq_domain_set_mapping	irq/irqdomain.c	/^static void irq_domain_set_mapping(struct irq_domain *domain,$/;"	f	file:
irq_domain_simple_ops	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_simple_ops);$/;"	v
irq_domain_simple_ops	irq/irqdomain.c	/^const struct irq_domain_ops irq_domain_simple_ops = {$/;"	v	typeref:struct:irq_domain_ops
irq_domain_translate	irq/irqdomain.c	/^static int irq_domain_translate(struct irq_domain *d,$/;"	f	file:
irq_domain_translate_twocell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_translate_twocell);$/;"	v
irq_domain_translate_twocell	irq/irqdomain.c	/^int irq_domain_translate_twocell(struct irq_domain *d,$/;"	f
irq_domain_update_bus_token	irq/irqdomain.c	/^void irq_domain_update_bus_token(struct irq_domain *domain,$/;"	f
irq_domain_xlate_onecell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_onecell);$/;"	v
irq_domain_xlate_onecell	irq/irqdomain.c	/^int irq_domain_xlate_onecell(struct irq_domain *d, struct device_node *ctrlr,$/;"	f
irq_domain_xlate_onetwocell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_onetwocell);$/;"	v
irq_domain_xlate_onetwocell	irq/irqdomain.c	/^int irq_domain_xlate_onetwocell(struct irq_domain *d,$/;"	f
irq_domain_xlate_twocell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_twocell);$/;"	v
irq_domain_xlate_twocell	irq/irqdomain.c	/^int irq_domain_xlate_twocell(struct irq_domain *d, struct device_node *ctrlr,$/;"	f
irq_effective_aff_list_proc_show	irq/proc.c	/^static int irq_effective_aff_list_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_effective_aff_proc_show	irq/proc.c	/^static int irq_effective_aff_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_enable	irq/chip.c	/^void irq_enable(struct irq_desc *desc)$/;"	f
irq_enter	softirq.c	/^void irq_enter(void)$/;"	f
irq_exit	softirq.c	/^void irq_exit(void)$/;"	f
irq_expand_nr_irqs	irq/irqdesc.c	/^static int irq_expand_nr_irqs(unsigned int nr)$/;"	f	file:
irq_finalize_oneshot	irq/manage.c	/^static void irq_finalize_oneshot(struct irq_desc *desc,$/;"	f	file:
irq_find_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_find_mapping);$/;"	v
irq_find_mapping	irq/irqdomain.c	/^unsigned int irq_find_mapping(struct irq_domain *domain,$/;"	f
irq_find_matching_fwspec	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_find_matching_fwspec);$/;"	v
irq_find_matching_fwspec	irq/irqdomain.c	/^struct irq_domain *irq_find_matching_fwspec(struct irq_fwspec *fwspec,$/;"	f
irq_fixup_move_pending	irq/internals.h	/^static inline bool irq_fixup_move_pending(struct irq_desc *desc, bool fclear)$/;"	f
irq_fixup_move_pending	irq/migration.c	/^bool irq_fixup_move_pending(struct irq_desc *desc, bool force_clear)$/;"	f
irq_forced_secondary_handler	irq/manage.c	/^static irqreturn_t irq_forced_secondary_handler(int irq, void *dev_id)$/;"	f	file:
irq_forced_thread_fn	irq/manage.c	/^irq_forced_thread_fn(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_free_descs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(irq_free_descs);$/;"	v
irq_free_descs	irq/irqdesc.c	/^void irq_free_descs(unsigned int from, unsigned int cnt)$/;"	f
irq_free_hwirqs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(irq_free_hwirqs);$/;"	v
irq_free_hwirqs	irq/irqdesc.c	/^void irq_free_hwirqs(unsigned int from, int cnt)$/;"	f
irq_gc_ack_clr_bit	irq/generic-chip.c	/^void irq_gc_ack_clr_bit(struct irq_data *d)$/;"	f
irq_gc_ack_set_bit	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_gc_ack_set_bit);$/;"	v
irq_gc_ack_set_bit	irq/generic-chip.c	/^void irq_gc_ack_set_bit(struct irq_data *d)$/;"	f
irq_gc_eoi	irq/generic-chip.c	/^void irq_gc_eoi(struct irq_data *d)$/;"	f
irq_gc_get_irq_data	irq/generic-chip.c	/^static struct irq_data *irq_gc_get_irq_data(struct irq_chip_generic *gc)$/;"	f	file:
irq_gc_init_mask_cache	irq/generic-chip.c	/^irq_gc_init_mask_cache(struct irq_chip_generic *gc, enum irq_gc_flags flags)$/;"	f	file:
irq_gc_init_ops	irq/generic-chip.c	/^device_initcall(irq_gc_init_ops);$/;"	v
irq_gc_init_ops	irq/generic-chip.c	/^static int __init irq_gc_init_ops(void)$/;"	f	file:
irq_gc_mask_clr_bit	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_gc_mask_clr_bit);$/;"	v
irq_gc_mask_clr_bit	irq/generic-chip.c	/^void irq_gc_mask_clr_bit(struct irq_data *d)$/;"	f
irq_gc_mask_disable_and_ack_set	irq/generic-chip.c	/^void irq_gc_mask_disable_and_ack_set(struct irq_data *d)$/;"	f
irq_gc_mask_disable_reg	irq/generic-chip.c	/^void irq_gc_mask_disable_reg(struct irq_data *d)$/;"	f
irq_gc_mask_set_bit	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_gc_mask_set_bit);$/;"	v
irq_gc_mask_set_bit	irq/generic-chip.c	/^void irq_gc_mask_set_bit(struct irq_data *d)$/;"	f
irq_gc_noop	irq/generic-chip.c	/^void irq_gc_noop(struct irq_data *d)$/;"	f
irq_gc_resume	irq/generic-chip.c	/^static void irq_gc_resume(void)$/;"	f	file:
irq_gc_resume	irq/generic-chip.c	618;"	d	file:
irq_gc_set_wake	irq/generic-chip.c	/^int irq_gc_set_wake(struct irq_data *d, unsigned int on)$/;"	f
irq_gc_shutdown	irq/generic-chip.c	/^static void irq_gc_shutdown(void)$/;"	f	file:
irq_gc_suspend	irq/generic-chip.c	/^static int irq_gc_suspend(void)$/;"	f	file:
irq_gc_suspend	irq/generic-chip.c	617;"	d	file:
irq_gc_syscore_ops	irq/generic-chip.c	/^static struct syscore_ops irq_gc_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
irq_gc_unmask_enable_reg	irq/generic-chip.c	/^void irq_gc_unmask_enable_reg(struct irq_data *d)$/;"	f
irq_generic_chip_devres	irq/devres.c	/^struct irq_generic_chip_devres {$/;"	s	file:
irq_generic_chip_ops	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_generic_chip_ops);$/;"	v
irq_generic_chip_ops	irq/generic-chip.c	/^struct irq_domain_ops irq_generic_chip_ops = {$/;"	v	typeref:struct:irq_domain_ops
irq_get_default_host	irq/irqdomain.c	/^struct irq_domain *irq_get_default_host(void)$/;"	f
irq_get_desc_buslock	irq/internals.h	/^irq_get_desc_buslock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	f
irq_get_desc_lock	irq/internals.h	/^irq_get_desc_lock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	f
irq_get_domain_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_get_domain_generic_chip);$/;"	v
irq_get_domain_generic_chip	irq/generic-chip.c	/^irq_get_domain_generic_chip(struct irq_domain *d, unsigned int hw_irq)$/;"	f
irq_get_irq_data	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_get_irq_data);$/;"	v
irq_get_irq_data	irq/chip.c	/^struct irq_data *irq_get_irq_data(unsigned int irq)$/;"	f
irq_get_irqchip_state	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_get_irqchip_state);$/;"	v
irq_get_irqchip_state	irq/manage.c	/^int irq_get_irqchip_state(unsigned int irq, enum irqchip_irq_state which,$/;"	f
irq_get_next_irq	irq/irqdesc.c	/^unsigned int irq_get_next_irq(unsigned int offset)$/;"	f
irq_get_pending	irq/internals.h	/^irq_get_pending(struct cpumask *mask, struct irq_desc *desc)$/;"	f
irq_get_percpu_devid_partition	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(irq_get_percpu_devid_partition);$/;"	v
irq_get_percpu_devid_partition	irq/irqdesc.c	/^int irq_get_percpu_devid_partition(unsigned int irq, struct cpumask *affinity)$/;"	f
irq_init_desc	irq/irqdesc.c	/^void irq_init_desc(unsigned int irq)$/;"	f
irq_init_generic_chip	irq/generic-chip.c	/^void irq_init_generic_chip(struct irq_chip_generic *gc, const char *name,$/;"	f
irq_init_generic_chip	irq/internals.h	/^irq_init_generic_chip(struct irq_chip_generic *gc, const char *name,$/;"	f
irq_insert_desc	irq/irqdesc.c	/^static void irq_insert_desc(unsigned int irq, struct irq_desc *desc)$/;"	f	file:
irq_is_nmi	irq/irqdesc.c	/^static bool irq_is_nmi(struct irq_desc *desc)$/;"	f	file:
irq_kobj_base	irq/irqdesc.c	/^static struct kobject *irq_kobj_base;$/;"	v	typeref:struct:kobject	file:
irq_kobj_release	irq/irqdesc.c	/^static void irq_kobj_release(struct kobject *kobj)$/;"	f	file:
irq_kobj_type	irq/irqdesc.c	/^static struct kobj_type irq_kobj_type = {$/;"	v	typeref:struct:kobj_type	file:
irq_lock_sparse	irq/irqdesc.c	/^void irq_lock_sparse(void)$/;"	f
irq_map_generic_chip	irq/generic-chip.c	/^int irq_map_generic_chip(struct irq_domain *d, unsigned int virq,$/;"	f
irq_mark_irq	irq/internals.h	/^static inline void irq_mark_irq(unsigned int irq) { }$/;"	f
irq_mark_irq	irq/irqdesc.c	/^void irq_mark_irq(unsigned int irq)$/;"	f
irq_matrix	irq/matrix.c	/^struct irq_matrix {$/;"	s	file:
irq_matrix_alloc	irq/matrix.c	/^int irq_matrix_alloc(struct irq_matrix *m, const struct cpumask *msk,$/;"	f
irq_matrix_alloc_managed	irq/matrix.c	/^int irq_matrix_alloc_managed(struct irq_matrix *m, const struct cpumask *msk,$/;"	f
irq_matrix_allocated	irq/matrix.c	/^unsigned int irq_matrix_allocated(struct irq_matrix *m)$/;"	f
irq_matrix_assign	irq/matrix.c	/^void irq_matrix_assign(struct irq_matrix *m, unsigned int bit)$/;"	f
irq_matrix_assign_system	irq/matrix.c	/^void irq_matrix_assign_system(struct irq_matrix *m, unsigned int bit,$/;"	f
irq_matrix_available	irq/matrix.c	/^unsigned int irq_matrix_available(struct irq_matrix *m, bool cpudown)$/;"	f
irq_matrix_debug_show	irq/matrix.c	/^void irq_matrix_debug_show(struct seq_file *sf, struct irq_matrix *m, int ind)$/;"	f
irq_matrix_free	irq/matrix.c	/^void irq_matrix_free(struct irq_matrix *m, unsigned int cpu,$/;"	f
irq_matrix_offline	irq/matrix.c	/^void irq_matrix_offline(struct irq_matrix *m)$/;"	f
irq_matrix_online	irq/matrix.c	/^void irq_matrix_online(struct irq_matrix *m)$/;"	f
irq_matrix_remove_managed	irq/matrix.c	/^void irq_matrix_remove_managed(struct irq_matrix *m, const struct cpumask *msk)$/;"	f
irq_matrix_remove_reserved	irq/matrix.c	/^void irq_matrix_remove_reserved(struct irq_matrix *m)$/;"	f
irq_matrix_reserve	irq/matrix.c	/^void irq_matrix_reserve(struct irq_matrix *m)$/;"	f
irq_matrix_reserve_managed	irq/matrix.c	/^int irq_matrix_reserve_managed(struct irq_matrix *m, const struct cpumask *msk)$/;"	f
irq_matrix_reserved	irq/matrix.c	/^unsigned int irq_matrix_reserved(struct irq_matrix *m)$/;"	f
irq_may_run	irq/chip.c	/^static bool irq_may_run(struct irq_desc *desc)$/;"	f	file:
irq_migrate_all_off_this_cpu	irq/cpuhotplug.c	/^void irq_migrate_all_off_this_cpu(void)$/;"	f
irq_modify_status	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_modify_status);$/;"	v
irq_modify_status	irq/chip.c	/^void irq_modify_status(unsigned int irq, unsigned long clr, unsigned long set)$/;"	f
irq_move_masked_irq	irq/migration.c	/^void irq_move_masked_irq(struct irq_data *idata)$/;"	f
irq_move_pending	irq/internals.h	/^static inline bool irq_move_pending(struct irq_data *data)$/;"	f
irq_needs_fixup	irq/cpuhotplug.c	/^static inline bool irq_needs_fixup(struct irq_data *d)$/;"	f	file:
irq_nested_lock_class	irq/generic-chip.c	/^static struct lock_class_key irq_nested_lock_class;$/;"	v	typeref:struct:lock_class_key	file:
irq_nested_primary_handler	irq/manage.c	/^static irqreturn_t irq_nested_primary_handler(int irq, void *dev_id)$/;"	f	file:
irq_nested_request_class	irq/generic-chip.c	/^static struct lock_class_key irq_nested_request_class;$/;"	v	typeref:struct:lock_class_key	file:
irq_nmi_setup	irq/manage.c	/^static int irq_nmi_setup(struct irq_desc *desc)$/;"	f	file:
irq_nmi_teardown	irq/manage.c	/^static void irq_nmi_teardown(struct irq_desc *desc)$/;"	f	file:
irq_node_proc_show	irq/proc.c	/^static int irq_node_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_percpu_disable	irq/chip.c	/^void irq_percpu_disable(struct irq_desc *desc, unsigned int cpu)$/;"	f
irq_percpu_enable	irq/chip.c	/^void irq_percpu_enable(struct irq_desc *desc, unsigned int cpu)$/;"	f
irq_percpu_is_enabled	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_percpu_is_enabled);$/;"	v
irq_percpu_is_enabled	irq/manage.c	/^bool irq_percpu_is_enabled(unsigned int irq)$/;"	f
irq_pm_check_wakeup	irq/internals.h	/^static inline bool irq_pm_check_wakeup(struct irq_desc *desc) { return false; }$/;"	f
irq_pm_check_wakeup	irq/pm.c	/^bool irq_pm_check_wakeup(struct irq_desc *desc)$/;"	f
irq_pm_init_ops	irq/pm.c	/^device_initcall(irq_pm_init_ops);$/;"	v
irq_pm_init_ops	irq/pm.c	/^static int __init irq_pm_init_ops(void)$/;"	f	file:
irq_pm_install_action	irq/internals.h	/^irq_pm_install_action(struct irq_desc *desc, struct irqaction *action) { }$/;"	f
irq_pm_install_action	irq/pm.c	/^void irq_pm_install_action(struct irq_desc *desc, struct irqaction *action)$/;"	f
irq_pm_remove_action	irq/internals.h	/^irq_pm_remove_action(struct irq_desc *desc, struct irqaction *action) { }$/;"	f
irq_pm_remove_action	irq/pm.c	/^void irq_pm_remove_action(struct irq_desc *desc, struct irqaction *action)$/;"	f
irq_pm_syscore_ops	irq/pm.c	/^static struct syscore_ops irq_pm_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
irq_pm_syscore_resume	irq/pm.c	/^static void irq_pm_syscore_resume(void)$/;"	f	file:
irq_poll_active	irq/spurious.c	/^static atomic_t irq_poll_active;$/;"	v	file:
irq_poll_cpu	irq/spurious.c	/^static int irq_poll_cpu;$/;"	v	file:
irq_put_desc_busunlock	irq/internals.h	/^irq_put_desc_busunlock(struct irq_desc *desc, unsigned long flags)$/;"	f
irq_put_desc_unlock	irq/internals.h	/^irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags)$/;"	f
irq_readl_be	irq/generic-chip.c	/^static u32 irq_readl_be(void __iomem *addr)$/;"	f	file:
irq_release_resources	irq/manage.c	/^static void irq_release_resources(struct irq_desc *desc)$/;"	f	file:
irq_remove_debugfs_entry	irq/internals.h	/^static inline void irq_remove_debugfs_entry(struct irq_desc *d)$/;"	f
irq_remove_debugfs_entry	irq/internals.h	/^static inline void irq_remove_debugfs_entry(struct irq_desc *desc)$/;"	f
irq_remove_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_remove_generic_chip);$/;"	v
irq_remove_generic_chip	irq/generic-chip.c	/^void irq_remove_generic_chip(struct irq_chip_generic *gc, u32 msk,$/;"	f
irq_remove_timings	irq/internals.h	/^static inline void irq_remove_timings(struct irq_desc *desc) {}$/;"	f
irq_remove_timings	irq/internals.h	/^static inline void irq_remove_timings(struct irq_desc *desc)$/;"	f
irq_request_resources	irq/manage.c	/^static int irq_request_resources(struct irq_desc *desc)$/;"	f	file:
irq_reserve_ipi	irq/ipi.c	/^int irq_reserve_ipi(struct irq_domain *domain,$/;"	f
irq_restore_affinity_of_irq	irq/cpuhotplug.c	/^static void irq_restore_affinity_of_irq(struct irq_desc *desc, unsigned int cpu)$/;"	f	file:
irq_select_affinity_usr	irq/manage.c	/^int irq_select_affinity_usr(unsigned int irq)$/;"	f
irq_set_affinity_hint	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_affinity_hint);$/;"	v
irq_set_affinity_hint	irq/manage.c	/^int irq_set_affinity_hint(unsigned int irq, const struct cpumask *m)$/;"	f
irq_set_affinity_locked	irq/manage.c	/^int irq_set_affinity_locked(struct irq_data *data, const struct cpumask *mask,$/;"	f
irq_set_affinity_notifier	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_affinity_notifier);$/;"	v
irq_set_affinity_notifier	irq/manage.c	/^irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify *notify)$/;"	f
irq_set_affinity_pending	irq/manage.c	/^static inline int irq_set_affinity_pending(struct irq_data *data,$/;"	f	file:
irq_set_chained_handler_and_data	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_set_chained_handler_and_data);$/;"	v
irq_set_chained_handler_and_data	irq/chip.c	/^irq_set_chained_handler_and_data(unsigned int irq, irq_flow_handler_t handle,$/;"	f
irq_set_chip	irq/chip.c	/^EXPORT_SYMBOL(irq_set_chip);$/;"	v
irq_set_chip	irq/chip.c	/^int irq_set_chip(unsigned int irq, struct irq_chip *chip)$/;"	f
irq_set_chip_and_handler_name	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_set_chip_and_handler_name);$/;"	v
irq_set_chip_and_handler_name	irq/chip.c	/^irq_set_chip_and_handler_name(unsigned int irq, struct irq_chip *chip,$/;"	f
irq_set_chip_data	irq/chip.c	/^EXPORT_SYMBOL(irq_set_chip_data);$/;"	v
irq_set_chip_data	irq/chip.c	/^int irq_set_chip_data(unsigned int irq, void *data)$/;"	f
irq_set_default_host	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_set_default_host);$/;"	v
irq_set_default_host	irq/irqdomain.c	/^void irq_set_default_host(struct irq_domain *domain)$/;"	f
irq_set_handler_data	irq/chip.c	/^EXPORT_SYMBOL(irq_set_handler_data);$/;"	v
irq_set_handler_data	irq/chip.c	/^int irq_set_handler_data(unsigned int irq, void *data)$/;"	f
irq_set_irq_type	irq/chip.c	/^EXPORT_SYMBOL(irq_set_irq_type);$/;"	v
irq_set_irq_type	irq/chip.c	/^int irq_set_irq_type(unsigned int irq, unsigned int type)$/;"	f
irq_set_irq_wake	irq/manage.c	/^EXPORT_SYMBOL(irq_set_irq_wake);$/;"	v
irq_set_irq_wake	irq/manage.c	/^int irq_set_irq_wake(unsigned int irq, unsigned int on)$/;"	f
irq_set_irqchip_state	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_irqchip_state);$/;"	v
irq_set_irqchip_state	irq/manage.c	/^int irq_set_irqchip_state(unsigned int irq, enum irqchip_irq_state which,$/;"	f
irq_set_msi_desc	irq/chip.c	/^int irq_set_msi_desc(unsigned int irq, struct msi_desc *entry)$/;"	f
irq_set_msi_desc_off	irq/chip.c	/^int irq_set_msi_desc_off(unsigned int irq_base, unsigned int irq_offset,$/;"	f
irq_set_parent	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_parent);$/;"	v
irq_set_parent	irq/manage.c	/^int irq_set_parent(int irq, int parent_irq)$/;"	f
irq_set_percpu_devid	irq/irqdesc.c	/^int irq_set_percpu_devid(unsigned int irq)$/;"	f
irq_set_percpu_devid_partition	irq/irqdesc.c	/^int irq_set_percpu_devid_partition(unsigned int irq,$/;"	f
irq_set_thread_affinity	irq/manage.c	/^void irq_set_thread_affinity(struct irq_desc *desc)$/;"	f
irq_set_vcpu_affinity	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_vcpu_affinity);$/;"	v
irq_set_vcpu_affinity	irq/manage.c	/^int irq_set_vcpu_affinity(unsigned int irq, void *vcpu_info)$/;"	f
irq_settings_can_autoenable	irq/settings.h	/^static inline bool irq_settings_can_autoenable(struct irq_desc *desc)$/;"	f
irq_settings_can_move_pcntxt	irq/settings.h	/^static inline bool irq_settings_can_move_pcntxt(struct irq_desc *desc)$/;"	f
irq_settings_can_probe	irq/settings.h	/^static inline bool irq_settings_can_probe(struct irq_desc *desc)$/;"	f
irq_settings_can_request	irq/settings.h	/^static inline bool irq_settings_can_request(struct irq_desc *desc)$/;"	f
irq_settings_can_thread	irq/settings.h	/^static inline bool irq_settings_can_thread(struct irq_desc *desc)$/;"	f
irq_settings_clr_and_set	irq/settings.h	/^irq_settings_clr_and_set(struct irq_desc *desc, u32 clr, u32 set)$/;"	f
irq_settings_clr_disable_unlazy	irq/settings.h	/^static inline void irq_settings_clr_disable_unlazy(struct irq_desc *desc)$/;"	f
irq_settings_clr_level	irq/settings.h	/^static inline void irq_settings_clr_level(struct irq_desc *desc)$/;"	f
irq_settings_clr_noprobe	irq/settings.h	/^static inline void irq_settings_clr_noprobe(struct irq_desc *desc)$/;"	f
irq_settings_clr_norequest	irq/settings.h	/^static inline void irq_settings_clr_norequest(struct irq_desc *desc)$/;"	f
irq_settings_clr_nothread	irq/settings.h	/^static inline void irq_settings_clr_nothread(struct irq_desc *desc)$/;"	f
irq_settings_disable_unlazy	irq/settings.h	/^static inline bool irq_settings_disable_unlazy(struct irq_desc *desc)$/;"	f
irq_settings_get_trigger_mask	irq/settings.h	/^static inline u32 irq_settings_get_trigger_mask(struct irq_desc *desc)$/;"	f
irq_settings_has_no_balance_set	irq/settings.h	/^static inline bool irq_settings_has_no_balance_set(struct irq_desc *desc)$/;"	f
irq_settings_is_level	irq/settings.h	/^static inline bool irq_settings_is_level(struct irq_desc *desc)$/;"	f
irq_settings_is_nested_thread	irq/settings.h	/^static inline bool irq_settings_is_nested_thread(struct irq_desc *desc)$/;"	f
irq_settings_is_per_cpu	irq/settings.h	/^static inline bool irq_settings_is_per_cpu(struct irq_desc *desc)$/;"	f
irq_settings_is_per_cpu_devid	irq/settings.h	/^static inline bool irq_settings_is_per_cpu_devid(struct irq_desc *desc)$/;"	f
irq_settings_is_polled	irq/settings.h	/^static inline bool irq_settings_is_polled(struct irq_desc *desc)$/;"	f
irq_settings_set_level	irq/settings.h	/^static inline void irq_settings_set_level(struct irq_desc *desc)$/;"	f
irq_settings_set_no_balancing	irq/settings.h	/^static inline void irq_settings_set_no_balancing(struct irq_desc *desc)$/;"	f
irq_settings_set_noprobe	irq/settings.h	/^static inline void irq_settings_set_noprobe(struct irq_desc *desc)$/;"	f
irq_settings_set_norequest	irq/settings.h	/^static inline void irq_settings_set_norequest(struct irq_desc *desc)$/;"	f
irq_settings_set_nothread	irq/settings.h	/^static inline void irq_settings_set_nothread(struct irq_desc *desc)$/;"	f
irq_settings_set_per_cpu	irq/settings.h	/^static inline void irq_settings_set_per_cpu(struct irq_desc *desc)$/;"	f
irq_settings_set_trigger_mask	irq/settings.h	/^irq_settings_set_trigger_mask(struct irq_desc *desc, u32 mask)$/;"	f
irq_setup_affinity	irq/internals.h	/^static inline int irq_setup_affinity(struct irq_desc *desc) { return 0; }$/;"	f
irq_setup_affinity	irq/manage.c	/^int irq_setup_affinity(struct irq_desc *desc)$/;"	f
irq_setup_alt_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_setup_alt_chip);$/;"	v
irq_setup_alt_chip	irq/generic-chip.c	/^int irq_setup_alt_chip(struct irq_data *d, unsigned int type)$/;"	f
irq_setup_forced_threading	irq/manage.c	/^static int irq_setup_forced_threading(struct irqaction *new)$/;"	f	file:
irq_setup_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_setup_generic_chip);$/;"	v
irq_setup_generic_chip	irq/generic-chip.c	/^void irq_setup_generic_chip(struct irq_chip_generic *gc, u32 msk,$/;"	f
irq_setup_timings	irq/internals.h	/^static inline void irq_setup_timings(struct irq_desc *desc, struct irqaction *act)$/;"	f
irq_setup_timings	irq/internals.h	/^static inline void irq_setup_timings(struct irq_desc *desc,$/;"	f
irq_shutdown	irq/chip.c	/^void irq_shutdown(struct irq_desc *desc)$/;"	f
irq_shutdown_and_deactivate	irq/chip.c	/^void irq_shutdown_and_deactivate(struct irq_desc *desc)$/;"	f
irq_sim_devres	irq/irq_sim.c	/^struct irq_sim_devres {$/;"	s	file:
irq_sim_fini	irq/irq_sim.c	/^EXPORT_SYMBOL_GPL(irq_sim_fini);$/;"	v
irq_sim_fini	irq/irq_sim.c	/^void irq_sim_fini(struct irq_sim *sim)$/;"	f
irq_sim_fire	irq/irq_sim.c	/^EXPORT_SYMBOL_GPL(irq_sim_fire);$/;"	v
irq_sim_fire	irq/irq_sim.c	/^void irq_sim_fire(struct irq_sim *sim, unsigned int offset)$/;"	f
irq_sim_handle_irq	irq/irq_sim.c	/^static void irq_sim_handle_irq(struct irq_work *work)$/;"	f	file:
irq_sim_init	irq/irq_sim.c	/^EXPORT_SYMBOL_GPL(irq_sim_init);$/;"	v
irq_sim_init	irq/irq_sim.c	/^int irq_sim_init(struct irq_sim *sim, unsigned int num_irqs)$/;"	f
irq_sim_irqchip	irq/irq_sim.c	/^static struct irq_chip irq_sim_irqchip = {$/;"	v	typeref:struct:irq_chip	file:
irq_sim_irqmask	irq/irq_sim.c	/^static void irq_sim_irqmask(struct irq_data *data)$/;"	f	file:
irq_sim_irqnum	irq/irq_sim.c	/^EXPORT_SYMBOL_GPL(irq_sim_irqnum);$/;"	v
irq_sim_irqnum	irq/irq_sim.c	/^int irq_sim_irqnum(struct irq_sim *sim, unsigned int offset)$/;"	f
irq_sim_irqunmask	irq/irq_sim.c	/^static void irq_sim_irqunmask(struct irq_data *data)$/;"	f	file:
irq_sim_set_type	irq/irq_sim.c	/^static int irq_sim_set_type(struct irq_data *data, unsigned int type)$/;"	f	file:
irq_spread_init_one	irq/affinity.c	/^static void irq_spread_init_one(struct cpumask *irqmsk, struct cpumask *nmsk,$/;"	f	file:
irq_spurious_proc_show	irq/proc.c	/^static int irq_spurious_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_start_time	sched/sched.h	/^	u64			irq_start_time;$/;"	m	struct:irqtime
irq_startup	irq/chip.c	/^int irq_startup(struct irq_desc *desc, bool resend, bool force)$/;"	f
irq_stat	softirq.c	/^EXPORT_PER_CPU_SYMBOL(irq_stat);$/;"	v
irq_state_clr_disabled	irq/chip.c	/^static void irq_state_clr_disabled(struct irq_desc *desc)$/;"	f	file:
irq_state_clr_masked	irq/chip.c	/^static void irq_state_clr_masked(struct irq_desc *desc)$/;"	f	file:
irq_state_clr_started	irq/chip.c	/^static void irq_state_clr_started(struct irq_desc *desc)$/;"	f	file:
irq_state_set_disabled	irq/internals.h	/^static inline void irq_state_set_disabled(struct irq_desc *desc)$/;"	f
irq_state_set_masked	irq/internals.h	/^static inline void irq_state_set_masked(struct irq_desc *desc)$/;"	f
irq_state_set_started	irq/chip.c	/^static void irq_state_set_started(struct irq_desc *desc)$/;"	f	file:
irq_supports_nmi	irq/manage.c	/^static bool irq_supports_nmi(struct irq_desc *desc)$/;"	f	file:
irq_sysfs_add	irq/irqdesc.c	/^static void irq_sysfs_add(int irq, struct irq_desc *desc) {}$/;"	f	file:
irq_sysfs_add	irq/irqdesc.c	/^static void irq_sysfs_add(int irq, struct irq_desc *desc)$/;"	f	file:
irq_sysfs_del	irq/irqdesc.c	/^static void irq_sysfs_del(struct irq_desc *desc) {}$/;"	f	file:
irq_sysfs_del	irq/irqdesc.c	/^static void irq_sysfs_del(struct irq_desc *desc)$/;"	f	file:
irq_sysfs_init	irq/irqdesc.c	/^postcore_initcall(irq_sysfs_init);$/;"	v
irq_sysfs_init	irq/irqdesc.c	/^static int __init irq_sysfs_init(void)$/;"	f	file:
irq_thread	irq/manage.c	/^static int irq_thread(void *data)$/;"	f	file:
irq_thread_check_affinity	irq/manage.c	/^irq_thread_check_affinity(struct irq_desc *desc, struct irqaction *action) { }$/;"	f	file:
irq_thread_check_affinity	irq/manage.c	/^irq_thread_check_affinity(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_thread_dtor	irq/manage.c	/^static void irq_thread_dtor(struct callback_head *unused)$/;"	f	file:
irq_thread_fn	irq/manage.c	/^static irqreturn_t irq_thread_fn(struct irq_desc *desc,$/;"	f	file:
irq_time_read	sched/sched.h	/^static inline u64 irq_time_read(int cpu)$/;"	f
irq_timing_decode	irq/internals.h	/^static inline int irq_timing_decode(u64 value, u64 *timestamp)$/;"	f
irq_timing_enabled	irq/internals.h	/^DECLARE_STATIC_KEY_FALSE(irq_timing_enabled);$/;"	v
irq_timing_enabled	irq/timings.c	/^DEFINE_STATIC_KEY_FALSE(irq_timing_enabled);$/;"	v
irq_timing_encode	irq/internals.h	/^static inline u64 irq_timing_encode(u64 timestamp, int irq)$/;"	f
irq_timings	irq/internals.h	/^struct irq_timings {$/;"	s
irq_timings_alloc	irq/timings.c	/^int irq_timings_alloc(int irq)$/;"	f
irq_timings_disable	irq/timings.c	/^void irq_timings_disable(void)$/;"	f
irq_timings_ema_new	irq/timings.c	/^static u64 irq_timings_ema_new(u64 value, u64 ema_old)$/;"	f	file:
irq_timings_enable	irq/timings.c	/^void irq_timings_enable(void)$/;"	f
irq_timings_free	irq/timings.c	/^void irq_timings_free(int irq)$/;"	f
irq_timings_interval_index	irq/timings.c	/^static __always_inline int irq_timings_interval_index(u64 interval)$/;"	f	file:
irq_timings_irqs_selftest	irq/timings.c	/^static int __init irq_timings_irqs_selftest(void)$/;"	f	file:
irq_timings_irqts_selftest	irq/timings.c	/^static int __init irq_timings_irqts_selftest(void)$/;"	f	file:
irq_timings_next_event	irq/timings.c	/^u64 irq_timings_next_event(u64 now)$/;"	f
irq_timings_next_event_index	irq/timings.c	/^static int irq_timings_next_event_index(int *buffer, size_t len, int period_max)$/;"	f	file:
irq_timings_next_index_selftest	irq/timings.c	/^static int __init irq_timings_next_index_selftest(void)$/;"	f	file:
irq_timings_push	irq/internals.h	/^static __always_inline void irq_timings_push(u64 ts, int irq)$/;"	f
irq_timings_selftest	irq/timings.c	/^early_initcall(irq_timings_selftest);$/;"	v
irq_timings_selftest	irq/timings.c	/^static int __init irq_timings_selftest(void)$/;"	f	file:
irq_timings_store	irq/timings.c	/^static inline void irq_timings_store(int irq, struct irqt_stat *irqs, u64 ts)$/;"	f	file:
irq_timings_test_irqs	irq/timings.c	/^static int __init irq_timings_test_irqs(struct timings_intervals *ti)$/;"	f	file:
irq_timings_test_irqts	irq/timings.c	/^static int __init irq_timings_test_irqts(struct irq_timings *irqts,$/;"	f	file:
irq_timings_test_next_index	irq/timings.c	/^static int __init irq_timings_test_next_index(struct timings_intervals *ti)$/;"	f	file:
irq_to_desc	irq/irqdesc.c	/^EXPORT_SYMBOL(irq_to_desc);$/;"	v
irq_to_desc	irq/irqdesc.c	/^struct irq_desc *irq_to_desc(unsigned int irq)$/;"	f
irq_trace	trace/trace_irqsoff.c	/^irq_trace(void)$/;"	f	file:
irq_trace	trace/trace_irqsoff.c	61;"	d	file:
irq_try_set_affinity	irq/manage.c	/^static int irq_try_set_affinity(struct irq_data *data,$/;"	f	file:
irq_unlock_sparse	irq/irqdesc.c	/^void irq_unlock_sparse(void)$/;"	f
irq_unmap_generic_chip	irq/generic-chip.c	/^static void irq_unmap_generic_chip(struct irq_domain *d, unsigned int virq)$/;"	f	file:
irq_validate_effective_affinity	irq/manage.c	/^static void irq_validate_effective_affinity(struct irq_data *data)$/;"	f	file:
irq_wait_for_interrupt	irq/manage.c	/^static int irq_wait_for_interrupt(struct irqaction *action)$/;"	f	file:
irq_wait_for_poll	irq/spurious.c	/^bool irq_wait_for_poll(struct irq_desc *desc)$/;"	f
irq_wake_secondary	irq/manage.c	/^static void irq_wake_secondary(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_wake_thread	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_wake_thread);$/;"	v
irq_wake_thread	irq/manage.c	/^void irq_wake_thread(unsigned int irq, void *dev_id)$/;"	f
irq_work	bpf/stackmap.c	/^	struct irq_work irq_work;$/;"	m	struct:stack_map_irq_work	typeref:struct:stack_map_irq_work::irq_work	file:
irq_work	sched/cpufreq_schedutil.c	/^	struct			irq_work irq_work;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::irq_work	file:
irq_work	trace/bpf_trace.c	/^	struct irq_work irq_work;$/;"	m	struct:send_signal_irq_work	typeref:struct:send_signal_irq_work::irq_work	file:
irq_work	trace/ring_buffer.c	/^	struct rb_irq_work		irq_work;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::rb_irq_work	file:
irq_work	trace/ring_buffer.c	/^	struct rb_irq_work		irq_work;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::rb_irq_work	file:
irq_work_claim	irq_work.c	/^static bool irq_work_claim(struct irq_work *work)$/;"	f	file:
irq_work_needs_cpu	irq_work.c	/^bool irq_work_needs_cpu(void)$/;"	f
irq_work_queue	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_queue);$/;"	v
irq_work_queue	irq_work.c	/^bool irq_work_queue(struct irq_work *work)$/;"	f
irq_work_queue_on	irq_work.c	/^bool irq_work_queue_on(struct irq_work *work, int cpu)$/;"	f
irq_work_run	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_run);$/;"	v
irq_work_run	irq_work.c	/^void irq_work_run(void)$/;"	f
irq_work_run_list	irq_work.c	/^static void irq_work_run_list(struct llist_head *list)$/;"	f	file:
irq_work_sync	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_sync);$/;"	v
irq_work_sync	irq_work.c	/^void irq_work_sync(struct irq_work *work)$/;"	f
irq_work_tick	irq_work.c	/^void irq_work_tick(void)$/;"	f
irq_writel_be	irq/generic-chip.c	/^static void irq_writel_be(u32 val, void __iomem *addr)$/;"	f	file:
irqchip_flags	irq/debugfs.c	/^static const struct irq_bit_descr irqchip_flags[] = {$/;"	v	typeref:struct:irq_bit_descr	file:
irqchip_fwid	irq/irqdomain.c	/^struct irqchip_fwid {$/;"	s	file:
irqchip_fwnode_ops	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irqchip_fwnode_ops);$/;"	v
irqchip_fwnode_ops	irq/irqdomain.c	/^const struct fwnode_operations irqchip_fwnode_ops;$/;"	v	typeref:struct:fwnode_operations
irqd_clear	irq/internals.h	/^static inline void irqd_clear(struct irq_data *d, unsigned int mask)$/;"	f
irqd_clr_managed_shutdown	irq/internals.h	/^static inline void irqd_clr_managed_shutdown(struct irq_data *d)$/;"	f
irqd_clr_move_pending	irq/internals.h	/^static inline void irqd_clr_move_pending(struct irq_data *d)$/;"	f
irqd_get	irq/internals.h	/^static inline unsigned int irqd_get(struct irq_data *d)$/;"	f
irqd_has_set	irq/internals.h	/^static inline bool irqd_has_set(struct irq_data *d, unsigned int mask)$/;"	f
irqd_set	irq/internals.h	/^static inline void irqd_set(struct irq_data *d, unsigned int mask)$/;"	f
irqd_set_managed_shutdown	irq/internals.h	/^static inline void irqd_set_managed_shutdown(struct irq_data *d)$/;"	f
irqd_set_move_pending	irq/internals.h	/^static inline void irqd_set_move_pending(struct irq_data *d)$/;"	f
irqdata_states	irq/debugfs.c	/^static const struct irq_bit_descr irqdata_states[] = {$/;"	v	typeref:struct:irq_bit_descr	file:
irqdesc_istates	irq/debugfs.c	/^static const struct irq_bit_descr irqdesc_istates[] = {$/;"	v	typeref:struct:irq_bit_descr	file:
irqdesc_states	irq/debugfs.c	/^static const struct irq_bit_descr irqdesc_states[] = {$/;"	v	typeref:struct:irq_bit_descr	file:
irqfixup_setup	irq/spurious.c	/^static int __init irqfixup_setup(char *str)$/;"	f	file:
irqpoll_setup	irq/spurious.c	/^static int __init irqpoll_setup(char *str)$/;"	f	file:
irqsoff_busy	trace/trace_irqsoff.c	/^static bool irqsoff_busy;$/;"	v	file:
irqsoff_display_graph	trace/trace_irqsoff.c	/^static inline int irqsoff_display_graph(struct trace_array *tr, int set)$/;"	f	file:
irqsoff_display_graph	trace/trace_irqsoff.c	/^static int irqsoff_display_graph(struct trace_array *tr, int set)$/;"	f	file:
irqsoff_flag_changed	trace/trace_irqsoff.c	/^static int irqsoff_flag_changed(struct trace_array *tr, u32 mask, int set)$/;"	f	file:
irqsoff_function_set	trace/trace_irqsoff.c	/^static inline int irqsoff_function_set(struct trace_array *tr, u32 mask, int set)$/;"	f	file:
irqsoff_function_set	trace/trace_irqsoff.c	/^static int irqsoff_function_set(struct trace_array *tr, u32 mask, int set)$/;"	f	file:
irqsoff_graph_entry	trace/trace_irqsoff.c	/^static int irqsoff_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
irqsoff_graph_return	trace/trace_irqsoff.c	/^static void irqsoff_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
irqsoff_print_header	trace/trace_irqsoff.c	/^static void irqsoff_print_header(struct seq_file *s)$/;"	f	file:
irqsoff_print_line	trace/trace_irqsoff.c	/^static enum print_line_t irqsoff_print_line(struct trace_iterator *iter)$/;"	f	file:
irqsoff_trace_close	trace/trace_irqsoff.c	/^static void irqsoff_trace_close(struct trace_iterator *iter) { }$/;"	f	file:
irqsoff_trace_close	trace/trace_irqsoff.c	/^static void irqsoff_trace_close(struct trace_iterator *iter)$/;"	f	file:
irqsoff_trace_open	trace/trace_irqsoff.c	/^static void irqsoff_trace_open(struct trace_iterator *iter) { }$/;"	f	file:
irqsoff_trace_open	trace/trace_irqsoff.c	/^static void irqsoff_trace_open(struct trace_iterator *iter)$/;"	f	file:
irqsoff_tracer_call	trace/trace_irqsoff.c	/^irqsoff_tracer_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
irqsoff_tracer_init	trace/trace_irqsoff.c	/^static int irqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_reset	trace/trace_irqsoff.c	/^static void irqsoff_tracer_reset(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_start	trace/trace_irqsoff.c	/^static void irqsoff_tracer_start(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_stop	trace/trace_irqsoff.c	/^static void irqsoff_tracer_stop(struct trace_array *tr)$/;"	f	file:
irqt_stat	irq/timings.c	/^struct irqt_stat {$/;"	s	file:
irqtime	sched/sched.h	/^struct irqtime {$/;"	s
irqtime	time/sched_clock.c	/^static int irqtime = -1;$/;"	v	file:
irqtime_account_delta	sched/cputime.c	/^static void irqtime_account_delta(struct irqtime *irqtime, u64 delta,$/;"	f	file:
irqtime_account_idle_ticks	sched/cputime.c	/^static inline void irqtime_account_idle_ticks(int ticks) { }$/;"	f	file:
irqtime_account_idle_ticks	sched/cputime.c	/^static void irqtime_account_idle_ticks(int ticks)$/;"	f	file:
irqtime_account_irq	sched/cputime.c	/^EXPORT_SYMBOL_GPL(irqtime_account_irq);$/;"	v
irqtime_account_irq	sched/cputime.c	/^void irqtime_account_irq(struct task_struct *curr)$/;"	f
irqtime_account_process_tick	sched/cputime.c	/^static inline void irqtime_account_process_tick(struct task_struct *p, int user_tick,$/;"	f	file:
irqtime_account_process_tick	sched/cputime.c	/^static void irqtime_account_process_tick(struct task_struct *p, int user_tick,$/;"	f	file:
irqtime_tick_accounted	sched/cputime.c	/^static u64 irqtime_tick_accounted(u64 dummy)$/;"	f	file:
irqtime_tick_accounted	sched/cputime.c	/^static u64 irqtime_tick_accounted(u64 maxtime)$/;"	f	file:
is_acquire_function	bpf/verifier.c	/^static bool is_acquire_function(enum bpf_func_id func_id)$/;"	f	file:
is_affinity_mask_valid	irq/proc.c	104;"	d	file:
is_ancestor	seccomp.c	/^static int is_ancestor(struct seccomp_filter *parent,$/;"	f	file:
is_arm_mapping_symbol	module.c	/^static inline int is_arm_mapping_symbol(const char *str)$/;"	f	file:
is_audit_feature_set	audit.c	/^int is_audit_feature_set(int i)$/;"	f
is_bpf_text_address	bpf/core.c	/^bool is_bpf_text_address(unsigned long addr)$/;"	f
is_branch_taken	bpf/verifier.c	/^static int is_branch_taken(struct bpf_reg_state *reg, u64 val, u8 opcode,$/;"	f	file:
is_busy	trace/trace_dynevent.h	/^	bool (*is_busy)(struct dyn_event *ev);$/;"	m	struct:dyn_event_operations
is_cgroup_event	events/core.c	/^static inline int is_cgroup_event(struct perf_event *event)$/;"	f	file:
is_chained_work	workqueue.c	/^static bool is_chained_work(struct workqueue_struct *wq)$/;"	f	file:
is_console_locked	printk/printk.c	/^EXPORT_SYMBOL(is_console_locked);$/;"	v
is_console_locked	printk/printk.c	/^int is_console_locked(void)$/;"	f
is_core_symbol	module.c	/^static bool is_core_symbol(const Elf_Sym *src, const Elf_Shdr *sechdrs,$/;"	f	file:
is_cpu_allowed	sched/core.c	/^static inline bool is_cpu_allowed(struct task_struct *p, int cpu)$/;"	f	file:
is_cpu_exclusive	cgroup/cpuset.c	/^static inline int is_cpu_exclusive(const struct cpuset *cs)$/;"	f	file:
is_cpuset_online	cgroup/cpuset.c	/^static inline bool is_cpuset_online(struct cpuset *cs)$/;"	f	file:
is_cpuset_subset	cgroup/cpuset.c	/^static int is_cpuset_subset(const struct cpuset *p, const struct cpuset *q)$/;"	f	file:
is_ctx_reg	bpf/verifier.c	/^static bool is_ctx_reg(struct bpf_verifier_env *env, int regno)$/;"	f	file:
is_current_pgrp_orphaned	exit.c	/^int is_current_pgrp_orphaned(void)$/;"	f
is_descending	trace/trace_events_hist.c	/^static int is_descending(const char *str)$/;"	f	file:
is_dynamic_key	locking/lockdep.c	/^static bool is_dynamic_key(const struct lock_class_key *key)$/;"	f	file:
is_error_status	time/ntp.c	/^static inline int is_error_status(int status)$/;"	f	file:
is_event_hup	events/core.c	/^static bool is_event_hup(struct perf_event *event)$/;"	f	file:
is_exported	module.c	/^static int is_exported(const char *name, unsigned long value,$/;"	f	file:
is_flow_key_reg	bpf/verifier.c	/^static bool is_flow_key_reg(struct bpf_verifier_env *env, int regno)$/;"	f	file:
is_ftrace_trampoline	trace/ftrace.c	/^bool is_ftrace_trampoline(unsigned long addr)$/;"	f
is_function_field	trace/trace.h	/^static inline bool is_function_field(struct ftrace_event_field *field)$/;"	f
is_good_name	trace/trace_probe.h	/^static inline bool is_good_name(const char *name)$/;"	f
is_graph	trace/trace_irqsoff.c	66;"	d	file:
is_graph	trace/trace_irqsoff.c	72;"	d	file:
is_graph	trace/trace_sched_wakeup.c	44;"	d	file:
is_graph	trace/trace_sched_wakeup.c	46;"	d	file:
is_hardlockup	watchdog.c	/^bool is_hardlockup(void)$/;"	f
is_idle	time/timer.c	/^	bool			is_idle;$/;"	m	struct:timer_base	file:
is_in_v2_mode	cgroup/cpuset.c	/^static inline bool is_in_v2_mode(void)$/;"	f	file:
is_kernel_event	events/core.c	/^static bool is_kernel_event(struct perf_event *event)$/;"	f	file:
is_key	trace/tracing_map.c	/^static bool is_key(struct tracing_map *map, unsigned int field_idx)$/;"	f	file:
is_kthread_should_stop	sched/wait.c	/^static inline bool is_kthread_should_stop(void)$/;"	f	file:
is_leftmost	sched/deadline.c	/^static inline int is_leftmost(struct task_struct *p, struct dl_rq *dl_rq)$/;"	f	file:
is_mem_exclusive	cgroup/cpuset.c	/^static inline int is_mem_exclusive(const struct cpuset *cs)$/;"	f	file:
is_mem_hardwall	cgroup/cpuset.c	/^static inline int is_mem_hardwall(const struct cpuset *cs)$/;"	f	file:
is_memory_migrate	cgroup/cpuset.c	/^static inline int is_memory_migrate(const struct cpuset *cs)$/;"	f	file:
is_module_address	module.c	/^bool is_module_address(unsigned long addr)$/;"	f
is_module_percpu_address	module.c	/^bool is_module_percpu_address(unsigned long addr)$/;"	f
is_module_sig_enforced	module.c	/^EXPORT_SYMBOL(is_module_sig_enforced);$/;"	v
is_module_sig_enforced	module.c	/^bool is_module_sig_enforced(void)$/;"	f
is_module_text_address	module.c	/^bool is_module_text_address(unsigned long addr)$/;"	f
is_named_trigger	trace/trace_events_trigger.c	/^bool is_named_trigger(struct event_trigger_data *test)$/;"	f
is_not	trace/trace_events_filter.c	/^static bool is_not(const char *str)$/;"	f	file:
is_or	trace/trace_events_filter.c	/^static bool is_or(struct prog_entry *prog, int i)$/;"	f	file:
is_orphaned_event	events/core.c	/^static bool is_orphaned_event(struct perf_event *event)$/;"	f	file:
is_partition_root	cgroup/cpuset.c	/^static inline int is_partition_root(const struct cpuset *cs)$/;"	f	file:
is_per_cpu_kthread	sched/core.c	/^static inline bool is_per_cpu_kthread(struct task_struct *p)$/;"	f	file:
is_pkt_reg	bpf/verifier.c	/^static bool is_pkt_reg(struct bpf_verifier_env *env, int regno)$/;"	f	file:
is_pointer_value	bpf/verifier.c	/^static bool is_pointer_value(struct bpf_verifier_env *env, int regno)$/;"	f	file:
is_ptr_cast_function	bpf/verifier.c	/^static bool is_ptr_cast_function(enum bpf_func_id func_id)$/;"	f	file:
is_ready	trace/trace_selftest.c	/^	struct completion	is_ready;$/;"	m	struct:wakeup_test_data	typeref:struct:wakeup_test_data::completion	file:
is_reg64	bpf/verifier.c	/^static bool is_reg64(struct bpf_verifier_env *env, struct bpf_insn *insn,$/;"	f	file:
is_release_function	bpf/verifier.c	/^static bool is_release_function(enum bpf_func_id func_id)$/;"	f	file:
is_ret_probe	trace/trace_uprobe.c	/^static inline bool is_ret_probe(struct trace_uprobe *tu)$/;"	f	file:
is_rwsem_reader_owned	locking/rwsem.c	/^static inline bool is_rwsem_reader_owned(struct rw_semaphore *sem)$/;"	f	file:
is_same_group	sched/fair.c	/^is_same_group(struct sched_entity *se, struct sched_entity *pse)$/;"	f	file:
is_sb_event	events/core.c	/^static bool is_sb_event(struct perf_event *event)$/;"	f	file:
is_sched_load_balance	cgroup/cpuset.c	/^static inline int is_sched_load_balance(const struct cpuset *cs)$/;"	f	file:
is_si_special	signal.c	/^static inline int is_si_special(const struct kernel_siginfo *info)$/;"	f	file:
is_signed	trace/trace.h	/^	int			is_signed;$/;"	m	struct:ftrace_event_field
is_signed	trace/trace_events_hist.c	/^	bool is_signed;$/;"	m	struct:synth_field	file:
is_signed	trace/trace_events_hist.c	/^	unsigned int                    is_signed;$/;"	m	struct:hist_field	file:
is_signed	trace/trace_probe.h	/^	int			is_signed;	\/* Signed flag *\/$/;"	m	struct:fetch_type
is_singleblock	ptrace.c	790;"	d	file:
is_singleblock	ptrace.c	792;"	d	file:
is_singlestep	ptrace.c	784;"	d	file:
is_singlestep	ptrace.c	786;"	d	file:
is_sk_reg	bpf/verifier.c	/^static bool is_sk_reg(struct bpf_verifier_env *env, int regno)$/;"	f	file:
is_softlockup	watchdog.c	/^static int is_softlockup(unsigned long touch_ts)$/;"	f	file:
is_spillable_regtype	bpf/verifier.c	/^static bool is_spillable_regtype(enum bpf_reg_type type)$/;"	f	file:
is_spread_page	cgroup/cpuset.c	/^static inline int is_spread_page(const struct cpuset *cs)$/;"	f	file:
is_spread_slab	cgroup/cpuset.c	/^static inline int is_spread_slab(const struct cpuset *cs)$/;"	f	file:
is_state_visited	bpf/verifier.c	/^static int is_state_visited(struct bpf_verifier_env *env, int insn_idx)$/;"	f	file:
is_string	trace/trace_events_hist.c	/^	bool is_string;$/;"	m	struct:synth_field	file:
is_string_field	trace/trace.h	/^static inline bool is_string_field(struct ftrace_event_field *field)$/;"	f
is_swbp_insn	events/uprobes.c	/^bool __weak is_swbp_insn(uprobe_opcode_t *insn)$/;"	f
is_swiotlb_active	dma/swiotlb.c	/^bool is_swiotlb_active(void)$/;"	f
is_synth_event	trace/trace_events_hist.c	/^static bool is_synth_event(struct dyn_event *ev)$/;"	f	file:
is_sysemu_singlestep	ptrace.c	796;"	d	file:
is_sysemu_singlestep	ptrace.c	798;"	d	file:
is_timers_nohz_active	time/timer.c	/^static inline bool is_timers_nohz_active(void) { return false; }$/;"	f	file:
is_timers_nohz_active	time/timer.c	/^static inline bool is_timers_nohz_active(void)$/;"	f	file:
is_trace_kprobe	trace/trace_kprobe.c	/^static bool is_trace_kprobe(struct dyn_event *ev)$/;"	f	file:
is_trace_uprobe	trace/trace_uprobe.c	/^static bool is_trace_uprobe(struct dyn_event *ev)$/;"	f	file:
is_tracing_prog_type	bpf/verifier.c	/^static bool is_tracing_prog_type(enum bpf_prog_type type)$/;"	f	file:
is_tracing_stopped	trace/trace.c	/^int is_tracing_stopped(void)$/;"	f
is_trap_at_addr	events/uprobes.c	/^static int is_trap_at_addr(struct mm_struct *mm, unsigned long vaddr)$/;"	f	file:
is_trap_insn	events/uprobes.c	/^bool __weak is_trap_insn(uprobe_opcode_t *insn)$/;"	f
is_var_ref	trace/trace_events_hist.c	/^static bool is_var_ref(char *var_name)$/;"	f	file:
istate	irq/internals.h	20;"	d
it_real_fn	time/itimer.c	/^enum hrtimer_restart it_real_fn(struct hrtimer *timer)$/;"	f
iter	trace/trace.c	/^	struct trace_iterator	iter;$/;"	m	struct:ftrace_buffer_info	typeref:struct:ftrace_buffer_info::trace_iterator	file:
iter	trace/trace_kdb.c	/^static struct trace_iterator iter;$/;"	v	typeref:struct:trace_iterator	file:
iter_end	locking/lockdep_proc.c	/^	struct lock_stat_data *iter_end;$/;"	m	struct:lock_stat_seq	typeref:struct:lock_stat_seq::lock_stat_data	file:
iterate_chain_key	locking/lockdep.c	/^static inline u64 iterate_chain_key(u64 key, u32 idx)$/;"	f	file:
iterate_groups	sched/psi.c	/^static struct psi_group *iterate_groups(struct task_struct *task, void **iter)$/;"	f	file:
itimer_delete	time/posix-timers.c	/^static void itimer_delete(struct k_itimer *timer)$/;"	f	file:
itimer_get_remtime	time/itimer.c	/^static struct timeval itimer_get_remtime(struct hrtimer *timer)$/;"	f	file:
jiffies	time/jiffies.c	/^EXPORT_SYMBOL(jiffies);$/;"	v
jiffies64_to_msecs	time/time.c	/^EXPORT_SYMBOL(jiffies64_to_msecs);$/;"	v
jiffies64_to_msecs	time/time.c	/^u64 jiffies64_to_msecs(const u64 j)$/;"	f
jiffies64_to_nsecs	time/time.c	/^EXPORT_SYMBOL(jiffies64_to_nsecs);$/;"	v
jiffies64_to_nsecs	time/time.c	/^u64 jiffies64_to_nsecs(u64 j)$/;"	f
jiffies_64	time/timer.c	/^EXPORT_SYMBOL(jiffies_64);$/;"	v
jiffies_64_to_clock_t	time/time.c	/^EXPORT_SYMBOL(jiffies_64_to_clock_t);$/;"	v
jiffies_64_to_clock_t	time/time.c	/^u64 jiffies_64_to_clock_t(u64 x)$/;"	f
jiffies_force_qs	rcu/tree.h	/^	unsigned long jiffies_force_qs;		\/* Time at which to invoke *\/$/;"	m	struct:rcu_state
jiffies_kick_kthreads	rcu/tree.h	/^	unsigned long jiffies_kick_kthreads;	\/* Time at which to kick *\/$/;"	m	struct:rcu_state
jiffies_read	time/jiffies.c	/^static u64 jiffies_read(struct clocksource *cs)$/;"	f	file:
jiffies_resched	rcu/tree.h	/^	unsigned long jiffies_resched;		\/* Time at which to resched *\/$/;"	m	struct:rcu_state
jiffies_stall	rcu/tree.h	/^	unsigned long jiffies_stall;		\/* Time at which to check *\/$/;"	m	struct:rcu_state
jiffies_till_first_fqs	rcu/tree.c	/^static ulong jiffies_till_first_fqs = ULONG_MAX;$/;"	v	file:
jiffies_till_next_fqs	rcu/tree.c	/^static ulong jiffies_till_next_fqs = ULONG_MAX;$/;"	v	file:
jiffies_till_sched_qs	rcu/tree.c	/^static ulong jiffies_till_sched_qs = ULONG_MAX;$/;"	v	file:
jiffies_to_clock_t	time/time.c	/^EXPORT_SYMBOL(jiffies_to_clock_t);$/;"	v
jiffies_to_clock_t	time/time.c	/^clock_t jiffies_to_clock_t(unsigned long x)$/;"	f
jiffies_to_msecs	time/time.c	/^EXPORT_SYMBOL(jiffies_to_msecs);$/;"	v
jiffies_to_msecs	time/time.c	/^unsigned int jiffies_to_msecs(const unsigned long j)$/;"	f
jiffies_to_sched_qs	rcu/tree.c	/^static ulong jiffies_to_sched_qs; \/* See adjust_jiffies_till_sched_qs(). *\/$/;"	v	file:
jiffies_to_timespec64	time/time.c	/^EXPORT_SYMBOL(jiffies_to_timespec64);$/;"	v
jiffies_to_timespec64	time/time.c	/^jiffies_to_timespec64(const unsigned long jiffies, struct timespec64 *value)$/;"	f
jiffies_to_timeval	time/time.c	/^EXPORT_SYMBOL(jiffies_to_timeval);$/;"	v
jiffies_to_timeval	time/time.c	/^void jiffies_to_timeval(const unsigned long jiffies, struct timeval *value)$/;"	f
jiffies_to_usecs	time/time.c	/^EXPORT_SYMBOL(jiffies_to_usecs);$/;"	v
jiffies_to_usecs	time/time.c	/^unsigned int jiffies_to_usecs(const unsigned long j)$/;"	f
jiffy_sched_clock_read	time/sched_clock.c	/^static u64 notrace jiffy_sched_clock_read(void)$/;"	f	file:
jit_subprogs	bpf/verifier.c	/^static int jit_subprogs(struct bpf_verifier_env *env)$/;"	f	file:
jump_label_add_module	jump_label.c	/^static int jump_label_add_module(struct module *mod)$/;"	f	file:
jump_label_apply_nops	jump_label.c	/^void jump_label_apply_nops(struct module *mod)$/;"	f
jump_label_can_update	jump_label.c	/^static bool jump_label_can_update(struct jump_entry *entry, bool init)$/;"	f	file:
jump_label_cmp	jump_label.c	/^static int jump_label_cmp(const void *a, const void *b)$/;"	f	file:
jump_label_del_module	jump_label.c	/^static void jump_label_del_module(struct module *mod)$/;"	f	file:
jump_label_init	jump_label.c	/^void __init jump_label_init(void)$/;"	f
jump_label_init_module	jump_label.c	/^early_initcall(jump_label_init_module);$/;"	v
jump_label_init_module	jump_label.c	/^static __init int jump_label_init_module(void)$/;"	f	file:
jump_label_init_type	jump_label.c	/^static enum jump_label_type jump_label_init_type(struct jump_entry *entry)$/;"	f	file:
jump_label_key__false	sched/debug.c	76;"	d	file:
jump_label_key__true	sched/debug.c	75;"	d	file:
jump_label_lock	jump_label.c	/^void jump_label_lock(void)$/;"	f
jump_label_module_nb	jump_label.c	/^static struct notifier_block jump_label_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
jump_label_module_notify	jump_label.c	/^jump_label_module_notify(struct notifier_block *self, unsigned long val,$/;"	f	file:
jump_label_rate_limit	jump_label.c	/^EXPORT_SYMBOL_GPL(jump_label_rate_limit);$/;"	v
jump_label_rate_limit	jump_label.c	/^void jump_label_rate_limit(struct static_key_deferred *key,$/;"	f
jump_label_sort_entries	jump_label.c	/^jump_label_sort_entries(struct jump_entry *start, struct jump_entry *stop)$/;"	f	file:
jump_label_swap	jump_label.c	/^static void jump_label_swap(void *a, void *b, int size)$/;"	f	file:
jump_label_test	jump_label.c	/^early_initcall(jump_label_test);$/;"	v
jump_label_test	jump_label.c	/^static __init int jump_label_test(void)$/;"	f	file:
jump_label_text_reserved	jump_label.c	/^int jump_label_text_reserved(void *start, void *end)$/;"	f
jump_label_type	jump_label.c	/^static enum jump_label_type jump_label_type(struct jump_entry *entry)$/;"	f	file:
jump_label_unlock	jump_label.c	/^void jump_label_unlock(void)$/;"	f
jump_label_update	jump_label.c	/^static void jump_label_update(struct static_key *key)$/;"	f	file:
jump_label_update_timeout	jump_label.c	/^EXPORT_SYMBOL_GPL(jump_label_update_timeout);$/;"	v
jump_label_update_timeout	jump_label.c	/^void jump_label_update_timeout(struct work_struct *work)$/;"	f
k	power/swap.c	/^	unsigned int k;$/;"	m	struct:swap_map_handle	file:
k_clock	time/posix-timers.h	/^struct k_clock {$/;"	s
k_itimer_rcu_free	time/posix-timers.c	/^static void k_itimer_rcu_free(struct rcu_head *head)$/;"	f	file:
kallsym_iter	kallsyms.c	/^struct kallsym_iter {$/;"	s	file:
kallsyms_expand_symbol	kallsyms.c	/^static unsigned int kallsyms_expand_symbol(unsigned int off,$/;"	f	file:
kallsyms_for_perf	kallsyms.c	/^static inline int kallsyms_for_perf(void)$/;"	f	file:
kallsyms_get_symbol_type	kallsyms.c	/^static char kallsyms_get_symbol_type(unsigned int off)$/;"	f	file:
kallsyms_init	kallsyms.c	/^device_initcall(kallsyms_init);$/;"	v
kallsyms_init	kallsyms.c	/^static int __init kallsyms_init(void)$/;"	f	file:
kallsyms_lookup	kallsyms.c	/^const char *kallsyms_lookup(unsigned long addr,$/;"	f
kallsyms_lookup_name	kallsyms.c	/^EXPORT_SYMBOL_GPL(kallsyms_lookup_name);$/;"	v
kallsyms_lookup_name	kallsyms.c	/^unsigned long kallsyms_lookup_name(const char *name)$/;"	f
kallsyms_lookup_size_offset	kallsyms.c	/^int kallsyms_lookup_size_offset(unsigned long addr, unsigned long *symbolsize,$/;"	f
kallsyms_on_each_symbol	kallsyms.c	/^EXPORT_SYMBOL_GPL(kallsyms_on_each_symbol);$/;"	v
kallsyms_on_each_symbol	kallsyms.c	/^int kallsyms_on_each_symbol(int (*fn)(void *, const char *, struct module *,$/;"	f
kallsyms_op	kallsyms.c	/^static const struct seq_operations kallsyms_op = {$/;"	v	typeref:struct:seq_operations	file:
kallsyms_open	kallsyms.c	/^static int kallsyms_open(struct inode *inode, struct file *file)$/;"	f	file:
kallsyms_operations	kallsyms.c	/^static const struct file_operations kallsyms_operations = {$/;"	v	typeref:struct:file_operations	file:
kallsyms_show_value	kallsyms.c	/^int kallsyms_show_value(void)$/;"	f
kallsyms_sym_address	kallsyms.c	/^static unsigned long kallsyms_sym_address(int idx)$/;"	f	file:
kallsyms_symbol_complete	debug/kdb/kdb_support.c	/^int kallsyms_symbol_complete(char *prefix_name, int max_len)$/;"	f
kallsyms_symbol_name	module.c	/^static const char *kallsyms_symbol_name(struct mod_kallsyms *kallsyms, unsigned int symnum)$/;"	f	file:
kallsyms_symbol_next	debug/kdb/kdb_support.c	/^int kallsyms_symbol_next(char *prefix_name, int flag, int buf_size)$/;"	f
kauditd_hold_skb	audit.c	/^static void kauditd_hold_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_printk_skb	audit.c	/^static void kauditd_printk_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_rehold_skb	audit.c	/^static void kauditd_rehold_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_retry_skb	audit.c	/^static void kauditd_retry_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_send_multicast_skb	audit.c	/^static void kauditd_send_multicast_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_send_queue	audit.c	/^static int kauditd_send_queue(struct sock *sk, u32 portid,$/;"	f	file:
kauditd_task	audit.c	/^static struct task_struct *kauditd_task;$/;"	v	typeref:struct:task_struct	file:
kauditd_thread	audit.c	/^static int kauditd_thread(void *dummy)$/;"	f	file:
kbd_exists	debug/kdb/kdb_keyboard.c	/^static int kbd_exists;$/;"	v	file:
kbd_last_ret	debug/kdb/kdb_keyboard.c	/^static int kbd_last_ret;$/;"	v	file:
kcmp	sys_ni.c	/^COND_SYSCALL(kcmp);$/;"	v
kcmp_cookies_init	kcmp.c	/^arch_initcall(kcmp_cookies_init);$/;"	v
kcmp_cookies_init	kcmp.c	/^static __init int kcmp_cookies_init(void)$/;"	f	file:
kcmp_epoll_target	kcmp.c	/^static int kcmp_epoll_target(struct task_struct *task1,$/;"	f	file:
kcmp_lock	kcmp.c	/^static int kcmp_lock(struct mutex *m1, struct mutex *m2)$/;"	f	file:
kcmp_ptr	kcmp.c	/^static int kcmp_ptr(void *v1, void *v2, enum kcmp_type type)$/;"	f	file:
kcmp_unlock	kcmp.c	/^static void kcmp_unlock(struct mutex *m1, struct mutex *m2)$/;"	f	file:
kcov	kcov.c	/^struct kcov {$/;"	s	file:
kcov_close	kcov.c	/^static int kcov_close(struct inode *inode, struct file *filep)$/;"	f	file:
kcov_fault_in_area	kcov.c	/^static void kcov_fault_in_area(struct kcov *kcov)$/;"	f	file:
kcov_fops	kcov.c	/^static const struct file_operations kcov_fops = {$/;"	v	typeref:struct:file_operations	file:
kcov_get	kcov.c	/^static void kcov_get(struct kcov *kcov)$/;"	f	file:
kcov_init	kcov.c	/^device_initcall(kcov_init);$/;"	v
kcov_init	kcov.c	/^static int __init kcov_init(void)$/;"	f	file:
kcov_ioctl	kcov.c	/^static long kcov_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)$/;"	f	file:
kcov_ioctl_locked	kcov.c	/^static int kcov_ioctl_locked(struct kcov *kcov, unsigned int cmd,$/;"	f	file:
kcov_mmap	kcov.c	/^static int kcov_mmap(struct file *filep, struct vm_area_struct *vma)$/;"	f	file:
kcov_open	kcov.c	/^static int kcov_open(struct inode *inode, struct file *filep)$/;"	f	file:
kcov_put	kcov.c	/^static void kcov_put(struct kcov *kcov)$/;"	f	file:
kcov_task_exit	kcov.c	/^void kcov_task_exit(struct task_struct *t)$/;"	f
kcov_task_init	kcov.c	/^void kcov_task_init(struct task_struct *t)$/;"	f
kdb_base_commands	debug/kdb/kdb_main.c	/^static kdbtab_t kdb_base_commands[KDB_BASE_CMD_MAX];$/;"	v	file:
kdb_bc	debug/kdb/kdb_bp.c	/^static int kdb_bc(int argc, const char **argv)$/;"	f	file:
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	45;"	d
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	57;"	d
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	46;"	d
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	58;"	d
kdb_bp	debug/kdb/kdb_bp.c	/^static int kdb_bp(int argc, const char **argv)$/;"	f	file:
kdb_bp_install	debug/kdb/kdb_bp.c	/^void kdb_bp_install(struct pt_regs *regs)$/;"	f
kdb_bp_remove	debug/kdb/kdb_bp.c	/^void kdb_bp_remove(void)$/;"	f
kdb_bp_t	debug/kdb/kdb_private.h	/^} kdb_bp_t;$/;"	t	typeref:struct:_kdb_bp
kdb_bptype	debug/kdb/kdb_bp.c	/^static char *kdb_bptype(kdb_bp_t *bp)$/;"	f	file:
kdb_breakpoints	debug/kdb/kdb_bp.c	/^kdb_bp_t kdb_breakpoints[KDB_MAXBPT];$/;"	v
kdb_bt	debug/kdb/kdb_bt.c	/^kdb_bt(int argc, const char **argv)$/;"	f
kdb_bt1	debug/kdb/kdb_bt.c	/^kdb_bt1(struct task_struct *p, unsigned long mask,$/;"	f	file:
kdb_buffer	debug/kdb/kdb_io.c	/^static char kdb_buffer[256];	\/* A bit too big to go on stack *\/$/;"	v	file:
kdb_check_flags	debug/kdb/kdb_main.c	/^static inline bool kdb_check_flags(kdb_cmdflags_t flags, int permissions,$/;"	f	file:
kdb_check_regs	debug/kdb/kdb_main.c	/^static int kdb_check_regs(void)$/;"	f	file:
kdb_cmd0	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd0[] = "defcmd dumpcommon \\"\\" \\"Common kdb debugging\\"\\n";$/;"	v	file:
kdb_cmd1	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd1[] = "  set BTAPROMPT 0\\n";$/;"	v	file:
kdb_cmd10	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd10[] = "  pid R\\n";$/;"	v	file:
kdb_cmd11	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd11[] = "  -dumpcommon\\n";$/;"	v	file:
kdb_cmd12	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd12[] = "  -bta\\n";$/;"	v	file:
kdb_cmd13	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd13[] = "endefcmd\\n";$/;"	v	file:
kdb_cmd14	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd14[] = "defcmd dumpcpu \\"\\" \\"Same as dumpall but only tasks on cpus\\"\\n";$/;"	v	file:
kdb_cmd15	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd15[] = "  pid R\\n";$/;"	v	file:
kdb_cmd16	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd16[] = "  -dumpcommon\\n";$/;"	v	file:
kdb_cmd17	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd17[] = "  -btc\\n";$/;"	v	file:
kdb_cmd18	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd18[] = "endefcmd\\n";$/;"	v	file:
kdb_cmd2	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd2[] = "  set LINES 10000\\n";$/;"	v	file:
kdb_cmd3	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd3[] = "  -summary\\n";$/;"	v	file:
kdb_cmd4	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd4[] = "  -cpu\\n";$/;"	v	file:
kdb_cmd5	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd5[] = "  -ps\\n";$/;"	v	file:
kdb_cmd6	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd6[] = "  -dmesg 600\\n";$/;"	v	file:
kdb_cmd7	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd7[] = "  -bt\\n";$/;"	v	file:
kdb_cmd8	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd8[] = "endefcmd\\n";$/;"	v	file:
kdb_cmd9	debug/kdb/gen-kdb_cmds.c	/^static __initdata char kdb_cmd9[] = "defcmd dumpall \\"\\" \\"First line debugging\\"\\n";$/;"	v	file:
kdb_cmd_enabled	debug/kdb/kdb_main.c	/^static int kdb_cmd_enabled = CONFIG_KDB_DEFAULT_ENABLE;$/;"	v	file:
kdb_cmd_init	debug/kdb/kdb_main.c	/^static void __init kdb_cmd_init(void)$/;"	f	file:
kdb_cmderror	debug/kdb/kdb_main.c	/^static void kdb_cmderror(int diag)$/;"	f	file:
kdb_cmds	debug/kdb/gen-kdb_cmds.c	/^extern char *kdb_cmds[]; char __initdata *kdb_cmds[] = {$/;"	v
kdb_command_extend	debug/kdb/kdb_main.c	2657;"	d	file:
kdb_commands	debug/kdb/kdb_main.c	/^static kdbtab_t *kdb_commands;$/;"	v	file:
kdb_common_deinit_state	debug/kdb/kdb_debugger.c	/^int kdb_common_deinit_state(void)$/;"	f
kdb_common_init_state	debug/kdb/kdb_debugger.c	/^int kdb_common_init_state(struct kgdb_state *ks)$/;"	f
kdb_continue_catastrophic	debug/kdb/kdb_main.c	/^static unsigned int kdb_continue_catastrophic =$/;"	v	file:
kdb_continue_catastrophic	debug/kdb/kdb_main.c	/^static unsigned int kdb_continue_catastrophic;$/;"	v	file:
kdb_cpu	debug/kdb/kdb_main.c	/^static int kdb_cpu(int argc, const char **argv)$/;"	f	file:
kdb_cpu_status	debug/kdb/kdb_main.c	/^static void kdb_cpu_status(void)$/;"	f	file:
kdb_curr_task	debug/kdb/kdb_main.c	/^struct task_struct *kdb_curr_task(int cpu)$/;"	f
kdb_current_regs	debug/kdb/kdb_main.c	/^struct pt_regs *kdb_current_regs;$/;"	v	typeref:struct:pt_regs
kdb_current_task	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL(kdb_current_task);$/;"	v
kdb_current_task	debug/kdb/kdb_main.c	/^struct task_struct *kdb_current_task;$/;"	v	typeref:struct:task_struct
kdb_dbtrap_t	debug/kdb/kdb_private.h	/^} kdb_dbtrap_t;$/;"	t	typeref:enum:__anon50
kdb_defcmd	debug/kdb/kdb_main.c	/^static int kdb_defcmd(int argc, const char **argv)$/;"	f	file:
kdb_defcmd2	debug/kdb/kdb_main.c	/^static int kdb_defcmd2(const char *cmdstr, const char *argv0)$/;"	f	file:
kdb_diemsg	debug/kdb/kdb_main.c	/^const char *kdb_diemsg;$/;"	v
kdb_disable_nmi	debug/kdb/kdb_main.c	/^static int kdb_disable_nmi(int argc, const char *argv[])$/;"	f	file:
kdb_dmesg	debug/kdb/kdb_main.c	/^static int kdb_dmesg(int argc, const char **argv)$/;"	f	file:
kdb_do_each_thread	debug/kdb/kdb_private.h	233;"	d
kdb_dumpregs	debug/kdb/kdb_main.c	/^static void kdb_dumpregs(struct pt_regs *regs)$/;"	f	file:
kdb_ef	debug/kdb/kdb_main.c	/^static int kdb_ef(int argc, const char **argv)$/;"	f	file:
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	47;"	d
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	59;"	d
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	48;"	d
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	60;"	d
kdb_env	debug/kdb/kdb_main.c	/^static int kdb_env(int argc, const char **argv)$/;"	f	file:
kdb_exec_defcmd	debug/kdb/kdb_main.c	/^static int kdb_exec_defcmd(int argc, const char **argv)$/;"	f	file:
kdb_f_count_fmt	debug/kdb/kdb_private.h	49;"	d
kdb_f_count_fmt	debug/kdb/kdb_private.h	61;"	d
kdb_flags	debug/kdb/kdb_main.c	/^int kdb_flags;$/;"	v
kdb_flags_index	debug/kdb/kdb_support.c	/^static int kdb_flags_stack[4], kdb_flags_index;$/;"	v	file:
kdb_flags_stack	debug/kdb/kdb_support.c	/^static int kdb_flags_stack[4], kdb_flags_index;$/;"	v	file:
kdb_ftdump	trace/trace_kdb.c	/^static int kdb_ftdump(int argc, const char **argv)$/;"	f	file:
kdb_ftrace_register	trace/trace_kdb.c	/^late_initcall(kdb_ftrace_register);$/;"	v
kdb_ftrace_register	trace/trace_kdb.c	/^static __init int kdb_ftrace_register(void)$/;"	f	file:
kdb_gdb_state_pass	debug/kdb/kdb_debugger.c	/^void kdb_gdb_state_pass(char *buf)$/;"	f
kdb_get_kbd_char	debug/kdb/kdb_keyboard.c	/^EXPORT_SYMBOL_GPL(kdb_get_kbd_char);$/;"	v
kdb_get_kbd_char	debug/kdb/kdb_keyboard.c	/^int kdb_get_kbd_char(void)$/;"	f
kdb_getarea	debug/kdb/kdb_private.h	97;"	d
kdb_getarea_size	debug/kdb/kdb_support.c	/^int kdb_getarea_size(void *res, unsigned long addr, size_t size)$/;"	f
kdb_getphys	debug/kdb/kdb_support.c	/^static int kdb_getphys(void *res, unsigned long addr, size_t size)$/;"	f	file:
kdb_getphysword	debug/kdb/kdb_support.c	/^int kdb_getphysword(unsigned long *word, unsigned long addr, size_t size)$/;"	f
kdb_getstr	debug/kdb/kdb_io.c	/^char *kdb_getstr(char *buffer, size_t bufsize, const char *prompt)$/;"	f
kdb_getword	debug/kdb/kdb_support.c	/^int kdb_getword(unsigned long *word, unsigned long addr, size_t size)$/;"	f
kdb_go	debug/kdb/kdb_main.c	/^static int kdb_go(int argc, const char **argv)$/;"	f	file:
kdb_go_count	debug/kdb/kdb_main.c	/^static int kdb_go_count;$/;"	v	file:
kdb_grep_help	debug/kdb/kdb_main.c	/^static int kdb_grep_help(int argc, const char **argv)$/;"	f	file:
kdb_grep_leading	debug/kdb/kdb_main.c	/^int kdb_grep_leading;$/;"	v
kdb_grep_string	debug/kdb/kdb_main.c	/^char kdb_grep_string[KDB_GREP_STRLEN];$/;"	v
kdb_grep_trailing	debug/kdb/kdb_main.c	/^int kdb_grep_trailing;$/;"	v
kdb_grepping_flag	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL(kdb_grepping_flag);$/;"	v
kdb_grepping_flag	debug/kdb/kdb_main.c	/^int kdb_grepping_flag;$/;"	v
kdb_handle_bp	debug/kdb/kdb_bp.c	/^static void kdb_handle_bp(struct pt_regs *regs, kdb_bp_t *bp)$/;"	f	file:
kdb_help	debug/kdb/kdb_main.c	/^static int kdb_help(int argc, const char **argv)$/;"	f	file:
kdb_init	debug/kdb/kdb_main.c	/^void __init kdb_init(int lvl)$/;"	f
kdb_initbptab	debug/kdb/kdb_bp.c	/^void __init kdb_initbptab(void)$/;"	f
kdb_initial_cpu	debug/kdb/kdb_main.c	/^int kdb_initial_cpu = -1;	\/* cpu number that owns kdb *\/$/;"	v
kdb_inittab	debug/kdb/kdb_main.c	/^static void __init kdb_inittab(void)$/;"	f	file:
kdb_input_flush	debug/kdb/kdb_io.c	/^static void kdb_input_flush(void)$/;"	f	file:
kdb_kbd_cleanup_state	debug/kdb/kdb_keyboard.c	/^void kdb_kbd_cleanup_state(void)$/;"	f
kdb_kbd_cleanup_state	debug/kdb/kdb_private.h	248;"	d
kdb_kgdb	debug/kdb/kdb_main.c	/^static int kdb_kgdb(int argc, const char **argv)$/;"	f	file:
kdb_kill	debug/kdb/kdb_main.c	/^static int kdb_kill(int argc, const char **argv)$/;"	f	file:
kdb_ks	debug/kdb/kdb_debugger.c	/^static struct kgdb_state *kdb_ks;$/;"	v	typeref:struct:kgdb_state	file:
kdb_local	debug/kdb/kdb_main.c	/^static int kdb_local(kdb_reason_t reason, int error, struct pt_regs *regs,$/;"	f	file:
kdb_lsmod	debug/kdb/kdb_main.c	/^static int kdb_lsmod(int argc, const char **argv)$/;"	f	file:
kdb_machreg_fmt	debug/kdb/kdb_private.h	43;"	d
kdb_machreg_fmt	debug/kdb/kdb_private.h	55;"	d
kdb_machreg_fmt0	debug/kdb/kdb_private.h	44;"	d
kdb_machreg_fmt0	debug/kdb/kdb_private.h	56;"	d
kdb_main_loop	debug/kdb/kdb_main.c	/^int kdb_main_loop(kdb_reason_t reason, kdb_reason_t reason2, int error,$/;"	f
kdb_max_commands	debug/kdb/kdb_main.c	/^static int kdb_max_commands = KDB_BASE_CMD_MAX;$/;"	v	file:
kdb_md	debug/kdb/kdb_main.c	/^static int kdb_md(int argc, const char **argv)$/;"	f	file:
kdb_md_line	debug/kdb/kdb_main.c	/^static void kdb_md_line(const char *fmtstr, unsigned long addr,$/;"	f	file:
kdb_mdr	debug/kdb/kdb_main.c	/^static int kdb_mdr(unsigned long addr, unsigned int count)$/;"	f	file:
kdb_mm	debug/kdb/kdb_main.c	/^static int kdb_mm(int argc, const char **argv)$/;"	f	file:
kdb_modules	module.c	/^struct list_head *kdb_modules = &modules; \/* kdb needs the list of modules *\/$/;"	v	typeref:struct:list_head
kdb_name_table	debug/kdb/kdb_support.c	/^static char *kdb_name_table[100];	\/* arbitrary size *\/$/;"	v	file:
kdb_nextline	debug/kdb/kdb_main.c	/^int kdb_nextline = 1;$/;"	v
kdb_nmi_disabled	debug/kdb/kdb_main.c	/^static atomic_t kdb_nmi_disabled;$/;"	v	file:
kdb_param_enable_nmi	debug/kdb/kdb_main.c	/^static int kdb_param_enable_nmi(const char *val, const struct kernel_param *kp)$/;"	f	file:
kdb_param_ops_enable_nmi	debug/kdb/kdb_main.c	/^static const struct kernel_param_ops kdb_param_ops_enable_nmi = {$/;"	v	typeref:struct:kernel_param_ops	file:
kdb_parse	debug/kdb/kdb_main.c	/^int kdb_parse(const char *cmdstr)$/;"	f
kdb_parsebp	debug/kdb/kdb_bp.c	/^static int kdb_parsebp(int argc, const char **argv, int *nextargp, kdb_bp_t *bp)$/;"	f	file:
kdb_per_cpu	debug/kdb/kdb_main.c	/^static int kdb_per_cpu(int argc, const char **argv)$/;"	f	file:
kdb_pid	debug/kdb/kdb_main.c	/^static int kdb_pid(int argc, const char **argv)$/;"	f	file:
kdb_poll_funcs	debug/kdb/kdb_debugger.c	/^EXPORT_SYMBOL_GPL(kdb_poll_funcs);$/;"	v
kdb_poll_funcs	debug/kdb/kdb_debugger.c	/^get_char_func kdb_poll_funcs[] = {$/;"	v
kdb_poll_idx	debug/kdb/kdb_debugger.c	/^EXPORT_SYMBOL_GPL(kdb_poll_idx);$/;"	v
kdb_poll_idx	debug/kdb/kdb_debugger.c	/^int kdb_poll_idx = 1;$/;"	v
kdb_print_nameval	debug/kdb/kdb_support.c	/^void kdb_print_nameval(const char *name, unsigned long val)$/;"	f
kdb_print_state	debug/kdb/kdb_main.c	/^void kdb_print_state(const char *text, int value)$/;"	f
kdb_printbp	debug/kdb/kdb_bp.c	/^static void kdb_printbp(kdb_bp_t *bp, int i)$/;"	f	file:
kdb_printf	debug/kdb/kdb_io.c	/^EXPORT_SYMBOL_GPL(kdb_printf);$/;"	v
kdb_printf	debug/kdb/kdb_io.c	/^int kdb_printf(const char *fmt, ...)$/;"	f
kdb_printf_cpu	debug/kdb/kdb_io.c	/^int kdb_printf_cpu = -1;$/;"	v
kdb_prompt_str	debug/kdb/kdb_io.c	/^char kdb_prompt_str[CMD_BUFLEN];$/;"	v
kdb_ps	debug/kdb/kdb_main.c	/^static int kdb_ps(int argc, const char **argv)$/;"	f	file:
kdb_ps1	debug/kdb/kdb_main.c	/^void kdb_ps1(const struct task_struct *p)$/;"	f
kdb_ps_suppressed	debug/kdb/kdb_main.c	/^void kdb_ps_suppressed(void)$/;"	f
kdb_putarea	debug/kdb/kdb_private.h	98;"	d
kdb_putarea_size	debug/kdb/kdb_support.c	/^int kdb_putarea_size(unsigned long addr, void *res, size_t size)$/;"	f
kdb_putword	debug/kdb/kdb_support.c	/^int kdb_putword(unsigned long addr, unsigned long word, size_t size)$/;"	f
kdb_rd	debug/kdb/kdb_main.c	/^static int kdb_rd(int argc, const char **argv)$/;"	f	file:
kdb_read	debug/kdb/kdb_io.c	/^static char *kdb_read(char *buffer, size_t bufsize)$/;"	f	file:
kdb_read_get_key	debug/kdb/kdb_io.c	/^static int kdb_read_get_key(char *buffer, size_t bufsize)$/;"	f	file:
kdb_reboot	debug/kdb/kdb_main.c	/^static int kdb_reboot(int argc, const char **argv)$/;"	f	file:
kdb_register	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_register);$/;"	v
kdb_register	debug/kdb/kdb_main.c	/^int kdb_register(char *cmd,$/;"	f
kdb_register_flags	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_register_flags);$/;"	v
kdb_register_flags	debug/kdb/kdb_main.c	/^int kdb_register_flags(char *cmd,$/;"	f
kdb_restore_flags	debug/kdb/kdb_support.c	/^void kdb_restore_flags(void)$/;"	f
kdb_rm	debug/kdb/kdb_main.c	/^static int kdb_rm(int argc, const char **argv)$/;"	f	file:
kdb_rwtypes	debug/kdb/kdb_bp.c	/^static char *kdb_rwtypes[] = {$/;"	v	file:
kdb_save_flags	debug/kdb/kdb_support.c	/^void kdb_save_flags(void)$/;"	f
kdb_search_string	debug/kdb/kdb_io.c	/^static int kdb_search_string(char *searched, char *searchfor)$/;"	f	file:
kdb_send_sig	signal.c	/^void kdb_send_sig(struct task_struct *t, int sig)$/;"	f
kdb_set	debug/kdb/kdb_main.c	/^int kdb_set(int argc, const char **argv)$/;"	f
kdb_set_current_task	debug/kdb/kdb_main.c	/^void kdb_set_current_task(struct task_struct *p)$/;"	f
kdb_setsinglestep	debug/kdb/kdb_bp.c	/^static void kdb_setsinglestep(struct pt_regs *regs)$/;"	f	file:
kdb_show_stack	debug/kdb/kdb_bt.c	/^static void kdb_show_stack(struct task_struct *p, void *addr)$/;"	f	file:
kdb_sr	debug/kdb/kdb_main.c	/^static int kdb_sr(int argc, const char **argv)$/;"	f	file:
kdb_ss	debug/kdb/kdb_bp.c	/^static int kdb_ss(int argc, const char **argv)$/;"	f	file:
kdb_state	debug/kdb/kdb_main.c	/^int kdb_state;			\/* General KDB state *\/$/;"	v
kdb_strdup	debug/kdb/kdb_support.c	/^char *kdb_strdup(const char *str, gfp_t type)$/;"	f
kdb_stub	debug/debug_core.h	/^static inline int kdb_stub(struct kgdb_state *ks)$/;"	f
kdb_stub	debug/kdb/kdb_debugger.c	/^int kdb_stub(struct kgdb_state *ks)$/;"	f
kdb_summary	debug/kdb/kdb_main.c	/^static int kdb_summary(int argc, const char **argv)$/;"	f	file:
kdb_symbol_print	debug/kdb/kdb_support.c	/^void kdb_symbol_print(unsigned long addr, const kdb_symtab_t *symtab_p,$/;"	f
kdb_symtab_t	debug/kdb/kdb_private.h	/^		} kdb_symtab_t;$/;"	t	typeref:struct:__ksymtab
kdb_sysinfo	debug/kdb/kdb_main.c	/^static void kdb_sysinfo(struct sysinfo *val)$/;"	f	file:
kdb_task_has_cpu	debug/kdb/kdb_private.h	230;"	d
kdb_task_state	debug/kdb/kdb_support.c	/^unsigned long kdb_task_state(const struct task_struct *p, unsigned long mask)$/;"	f
kdb_task_state_char	debug/kdb/kdb_support.c	/^char kdb_task_state_char (const struct task_struct *p)$/;"	f
kdb_task_state_string	debug/kdb/kdb_support.c	/^unsigned long kdb_task_state_string(const char *s)$/;"	f
kdb_trap_printk	debug/kdb/kdb_io.c	/^int kdb_trap_printk;$/;"	v
kdb_unregister	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_unregister);$/;"	v
kdb_unregister	debug/kdb/kdb_main.c	/^int kdb_unregister(char *cmd)$/;"	f
kdb_walk_kallsyms	kallsyms.c	/^const char *kdb_walk_kallsyms(loff_t *pos)$/;"	f
kdb_while_each_thread	debug/kdb/kdb_private.h	234;"	d
kdballocenv	debug/kdb/kdb_main.c	/^static char *kdballocenv(size_t bytes)$/;"	f	file:
kdbgetaddrarg	debug/kdb/kdb_main.c	/^int kdbgetaddrarg(int argc, const char **argv, int *nextarg,$/;"	f
kdbgetenv	debug/kdb/kdb_main.c	/^char *kdbgetenv(const char *match)$/;"	f
kdbgetintenv	debug/kdb/kdb_main.c	/^int kdbgetintenv(const char *match, int *value)$/;"	f
kdbgetsymval	debug/kdb/kdb_support.c	/^EXPORT_SYMBOL(kdbgetsymval);$/;"	v
kdbgetsymval	debug/kdb/kdb_support.c	/^int kdbgetsymval(const char *symname, kdb_symtab_t *symtab)$/;"	f
kdbgetu64arg	debug/kdb/kdb_main.c	/^int kdbgetu64arg(const char *arg, u64 *value)$/;"	f
kdbgetularg	debug/kdb/kdb_main.c	/^int kdbgetularg(const char *arg, unsigned long *value)$/;"	f
kdbgetulenv	debug/kdb/kdb_main.c	/^static int kdbgetulenv(const char *match, unsigned long *value)$/;"	f	file:
kdbmsg_t	debug/kdb/kdb_main.c	/^} kdbmsg_t;$/;"	t	typeref:struct:_kdbmsg	file:
kdbmsgs	debug/kdb/kdb_main.c	/^static kdbmsg_t kdbmsgs[] = {$/;"	v	file:
kdbnearsym	debug/kdb/kdb_support.c	/^int kdbnearsym(unsigned long addr, kdb_symtab_t *symtab)$/;"	f
kdbnearsym_cleanup	debug/kdb/kdb_support.c	/^void kdbnearsym_cleanup(void)$/;"	f
kdbtab_t	debug/kdb/kdb_private.h	/^} kdbtab_t;$/;"	t	typeref:struct:_kdbtab
kdebug	cred.c	25;"	d	file:
keep_bootcon	printk/printk.c	/^static int __read_mostly keep_bootcon;$/;"	v	file:
keep_bootcon_setup	printk/printk.c	/^static int __init keep_bootcon_setup(char *str)$/;"	f	file:
keep_working	workqueue.c	/^static bool keep_working(struct worker_pool *pool)$/;"	f	file:
kern_path	pid_namespace.c	/^static struct ctl_path kern_path[] = { { .procname = "kernel", }, { } };$/;"	v	typeref:struct:ctl_path	file:
kern_table	sysctl.c	/^static struct ctl_table kern_table[] = {$/;"	v	typeref:struct:ctl_table	file:
kern_table	sysctl.c	/^static struct ctl_table kern_table[];$/;"	v	typeref:struct:ctl_table	file:
kernel_add_sysfs_param	params.c	/^static void __init kernel_add_sysfs_param(const char *name,$/;"	f	file:
kernel_attr_group	ksysfs.c	/^static const struct attribute_group kernel_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
kernel_attrs	ksysfs.c	/^static struct attribute * kernel_attrs[] = {$/;"	v	typeref:struct:attribute	file:
kernel_cpustat	sched/core.c	/^EXPORT_PER_CPU_SYMBOL(kernel_cpustat);$/;"	v
kernel_halt	reboot.c	/^EXPORT_SYMBOL_GPL(kernel_halt);$/;"	v
kernel_halt	reboot.c	/^void kernel_halt(void)$/;"	f
kernel_kexec	kexec_core.c	/^int kernel_kexec(void)$/;"	f
kernel_kobj	ksysfs.c	/^EXPORT_SYMBOL_GPL(kernel_kobj);$/;"	v
kernel_kobj	ksysfs.c	/^struct kobject *kernel_kobj;$/;"	v	typeref:struct:kobject
kernel_param_lock	params.c	/^EXPORT_SYMBOL(kernel_param_lock);$/;"	v
kernel_param_lock	params.c	/^void kernel_param_lock(struct module *mod)$/;"	f
kernel_param_unlock	params.c	/^EXPORT_SYMBOL(kernel_param_unlock);$/;"	v
kernel_param_unlock	params.c	/^void kernel_param_unlock(struct module *mod)$/;"	f
kernel_power_off	reboot.c	/^EXPORT_SYMBOL_GPL(kernel_power_off);$/;"	v
kernel_power_off	reboot.c	/^void kernel_power_off(void)$/;"	f
kernel_restart	reboot.c	/^EXPORT_SYMBOL_GPL(kernel_restart);$/;"	v
kernel_restart	reboot.c	/^void kernel_restart(char *cmd)$/;"	f
kernel_restart_prepare	reboot.c	/^void kernel_restart_prepare(char *cmd)$/;"	f
kernel_shutdown_prepare	reboot.c	/^static void kernel_shutdown_prepare(enum system_states state)$/;"	f	file:
kernel_sigaction	signal.c	/^EXPORT_SYMBOL(kernel_sigaction);$/;"	v
kernel_sigaction	signal.c	/^void kernel_sigaction(int sig, __sighandler_t action)$/;"	f
kernel_symbol_name	module.c	/^static const char *kernel_symbol_name(const struct kernel_symbol *sym)$/;"	f	file:
kernel_symbol_value	module.c	/^static unsigned long kernel_symbol_value(const struct kernel_symbol *sym)$/;"	f	file:
kernel_text_address	extable.c	/^int kernel_text_address(unsigned long addr)$/;"	f
kernel_thread	fork.c	/^pid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)$/;"	f
kernel_wait4	exit.c	/^long kernel_wait4(pid_t upid, int __user *stat_addr, int options,$/;"	f
kernel_waitid	exit.c	/^static long kernel_waitid(int which, pid_t upid, struct waitid_info *infop,$/;"	f	file:
kexec_add_buffer	kexec_file.c	/^int kexec_add_buffer(struct kexec_buf *kbuf)$/;"	f
kexec_apply_relocations	kexec_file.c	/^static int kexec_apply_relocations(struct kimage *image)$/;"	f	file:
kexec_calculate_store_digests	kexec_file.c	/^static int kexec_calculate_store_digests(struct kimage *image)$/;"	f	file:
kexec_crash_image	kexec_core.c	/^struct kimage *kexec_crash_image;$/;"	v	typeref:struct:kimage
kexec_crash_loaded	kexec_core.c	/^EXPORT_SYMBOL_GPL(kexec_crash_loaded);$/;"	v
kexec_crash_loaded	kexec_core.c	/^int kexec_crash_loaded(void)$/;"	f
kexec_crash_loaded	ksysfs.c	/^KERNEL_ATTR_RO(kexec_crash_loaded);$/;"	v
kexec_crash_loaded_show	ksysfs.c	/^static ssize_t kexec_crash_loaded_show(struct kobject *kobj,$/;"	f	file:
kexec_crash_size	ksysfs.c	/^KERNEL_ATTR_RW(kexec_crash_size);$/;"	v
kexec_crash_size_show	ksysfs.c	/^static ssize_t kexec_crash_size_show(struct kobject *kobj,$/;"	f	file:
kexec_crash_size_store	ksysfs.c	/^static ssize_t kexec_crash_size_store(struct kobject *kobj,$/;"	f	file:
kexec_file_load	sys_ni.c	/^COND_SYSCALL(kexec_file_load);$/;"	v
kexec_image	kexec_core.c	/^struct kimage *kexec_image;$/;"	v	typeref:struct:kimage
kexec_image_load_default	kexec_file.c	/^static void *kexec_image_load_default(struct kimage *image)$/;"	f	file:
kexec_image_post_load_cleanup_default	kexec_file.c	/^int kexec_image_post_load_cleanup_default(struct kimage *image)$/;"	f
kexec_image_probe_default	kexec_file.c	/^int kexec_image_probe_default(struct kimage *image, void *buf,$/;"	f
kexec_image_verify_sig_default	kexec_file.c	/^static int kexec_image_verify_sig_default(struct kimage *image, void *buf,$/;"	f	file:
kexec_in_progress	kexec_core.c	/^bool kexec_in_progress = false;$/;"	v
kexec_load	sys_ni.c	/^COND_SYSCALL(kexec_load);$/;"	v
kexec_load	sys_ni.c	/^COND_SYSCALL_COMPAT(kexec_load);$/;"	v
kexec_load_check	kexec.c	/^static inline int kexec_load_check(unsigned long nr_segments,$/;"	f	file:
kexec_load_disabled	kexec_core.c	/^int kexec_load_disabled;$/;"	v
kexec_load_purgatory	kexec_file.c	/^int kexec_load_purgatory(struct kimage *image, struct kexec_buf *kbuf)$/;"	f
kexec_loaded	ksysfs.c	/^KERNEL_ATTR_RO(kexec_loaded);$/;"	v
kexec_loaded_show	ksysfs.c	/^static ssize_t kexec_loaded_show(struct kobject *kobj,$/;"	f	file:
kexec_locate_mem_hole	kexec_file.c	/^int kexec_locate_mem_hole(struct kexec_buf *kbuf)$/;"	f
kexec_mutex	kexec_core.c	/^DEFINE_MUTEX(kexec_mutex);$/;"	v
kexec_purgatory_find_symbol	kexec_file.c	/^static const Elf_Sym *kexec_purgatory_find_symbol(struct purgatory_info *pi,$/;"	f	file:
kexec_purgatory_get_set_symbol	kexec_file.c	/^int kexec_purgatory_get_set_symbol(struct kimage *image, const char *name,$/;"	f
kexec_purgatory_get_symbol_addr	kexec_file.c	/^void *kexec_purgatory_get_symbol_addr(struct kimage *image, const char *name)$/;"	f
kexec_purgatory_setup_kbuf	kexec_file.c	/^static int kexec_purgatory_setup_kbuf(struct purgatory_info *pi,$/;"	f	file:
kexec_purgatory_setup_sechdrs	kexec_file.c	/^static int kexec_purgatory_setup_sechdrs(struct purgatory_info *pi,$/;"	f	file:
kexec_should_crash	kexec_core.c	/^int kexec_should_crash(struct task_struct *p)$/;"	f
kexec_walk_memblock	kexec_file.c	/^static int kexec_walk_memblock(struct kexec_buf *kbuf,$/;"	f	file:
kexec_walk_resources	kexec_file.c	/^static int kexec_walk_resources(struct kexec_buf *kbuf,$/;"	f	file:
key	audit_tree.c	/^	unsigned long key;$/;"	m	struct:audit_chunk	file:
key	bpf/inode.c	/^	void *key;$/;"	m	struct:map_iter	file:
key	cgroup/cgroup-v1.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::__anon12	file:
key	futex.c	/^	union futex_key key;$/;"	m	struct:futex_pi_state	typeref:union:futex_pi_state::futex_key	file:
key	futex.c	/^	union futex_key key;$/;"	m	struct:futex_q	typeref:union:futex_q::futex_key	file:
key	gcov/gcc_4_7.c	/^	const struct gcov_info *key;$/;"	m	struct:gcov_fn_info	typeref:struct:gcov_fn_info::gcov_info	file:
key	trace/trace_events_hist.c	/^	void				*key;$/;"	m	struct:track_data	file:
key	trace/trace_events_hist.c	/^	void			*key;$/;"	m	struct:snapshot_context	file:
key	trace/tracing_map.h	/^	u32				key;$/;"	m	struct:tracing_map_entry
key	trace/tracing_map.h	/^	void				*key;$/;"	m	struct:tracing_map_elt
key	trace/tracing_map.h	/^	void				*key;$/;"	m	struct:tracing_map_sort_entry
key	workqueue.c	/^	struct lock_class_key	key;$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::lock_class_key	file:
key_id_len	module_signing.c	/^	u8	key_id_len;	\/* Length of key identifier [0] *\/$/;"	m	struct:module_signature	file:
key_idx	trace/tracing_map.h	/^	int				key_idx[TRACING_MAP_KEYS_MAX];$/;"	m	struct:tracing_map
key_len	trace/trace_events_hist.c	/^	unsigned int			key_len;$/;"	m	struct:track_data	file:
key_size	trace/trace_events_hist.c	/^	unsigned int			key_size;$/;"	m	struct:hist_trigger_data	file:
key_size	trace/tracing_map.h	/^	unsigned int			key_size;$/;"	m	struct:tracing_map
keyctl	sys_ni.c	/^COND_SYSCALL(keyctl);$/;"	v
keyctl	sys_ni.c	/^COND_SYSCALL_COMPAT(keyctl);$/;"	v
keyhashentry	locking/lockdep.c	/^static inline struct hlist_head *keyhashentry(const struct lock_class_key *key)$/;"	f	file:
keys_match	trace/tracing_map.c	/^static inline bool keys_match(void *key, void *test_key, unsigned key_size)$/;"	f	file:
keys_str	trace/trace_events_hist.c	/^	char		*keys_str;$/;"	m	struct:hist_trigger_attrs	file:
kfc	cgroup/cgroup-internal.h	/^	struct kernfs_fs_context kfc;$/;"	m	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::kernfs_fs_context
kfree_call_rcu	rcu/tree.c	/^EXPORT_SYMBOL_GPL(kfree_call_rcu);$/;"	v
kfree_call_rcu	rcu/tree.c	/^void kfree_call_rcu(struct rcu_head *head, rcu_callback_t func)$/;"	f
kgdb_active	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_active);$/;"	v
kgdb_active	debug/debug_core.c	/^atomic_t			kgdb_active = ATOMIC_INIT(-1);$/;"	v
kgdb_arch_init	debug/debug_core.c	/^int __weak kgdb_arch_init(void)$/;"	f
kgdb_arch_late	debug/debug_core.c	/^void __weak kgdb_arch_late(void)$/;"	f
kgdb_arch_pc	debug/debug_core.c	/^unsigned long __weak kgdb_arch_pc(int exception, struct pt_regs *regs)$/;"	f
kgdb_arch_remove_breakpoint	debug/debug_core.c	/^int __weak kgdb_arch_remove_breakpoint(struct kgdb_bkpt *bpt)$/;"	f
kgdb_arch_set_breakpoint	debug/debug_core.c	/^int __weak kgdb_arch_set_breakpoint(struct kgdb_bkpt *bpt)$/;"	f
kgdb_break	debug/debug_core.c	/^static struct kgdb_bkpt		kgdb_break[KGDB_MAX_BREAKPOINTS] = {$/;"	v	typeref:struct:kgdb_bkpt	file:
kgdb_break_asap	debug/debug_core.c	/^static int kgdb_break_asap;$/;"	v	file:
kgdb_break_tasklet_var	debug/debug_core.c	/^static atomic_t			kgdb_break_tasklet_var;$/;"	v	file:
kgdb_breakpoint	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_breakpoint);$/;"	v
kgdb_breakpoint	debug/debug_core.c	/^noinline void kgdb_breakpoint(void)$/;"	f
kgdb_call_nmi_hook	debug/debug_core.c	/^void __weak kgdb_call_nmi_hook(void *ignored)$/;"	f
kgdb_con_registered	debug/debug_core.c	/^static int kgdb_con_registered;$/;"	v	file:
kgdb_connected	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_connected);$/;"	v
kgdb_connected	debug/debug_core.c	/^int				kgdb_connected;$/;"	v
kgdb_console_write	debug/debug_core.c	/^static void kgdb_console_write(struct console *co, const char *s,$/;"	f	file:
kgdb_contthread	debug/debug_core.c	/^struct task_struct		*kgdb_contthread;$/;"	v	typeref:struct:task_struct
kgdb_cpu_doing_single_step	debug/debug_core.c	/^atomic_t			kgdb_cpu_doing_single_step = ATOMIC_INIT(-1);$/;"	v
kgdb_cpu_enter	debug/debug_core.c	/^static int kgdb_cpu_enter(struct kgdb_state *ks, struct pt_regs *regs,$/;"	f	file:
kgdb_do_roundup	debug/debug_core.c	/^static int kgdb_do_roundup = 1;$/;"	v	file:
kgdb_ebin2mem	debug/gdbstub.c	/^static int kgdb_ebin2mem(char *buf, char *mem, int count)$/;"	f	file:
kgdb_flush_swbreak_addr	debug/debug_core.c	/^static void kgdb_flush_swbreak_addr(unsigned long addr)$/;"	f	file:
kgdb_handle_exception	debug/debug_core.c	/^kgdb_handle_exception(int evector, int signo, int ecode, struct pt_regs *regs)$/;"	f
kgdb_hex2long	debug/gdbstub.c	/^int kgdb_hex2long(char **ptr, unsigned long *long_val)$/;"	f
kgdb_hex2mem	debug/gdbstub.c	/^int kgdb_hex2mem(char *buf, char *mem, int count)$/;"	f
kgdb_info	debug/debug_core.c	/^struct debuggerinfo_struct kgdb_info[NR_CPUS];$/;"	v	typeref:struct:debuggerinfo_struct
kgdb_initial_breakpoint	debug/debug_core.c	/^static void kgdb_initial_breakpoint(void)$/;"	f	file:
kgdb_io_module_registered	debug/debug_core.c	/^int			kgdb_io_module_registered;$/;"	v
kgdb_io_ready	debug/debug_core.c	/^static int kgdb_io_ready(int print_wait)$/;"	f	file:
kgdb_isremovedbreak	debug/debug_core.c	/^int kgdb_isremovedbreak(unsigned long addr)$/;"	f
kgdb_mem2hex	debug/gdbstub.c	/^char *kgdb_mem2hex(char *mem, char *buf, int count)$/;"	f
kgdb_nmicallback	debug/debug_core.c	/^int kgdb_nmicallback(int cpu, void *regs)$/;"	f
kgdb_nmicallin	debug/debug_core.c	/^int kgdb_nmicallin(int cpu, int trapnr, void *regs, int err_code,$/;"	f
kgdb_panic_event	debug/debug_core.c	/^static int kgdb_panic_event(struct notifier_block *self,$/;"	f	file:
kgdb_panic_event_nb	debug/debug_core.c	/^static struct notifier_block kgdb_panic_event_nb = {$/;"	v	typeref:struct:notifier_block	file:
kgdb_reenter_check	debug/debug_core.c	/^static int kgdb_reenter_check(struct kgdb_state *ks)$/;"	f	file:
kgdb_register_callbacks	debug/debug_core.c	/^static void kgdb_register_callbacks(void)$/;"	f	file:
kgdb_register_io_module	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_register_io_module);$/;"	v
kgdb_register_io_module	debug/debug_core.c	/^int kgdb_register_io_module(struct kgdb_io *new_dbg_io_ops)$/;"	f
kgdb_roundup_cpus	debug/debug_core.c	/^void __weak kgdb_roundup_cpus(void)$/;"	f
kgdb_schedule_breakpoint	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_schedule_breakpoint);$/;"	v
kgdb_schedule_breakpoint	debug/debug_core.c	/^void kgdb_schedule_breakpoint(void)$/;"	f
kgdb_setting_breakpoint	debug/debug_core.c	/^atomic_t			kgdb_setting_breakpoint;$/;"	v
kgdb_single_step	debug/debug_core.c	/^int				kgdb_single_step;$/;"	v
kgdb_skipexception	debug/debug_core.c	/^int __weak kgdb_skipexception(int exception, struct pt_regs *regs)$/;"	f
kgdb_sstep_pid	debug/debug_core.c	/^static pid_t			kgdb_sstep_pid;$/;"	v	file:
kgdb_state	debug/debug_core.h	/^struct kgdb_state {$/;"	s
kgdb_tasklet_bpt	debug/debug_core.c	/^static void kgdb_tasklet_bpt(unsigned long ing)$/;"	f	file:
kgdb_transition_check	debug/kdb/kdb_io.c	/^static int kgdb_transition_check(char *buffer)$/;"	f	file:
kgdb_unregister_callbacks	debug/debug_core.c	/^static void kgdb_unregister_callbacks(void)$/;"	f	file:
kgdb_unregister_io_module	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_unregister_io_module);$/;"	v
kgdb_unregister_io_module	debug/debug_core.c	/^void kgdb_unregister_io_module(struct kgdb_io *old_dbg_io_ops)$/;"	f
kgdb_use_con	debug/debug_core.c	/^static int kgdb_use_con;$/;"	v	file:
kgdb_usethread	debug/debug_core.c	/^struct task_struct		*kgdb_usethread;$/;"	v	typeref:struct:task_struct
kgdb_usethreadid	debug/debug_core.h	/^	long			kgdb_usethreadid;$/;"	m	struct:kgdb_state
kgdb_validate_break_address	debug/debug_core.c	/^int __weak kgdb_validate_break_address(unsigned long addr)$/;"	f
kgdbcons	debug/debug_core.c	/^static struct console kgdbcons = {$/;"	v	typeref:struct:console	file:
kgdbreboot	debug/debug_core.c	/^static int kgdbreboot;$/;"	v	file:
kick_all_cpus_sync	smp.c	/^EXPORT_SYMBOL_GPL(kick_all_cpus_sync);$/;"	v
kick_all_cpus_sync	smp.c	/^void kick_all_cpus_sync(void)$/;"	f
kick_ilb	sched/fair.c	/^static void kick_ilb(unsigned int flags)$/;"	f	file:
kick_kprobe_optimizer	kprobes.c	/^static void kick_kprobe_optimizer(void)$/;"	f	file:
kick_process	sched/core.c	/^EXPORT_SYMBOL_GPL(kick_process);$/;"	v
kick_process	sched/core.c	/^void kick_process(struct task_struct *p)$/;"	f
kill_as_cred_perm	signal.c	/^static inline bool kill_as_cred_perm(const struct cred *cred,$/;"	f	file:
kill_css	cgroup/cgroup.c	/^static void kill_css(struct cgroup_subsys_state *css)$/;"	f	file:
kill_ftrace_graph	trace/fgraph.c	/^static bool kill_ftrace_graph;$/;"	v	file:
kill_kprobe	kprobes.c	/^static void kill_kprobe(struct kprobe *p)$/;"	f	file:
kill_ok_by_cred	signal.c	/^static bool kill_ok_by_cred(struct task_struct *t)$/;"	f	file:
kill_optimized_kprobe	kprobes.c	/^static void kill_optimized_kprobe(struct kprobe *p)$/;"	f	file:
kill_optimized_kprobe	kprobes.c	930;"	d	file:
kill_orphaned_pgrp	exit.c	/^kill_orphaned_pgrp(struct task_struct *tsk, struct task_struct *parent)$/;"	f	file:
kill_pgrp	signal.c	/^EXPORT_SYMBOL(kill_pgrp);$/;"	v
kill_pgrp	signal.c	/^int kill_pgrp(struct pid *pid, int sig, int priv)$/;"	f
kill_pid	signal.c	/^EXPORT_SYMBOL(kill_pid);$/;"	v
kill_pid	signal.c	/^int kill_pid(struct pid *pid, int sig, int priv)$/;"	f
kill_pid_info	signal.c	/^int kill_pid_info(int sig, struct kernel_siginfo *info, struct pid *pid)$/;"	f
kill_pid_usb_asyncio	signal.c	/^EXPORT_SYMBOL_GPL(kill_pid_usb_asyncio);$/;"	v
kill_pid_usb_asyncio	signal.c	/^int kill_pid_usb_asyncio(int sig, int errno, sigval_t addr,$/;"	f
kill_proc_info	signal.c	/^static int kill_proc_info(int sig, struct kernel_siginfo *info, pid_t pid)$/;"	f	file:
kill_rules	audit_tree.c	/^static void kill_rules(struct audit_context *context, struct audit_tree *tree)$/;"	f	file:
kill_something_info	signal.c	/^static int kill_something_info(int sig, struct kernel_siginfo *info, pid_t pid)$/;"	f	file:
killed_trees	audit.h	/^	struct list_head killed_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::list_head
kimage_add_entry	kexec_core.c	/^static int kimage_add_entry(struct kimage *image, kimage_entry_t entry)$/;"	f	file:
kimage_add_page	kexec_core.c	/^static int kimage_add_page(struct kimage *image, unsigned long page)$/;"	f	file:
kimage_alloc_control_pages	kexec_core.c	/^struct page *kimage_alloc_control_pages(struct kimage *image,$/;"	f
kimage_alloc_crash_control_pages	kexec_core.c	/^static struct page *kimage_alloc_crash_control_pages(struct kimage *image,$/;"	f	file:
kimage_alloc_init	kexec.c	/^static int kimage_alloc_init(struct kimage **rimage, unsigned long entry,$/;"	f	file:
kimage_alloc_normal_control_pages	kexec_core.c	/^static struct page *kimage_alloc_normal_control_pages(struct kimage *image,$/;"	f	file:
kimage_alloc_page	kexec_core.c	/^static struct page *kimage_alloc_page(struct kimage *image,$/;"	f	file:
kimage_alloc_pages	kexec_core.c	/^static struct page *kimage_alloc_pages(gfp_t gfp_mask, unsigned int order)$/;"	f	file:
kimage_crash_copy_vmcoreinfo	kexec_core.c	/^int kimage_crash_copy_vmcoreinfo(struct kimage *image)$/;"	f
kimage_dst_used	kexec_core.c	/^static kimage_entry_t *kimage_dst_used(struct kimage *image,$/;"	f	file:
kimage_file_alloc_init	kexec_file.c	/^kimage_file_alloc_init(struct kimage **rimage, int kernel_fd,$/;"	f	file:
kimage_file_post_load_cleanup	kexec_file.c	/^void kimage_file_post_load_cleanup(struct kimage *image)$/;"	f
kimage_file_post_load_cleanup	kexec_internal.h	/^static inline void kimage_file_post_load_cleanup(struct kimage *image) { }$/;"	f
kimage_file_prepare_segments	kexec_file.c	/^kimage_file_prepare_segments(struct kimage *image, int kernel_fd, int initrd_fd,$/;"	f	file:
kimage_free	kexec_core.c	/^void kimage_free(struct kimage *image)$/;"	f
kimage_free_entry	kexec_core.c	/^static void kimage_free_entry(kimage_entry_t entry)$/;"	f	file:
kimage_free_extra_pages	kexec_core.c	/^static void kimage_free_extra_pages(struct kimage *image)$/;"	f	file:
kimage_free_page_list	kexec_core.c	/^void kimage_free_page_list(struct list_head *list)$/;"	f
kimage_free_pages	kexec_core.c	/^static void kimage_free_pages(struct page *page)$/;"	f	file:
kimage_is_destination_range	kexec_core.c	/^int kimage_is_destination_range(struct kimage *image,$/;"	f
kimage_load_crash_segment	kexec_core.c	/^static int kimage_load_crash_segment(struct kimage *image,$/;"	f	file:
kimage_load_normal_segment	kexec_core.c	/^static int kimage_load_normal_segment(struct kimage *image,$/;"	f	file:
kimage_load_segment	kexec_core.c	/^int kimage_load_segment(struct kimage *image,$/;"	f
kimage_set_destination	kexec_core.c	/^static int kimage_set_destination(struct kimage *image,$/;"	f	file:
kimage_terminate	kexec_core.c	/^void kimage_terminate(struct kimage *image)$/;"	f
kind_ops	bpf/btf.c	/^static const struct btf_kind_operations * const kind_ops[NR_BTF_KINDS] = {$/;"	v	file:
kind_ops	bpf/btf.c	/^static const struct btf_kind_operations * const kind_ops[NR_BTF_KINDS];$/;"	v	file:
klp_add_nops	livepatch/core.c	/^static int klp_add_nops(struct klp_patch *patch)$/;"	f	file:
klp_add_object_nops	livepatch/core.c	/^static int klp_add_object_nops(struct klp_patch *patch,$/;"	f	file:
klp_alloc_func_nop	livepatch/core.c	/^static struct klp_func *klp_alloc_func_nop(struct klp_func *old_func,$/;"	f	file:
klp_alloc_object_dynamic	livepatch/core.c	/^static struct klp_object *klp_alloc_object_dynamic(const char *name,$/;"	f	file:
klp_cancel_transition	livepatch/transition.c	/^void klp_cancel_transition(void)$/;"	f
klp_check_stack	livepatch/transition.c	/^static int klp_check_stack(struct task_struct *task, char *err_buf)$/;"	f	file:
klp_check_stack_func	livepatch/transition.c	/^static int klp_check_stack_func(struct klp_func *func, unsigned long *entries,$/;"	f	file:
klp_cleanup_module_patches_limited	livepatch/core.c	/^static void klp_cleanup_module_patches_limited(struct module *mod,$/;"	f	file:
klp_complete_transition	livepatch/transition.c	/^static void klp_complete_transition(void)$/;"	f	file:
klp_copy_process	livepatch/transition.c	/^void klp_copy_process(struct task_struct *child)$/;"	f
klp_discard_nops	livepatch/core.c	/^void klp_discard_nops(struct klp_patch *new_patch)$/;"	f
klp_discard_replaced_patches	livepatch/core.c	/^void klp_discard_replaced_patches(struct klp_patch *new_patch)$/;"	f
klp_enable_patch	livepatch/core.c	/^EXPORT_SYMBOL_GPL(klp_enable_patch);$/;"	v
klp_enable_patch	livepatch/core.c	/^int klp_enable_patch(struct klp_patch *patch)$/;"	f
klp_find_arg	livepatch/core.c	/^struct klp_find_arg {$/;"	s	file:
klp_find_callback	livepatch/core.c	/^static int klp_find_callback(void *data, const char *name,$/;"	f	file:
klp_find_func	livepatch/core.c	/^static struct klp_func *klp_find_func(struct klp_object *obj,$/;"	f	file:
klp_find_object	livepatch/core.c	/^static struct klp_object *klp_find_object(struct klp_patch *patch,$/;"	f	file:
klp_find_object_module	livepatch/core.c	/^static void klp_find_object_module(struct klp_object *obj)$/;"	f	file:
klp_find_object_symbol	livepatch/core.c	/^static int klp_find_object_symbol(const char *objname, const char *name,$/;"	f	file:
klp_find_ops	livepatch/patch.c	/^struct klp_ops *klp_find_ops(void *old_func)$/;"	f
klp_for_each_patch	livepatch/core.h	13;"	d
klp_for_each_patch_safe	livepatch/core.h	10;"	d
klp_force_transition	livepatch/transition.c	/^void klp_force_transition(void)$/;"	f
klp_free_func_nop	livepatch/core.c	/^static void klp_free_func_nop(struct klp_func *func)$/;"	f	file:
klp_free_object_dynamic	livepatch/core.c	/^static void klp_free_object_dynamic(struct klp_object *obj)$/;"	f	file:
klp_free_object_loaded	livepatch/core.c	/^static void klp_free_object_loaded(struct klp_object *obj)$/;"	f	file:
klp_free_objects	livepatch/core.c	/^static void klp_free_objects(struct klp_patch *patch)$/;"	f	file:
klp_free_objects_dynamic	livepatch/core.c	/^static void klp_free_objects_dynamic(struct klp_patch *patch)$/;"	f	file:
klp_free_patch_finish	livepatch/core.c	/^static void klp_free_patch_finish(struct klp_patch *patch)$/;"	f	file:
klp_free_patch_start	livepatch/core.c	/^void klp_free_patch_start(struct klp_patch *patch)$/;"	f
klp_free_patch_work_fn	livepatch/core.c	/^static void klp_free_patch_work_fn(struct work_struct *work)$/;"	f	file:
klp_ftrace_handler	livepatch/patch.c	/^static void notrace klp_ftrace_handler(unsigned long ip,$/;"	f	file:
klp_get_ftrace_location	livepatch/patch.c	/^static unsigned long klp_get_ftrace_location(unsigned long faddr)$/;"	f	file:
klp_init	livepatch/core.c	/^module_init(klp_init);$/;"	v
klp_init	livepatch/core.c	/^static int __init klp_init(void)$/;"	f	file:
klp_init_func	livepatch/core.c	/^static int klp_init_func(struct klp_object *obj, struct klp_func *func)$/;"	f	file:
klp_init_func_early	livepatch/core.c	/^static void klp_init_func_early(struct klp_object *obj,$/;"	f	file:
klp_init_object	livepatch/core.c	/^static int klp_init_object(struct klp_patch *patch, struct klp_object *obj)$/;"	f	file:
klp_init_object_early	livepatch/core.c	/^static void klp_init_object_early(struct klp_patch *patch,$/;"	f	file:
klp_init_object_loaded	livepatch/core.c	/^static int klp_init_object_loaded(struct klp_patch *patch,$/;"	f	file:
klp_init_patch	livepatch/core.c	/^static int klp_init_patch(struct klp_patch *patch)$/;"	f	file:
klp_init_patch_early	livepatch/core.c	/^static int klp_init_patch_early(struct klp_patch *patch)$/;"	f	file:
klp_init_transition	livepatch/transition.c	/^void klp_init_transition(struct klp_patch *patch, int state)$/;"	f
klp_initialized	livepatch/core.c	/^static bool klp_initialized(void)$/;"	f	file:
klp_is_module	livepatch/core.c	/^static bool klp_is_module(struct klp_object *obj)$/;"	f	file:
klp_is_object_loaded	livepatch/core.h	/^static inline bool klp_is_object_loaded(struct klp_object *obj)$/;"	f
klp_kobj_release_func	livepatch/core.c	/^static void klp_kobj_release_func(struct kobject *kobj)$/;"	f	file:
klp_kobj_release_object	livepatch/core.c	/^static void klp_kobj_release_object(struct kobject *kobj)$/;"	f	file:
klp_kobj_release_patch	livepatch/core.c	/^static void klp_kobj_release_patch(struct kobject *kobj)$/;"	f	file:
klp_ktype_func	livepatch/core.c	/^static struct kobj_type klp_ktype_func = {$/;"	v	typeref:struct:kobj_type	file:
klp_ktype_object	livepatch/core.c	/^static struct kobj_type klp_ktype_object = {$/;"	v	typeref:struct:kobj_type	file:
klp_ktype_patch	livepatch/core.c	/^static struct kobj_type klp_ktype_patch = {$/;"	v	typeref:struct:kobj_type	file:
klp_module_coming	livepatch/core.c	/^int klp_module_coming(struct module *mod)$/;"	f
klp_module_going	livepatch/core.c	/^void klp_module_going(struct module *mod)$/;"	f
klp_mutex	livepatch/core.c	/^DEFINE_MUTEX(klp_mutex);$/;"	v
klp_ops	livepatch/patch.h	/^struct klp_ops {$/;"	s
klp_patch	livepatch/core.c	/^ATTRIBUTE_GROUPS(klp_patch);$/;"	v
klp_patch_attrs	livepatch/core.c	/^static struct attribute *klp_patch_attrs[] = {$/;"	v	typeref:struct:attribute	file:
klp_patch_func	livepatch/patch.c	/^static int klp_patch_func(struct klp_func *func)$/;"	f	file:
klp_patch_object	livepatch/patch.c	/^int klp_patch_object(struct klp_object *obj)$/;"	f
klp_patches	livepatch/core.c	/^LIST_HEAD(klp_patches);$/;"	v
klp_post_patch_callback	livepatch/core.h	/^static inline void klp_post_patch_callback(struct klp_object *obj)$/;"	f
klp_post_unpatch_callback	livepatch/core.h	/^static inline void klp_post_unpatch_callback(struct klp_object *obj)$/;"	f
klp_pre_patch_callback	livepatch/core.h	/^static inline int klp_pre_patch_callback(struct klp_object *obj)$/;"	f
klp_pre_unpatch_callback	livepatch/core.h	/^static inline void klp_pre_unpatch_callback(struct klp_object *obj)$/;"	f
klp_resolve_symbols	livepatch/core.c	/^static int klp_resolve_symbols(Elf_Shdr *relasec, struct module *pmod)$/;"	f	file:
klp_reverse_transition	livepatch/transition.c	/^void klp_reverse_transition(void)$/;"	f
klp_root_kobj	livepatch/core.c	/^static struct kobject *klp_root_kobj;$/;"	v	typeref:struct:kobject	file:
klp_send_signals	livepatch/transition.c	/^static void klp_send_signals(void)$/;"	f	file:
klp_shadow	livepatch/shadow.c	/^struct klp_shadow {$/;"	s	file:
klp_shadow_alloc	livepatch/shadow.c	/^EXPORT_SYMBOL_GPL(klp_shadow_alloc);$/;"	v
klp_shadow_alloc	livepatch/shadow.c	/^void *klp_shadow_alloc(void *obj, unsigned long id,$/;"	f
klp_shadow_free	livepatch/shadow.c	/^EXPORT_SYMBOL_GPL(klp_shadow_free);$/;"	v
klp_shadow_free	livepatch/shadow.c	/^void klp_shadow_free(void *obj, unsigned long id, klp_shadow_dtor_t dtor)$/;"	f
klp_shadow_free_all	livepatch/shadow.c	/^EXPORT_SYMBOL_GPL(klp_shadow_free_all);$/;"	v
klp_shadow_free_all	livepatch/shadow.c	/^void klp_shadow_free_all(unsigned long id, klp_shadow_dtor_t dtor)$/;"	f
klp_shadow_free_struct	livepatch/shadow.c	/^static void klp_shadow_free_struct(struct klp_shadow *shadow,$/;"	f	file:
klp_shadow_get	livepatch/shadow.c	/^EXPORT_SYMBOL_GPL(klp_shadow_get);$/;"	v
klp_shadow_get	livepatch/shadow.c	/^void *klp_shadow_get(void *obj, unsigned long id)$/;"	f
klp_shadow_get_or_alloc	livepatch/shadow.c	/^EXPORT_SYMBOL_GPL(klp_shadow_get_or_alloc);$/;"	v
klp_shadow_get_or_alloc	livepatch/shadow.c	/^void *klp_shadow_get_or_alloc(void *obj, unsigned long id,$/;"	f
klp_shadow_match	livepatch/shadow.c	/^static inline bool klp_shadow_match(struct klp_shadow *shadow, void *obj,$/;"	f	file:
klp_signals_cnt	livepatch/transition.c	/^static unsigned int klp_signals_cnt;$/;"	v	file:
klp_start_transition	livepatch/transition.c	/^void klp_start_transition(void)$/;"	f
klp_sync	livepatch/transition.c	/^static void klp_sync(struct work_struct *work)$/;"	f	file:
klp_synchronize_transition	livepatch/transition.c	/^static void klp_synchronize_transition(void)$/;"	f	file:
klp_target_state	livepatch/transition.c	/^static int klp_target_state = KLP_UNDEFINED;$/;"	v	file:
klp_transition_patch	livepatch/transition.c	/^struct klp_patch *klp_transition_patch;$/;"	v	typeref:struct:klp_patch
klp_transition_work_fn	livepatch/transition.c	/^static void klp_transition_work_fn(struct work_struct *work)$/;"	f	file:
klp_try_complete_transition	livepatch/transition.c	/^void klp_try_complete_transition(void)$/;"	f
klp_try_switch_task	livepatch/transition.c	/^static bool klp_try_switch_task(struct task_struct *task)$/;"	f	file:
klp_unpatch_func	livepatch/patch.c	/^static void klp_unpatch_func(struct klp_func *func)$/;"	f	file:
klp_unpatch_object	livepatch/patch.c	/^void klp_unpatch_object(struct klp_object *obj)$/;"	f
klp_unpatch_objects	livepatch/patch.c	/^void klp_unpatch_objects(struct klp_patch *patch)$/;"	f
klp_unpatch_objects_dynamic	livepatch/patch.c	/^void klp_unpatch_objects_dynamic(struct klp_patch *patch)$/;"	f
klp_update_patch_state	livepatch/transition.c	/^void klp_update_patch_state(struct task_struct *task)$/;"	f
klp_write_object_relocations	livepatch/core.c	/^static int klp_write_object_relocations(struct module *pmod,$/;"	f	file:
km_diag	debug/kdb/kdb_main.c	/^	int	km_diag;	\/* kdb diagnostic *\/$/;"	m	struct:_kdbmsg	file:
km_msg	debug/kdb/kdb_main.c	/^	char	*km_msg;	\/* Corresponding message text *\/$/;"	m	struct:_kdbmsg	file:
kmalloc_parameter	params.c	/^static void *kmalloc_parameter(unsigned int size)$/;"	f	file:
kmalloced_param	params.c	/^struct kmalloced_param {$/;"	s	file:
kmemleak_load_module	module.c	/^static inline void kmemleak_load_module(const struct module *mod,$/;"	f	file:
kmemleak_load_module	module.c	/^static void kmemleak_load_module(const struct module *mod,$/;"	f	file:
kmod_concurrent_max	kmod.c	/^static atomic_t kmod_concurrent_max = ATOMIC_INIT(MAX_KMOD_CONCURRENT);$/;"	v	file:
kmsg_dump	printk/printk.c	/^void kmsg_dump(enum kmsg_dump_reason reason)$/;"	f
kmsg_dump_get_buffer	printk/printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_get_buffer);$/;"	v
kmsg_dump_get_buffer	printk/printk.c	/^bool kmsg_dump_get_buffer(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_get_line	printk/printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_get_line);$/;"	v
kmsg_dump_get_line	printk/printk.c	/^bool kmsg_dump_get_line(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_get_line_nolock	printk/printk.c	/^bool kmsg_dump_get_line_nolock(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_register	printk/printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_register);$/;"	v
kmsg_dump_register	printk/printk.c	/^int kmsg_dump_register(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_rewind	printk/printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_rewind);$/;"	v
kmsg_dump_rewind	printk/printk.c	/^void kmsg_dump_rewind(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_rewind_nolock	printk/printk.c	/^void kmsg_dump_rewind_nolock(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_unregister	printk/printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_unregister);$/;"	v
kmsg_dump_unregister	printk/printk.c	/^int kmsg_dump_unregister(struct kmsg_dumper *dumper)$/;"	f
kmsg_fops	printk/printk.c	/^const struct file_operations kmsg_fops = {$/;"	v	typeref:struct:file_operations
known_siginfo_layout	signal.c	/^static bool known_siginfo_layout(unsigned sig, int si_code)$/;"	f	file:
knt1_size	debug/kdb/kdb_support.c	87;"	d	file:
kobj2pinst	padata.c	889;"	d	file:
kp	fail_function.c	/^	struct kprobe kp;$/;"	m	struct:fei_attr	typeref:struct:fei_attr::kprobe	file:
kp	test_kprobes.c	/^static struct kprobe kp = {$/;"	v	typeref:struct:kprobe	file:
kp2	test_kprobes.c	/^static struct kprobe kp2 = {$/;"	v	typeref:struct:kprobe	file:
kp_post_handler	test_kprobes.c	/^static void kp_post_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
kp_post_handler2	test_kprobes.c	/^static void kp_post_handler2(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
kp_pre_handler	test_kprobes.c	/^static int kp_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
kp_pre_handler2	test_kprobes.c	/^static int kp_pre_handler2(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
kprobe_add_area_blacklist	kprobes.c	/^int kprobe_add_area_blacklist(unsigned long start, unsigned long end)$/;"	f
kprobe_add_ksym_blacklist	kprobes.c	/^int kprobe_add_ksym_blacklist(unsigned long entry)$/;"	f
kprobe_addr	kprobes.c	/^static kprobe_opcode_t *kprobe_addr(struct kprobe *p)$/;"	f	file:
kprobe_aggrprobe	kprobes.c	/^static inline int kprobe_aggrprobe(struct kprobe *p)$/;"	f	file:
kprobe_attr_groups	events/core.c	/^static const struct attribute_group *kprobe_attr_groups[] = {$/;"	v	typeref:struct:attribute_group	file:
kprobe_attrs	events/core.c	/^static struct attribute *kprobe_attrs[] = {$/;"	v	typeref:struct:attribute	file:
kprobe_blacklist_open	kprobes.c	/^static int kprobe_blacklist_open(struct inode *inode, struct file *filp)$/;"	f	file:
kprobe_blacklist_seq_next	kprobes.c	/^static void *kprobe_blacklist_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
kprobe_blacklist_seq_ops	kprobes.c	/^static const struct seq_operations kprobe_blacklist_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
kprobe_blacklist_seq_show	kprobes.c	/^static int kprobe_blacklist_seq_show(struct seq_file *m, void *v)$/;"	f	file:
kprobe_blacklist_seq_start	kprobes.c	/^static void *kprobe_blacklist_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
kprobe_disarmed	kprobes.c	/^static inline int kprobe_disarmed(struct kprobe *p)$/;"	f	file:
kprobe_disarmed	kprobes.c	935;"	d	file:
kprobe_dispatcher	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kprobe_dispatcher);$/;"	v
kprobe_dispatcher	trace/trace_kprobe.c	/^static int kprobe_dispatcher(struct kprobe *kp, struct pt_regs *regs)$/;"	f	file:
kprobe_event_define_fields	trace/trace_kprobe.c	/^static int kprobe_event_define_fields(struct trace_event_call *event_call)$/;"	f	file:
kprobe_events_ops	trace/trace_kprobe.c	/^static const struct file_operations kprobe_events_ops = {$/;"	v	typeref:struct:file_operations	file:
kprobe_exceptions_nb	kprobes.c	/^static struct notifier_block kprobe_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
kprobe_exceptions_notify	kprobes.c	/^NOKPROBE_SYMBOL(kprobe_exceptions_notify);$/;"	v
kprobe_exceptions_notify	kprobes.c	/^int __weak kprobe_exceptions_notify(struct notifier_block *self,$/;"	f
kprobe_flush_task	kprobes.c	/^NOKPROBE_SYMBOL(kprobe_flush_task);$/;"	v
kprobe_flush_task	kprobes.c	/^void kprobe_flush_task(struct task_struct *tk)$/;"	f
kprobe_format_group	events/core.c	/^static struct attribute_group kprobe_format_group = {$/;"	v	typeref:struct:attribute_group	file:
kprobe_ftrace_enabled	kprobes.c	/^static int kprobe_ftrace_enabled;$/;"	v	file:
kprobe_funcs	trace/trace_kprobe.c	/^static struct trace_event_functions kprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
kprobe_insn_page	kprobes.c	/^struct kprobe_insn_page {$/;"	s	file:
kprobe_insn_slots	kprobes.c	/^struct kprobe_insn_cache kprobe_insn_slots = {$/;"	v	typeref:struct:kprobe_insn_cache
kprobe_lookup_name	kprobes.c	/^kprobe_opcode_t * __weak kprobe_lookup_name(const char *name,$/;"	f
kprobe_module_nb	kprobes.c	/^static struct notifier_block kprobe_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
kprobe_on_func_entry	kprobes.c	/^bool kprobe_on_func_entry(kprobe_opcode_t *addr, const char *sym, unsigned long offset)$/;"	f
kprobe_optimizer	kprobes.c	/^static void kprobe_optimizer(struct work_struct *work)$/;"	f	file:
kprobe_optinsn_slots	kprobes.c	/^struct kprobe_insn_cache kprobe_optinsn_slots = {$/;"	v	typeref:struct:kprobe_insn_cache
kprobe_optready	kprobes.c	/^static inline int kprobe_optready(struct kprobe *p)$/;"	f	file:
kprobe_perf_func	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kprobe_perf_func);$/;"	v
kprobe_perf_func	trace/trace_kprobe.c	/^kprobe_perf_func(struct trace_kprobe *tk, struct pt_regs *regs)$/;"	f	file:
kprobe_profile_ops	trace/trace_kprobe.c	/^static const struct file_operations kprobe_profile_ops = {$/;"	v	typeref:struct:file_operations	file:
kprobe_prog_func_proto	trace/bpf_trace.c	/^kprobe_prog_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
kprobe_prog_is_valid_access	trace/bpf_trace.c	/^static bool kprobe_prog_is_valid_access(int off, int size, enum bpf_access_type type,$/;"	f	file:
kprobe_prog_ops	trace/bpf_trace.c	/^const struct bpf_prog_ops kprobe_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
kprobe_queued	kprobes.c	/^static int kprobe_queued(struct kprobe *p)$/;"	f	file:
kprobe_register	trace/trace_kprobe.c	/^static int kprobe_register(struct trace_event_call *event,$/;"	f	file:
kprobe_seq_next	kprobes.c	/^static void *kprobe_seq_next(struct seq_file *f, void *v, loff_t *pos)$/;"	f	file:
kprobe_seq_start	kprobes.c	/^static void *kprobe_seq_start(struct seq_file *f, loff_t *pos)$/;"	f	file:
kprobe_seq_stop	kprobes.c	/^static void kprobe_seq_stop(struct seq_file *f, void *v)$/;"	f	file:
kprobe_slot_state	kprobes.c	/^enum kprobe_slot_state {$/;"	g	file:
kprobe_table	kprobes.c	/^static struct hlist_head kprobe_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
kprobe_target	test_kprobes.c	/^static noinline u32 kprobe_target(u32 value)$/;"	f	file:
kprobe_target2	test_kprobes.c	/^static noinline u32 kprobe_target2(u32 value)$/;"	f	file:
kprobe_trace_entry_head	trace/trace.h	/^struct kprobe_trace_entry_head {$/;"	s
kprobe_trace_func	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kprobe_trace_func);$/;"	v
kprobe_trace_func	trace/trace_kprobe.c	/^kprobe_trace_func(struct trace_kprobe *tk, struct pt_regs *regs)$/;"	f	file:
kprobe_trace_self_tests_init	trace/trace_kprobe.c	/^late_initcall(kprobe_trace_self_tests_init);$/;"	v
kprobe_trace_self_tests_init	trace/trace_kprobe.c	/^static __init int kprobe_trace_self_tests_init(void)$/;"	f	file:
kprobe_trace_selftest_target	trace/trace_kprobe_selftest.c	/^int kprobe_trace_selftest_target(int a1, int a2, int a3, int a4, int a5, int a6)$/;"	f
kprobe_unused	kprobes.c	/^static inline int kprobe_unused(struct kprobe *p)$/;"	f	file:
kprobe_verifier_ops	trace/bpf_trace.c	/^const struct bpf_verifier_ops kprobe_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
kprobes_all_disarmed	kprobes.c	/^static bool kprobes_all_disarmed;$/;"	v	file:
kprobes_allow_optimization	kprobes.c	/^static bool kprobes_allow_optimization;$/;"	v	file:
kprobes_inc_nmissed_count	kprobes.c	/^NOKPROBE_SYMBOL(kprobes_inc_nmissed_count);$/;"	v
kprobes_inc_nmissed_count	kprobes.c	/^void kprobes_inc_nmissed_count(struct kprobe *p)$/;"	f
kprobes_initialized	kprobes.c	/^static int kprobes_initialized;$/;"	v	file:
kprobes_module_callback	kprobes.c	/^static int kprobes_module_callback(struct notifier_block *nb,$/;"	f	file:
kprobes_open	kprobes.c	/^static int kprobes_open(struct inode *inode, struct file *filp)$/;"	f	file:
kprobes_seq_ops	kprobes.c	/^static const struct seq_operations kprobes_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
kptr_obfuscate	kcmp.c	/^static long kptr_obfuscate(long v, int type)$/;"	f	file:
kref	sched/autogroup.h	/^	struct kref		kref;$/;"	m	struct:autogroup	typeref:struct:autogroup::kref
kretprobe_dispatcher	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kretprobe_dispatcher);$/;"	v
kretprobe_dispatcher	trace/trace_kprobe.c	/^kretprobe_dispatcher(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
kretprobe_event_define_fields	trace/trace_kprobe.c	/^static int kretprobe_event_define_fields(struct trace_event_call *event_call)$/;"	f	file:
kretprobe_funcs	trace/trace_kprobe.c	/^static struct trace_event_functions kretprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
kretprobe_hash_lock	kprobes.c	/^NOKPROBE_SYMBOL(kretprobe_hash_lock);$/;"	v
kretprobe_hash_unlock	kprobes.c	/^NOKPROBE_SYMBOL(kretprobe_hash_unlock);$/;"	v
kretprobe_inst_table	kprobes.c	/^static struct hlist_head kretprobe_inst_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
kretprobe_perf_func	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kretprobe_perf_func);$/;"	v
kretprobe_perf_func	trace/trace_kprobe.c	/^kretprobe_perf_func(struct trace_kprobe *tk, struct kretprobe_instance *ri,$/;"	f	file:
kretprobe_table_lock	kprobes.c	/^NOKPROBE_SYMBOL(kretprobe_table_lock);$/;"	v
kretprobe_table_lock_ptr	kprobes.c	/^static raw_spinlock_t *kretprobe_table_lock_ptr(unsigned long hash)$/;"	f	file:
kretprobe_table_locks	kprobes.c	/^} kretprobe_table_locks[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:__anon93	file:
kretprobe_table_unlock	kprobes.c	/^NOKPROBE_SYMBOL(kretprobe_table_unlock);$/;"	v
kretprobe_trace_entry_head	trace/trace.h	/^struct kretprobe_trace_entry_head {$/;"	s
kretprobe_trace_func	trace/trace_kprobe.c	/^NOKPROBE_SYMBOL(kretprobe_trace_func);$/;"	v
kretprobe_trace_func	trace/trace_kprobe.c	/^kretprobe_trace_func(struct trace_kprobe *tk, struct kretprobe_instance *ri,$/;"	f	file:
kretprobed	trace/trace_output.c	/^static inline const char *kretprobed(const char *name)$/;"	f	file:
krph_val	test_kprobes.c	/^static u32 krph_val;$/;"	v	file:
ks_namebuf	debug/kdb/kdb_support.c	/^static char ks_namebuf[KSYM_NAME_LEN+1], ks_namebuf_prev[KSYM_NAME_LEN+1];$/;"	v	file:
ks_namebuf_prev	debug/kdb/kdb_support.c	/^static char ks_namebuf[KSYM_NAME_LEN+1], ks_namebuf_prev[KSYM_NAME_LEN+1];$/;"	v	file:
ksoftirqd_running	softirq.c	/^static bool ksoftirqd_running(unsigned long pending)$/;"	f	file:
ksoftirqd_should_run	softirq.c	/^static int ksoftirqd_should_run(unsigned int cpu)$/;"	f	file:
kstat	sched/core.c	/^EXPORT_PER_CPU_SYMBOL(kstat);$/;"	v
kstat_incr_irq_this_cpu	irq/irqdesc.c	/^void kstat_incr_irq_this_cpu(unsigned int irq)$/;"	f
kstat_incr_irqs_this_cpu	irq/internals.h	/^static inline void kstat_incr_irqs_this_cpu(struct irq_desc *desc)$/;"	f
kstat_irqs	irq/irqdesc.c	/^unsigned int kstat_irqs(unsigned int irq)$/;"	f
kstat_irqs_cpu	irq/irqdesc.c	/^unsigned int kstat_irqs_cpu(unsigned int irq, int cpu)$/;"	f
kstat_irqs_usr	irq/irqdesc.c	/^unsigned int kstat_irqs_usr(unsigned int irq)$/;"	f
ksym_type	events/core.c	/^		u16				ksym_type;$/;"	m	struct:perf_ksymbol_event::__anon6	file:
ksys_setsid	sys.c	/^int ksys_setsid(void)$/;"	f
ksys_sync_helper	power/main.c	/^EXPORT_SYMBOL_GPL(ksys_sync_helper);$/;"	v
ksys_sync_helper	power/main.c	/^void ksys_sync_helper(void)$/;"	f
ksys_unshare	fork.c	/^int ksys_unshare(unsigned long unshare_flags)$/;"	f
ksysfs_init	ksysfs.c	/^core_initcall(ksysfs_init);$/;"	v
ksysfs_init	ksysfs.c	/^static int __init ksysfs_init(void)$/;"	f	file:
kthread	bpf/cpumap.c	/^	struct task_struct *kthread;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::task_struct	file:
kthread	kthread.c	/^static int kthread(void *_create)$/;"	f	file:
kthread	kthread.c	/^struct kthread {$/;"	s	file:
kthread_associate_blkcg	kthread.c	/^EXPORT_SYMBOL(kthread_associate_blkcg);$/;"	v
kthread_associate_blkcg	kthread.c	/^void kthread_associate_blkcg(struct cgroup_subsys_state *css)$/;"	f
kthread_bind	kthread.c	/^EXPORT_SYMBOL(kthread_bind);$/;"	v
kthread_bind	kthread.c	/^void kthread_bind(struct task_struct *p, unsigned int cpu)$/;"	f
kthread_bind_mask	kthread.c	/^void kthread_bind_mask(struct task_struct *p, const struct cpumask *mask)$/;"	f
kthread_blkcg	kthread.c	/^EXPORT_SYMBOL(kthread_blkcg);$/;"	v
kthread_blkcg	kthread.c	/^struct cgroup_subsys_state *kthread_blkcg(void)$/;"	f
kthread_cancel_delayed_work_sync	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_cancel_delayed_work_sync);$/;"	v
kthread_cancel_delayed_work_sync	kthread.c	/^bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work *dwork)$/;"	f
kthread_cancel_work_sync	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_cancel_work_sync);$/;"	v
kthread_cancel_work_sync	kthread.c	/^bool kthread_cancel_work_sync(struct kthread_work *work)$/;"	f
kthread_create_info	kthread.c	/^struct kthread_create_info$/;"	s	file:
kthread_create_on_cpu	kthread.c	/^struct task_struct *kthread_create_on_cpu(int (*threadfn)(void *data),$/;"	f
kthread_create_on_node	kthread.c	/^EXPORT_SYMBOL(kthread_create_on_node);$/;"	v
kthread_create_on_node	kthread.c	/^struct task_struct *kthread_create_on_node(int (*threadfn)(void *data),$/;"	f
kthread_create_worker	kthread.c	/^EXPORT_SYMBOL(kthread_create_worker);$/;"	v
kthread_create_worker	kthread.c	/^kthread_create_worker(unsigned int flags, const char namefmt[], ...)$/;"	f
kthread_create_worker_on_cpu	kthread.c	/^EXPORT_SYMBOL(kthread_create_worker_on_cpu);$/;"	v
kthread_create_worker_on_cpu	kthread.c	/^kthread_create_worker_on_cpu(int cpu, unsigned int flags,$/;"	f
kthread_data	kthread.c	/^void *kthread_data(struct task_struct *task)$/;"	f
kthread_delayed_work_timer_fn	kthread.c	/^EXPORT_SYMBOL(kthread_delayed_work_timer_fn);$/;"	v
kthread_delayed_work_timer_fn	kthread.c	/^void kthread_delayed_work_timer_fn(struct timer_list *t)$/;"	f
kthread_destroy_worker	kthread.c	/^EXPORT_SYMBOL(kthread_destroy_worker);$/;"	v
kthread_destroy_worker	kthread.c	/^void kthread_destroy_worker(struct kthread_worker *worker)$/;"	f
kthread_flush_work	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_flush_work);$/;"	v
kthread_flush_work	kthread.c	/^struct kthread_flush_work {$/;"	s	file:
kthread_flush_work	kthread.c	/^void kthread_flush_work(struct kthread_work *work)$/;"	f
kthread_flush_work_fn	kthread.c	/^static void kthread_flush_work_fn(struct kthread_work *work)$/;"	f	file:
kthread_flush_worker	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_flush_worker);$/;"	v
kthread_flush_worker	kthread.c	/^void kthread_flush_worker(struct kthread_worker *worker)$/;"	f
kthread_fn	trace/trace_hwlat.c	/^static int kthread_fn(void *data)$/;"	f	file:
kthread_freezable_should_stop	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_freezable_should_stop);$/;"	v
kthread_freezable_should_stop	kthread.c	/^bool kthread_freezable_should_stop(bool *was_frozen)$/;"	f
kthread_insert_work	kthread.c	/^static void kthread_insert_work(struct kthread_worker *worker,$/;"	f	file:
kthread_insert_work_sanity_check	kthread.c	/^static void kthread_insert_work_sanity_check(struct kthread_worker *worker,$/;"	f	file:
kthread_mod_delayed_work	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_mod_delayed_work);$/;"	v
kthread_mod_delayed_work	kthread.c	/^bool kthread_mod_delayed_work(struct kthread_worker *worker,$/;"	f
kthread_park	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_park);$/;"	v
kthread_park	kthread.c	/^int kthread_park(struct task_struct *k)$/;"	f
kthread_parkme	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_parkme);$/;"	v
kthread_parkme	kthread.c	/^void kthread_parkme(void)$/;"	f
kthread_prio	rcu/tree.c	/^static int kthread_prio = IS_ENABLED(CONFIG_RCU_BOOST) ? 1 : 0;$/;"	v	file:
kthread_probe_data	kthread.c	/^void *kthread_probe_data(struct task_struct *task)$/;"	f
kthread_queue_delayed_work	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_queue_delayed_work);$/;"	v
kthread_queue_delayed_work	kthread.c	/^bool kthread_queue_delayed_work(struct kthread_worker *worker,$/;"	f
kthread_queue_work	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_queue_work);$/;"	v
kthread_queue_work	kthread.c	/^bool kthread_queue_work(struct kthread_worker *worker,$/;"	f
kthread_should_park	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_should_park);$/;"	v
kthread_should_park	kthread.c	/^bool kthread_should_park(void)$/;"	f
kthread_should_stop	kthread.c	/^EXPORT_SYMBOL(kthread_should_stop);$/;"	v
kthread_should_stop	kthread.c	/^bool kthread_should_stop(void)$/;"	f
kthread_stop	kthread.c	/^EXPORT_SYMBOL(kthread_stop);$/;"	v
kthread_stop	kthread.c	/^int kthread_stop(struct task_struct *k)$/;"	f
kthread_stop_wq	bpf/cpumap.c	/^	struct work_struct kthread_stop_wq;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::work_struct	file:
kthread_unpark	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_unpark);$/;"	v
kthread_unpark	kthread.c	/^void kthread_unpark(struct task_struct *k)$/;"	f
kthread_worker_fn	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_worker_fn);$/;"	v
kthread_worker_fn	kthread.c	/^int kthread_worker_fn(void *worker_ptr)$/;"	f
kthreadd	kthread.c	/^int kthreadd(void *unused)$/;"	f
kthreadd_task	kthread.c	/^struct task_struct *kthreadd_task;$/;"	v	typeref:struct:task_struct
ktime_add_safe	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(ktime_add_safe);$/;"	v
ktime_add_safe	time/hrtimer.c	/^ktime_t ktime_add_safe(const ktime_t lhs, const ktime_t rhs)$/;"	f
ktime_get	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get);$/;"	v
ktime_get	time/timekeeping.c	/^ktime_t ktime_get(void)$/;"	f
ktime_get_boot_fast_ns	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_boot_fast_ns);$/;"	v
ktime_get_boot_fast_ns	time/timekeeping.c	/^u64 notrace ktime_get_boot_fast_ns(void)$/;"	f
ktime_get_coarse_real_ts64	time/timekeeping.c	/^EXPORT_SYMBOL(ktime_get_coarse_real_ts64);$/;"	v
ktime_get_coarse_real_ts64	time/timekeeping.c	/^void ktime_get_coarse_real_ts64(struct timespec64 *ts)$/;"	f
ktime_get_coarse_ts64	time/timekeeping.c	/^EXPORT_SYMBOL(ktime_get_coarse_ts64);$/;"	v
ktime_get_coarse_ts64	time/timekeeping.c	/^void ktime_get_coarse_ts64(struct timespec64 *ts)$/;"	f
ktime_get_coarse_with_offset	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_coarse_with_offset);$/;"	v
ktime_get_coarse_with_offset	time/timekeeping.c	/^ktime_t ktime_get_coarse_with_offset(enum tk_offsets offs)$/;"	f
ktime_get_mono_fast_ns	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_mono_fast_ns);$/;"	v
ktime_get_mono_fast_ns	time/timekeeping.c	/^u64 ktime_get_mono_fast_ns(void)$/;"	f
ktime_get_raw	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_raw);$/;"	v
ktime_get_raw	time/timekeeping.c	/^ktime_t ktime_get_raw(void)$/;"	f
ktime_get_raw_fast_ns	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_raw_fast_ns);$/;"	v
ktime_get_raw_fast_ns	time/timekeeping.c	/^u64 ktime_get_raw_fast_ns(void)$/;"	f
ktime_get_raw_ts64	time/timekeeping.c	/^EXPORT_SYMBOL(ktime_get_raw_ts64);$/;"	v
ktime_get_raw_ts64	time/timekeeping.c	/^void ktime_get_raw_ts64(struct timespec64 *ts)$/;"	f
ktime_get_real_fast_ns	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_real_fast_ns);$/;"	v
ktime_get_real_fast_ns	time/timekeeping.c	/^u64 ktime_get_real_fast_ns(void)$/;"	f
ktime_get_real_seconds	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_real_seconds);$/;"	v
ktime_get_real_seconds	time/timekeeping.c	/^time64_t ktime_get_real_seconds(void)$/;"	f
ktime_get_real_ts64	time/timekeeping.c	/^EXPORT_SYMBOL(ktime_get_real_ts64);$/;"	v
ktime_get_real_ts64	time/timekeeping.c	/^void ktime_get_real_ts64(struct timespec64 *ts)$/;"	f
ktime_get_resolution_ns	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_resolution_ns);$/;"	v
ktime_get_resolution_ns	time/timekeeping.c	/^u32 ktime_get_resolution_ns(void)$/;"	f
ktime_get_seconds	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_seconds);$/;"	v
ktime_get_seconds	time/timekeeping.c	/^time64_t ktime_get_seconds(void)$/;"	f
ktime_get_snapshot	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_snapshot);$/;"	v
ktime_get_snapshot	time/timekeeping.c	/^void ktime_get_snapshot(struct system_time_snapshot *systime_snapshot)$/;"	f
ktime_get_ts64	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_ts64);$/;"	v
ktime_get_ts64	time/timekeeping.c	/^void ktime_get_ts64(struct timespec64 *ts)$/;"	f
ktime_get_update_offsets_now	time/timekeeping.c	/^ktime_t ktime_get_update_offsets_now(unsigned int *cwsseq, ktime_t *offs_real,$/;"	f
ktime_get_with_offset	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_with_offset);$/;"	v
ktime_get_with_offset	time/timekeeping.c	/^ktime_t ktime_get_with_offset(enum tk_offsets offs)$/;"	f
ktime_mono_to_any	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_mono_to_any);$/;"	v
ktime_mono_to_any	time/timekeeping.c	/^ktime_t ktime_mono_to_any(ktime_t tmono, enum tk_offsets offs)$/;"	f
l	bpf/offload.c	/^	struct rhash_head l;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::rhash_head	file:
l_next	locking/lockdep_proc.c	/^static void *l_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
l_show	locking/lockdep_proc.c	/^static int l_show(struct seq_file *m, void *v)$/;"	f	file:
l_start	locking/lockdep_proc.c	/^static void *l_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
l_stop	locking/lockdep_proc.c	/^static void l_stop(struct seq_file *m, void *v)$/;"	f	file:
last	cpu.c	/^	struct hlist_node	*last;$/;"	m	struct:cpuhp_cpu_state	typeref:struct:cpuhp_cpu_state::hlist_node	file:
last	sched/sched.h	/^	struct sched_entity	*last;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
last_accelerate	rcu/tree.h	/^	unsigned long last_accelerate;	\/* Last jiffy CBs were accelerated. *\/$/;"	m	struct:rcu_data
last_active	workqueue_internal.h	/^	unsigned long		last_active;	\/* L: last active timestamp *\/$/;"	m	struct:worker
last_advance_all	rcu/tree.h	/^	unsigned long last_advance_all;	\/* Last jiffy CBs were all advanced. *\/$/;"	m	struct:rcu_data
last_blocked_load_update_tick	sched/sched.h	/^	unsigned long		last_blocked_load_update_tick;$/;"	m	struct:rq
last_cmd	trace/trace_events_hist.c	/^static char last_cmd[MAX_FILTER_STR_VAL];$/;"	v	file:
last_cmd_loc	trace/trace_events_hist.c	/^static char last_cmd_loc[MAX_FILTER_STR_VAL];$/;"	v	file:
last_cmd_set	trace/trace_events_hist.c	/^static void last_cmd_set(struct trace_event_file *file, char *str)$/;"	f	file:
last_fqs_resched	rcu/tree.h	/^	unsigned long last_fqs_resched;	\/* Time of last rcu_resched(). *\/$/;"	m	struct:rcu_data
last_freq_update_time	sched/cpufreq_schedutil.c	/^	u64			last_freq_update_time;$/;"	m	struct:sugov_policy	file:
last_ftrace_enabled	trace/ftrace.c	/^static int last_ftrace_enabled;$/;"	v	file:
last_func	workqueue_internal.h	/^	work_func_t		last_func;$/;"	m	struct:worker
last_h_load_update	sched/sched.h	/^	u64			last_h_load_update;$/;"	m	struct:cfs_rq
last_highmem_page	power/snapshot.c	/^static struct page *last_highmem_page;$/;"	v	typeref:struct:page	file:
last_highmem_page_copied	power/snapshot.c	/^static inline int last_highmem_page_copied(void) { return 1; }$/;"	f	file:
last_highmem_page_copied	power/snapshot.c	/^static inline int last_highmem_page_copied(void)$/;"	f	file:
last_jiffies	time/tick-sched.h	/^	unsigned long			last_jiffies;$/;"	m	struct:tick_sched
last_jiffies_update	time/tick-sched.c	/^static ktime_t last_jiffies_update;$/;"	v	file:
last_load_update_tick	sched/sched.h	/^	unsigned long		last_load_update_tick;$/;"	m	struct:rq
last_overrun	trace/ring_buffer.c	/^	unsigned long			last_overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
last_pages_touch	trace/ring_buffer.c	/^	long				last_pages_touch;$/;"	m	struct:ring_buffer_per_cpu	file:
last_pid	trace/trace_functions_graph.c	/^	pid_t		last_pid;$/;"	m	struct:fgraph_cpu_data	file:
last_rowner	locking/rwsem.c	/^	unsigned long last_rowner;$/;"	m	struct:rwsem_waiter	file:
last_tick	time/tick-sched.h	/^	ktime_t				last_tick;$/;"	m	struct:tick_sched
last_tracing_thresh	trace/trace_hwlat.c	/^static u64 last_tracing_thresh = DEFAULT_LAT_THRESHOLD * NSEC_PER_USEC;$/;"	v	file:
last_ts	irq/timings.c	/^	u64	last_ts;$/;"	m	struct:irqt_stat	file:
last_unloaded_module	module.c	/^static char last_unloaded_module[MODULE_NAME_LEN+1];$/;"	v	file:
last_update	sched/cpufreq_schedutil.c	/^	u64			last_update;$/;"	m	struct:sugov_cpu	file:
lasterr	trace/trace_events_filter.c	/^	int lasterr;$/;"	m	struct:filter_parse_error	file:
lasterr_pos	trace/trace_events_filter.c	/^	int lasterr_pos;$/;"	m	struct:filter_parse_error	file:
lat_print_generic	trace/trace_output.c	/^lat_print_generic(struct trace_seq *s, struct trace_entry *entry, int cpu)$/;"	f	file:
lat_print_timestamp	trace/trace_output.c	/^lat_print_timestamp(struct trace_iterator *iter, u64 next_ts)$/;"	f	file:
late_alloc	dma/swiotlb.c	/^static int late_alloc;$/;"	v	file:
latency_record	latencytop.c	/^static struct latency_record latency_record[MAXLR];$/;"	v	typeref:struct:latency_record	file:
latencytop_enabled	latencytop.c	/^int latencytop_enabled;$/;"	v
launder_gp_seq	rcu/rcutorture.c	/^	unsigned long launder_gp_seq;$/;"	m	struct:rcu_launder_hist	file:
layout	signal.c	/^	unsigned char limit, layout;$/;"	m	struct:__anon90	file:
layout_and_allocate	module.c	/^static struct module *layout_and_allocate(struct load_info *info, int flags)$/;"	f	file:
layout_sections	module.c	/^static void layout_sections(struct module *mod, struct load_info *info)$/;"	f	file:
layout_symtab	module.c	/^static inline void layout_symtab(struct module *mod, struct load_info *info)$/;"	f	file:
layout_symtab	module.c	/^static void layout_symtab(struct module *mod, struct load_info *info)$/;"	f	file:
lb_env	sched/fair.c	/^struct lb_env {$/;"	s	file:
lc_next	locking/lockdep_proc.c	/^static void *lc_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
lc_show	locking/lockdep_proc.c	/^static int lc_show(struct seq_file *m, void *v)$/;"	f	file:
lc_start	locking/lockdep_proc.c	/^static void *lc_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
lc_stop	locking/lockdep_proc.c	/^static void lc_stop(struct seq_file *m, void *v)$/;"	f	file:
lchown16	sys_ni.c	/^COND_SYSCALL(lchown16);$/;"	v
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::list_head
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	m	struct:rq	typeref:struct:rq::list_head
leaf_node_cpu_bit	rcu/tree.h	134;"	d
leaps_between	time/timeconv.c	/^static long leaps_between(long y1, long y2)$/;"	f	file:
leaves	power/snapshot.c	/^	struct list_head leaves;	\/* Radix Tree leaves           *\/$/;"	m	struct:mem_zone_bm_rtree	typeref:struct:mem_zone_bm_rtree::list_head	file:
left_child	sched/cpudeadline.c	/^static inline int left_child(int i)$/;"	f	file:
legacy_clone_args_valid	fork.c	/^bool legacy_clone_args_valid(const struct kernel_clone_args *kargs)$/;"	f
legacy_files	cgroup/cpuset.c	/^static struct cftype legacy_files[] = {$/;"	v	typeref:struct:cftype	file:
legacy_queue	signal.c	/^static inline bool legacy_queue(struct sigpending *signals, int sig)$/;"	f	file:
len	audit.h	/^	int	len;	\/* length of the cmdline field. *\/$/;"	m	struct:audit_proctitle
len	bpf/btf.c	/^	u32 len;$/;"	m	struct:btf_sec_info	file:
len	events/core.c	/^		u32				len;$/;"	m	struct:perf_ksymbol_event::__anon6	file:
len	events/core.c	/^		u64				len;$/;"	m	struct:perf_mmap_event::__anon4	file:
len	module-internal.h	/^	unsigned long len;$/;"	m	struct:load_info
len	printk/printk.c	/^	size_t len;			\/* length == 0 means unused buffer *\/$/;"	m	struct:cont	file:
len	printk/printk.c	/^	u16 len;		\/* length of entire record *\/$/;"	m	struct:printk_log	file:
len	printk/printk_safe.c	/^	atomic_t		len;	\/* length of written data *\/$/;"	m	struct:printk_safe_seq_buf	file:
len	stacktrace.c	/^	unsigned int	len;$/;"	m	struct:stacktrace_cookie	file:
len	trace/ftrace.c	/^	unsigned len;$/;"	m	struct:ftrace_glob	file:
len	trace/trace.h	/^	int			len;$/;"	m	struct:regex
length	cgroup/cgroup-v1.c	/^	int length;$/;"	m	struct:cgroup_pidlist	file:
length	trace/ring_buffer.c	/^	unsigned long		length;$/;"	m	struct:rb_event_info	file:
length	trace/trace.c	/^	unsigned long			length;$/;"	m	struct:trace_eval_map_head	file:
level	printk/printk.c	/^	u8 level:3;		\/* syslog level *\/$/;"	m	struct:printk_log	file:
level	printk/printk.c	/^	u8 level;			\/* log level of first message *\/$/;"	m	struct:cont	file:
level	rcu/tree.h	/^	struct rcu_node *level[RCU_NUM_LVLS + 1];$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_node
level	rcu/tree.h	/^	u8	level;		\/* root is at level 0. *\/$/;"	m	struct:rcu_node
levels	power/snapshot.c	/^	int levels;			\/* Number of Radix Tree Levels *\/$/;"	m	struct:mem_zone_bm_rtree	file:
libftrace-y	trace/Makefile	/^libftrace-y := ftrace.o$/;"	m
limit	cgroup/pids.c	/^	int64_t				limit;$/;"	m	struct:pids_cgroup	file:
limit	signal.c	/^	unsigned char limit, layout;$/;"	m	struct:__anon90	file:
limit_cmdline	dma/contiguous.c	/^static phys_addr_t limit_cmdline;$/;"	v	file:
limits_changed	sched/cpufreq_schedutil.c	/^	bool			limits_changed;$/;"	m	struct:sugov_policy	file:
lineno_checksum	gcov/gcc_4_7.c	/^	unsigned int lineno_checksum;$/;"	m	struct:gcov_fn_info	file:
link	locking/test-ww_mutex.c	/^	struct list_head link;$/;"	m	struct:reorder_lock	typeref:struct:reorder_lock::list_head	file:
link	trace/trace.h	/^	struct list_head	link;$/;"	m	struct:ftrace_event_field	typeref:struct:ftrace_event_field::list_head
link_css_set	cgroup/cgroup.c	/^static void link_css_set(struct list_head *tmp_links, struct css_set *cset,$/;"	f	file:
link_info	events/core.c	/^		struct perf_ns_link_info	link_info[NR_NAMESPACES];$/;"	m	struct:perf_namespaces_event::__anon3	typeref:struct:perf_namespaces_event::__anon3::perf_ns_link_info	file:
link_pwq	workqueue.c	/^static void link_pwq(struct pool_workqueue *pwq)$/;"	f	file:
link_target	gcov/fs.c	/^static char *link_target(const char *dir, const char *path, const char *ext)$/;"	f	file:
linked_page	power/snapshot.c	/^struct linked_page {$/;"	s	file:
links	cgroup/cgroup-v1.c	/^	struct list_head links;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::list_head	file:
links	gcov/fs.c	/^	struct dentry **links;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::dentry	file:
linux_regs	debug/debug_core.h	/^	struct pt_regs		*linux_regs;$/;"	m	struct:kgdb_state	typeref:struct:kgdb_state::pt_regs
list	audit.h	/^	struct list_head	list;		\/* audit_context->names_list *\/$/;"	m	struct:audit_names	typeref:struct:audit_names::list_head
list	audit.h	/^	struct list_head	list;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::list_head
list	audit_tree.c	/^		struct list_head list;$/;"	m	struct:audit_chunk::node	typeref:struct:audit_chunk::node::list_head	file:
list	audit_tree.c	/^	struct list_head list;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
list	bpf/bpf_lru_list.h	/^	struct list_head list;$/;"	m	struct:bpf_lru_node	typeref:struct:bpf_lru_node::list_head
list	bpf/devmap.c	/^	struct list_head list;$/;"	m	struct:bpf_dtab	typeref:struct:bpf_dtab::list_head	file:
list	bpf/local_storage.c	/^	struct list_head list;$/;"	m	struct:bpf_cgroup_storage_map	typeref:struct:bpf_cgroup_storage_map::list_head	file:
list	cgroup/cgroup-v1.c	/^	pid_t *list;$/;"	m	struct:cgroup_pidlist	file:
list	cpu.c	/^	struct hlist_head	list;$/;"	m	struct:cpuhp_step	typeref:struct:cpuhp_step::hlist_head	file:
list	dma/debug.c	/^	struct list_head list;$/;"	m	struct:dma_debug_entry	typeref:struct:dma_debug_entry::list_head	file:
list	dma/debug.c	/^	struct list_head list;$/;"	m	struct:hash_bucket	typeref:struct:hash_bucket::list_head	file:
list	events/uprobes.c	/^	struct list_head list;$/;"	m	struct:delayed_uprobe	typeref:struct:delayed_uprobe::list_head	file:
list	fail_function.c	/^	struct list_head list;$/;"	m	struct:fei_attr	typeref:struct:fei_attr::list_head	file:
list	futex.c	/^	struct list_head list;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::list_head	file:
list	futex.c	/^	struct plist_node list;$/;"	m	struct:futex_q	typeref:struct:futex_q::plist_node	file:
list	gcov/fs.c	/^	struct list_head list;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
list	kprobes.c	/^	struct list_head list;$/;"	m	struct:kprobe_insn_page	typeref:struct:kprobe_insn_page::list_head	file:
list	kthread.c	/^	struct list_head list;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::list_head	file:
list	locking/rwsem.c	/^	struct list_head list;$/;"	m	struct:rwsem_waiter	typeref:struct:rwsem_waiter::list_head	file:
list	locking/semaphore.c	/^	struct list_head list;$/;"	m	struct:semaphore_waiter	typeref:struct:semaphore_waiter::list_head	file:
list	params.c	/^	struct list_head list;$/;"	m	struct:kmalloced_param	typeref:struct:kmalloced_param::list_head	file:
list	power/snapshot.c	/^	struct list_head list;		\/* Link Zones together         *\/$/;"	m	struct:mem_zone_bm_rtree	typeref:struct:mem_zone_bm_rtree::list_head	file:
list	power/snapshot.c	/^	struct list_head list;$/;"	m	struct:nosave_region	typeref:struct:nosave_region::list_head	file:
list	power/snapshot.c	/^	struct list_head list;$/;"	m	struct:rtree_node	typeref:struct:rtree_node::list_head	file:
list	sched/sched.h	/^	struct list_head	list;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
list	seccomp.c	/^	struct list_head list;$/;"	m	struct:seccomp_knotif	typeref:struct:seccomp_knotif::list_head	file:
list	taskstats.c	/^	struct list_head list;$/;"	m	struct:listener	typeref:struct:listener::list_head	file:
list	taskstats.c	/^	struct list_head list;$/;"	m	struct:listener_list	typeref:struct:listener_list::list_head	file:
list	trace/bpf_trace.c	/^	struct list_head list;$/;"	m	struct:bpf_trace_module	typeref:struct:bpf_trace_module::list_head	file:
list	trace/ftrace.c	/^	struct list_head	list;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::list_head	file:
list	trace/ftrace.c	/^	struct list_head	list;$/;"	m	struct:ftrace_mod_func	typeref:struct:ftrace_mod_func::list_head	file:
list	trace/ftrace.c	/^	struct list_head	list;$/;"	m	struct:ftrace_mod_map	typeref:struct:ftrace_mod_map::list_head	file:
list	trace/ftrace.c	/^	struct list_head list;$/;"	m	struct:ftrace_init_func	typeref:struct:ftrace_init_func::list_head	file:
list	trace/ring_buffer.c	/^	struct list_head list;		\/* list of buffer pages *\/$/;"	m	struct:buffer_page	typeref:struct:buffer_page::list_head	file:
list	trace/trace.c	/^	struct list_head		list;$/;"	m	struct:trace_selftests	typeref:struct:trace_selftests::list_head	file:
list	trace/trace.c	/^	struct list_head	list;$/;"	m	struct:tracing_log_err	typeref:struct:tracing_log_err::list_head	file:
list	trace/trace.h	/^	struct list_head		list;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head
list	trace/trace.h	/^	struct list_head		list;$/;"	m	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:event_command	typeref:struct:event_command::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:event_subsystem	typeref:struct:event_subsystem::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:ftrace_func_command	typeref:struct:ftrace_func_command::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:ftrace_mod_load	typeref:struct:ftrace_mod_load::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
list	trace/trace_dynevent.h	/^	struct list_head		list;$/;"	m	struct:dyn_event	typeref:struct:dyn_event::list_head
list	trace/trace_dynevent.h	/^	struct list_head	list;$/;"	m	struct:dyn_event_operations	typeref:struct:dyn_event_operations::list_head
list	trace/trace_events_filter.c	/^	struct list_head	list;$/;"	m	struct:filter_list	typeref:struct:filter_list::list_head	file:
list	trace/trace_events_hist.c	/^	struct list_head list;$/;"	m	struct:hist_var_data	typeref:struct:hist_var_data::list_head	file:
list	trace/trace_printk.c	/^	struct list_head list;$/;"	m	struct:trace_bprintk_fmt	typeref:struct:trace_bprintk_fmt::list_head	file:
list	trace/trace_probe.h	/^	struct list_head		list;$/;"	m	struct:event_file_link	typeref:struct:event_file_link::list_head
list	workqueue.c	/^	struct list_head	list;		\/* PR: list of all workqueues *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
list	workqueue.c	/^	struct list_head	list;		\/* WQ: list of flushers *\/$/;"	m	struct:wq_flusher	typeref:struct:wq_flusher::list_head	file:
list	workqueue.c	/^	struct list_head	list;		\/* queued for batching commit *\/$/;"	m	struct:apply_wqattrs_ctx	typeref:struct:apply_wqattrs_ctx::list_head	file:
list_add_event	events/core.c	/^list_add_event(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
list_add_leaf_cfs_rq	sched/fair.c	/^static inline bool list_add_leaf_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
list_del_event	events/core.c	/^list_del_event(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
list_del_leaf_cfs_rq	sched/fair.c	/^static inline void list_del_leaf_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
list_entries	locking/lockdep.c	/^static struct lock_list list_entries[MAX_LOCKDEP_ENTRIES];$/;"	v	typeref:struct:lock_list	file:
list_update_cgroup_event	events/core.c	/^list_update_cgroup_event(struct perf_event *event,$/;"	f	file:
listen	sys_ni.c	/^COND_SYSCALL(listen);$/;"	v
listener	taskstats.c	/^struct listener {$/;"	s	file:
listener_list	taskstats.c	/^struct listener_list {$/;"	s	file:
lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LIST_T];$/;"	m	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head
lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LOCAL_LIST_T];$/;"	m	struct:bpf_lru_locallist	typeref:struct:bpf_lru_locallist::list_head
livepatch-objs	livepatch/Makefile	/^livepatch-objs := core.o patch.o shadow.o transition.o$/;"	m
llvm_gcda_emit_arcs	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcda_emit_arcs);$/;"	v
llvm_gcda_emit_arcs	gcov/clang.c	/^void llvm_gcda_emit_arcs(u32 num_counters, u64 *counters)$/;"	f
llvm_gcda_emit_function	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcda_emit_function);$/;"	v
llvm_gcda_emit_function	gcov/clang.c	/^void llvm_gcda_emit_function(u32 ident, const char *function_name,$/;"	f
llvm_gcda_end_file	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcda_end_file);$/;"	v
llvm_gcda_end_file	gcov/clang.c	/^void llvm_gcda_end_file(void)$/;"	f
llvm_gcda_start_file	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcda_start_file);$/;"	v
llvm_gcda_start_file	gcov/clang.c	/^void llvm_gcda_start_file(const char *orig_filename, const char version[4],$/;"	f
llvm_gcda_summary_info	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcda_summary_info);$/;"	v
llvm_gcda_summary_info	gcov/clang.c	/^void llvm_gcda_summary_info(void)$/;"	f
llvm_gcov_callback	gcov/clang.c	/^typedef void (*llvm_gcov_callback)(void);$/;"	t	file:
llvm_gcov_init	gcov/clang.c	/^EXPORT_SYMBOL(llvm_gcov_init);$/;"	v
llvm_gcov_init	gcov/clang.c	/^void llvm_gcov_init(llvm_gcov_callback writeout, llvm_gcov_callback flush)$/;"	f
load	sched/fair.c	/^	unsigned long load;$/;"	m	struct:numa_stats	file:
load	sched/sched.h	/^	struct load_weight	load;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::load_weight
load_avg	sched/sched.h	/^		unsigned long	load_avg;$/;"	m	struct:cfs_rq::__anon83
load_balance	sched/fair.c	/^static int load_balance(int this_cpu, struct rq *this_rq,$/;"	f	file:
load_header	power/snapshot.c	/^static int load_header(struct swsusp_info *info)$/;"	f	file:
load_image	power/swap.c	/^static int load_image(struct swap_map_handle *handle,$/;"	f	file:
load_image_and_restore	power/hibernate.c	/^static int load_image_and_restore(void)$/;"	f	file:
load_image_lzo	power/swap.c	/^static int load_image_lzo(struct swap_map_handle *handle,$/;"	f	file:
load_info	module-internal.h	/^struct load_info {$/;"	s
load_last_update_time_copy	sched/sched.h	/^	u64			load_last_update_time_copy;$/;"	m	struct:cfs_rq
load_module	module.c	/^static int load_module(struct load_info *info, const char __user *uargs,$/;"	f	file:
load_per_task	sched/fair.c	/^	unsigned long load_per_task;$/;"	m	struct:sg_lb_stats	file:
load_too_imbalanced	sched/fair.c	/^static bool load_too_imbalanced(long src_load, long dst_load,$/;"	f	file:
loaded_info	gcov/fs.c	/^	struct gcov_info **loaded_info;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_info	file:
loads	sys.c	/^	u32 loads[3];$/;"	m	struct:compat_sysinfo	file:
loc	trace/trace.c	/^	char			loc[TRACING_LOG_LOC_MAX]; \/* err location *\/$/;"	m	struct:tracing_log_err	file:
local	sched/fair.c	/^	struct sched_group *local;	\/* Local group in this sd *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sched_group	file:
local_field_var_ref	trace/trace_events_hist.c	/^static char *local_field_var_ref(struct hist_trigger_data *hist_data,$/;"	f	file:
local_free_list	bpf/bpf_lru_list.c	/^static struct list_head *local_free_list(struct bpf_lru_locallist *loc_l)$/;"	f	file:
local_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_locallist __percpu *local_list;$/;"	m	struct:bpf_common_lru	typeref:struct:bpf_common_lru::__percpu
local_pending_list	bpf/bpf_lru_list.c	/^static struct list_head *local_pending_list(struct bpf_lru_locallist *loc_l)$/;"	f	file:
local_stat	sched/fair.c	/^	struct sg_lb_stats local_stat;	\/* Statistics of the local group *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sg_lb_stats	file:
local_timer_softirq_pending	time/tick-sched.c	/^static inline bool local_timer_softirq_pending(void)$/;"	f	file:
locate_mem_hole_bottom_up	kexec_file.c	/^static int locate_mem_hole_bottom_up(unsigned long start, unsigned long end,$/;"	f	file:
locate_mem_hole_callback	kexec_file.c	/^static int locate_mem_hole_callback(struct resource *res, void *arg)$/;"	f	file:
locate_mem_hole_top_down	kexec_file.c	/^static int locate_mem_hole_top_down(unsigned long start, unsigned long end,$/;"	f	file:
locate_module_kobject	params.c	/^static struct module_kobject * __init locate_module_kobject(const char *name)$/;"	f	file:
lock	acct.c	/^	struct mutex		lock;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::mutex	file:
lock	audit.c	/^	struct mutex lock;$/;"	m	struct:audit_ctl_mutex	typeref:struct:audit_ctl_mutex::mutex	file:
lock	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock;$/;"	m	struct:bpf_lru_locallist
lock	bpf/hashtab.c	/^	raw_spinlock_t lock;$/;"	m	struct:bucket	file:
lock	bpf/local_storage.c	/^	spinlock_t lock;$/;"	m	struct:bpf_cgroup_storage_map	file:
lock	bpf/lpm_trie.c	/^	raw_spinlock_t			lock;$/;"	m	struct:lpm_trie	file:
lock	bpf/percpu_freelist.h	/^	raw_spinlock_t lock;$/;"	m	struct:pcpu_freelist_head
lock	bpf/queue_stack_maps.c	/^	raw_spinlock_t lock;$/;"	m	struct:bpf_queue_stack	file:
lock	cgroup/cpuset.c	/^	spinlock_t lock;	\/* guards read or write of above *\/$/;"	m	struct:fmeter	file:
lock	dma.c	/^	int  lock;$/;"	m	struct:dma_chan	file:
lock	dma/debug.c	/^	spinlock_t lock;$/;"	m	struct:hash_bucket	file:
lock	futex.c	/^	spinlock_t lock;$/;"	m	struct:futex_hash_bucket	file:
lock	kcov.c	/^	spinlock_t		lock;$/;"	m	struct:kcov	file:
lock	locking/qspinlock_paravirt.h	/^	struct qspinlock *lock;$/;"	m	struct:pv_hash_entry	typeref:struct:pv_hash_entry::qspinlock
lock	locking/rtmutex_common.h	/^	struct rt_mutex		*lock;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex
lock	locking/test-ww_mutex.c	/^	struct ww_mutex *lock;$/;"	m	struct:reorder_lock	typeref:struct:reorder_lock::ww_mutex	file:
lock	printk/printk.c	/^	struct mutex lock;$/;"	m	struct:devkmsg_user	typeref:struct:devkmsg_user::mutex	file:
lock	rcu/tree.h	/^	raw_spinlock_t __private lock;	\/* Root rcu_node's lock protects *\/$/;"	m	struct:rcu_node
lock	sched/autogroup.h	/^	struct rw_semaphore	lock;$/;"	m	struct:autogroup	typeref:struct:autogroup::rw_semaphore
lock	sched/cpudeadline.h	/^	raw_spinlock_t		lock;$/;"	m	struct:cpudl
lock	sched/fair.c	/^	spinlock_t lock; \/* nr_tasks, tasks *\/$/;"	m	struct:numa_group	file:
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	m	struct:cfs_bandwidth
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	m	struct:dl_bw
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	m	struct:rq
lock	stop_machine.c	/^	raw_spinlock_t		lock;$/;"	m	struct:cpu_stopper	file:
lock	time/alarmtimer.c	/^	spinlock_t		lock;$/;"	m	struct:alarm_base	file:
lock	time/timer.c	/^	raw_spinlock_t		lock;$/;"	m	struct:timer_base	file:
lock	trace/ring_buffer.c	/^	arch_spinlock_t			lock;$/;"	m	struct:ring_buffer_per_cpu	file:
lock	trace/trace_clock.c	/^	arch_spinlock_t lock;$/;"	m	struct:__anon37	file:
lock	trace/trace_hwlat.c	/^	struct mutex lock;		\/* protect changes *\/$/;"	m	struct:hwlat_data	typeref:struct:hwlat_data::mutex	file:
lock	workqueue.c	/^	spinlock_t		lock;		\/* the pool lock *\/$/;"	m	struct:worker_pool	file:
lock_accessed	locking/lockdep.c	/^static inline unsigned long lock_accessed(struct lock_list *lock)$/;"	f	file:
lock_acquire	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_acquire);$/;"	v
lock_acquire	locking/lockdep.c	/^void lock_acquire(struct lockdep_map *lock, unsigned int subclass,$/;"	f
lock_acquired	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_acquired);$/;"	v
lock_acquired	locking/lockdep.c	/^void lock_acquired(struct lockdep_map *lock, unsigned long ip)$/;"	f
lock_busted_ops	locking/locktorture.c	/^static struct lock_torture_ops lock_busted_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
lock_chain_count	locking/lockdep.c	/^unsigned long lock_chain_count(void)$/;"	f
lock_chain_get_class	locking/lockdep.c	/^struct lock_class *lock_chain_get_class(struct lock_chain *chain, int i)$/;"	f
lock_chains	locking/lockdep.c	/^struct lock_chain lock_chains[MAX_LOCKDEP_CHAINS];$/;"	v	typeref:struct:lock_chain
lock_class_cache_is_registered	locking/lockdep.c	/^static bool lock_class_cache_is_registered(struct lockdep_map *lock)$/;"	f	file:
lock_class_ops	locking/lockdep_internals.h	/^	unsigned long lock_class_ops[MAX_LOCKDEP_KEYS];$/;"	m	struct:lockdep_stats
lock_classes	locking/lockdep.c	/^struct lock_class lock_classes[MAX_LOCKDEP_KEYS];$/;"	v	typeref:struct:lock_class	file:
lock_contended	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_contended);$/;"	v
lock_contended	locking/lockdep.c	/^void lock_contended(struct lockdep_map *lock, unsigned long ip)$/;"	f
lock_cq	locking/lockdep.c	/^static struct circular_queue lock_cq;$/;"	v	typeref:struct:circular_queue	file:
lock_downgrade	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_downgrade);$/;"	v
lock_downgrade	locking/lockdep.c	/^void lock_downgrade(struct lockdep_map *lock, unsigned long ip)$/;"	f
lock_events	locking/lock_events.h	/^enum lock_events {$/;"	g
lock_flag	locking/lockdep.c	/^static inline unsigned long lock_flag(enum lock_usage_bit bit)$/;"	f	file:
lock_hrtimer_base	time/hrtimer.c	/^lock_hrtimer_base(const struct hrtimer *timer, unsigned long *flags)$/;"	f	file:
lock_hrtimer_base	time/hrtimer.c	/^struct hrtimer_clock_base *lock_hrtimer_base(const struct hrtimer *timer,$/;"	f	file:
lock_is_held_type	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_is_held_type);$/;"	v
lock_is_held_type	locking/lockdep.c	/^NOKPROBE_SYMBOL(lock_is_held_type);$/;"	v
lock_is_held_type	locking/lockdep.c	/^int lock_is_held_type(const struct lockdep_map *lock, int read)$/;"	f
lock_is_read_held	locking/locktorture.c	/^static bool lock_is_read_held;$/;"	v	file:
lock_is_write_held	locking/locktorture.c	/^static bool lock_is_write_held;$/;"	v	file:
lock_key	trace/ring_buffer.c	/^	struct lock_class_key		lock_key;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::lock_class_key	file:
lock_keys_hash	locking/lockdep.c	/^static struct hlist_head lock_keys_hash[KEYHASH_SIZE];$/;"	v	typeref:struct:hlist_head	file:
lock_name	workqueue.c	/^	char			*lock_name;$/;"	m	struct:workqueue_struct	file:
lock_pi_update_atomic	futex.c	/^static int lock_pi_update_atomic(u32 __user *uaddr, u32 uval, u32 newval)$/;"	f	file:
lock_pin_lock	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_pin_lock);$/;"	v
lock_pin_lock	locking/lockdep.c	/^struct pin_cookie lock_pin_lock(struct lockdep_map *lock)$/;"	f
lock_point	locking/lockdep.c	/^static int lock_point(unsigned long points[], unsigned long ip)$/;"	f	file:
lock_ptr	futex.c	/^	spinlock_t *lock_ptr;$/;"	m	struct:futex_q	file:
lock_release	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_release);$/;"	v
lock_release	locking/lockdep.c	/^void lock_release(struct lockdep_map *lock, int nested,$/;"	f
lock_release_holdtime	locking/lockdep.c	/^static inline void lock_release_holdtime(struct held_lock *hlock)$/;"	f	file:
lock_release_holdtime	locking/lockdep.c	/^static void lock_release_holdtime(struct held_lock *hlock)$/;"	f	file:
lock_repin_lock	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_repin_lock);$/;"	v
lock_repin_lock	locking/lockdep.c	/^void lock_repin_lock(struct lockdep_map *lock, struct pin_cookie cookie)$/;"	f
lock_set_class	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_set_class);$/;"	v
lock_set_class	locking/lockdep.c	/^void lock_set_class(struct lockdep_map *lock, const char *name,$/;"	f
lock_stat	locking/lockdep.c	/^int lock_stat = 1;$/;"	v
lock_stat	locking/lockdep.c	76;"	d	file:
lock_stat_cmp	locking/lockdep_proc.c	/^static int lock_stat_cmp(const void *l, const void *r)$/;"	f	file:
lock_stat_data	locking/lockdep_proc.c	/^struct lock_stat_data {$/;"	s	file:
lock_stat_open	locking/lockdep_proc.c	/^static int lock_stat_open(struct inode *inode, struct file *file)$/;"	f	file:
lock_stat_release	locking/lockdep_proc.c	/^static int lock_stat_release(struct inode *inode, struct file *file)$/;"	f	file:
lock_stat_seq	locking/lockdep_proc.c	/^struct lock_stat_seq {$/;"	s	file:
lock_stat_write	locking/lockdep_proc.c	/^static ssize_t lock_stat_write(struct file *file, const char __user *buf,$/;"	f	file:
lock_stats	locking/lockdep.c	/^struct lock_class_stats lock_stats(struct lock_class *class)$/;"	f
lock_stress_stats	locking/locktorture.c	/^struct lock_stress_stats {$/;"	s	file:
lock_system_sleep	power/main.c	/^EXPORT_SYMBOL_GPL(lock_system_sleep);$/;"	v
lock_system_sleep	power/main.c	/^void lock_system_sleep(void)$/;"	f
lock_time_add	locking/lockdep.c	/^static inline void lock_time_add(struct lock_time *src, struct lock_time *dst)$/;"	f	file:
lock_time_inc	locking/lockdep.c	/^static void lock_time_inc(struct lock_time *lt, u64 time)$/;"	f	file:
lock_timer	time/posix-timers.c	106;"	d	file:
lock_torture_cleanup	locking/locktorture.c	/^module_exit(lock_torture_cleanup);$/;"	v
lock_torture_cleanup	locking/locktorture.c	/^static void lock_torture_cleanup(void)$/;"	f	file:
lock_torture_cxt	locking/locktorture.c	/^struct lock_torture_cxt {$/;"	s	file:
lock_torture_init	locking/locktorture.c	/^module_init(lock_torture_init);$/;"	v
lock_torture_init	locking/locktorture.c	/^static int __init lock_torture_init(void)$/;"	f	file:
lock_torture_ops	locking/locktorture.c	/^struct lock_torture_ops {$/;"	s	file:
lock_torture_print_module_parms	locking/locktorture.c	/^lock_torture_print_module_parms(struct lock_torture_ops *cur_ops,$/;"	f	file:
lock_torture_reader	locking/locktorture.c	/^static int lock_torture_reader(void *arg)$/;"	f	file:
lock_torture_stats	locking/locktorture.c	/^static int lock_torture_stats(void *arg)$/;"	f	file:
lock_torture_stats_print	locking/locktorture.c	/^static void lock_torture_stats_print(void)$/;"	f	file:
lock_torture_writer	locking/locktorture.c	/^static int lock_torture_writer(void *arg)$/;"	f	file:
lock_unpin_lock	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lock_unpin_lock);$/;"	v
lock_unpin_lock	locking/lockdep.c	/^void lock_unpin_lock(struct lockdep_map *lock, struct pin_cookie cookie)$/;"	f
lock_usage_bit	locking/lockdep_internals.h	/^enum lock_usage_bit {$/;"	g
lockdep_acquire_cpus_lock	cpu.c	/^static void lockdep_acquire_cpus_lock(void)$/;"	f	file:
lockdep_assert_cpus_held	cpu.c	/^void lockdep_assert_cpus_held(void)$/;"	f
lockdep_chains_ops	locking/lockdep_proc.c	/^static const struct seq_operations lockdep_chains_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockdep_count_backward_deps	locking/lockdep.c	/^unsigned long lockdep_count_backward_deps(struct lock_class *class)$/;"	f
lockdep_count_backward_deps	locking/lockdep_internals.h	/^lockdep_count_backward_deps(struct lock_class *class)$/;"	f
lockdep_count_forward_deps	locking/lockdep.c	/^unsigned long lockdep_count_forward_deps(struct lock_class *class)$/;"	f
lockdep_count_forward_deps	locking/lockdep_internals.h	/^lockdep_count_forward_deps(struct lock_class *class)$/;"	f
lockdep_dependency_gen_id	locking/lockdep.c	/^static unsigned int lockdep_dependency_gen_id;$/;"	v	file:
lockdep_free_key_range	locking/lockdep.c	/^void lockdep_free_key_range(void *start, unsigned long size)$/;"	f
lockdep_free_key_range_imm	locking/lockdep.c	/^static void lockdep_free_key_range_imm(void *start, unsigned long size)$/;"	f	file:
lockdep_free_key_range_reg	locking/lockdep.c	/^static void lockdep_free_key_range_reg(void *start, unsigned long size)$/;"	f	file:
lockdep_hardirqs_off	locking/lockdep.c	/^NOKPROBE_SYMBOL(lockdep_hardirqs_off);$/;"	v
lockdep_hardirqs_off	locking/lockdep.c	/^void lockdep_hardirqs_off(unsigned long ip)$/;"	f
lockdep_hardirqs_on	locking/lockdep.c	/^NOKPROBE_SYMBOL(lockdep_hardirqs_on);$/;"	v
lockdep_hardirqs_on	locking/lockdep.c	/^void lockdep_hardirqs_on(unsigned long ip)$/;"	f
lockdep_init	locking/lockdep.c	/^void __init lockdep_init(void)$/;"	f
lockdep_init_map	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_init_map);$/;"	v
lockdep_init_map	locking/lockdep.c	/^void lockdep_init_map(struct lockdep_map *lock, const char *name,$/;"	f
lockdep_init_task	locking/lockdep.c	/^void lockdep_init_task(struct task_struct *task)$/;"	f
lockdep_lock	locking/lockdep.c	/^static arch_spinlock_t lockdep_lock = (arch_spinlock_t)__ARCH_SPIN_LOCK_UNLOCKED;$/;"	v	file:
lockdep_map	workqueue.c	/^	struct lockdep_map	lockdep_map;$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::lockdep_map	file:
lockdep_next_lockchain	locking/lockdep.c	/^long lockdep_next_lockchain(long i)$/;"	f
lockdep_off	locking/lockdep.c	/^EXPORT_SYMBOL(lockdep_off);$/;"	v
lockdep_off	locking/lockdep.c	/^void lockdep_off(void)$/;"	f
lockdep_on	locking/lockdep.c	/^EXPORT_SYMBOL(lockdep_on);$/;"	v
lockdep_on	locking/lockdep.c	/^void lockdep_on(void)$/;"	f
lockdep_ops	locking/lockdep_proc.c	/^static const struct seq_operations lockdep_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockdep_print_held_locks	locking/lockdep.c	/^static void lockdep_print_held_locks(struct task_struct *p)$/;"	f	file:
lockdep_proc_init	locking/lockdep_proc.c	/^__initcall(lockdep_proc_init);$/;"	v
lockdep_proc_init	locking/lockdep_proc.c	/^static int __init lockdep_proc_init(void)$/;"	f	file:
lockdep_rcu_suspicious	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_rcu_suspicious);$/;"	v
lockdep_rcu_suspicious	locking/lockdep.c	/^void lockdep_rcu_suspicious(const char *file, const int line, const char *s)$/;"	f
lockdep_register_key	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_register_key);$/;"	v
lockdep_register_key	locking/lockdep.c	/^void lockdep_register_key(struct lock_class_key *key)$/;"	f
lockdep_release_cpus_lock	cpu.c	/^static void lockdep_release_cpus_lock(void)$/;"	f	file:
lockdep_reset	locking/lockdep.c	/^void lockdep_reset(void)$/;"	f
lockdep_reset_lock	locking/lockdep.c	/^void lockdep_reset_lock(struct lockdep_map *lock)$/;"	f
lockdep_reset_lock_imm	locking/lockdep.c	/^static void lockdep_reset_lock_imm(struct lockdep_map *lock)$/;"	f	file:
lockdep_reset_lock_reg	locking/lockdep.c	/^static void lockdep_reset_lock_reg(struct lockdep_map *lock)$/;"	f	file:
lockdep_selftest_task_struct	locking/lockdep.c	/^static struct task_struct *lockdep_selftest_task_struct;$/;"	v	typeref:struct:task_struct	file:
lockdep_set_selftest_task	locking/lockdep.c	/^void lockdep_set_selftest_task(struct task_struct *task)$/;"	f
lockdep_softirq_end	softirq.c	/^static inline void lockdep_softirq_end(bool in_hardirq) { }$/;"	f	file:
lockdep_softirq_end	softirq.c	/^static inline void lockdep_softirq_end(bool in_hardirq)$/;"	f	file:
lockdep_softirq_start	softirq.c	/^static inline bool lockdep_softirq_start(void) { return false; }$/;"	f	file:
lockdep_softirq_start	softirq.c	/^static inline bool lockdep_softirq_start(void)$/;"	f	file:
lockdep_stats	locking/lockdep_internals.h	/^struct lockdep_stats {$/;"	s
lockdep_stats_debug_show	locking/lockdep_proc.c	/^static void lockdep_stats_debug_show(struct seq_file *m)$/;"	f	file:
lockdep_stats_show	locking/lockdep_proc.c	/^static int lockdep_stats_show(struct seq_file *m, void *v)$/;"	f	file:
lockdep_sys_exit	locking/lockdep.c	/^asmlinkage __visible void lockdep_sys_exit(void)$/;"	f
lockdep_tasklist_lock_is_held	fork.c	/^EXPORT_SYMBOL_GPL(lockdep_tasklist_lock_is_held);$/;"	v
lockdep_tasklist_lock_is_held	fork.c	/^int lockdep_tasklist_lock_is_held(void)$/;"	f
lockdep_unregister_key	locking/lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_unregister_key);$/;"	v
lockdep_unregister_key	locking/lockdep.c	/^void lockdep_unregister_key(struct lock_class_key *key)$/;"	f
locked	locking/mcs_spinlock.h	/^	int locked; \/* 1 if lock acquired *\/$/;"	m	struct:mcs_spinlock
lockevent_add	locking/lock_events.h	51;"	d
lockevent_add	locking/lock_events.h	56;"	d
lockevent_cond_inc	locking/lock_events.h	44;"	d
lockevent_cond_inc	locking/lock_events.h	57;"	d
lockevent_inc	locking/lock_events.h	43;"	d
lockevent_inc	locking/lock_events.h	55;"	d
lockevent_names	locking/lock_events.c	/^static const char * const lockevent_names[lockevent_num + 1] = {$/;"	v	file:
lockevent_num	locking/lock_events.h	/^	lockevent_num,	\/* Total number of lock event counts *\/$/;"	e	enum:lock_events
lockevent_pv_hop	locking/qspinlock_stat.h	/^static inline void lockevent_pv_hop(int hopcnt)	{ }$/;"	f
lockevent_pv_hop	locking/qspinlock_stat.h	/^static inline void lockevent_pv_hop(int hopcnt)$/;"	f
lockevent_read	locking/lock_events.c	/^ssize_t __weak lockevent_read(struct file *file, char __user *user_buf,$/;"	f
lockevent_read	locking/qspinlock_stat.h	/^ssize_t lockevent_read(struct file *file, char __user *user_buf,$/;"	f
lockevent_write	locking/lock_events.c	/^static ssize_t lockevent_write(struct file *file, const char __user *user_buf,$/;"	f	file:
locks	locking/test-ww_mutex.c	/^	struct ww_mutex *locks;$/;"	m	struct:stress	typeref:struct:stress::ww_mutex	file:
lockstat_clock	locking/lockdep.c	/^static inline u64 lockstat_clock(void)$/;"	f	file:
lockstat_ops	locking/lockdep_proc.c	/^static const struct seq_operations lockstat_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockup_detector_cleanup	watchdog.c	/^void lockup_detector_cleanup(void)$/;"	f
lockup_detector_init	watchdog.c	/^void __init lockup_detector_init(void)$/;"	f
lockup_detector_offline_cpu	watchdog.c	/^int lockup_detector_offline_cpu(unsigned int cpu)$/;"	f
lockup_detector_online_cpu	watchdog.c	/^int lockup_detector_online_cpu(unsigned int cpu)$/;"	f
lockup_detector_reconfigure	watchdog.c	/^static void lockup_detector_reconfigure(void)$/;"	f	file:
lockup_detector_setup	watchdog.c	/^static __init void lockup_detector_setup(void)$/;"	f	file:
lockup_detector_setup	watchdog.c	/^static inline void lockup_detector_setup(void)$/;"	f	file:
lockup_detector_soft_poweroff	watchdog.c	/^void lockup_detector_soft_poweroff(void)$/;"	f
lockup_detector_update_enable	watchdog.c	/^static void lockup_detector_update_enable(void)$/;"	f	file:
log	bpf/btf.c	/^	struct bpf_verifier_log log;$/;"	m	struct:btf_verifier_env	typeref:struct:btf_verifier_env::bpf_verifier_log	file:
log	seccomp.c	/^	bool log;$/;"	m	struct:seccomp_filter	file:
log	seccomp.c	/^	u32		log;$/;"	m	struct:seccomp_log_name	file:
log_buf	printk/printk.c	/^static char *log_buf = __log_buf;$/;"	v	file:
log_buf_add_cpu	printk/printk.c	/^static inline void log_buf_add_cpu(void) {}$/;"	f	file:
log_buf_add_cpu	printk/printk.c	/^static void __init log_buf_add_cpu(void)$/;"	f	file:
log_buf_addr_get	printk/printk.c	/^char *log_buf_addr_get(void)$/;"	f
log_buf_len	printk/printk.c	/^static u32 log_buf_len = __LOG_BUF_LEN;$/;"	v	file:
log_buf_len_get	printk/printk.c	/^u32 log_buf_len_get(void)$/;"	f
log_buf_len_setup	printk/printk.c	/^static int __init log_buf_len_setup(char *str)$/;"	f	file:
log_buf_len_update	printk/printk.c	/^static void __init log_buf_len_update(u64 size)$/;"	f	file:
log_buf_vmcoreinfo_setup	printk/printk.c	/^void log_buf_vmcoreinfo_setup(void)$/;"	f
log_details	bpf/btf.c	/^	void (*log_details)(struct btf_verifier_env *env,$/;"	m	struct:btf_kind_operations	file:
log_dict	printk/printk.c	/^static char *log_dict(const struct printk_log *msg) { return NULL; }$/;"	f	file:
log_dict	printk/printk.c	/^static char *log_dict(const struct printk_log *msg)$/;"	f	file:
log_first_idx	printk/printk.c	/^static u32 log_first_idx;$/;"	v	file:
log_first_seq	printk/printk.c	/^static u64 log_first_seq;$/;"	v	file:
log_flags	printk/printk.c	/^enum log_flags {$/;"	g	file:
log_from_idx	printk/printk.c	/^static struct printk_log *log_from_idx(u32 idx) { return NULL; }$/;"	f	file:
log_from_idx	printk/printk.c	/^static struct printk_log *log_from_idx(u32 idx)$/;"	f	file:
log_make_free_space	printk/printk.c	/^static int log_make_free_space(u32 msg_size)$/;"	f	file:
log_next	printk/printk.c	/^static u32 log_next(u32 idx) { return 0; }$/;"	f	file:
log_next	printk/printk.c	/^static u32 log_next(u32 idx)$/;"	f	file:
log_next_idx	printk/printk.c	/^static u32 log_next_idx;$/;"	v	file:
log_next_seq	printk/printk.c	/^static u64 log_next_seq;$/;"	v	file:
log_output	printk/printk.c	/^static size_t log_output(int facility, int level, enum log_flags lflags, const char *dict, size_t dictlen, char *text, size_t text_len)$/;"	f	file:
log_store	printk/printk.c	/^static int log_store(u32 caller_id, int facility, int level,$/;"	f	file:
log_text	printk/printk.c	/^static char *log_text(const struct printk_log *msg) { return NULL; }$/;"	f	file:
log_text	printk/printk.c	/^static char *log_text(const struct printk_log *msg)$/;"	f	file:
log_type_id	bpf/btf.c	/^	u32 log_type_id;$/;"	m	struct:btf_verifier_env	file:
log_wait	printk/printk.c	/^DECLARE_WAIT_QUEUE_HEAD(log_wait);$/;"	v
logarithmic_accumulation	time/timekeeping.c	/^static u64 logarithmic_accumulation(struct timekeeper *tk, u64 offset,$/;"	f	file:
logbuf_has_space	printk/printk.c	/^static int logbuf_has_space(u32 msg_size, bool empty)$/;"	f	file:
logbuf_lock	printk/printk.c	/^DEFINE_RAW_SPINLOCK(logbuf_lock);$/;"	v
logbuf_lock_irq	printk/printk.c	386;"	d	file:
logbuf_lock_irqsave	printk/printk.c	398;"	d	file:
logbuf_unlock_irq	printk/printk.c	392;"	d	file:
logbuf_unlock_irqrestore	printk/printk.c	404;"	d	file:
long_max	sysctl.c	/^static unsigned long long_max = LONG_MAX;$/;"	v	file:
longest_prefix_match	bpf/lpm_trie.c	/^static size_t longest_prefix_match(const struct lpm_trie *trie,$/;"	f	file:
look_up_lock_class	locking/lockdep.c	/^look_up_lock_class(const struct lockdep_map *lock, unsigned int subclass)$/;"	f	file:
lookup_chain_cache	locking/lockdep.c	/^static inline struct lock_chain *lookup_chain_cache(u64 chain_key)$/;"	f	file:
lookup_chain_cache_add	locking/lockdep.c	/^static inline int lookup_chain_cache_add(struct task_struct *curr,$/;"	f	file:
lookup_dcookie	sys_ni.c	/^COND_SYSCALL(lookup_dcookie);$/;"	v
lookup_dcookie	sys_ni.c	/^COND_SYSCALL_COMPAT(lookup_dcookie);$/;"	v
lookup_elem_raw	bpf/hashtab.c	/^static struct htab_elem *lookup_elem_raw(struct hlist_nulls_head *head, u32 hash,$/;"	f	file:
lookup_exported_symbol	module.c	/^static const struct kernel_symbol *lookup_exported_symbol(const char *name,$/;"	f	file:
lookup_format	trace/trace_printk.c	/^static inline struct trace_bprintk_fmt *lookup_format(const char *fmt)$/;"	f	file:
lookup_module_symbol_attrs	module.c	/^int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size,$/;"	f
lookup_module_symbol_name	module.c	/^int lookup_module_symbol_name(unsigned long addr, char *symname)$/;"	f
lookup_nulls_elem_raw	bpf/hashtab.c	/^static struct htab_elem *lookup_nulls_elem_raw(struct hlist_nulls_head *head,$/;"	f	file:
lookup_pi_state	futex.c	/^static int lookup_pi_state(u32 __user *uaddr, u32 uval,$/;"	f	file:
lookup_resource	resource.c	/^struct resource *lookup_resource(struct resource *root, resource_size_t start)$/;"	f
lookup_symbol_attrs	kallsyms.c	/^int lookup_symbol_attrs(unsigned long addr, unsigned long *size,$/;"	f
lookup_symbol_name	kallsyms.c	/^int lookup_symbol_name(unsigned long addr, char *symname)$/;"	f
loop	sched/fair.c	/^	unsigned int		loop;$/;"	m	struct:lb_env	file:
loop_break	sched/fair.c	/^	unsigned int		loop_break;$/;"	m	struct:lb_env	file:
loop_max	sched/fair.c	/^	unsigned int		loop_max;$/;"	m	struct:lb_env	file:
loops_per_msec	printk/printk.c	/^static unsigned long long loops_per_msec;	\/* based on boot_delay *\/$/;"	v	file:
lost	events/internal.h	/^	local_t				lost;		\/* nr records lost   *\/$/;"	m	struct:ring_buffer
lost_events	trace/ring_buffer.c	/^	unsigned long			lost_events;$/;"	m	struct:ring_buffer_per_cpu	file:
lost_idle_time	sched/sched.h	/^	unsigned long		lost_idle_time;$/;"	m	struct:rq
low_free_pages	power/swap.c	/^static inline unsigned long low_free_pages(void)$/;"	f	file:
lowest_flag_domain	sched/sched.h	/^static inline struct sched_domain *lowest_flag_domain(int cpu, int flag)$/;"	f
lowest_in_progress	async.c	/^static async_cookie_t lowest_in_progress(struct async_domain *domain)$/;"	f	file:
lpm_trie	bpf/lpm_trie.c	/^struct lpm_trie {$/;"	s	file:
lpm_trie_node	bpf/lpm_trie.c	/^struct lpm_trie_node {$/;"	s	file:
lpm_trie_node_alloc	bpf/lpm_trie.c	/^static struct lpm_trie_node *lpm_trie_node_alloc(const struct lpm_trie *trie,$/;"	f	file:
lrsa	locking/locktorture.c	/^	struct lock_stress_stats *lrsa; \/* reader statistics *\/$/;"	m	struct:lock_torture_cxt	typeref:struct:lock_torture_cxt::lock_stress_stats	file:
lru	bpf/hashtab.c	/^		struct bpf_lru lru;$/;"	m	union:bpf_htab::__anon69	typeref:struct:bpf_htab::__anon69::bpf_lru	file:
lru	power/wakelock.c	/^	struct list_head	lru;$/;"	m	struct:wakelock	typeref:struct:wakelock::list_head	file:
lru_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_list lru_list;$/;"	m	struct:bpf_common_lru	typeref:struct:bpf_common_lru::bpf_lru_list
lru_node	bpf/hashtab.c	/^		struct bpf_lru_node lru_node;$/;"	m	union:htab_elem::__anon73	typeref:struct:htab_elem::__anon73::bpf_lru_node	file:
ls_next	locking/lockdep_proc.c	/^static void *ls_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
ls_show	locking/lockdep_proc.c	/^static int ls_show(struct seq_file *m, void *v)$/;"	f	file:
ls_start	locking/lockdep_proc.c	/^static void *ls_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
ls_stop	locking/lockdep_proc.c	/^static void ls_stop(struct seq_file *m, void *v)$/;"	f	file:
lshift	trace/trace_probe.h	/^			unsigned char lshift;$/;"	m	struct:fetch_insn::__anon21::__anon23
lstats_fops	latencytop.c	/^static const struct file_operations lstats_fops = {$/;"	v	typeref:struct:file_operations	file:
lstats_open	latencytop.c	/^static int lstats_open(struct inode *inode, struct file *filp)$/;"	f	file:
lstats_show	latencytop.c	/^static int lstats_show(struct seq_file *m, void *v)$/;"	f	file:
lstats_write	latencytop.c	/^lstats_write(struct file *file, const char __user *buf, size_t count,$/;"	f	file:
lsub_positive	sched/fair.c	2827;"	d	file:
ltrim	bpf/verifier.c	/^static const char *ltrim(const char *s)$/;"	f	file:
lwsa	locking/locktorture.c	/^	struct lock_stress_stats *lwsa; \/* writer statistics *\/$/;"	m	struct:lock_torture_cxt	typeref:struct:lock_torture_cxt::lock_stress_stats	file:
lzo_compress_threadfn	power/swap.c	/^static int lzo_compress_threadfn(void *data)$/;"	f	file:
lzo_decompress_threadfn	power/swap.c	/^static int lzo_decompress_threadfn(void *data)$/;"	f	file:
m_next	module.c	/^static void *m_next(struct seq_file *m, void *p, loff_t *pos)$/;"	f	file:
m_next	user_namespace.c	/^static void *m_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
m_show	module.c	/^static int m_show(struct seq_file *m, void *p)$/;"	f	file:
m_start	module.c	/^static void *m_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
m_start	user_namespace.c	/^static void *m_start(struct seq_file *seq, loff_t *ppos,$/;"	f	file:
m_stop	module.c	/^static void m_stop(struct seq_file *m, void *p)$/;"	f	file:
m_stop	user_namespace.c	/^static void m_stop(struct seq_file *seq, void *v)$/;"	f	file:
madvise	sys_ni.c	/^COND_SYSCALL(madvise);$/;"	v
main	bounds.c	/^int main(void)$/;"	f
main	bounds.s	/^main:$/;"	l
main_extable_sort_needed	extable.c	/^u32 __initdata __visible main_extable_sort_needed = 1;$/;"	v
maj	events/core.c	/^	int			maj, min;$/;"	m	struct:perf_mmap_event	file:
major	audit.h	/^	int		    major;      \/* syscall number *\/$/;"	m	struct:audit_context
make_data_loc	trace/trace_probe.h	60;"	d
make_kgid	user_namespace.c	/^EXPORT_SYMBOL(make_kgid);$/;"	v
make_kgid	user_namespace.c	/^kgid_t make_kgid(struct user_namespace *ns, gid_t gid)$/;"	f
make_kprojid	user_namespace.c	/^EXPORT_SYMBOL(make_kprojid);$/;"	v
make_kprojid	user_namespace.c	/^kprojid_t make_kprojid(struct user_namespace *ns, projid_t projid)$/;"	f
make_kuid	user_namespace.c	/^EXPORT_SYMBOL(make_kuid);$/;"	v
make_kuid	user_namespace.c	/^kuid_t make_kuid(struct user_namespace *ns, uid_t uid)$/;"	f
manage_workers	workqueue.c	/^static bool manage_workers(struct worker *worker)$/;"	f	file:
managed	irq/matrix.c	/^	unsigned int		managed;$/;"	m	struct:cpumap	file:
managed_allocated	irq/matrix.c	/^	unsigned int		managed_allocated;$/;"	m	struct:cpumap	file:
managed_map	irq/matrix.c	/^	unsigned long		managed_map[IRQ_MATRIX_SIZE];$/;"	m	struct:cpumap	file:
manager	workqueue.c	/^	struct worker		*manager;	\/* L: purely informational *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::worker	file:
map	bpf/cpumap.c	/^	struct bpf_map map;$/;"	m	struct:bpf_cpu_map	typeref:struct:bpf_cpu_map::bpf_map	file:
map	bpf/devmap.c	/^	struct bpf_map map;$/;"	m	struct:bpf_dtab	typeref:struct:bpf_dtab::bpf_map	file:
map	bpf/hashtab.c	/^	struct bpf_map map;$/;"	m	struct:bpf_htab	typeref:struct:bpf_htab::bpf_map	file:
map	bpf/local_storage.c	/^	struct bpf_map map;$/;"	m	struct:bpf_cgroup_storage_map	typeref:struct:bpf_cgroup_storage_map::bpf_map	file:
map	bpf/lpm_trie.c	/^	struct bpf_map			map;$/;"	m	struct:lpm_trie	typeref:struct:lpm_trie::bpf_map	file:
map	bpf/queue_stack_maps.c	/^	struct bpf_map map;$/;"	m	struct:bpf_queue_stack	typeref:struct:bpf_queue_stack::bpf_map	file:
map	bpf/reuseport_array.c	/^	struct bpf_map map;$/;"	m	struct:reuseport_array	typeref:struct:reuseport_array::bpf_map	file:
map	bpf/stackmap.c	/^	struct bpf_map map;$/;"	m	struct:bpf_stack_map	typeref:struct:bpf_stack_map::bpf_map	file:
map	bpf/xskmap.c	/^	struct bpf_map map;$/;"	m	struct:xsk_map	typeref:struct:xsk_map::bpf_map	file:
map	power/swap.c	/^	struct swap_map_page *map;$/;"	m	struct:swap_map_page_list	typeref:struct:swap_map_page_list::swap_map_page	file:
map	trace/trace.c	/^	struct trace_eval_map		map;$/;"	m	union:trace_eval_map_item	typeref:struct:trace_eval_map_item::trace_eval_map	file:
map	trace/trace_events_hist.c	/^	struct tracing_map		*map;$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::tracing_map	file:
map	trace/tracing_map.h	/^	struct tracing_map		*map;$/;"	m	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map
map	trace/tracing_map.h	/^	struct tracing_map_array	*map;$/;"	m	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array
map_bits	trace/trace_events_hist.c	/^	unsigned int	map_bits;$/;"	m	struct:hist_trigger_attrs	file:
map_bits	trace/tracing_map.h	/^	unsigned int			map_bits;$/;"	m	struct:tracing_map
map_check_btf	bpf/syscall.c	/^static int map_check_btf(struct bpf_map *map, const struct btf *btf,$/;"	f	file:
map_check_no_btf	bpf/syscall.c	/^int map_check_no_btf(const struct bpf_map *map,$/;"	f
map_cmdline_to_pid	trace/trace.c	/^	unsigned *map_cmdline_to_pid;$/;"	m	struct:saved_cmdlines_buffer	file:
map_create	bpf/syscall.c	/^static int map_create(union bpf_attr *attr)$/;"	f	file:
map_delete_elem	bpf/syscall.c	/^static int map_delete_elem(union bpf_attr *attr)$/;"	f	file:
map_err_type	dma/debug.c	/^	enum map_err_types  map_err_type;$/;"	m	struct:dma_debug_entry	typeref:enum:dma_debug_entry::map_err_types	file:
map_err_types	dma/debug.c	/^enum map_err_types {$/;"	g	file:
map_freeze	bpf/syscall.c	/^static int map_freeze(const union bpf_attr *attr)$/;"	f	file:
map_get_next_key	bpf/syscall.c	/^static int map_get_next_key(union bpf_attr *attr)$/;"	f	file:
map_get_sys_perms	bpf/syscall.c	/^static fmode_t map_get_sys_perms(struct bpf_map *map, struct fd f)$/;"	f	file:
map_id	bpf/cpumap.c	/^	int map_id; \/* Back reference to map *\/$/;"	m	struct:bpf_cpu_map_entry	file:
map_id_down	user_namespace.c	/^static u32 map_id_down(struct uid_gid_map *map, u32 id)$/;"	f	file:
map_id_range_down	user_namespace.c	/^static u32 map_id_range_down(struct uid_gid_map *map, u32 id, u32 count)$/;"	f	file:
map_id_range_down_base	user_namespace.c	/^map_id_range_down_base(unsigned extents, struct uid_gid_map *map, u32 id, u32 count)$/;"	f	file:
map_id_range_down_max	user_namespace.c	/^map_id_range_down_max(unsigned extents, struct uid_gid_map *map, u32 id, u32 count)$/;"	f	file:
map_id_up	user_namespace.c	/^static u32 map_id_up(struct uid_gid_map *map, u32 id)$/;"	f	file:
map_id_up_base	user_namespace.c	/^map_id_up_base(unsigned extents, struct uid_gid_map *map, u32 id)$/;"	f	file:
map_id_up_max	user_namespace.c	/^map_id_up_max(unsigned extents, struct uid_gid_map *map, u32 id)$/;"	f	file:
map_info	events/uprobes.c	/^struct map_info {$/;"	s	file:
map_iter	bpf/inode.c	/^static struct map_iter *map_iter(struct seq_file *m)$/;"	f	file:
map_iter	bpf/inode.c	/^struct map_iter {$/;"	s	file:
map_iter_alloc	bpf/inode.c	/^static struct map_iter *map_iter_alloc(struct bpf_map *map)$/;"	f	file:
map_iter_free	bpf/inode.c	/^static void map_iter_free(struct map_iter *iter)$/;"	f	file:
map_lookup_and_delete_elem	bpf/syscall.c	/^static int map_lookup_and_delete_elem(union bpf_attr *attr)$/;"	f	file:
map_lookup_elem	bpf/syscall.c	/^static int map_lookup_elem(union bpf_attr *attr)$/;"	f	file:
map_pid_to_cmdline	trace/trace.c	/^	unsigned map_pid_to_cmdline[PID_MAX_DEFAULT+1];$/;"	m	struct:saved_cmdlines_buffer	file:
map_ptr	bpf/verifier.c	/^	struct bpf_map *map_ptr;$/;"	m	struct:bpf_call_arg_meta	typeref:struct:bpf_call_arg_meta::bpf_map	file:
map_seq_next	bpf/inode.c	/^static void *map_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
map_seq_show	bpf/inode.c	/^static int map_seq_show(struct seq_file *m, void *v)$/;"	f	file:
map_seq_start	bpf/inode.c	/^static void *map_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
map_seq_stop	bpf/inode.c	/^static void map_seq_stop(struct seq_file *m, void *v)$/;"	f	file:
map_size	trace/tracing_map.h	/^	unsigned int			map_size;$/;"	m	struct:tracing_map
map_to_storage	bpf/local_storage.c	/^static struct bpf_cgroup_storage_map *map_to_storage(struct bpf_map *map)$/;"	f	file:
map_up	user_namespace.c	/^	bool map_up; \/* true  -> id from kid; false -> kid from id *\/$/;"	m	struct:idmap_key	file:
map_update_elem	bpf/syscall.c	/^static int map_update_elem(union bpf_attr *attr)$/;"	f	file:
map_write	user_namespace.c	/^static ssize_t map_write(struct file *file, const char __user *buf,$/;"	f	file:
maperr2str	dma/debug.c	/^static const char *const maperr2str[] = {$/;"	v	file:
mappings_overlap	user_namespace.c	/^static bool mappings_overlap(struct uid_gid_map *new_map,$/;"	f	file:
maps	bpf/offload.c	/^	struct list_head maps;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::list_head	file:
maps	irq/matrix.c	/^	struct cpumap __percpu	*maps;$/;"	m	struct:irq_matrix	typeref:struct:irq_matrix::__percpu	file:
maps	power/swap.c	/^	struct swap_map_page_list *maps;$/;"	m	struct:swap_map_handle	typeref:struct:swap_map_handle::swap_map_page_list	file:
mark	audit_fsnotify.c	/^	struct fsnotify_mark mark; \/* fsnotify mark on the inode *\/$/;"	m	struct:audit_fsnotify_mark	typeref:struct:audit_fsnotify_mark::fsnotify_mark	file:
mark	audit_tree.c	/^	struct fsnotify_mark *mark;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::fsnotify_mark	file:
mark	audit_tree.c	/^	struct fsnotify_mark mark;$/;"	m	struct:audit_tree_mark	typeref:struct:audit_tree_mark::fsnotify_mark	file:
mark	audit_watch.c	/^	struct fsnotify_mark mark; \/* fsnotify mark on the inode *\/$/;"	m	struct:audit_parent	typeref:struct:audit_parent::fsnotify_mark	file:
mark	trace/trace_output.c	/^} mark[] = {$/;"	v	typeref:struct:trace_mark	file:
mark_all_scalars_precise	bpf/verifier.c	/^static void mark_all_scalars_precise(struct bpf_verifier_env *env,$/;"	f	file:
mark_chain_precision	bpf/verifier.c	/^static int mark_chain_precision(struct bpf_verifier_env *env, int regno)$/;"	f	file:
mark_chain_precision_stack	bpf/verifier.c	/^static int mark_chain_precision_stack(struct bpf_verifier_env *env, int spi)$/;"	f	file:
mark_chunk	audit_tree.c	/^static struct audit_chunk *mark_chunk(struct fsnotify_mark *mark)$/;"	f	file:
mark_held_locks	locking/lockdep.c	/^mark_held_locks(struct task_struct *curr, enum lock_usage_bit base_bit)$/;"	f	file:
mark_insn_zext	bpf/verifier.c	/^static void mark_insn_zext(struct bpf_verifier_env *env,$/;"	f	file:
mark_lock	locking/lockdep.c	/^static int mark_lock(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
mark_lock_accessed	locking/lockdep.c	/^static inline void mark_lock_accessed(struct lock_list *lock,$/;"	f	file:
mark_lock_irq	locking/lockdep.c	/^mark_lock_irq(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
mark_nosave_pages	power/snapshot.c	/^static void mark_nosave_pages(struct memory_bitmap *bm)$/;"	f	file:
mark_ptr_or_null_reg	bpf/verifier.c	/^static void mark_ptr_or_null_reg(struct bpf_func_state *state,$/;"	f	file:
mark_ptr_or_null_regs	bpf/verifier.c	/^static void mark_ptr_or_null_regs(struct bpf_verifier_state *vstate, u32 regno,$/;"	f	file:
mark_reg_known_zero	bpf/verifier.c	/^static void mark_reg_known_zero(struct bpf_verifier_env *env,$/;"	f	file:
mark_reg_not_init	bpf/verifier.c	/^static void mark_reg_not_init(struct bpf_verifier_env *env,$/;"	f	file:
mark_reg_read	bpf/verifier.c	/^static int mark_reg_read(struct bpf_verifier_env *env,$/;"	f	file:
mark_reg_unknown	bpf/verifier.c	/^static void mark_reg_unknown(struct bpf_verifier_env *env,$/;"	f	file:
mark_rt_mutex_waiters	locking/rtmutex.c	/^static inline void mark_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
mark_swapfiles	power/swap.c	/^static int mark_swapfiles(struct swap_map_handle *handle, unsigned int flags)$/;"	f	file:
mark_unsafe_pages	power/snapshot.c	/^static void mark_unsafe_pages(struct memory_bitmap *bm)$/;"	f	file:
mark_usage	locking/lockdep.c	/^mark_usage(struct task_struct *curr, struct held_lock *hlock, int check)$/;"	f	file:
mark_wake_futex	futex.c	/^static void mark_wake_futex(struct wake_q_head *wake_q, struct futex_q *q)$/;"	f	file:
mark_wakeup_next_waiter	locking/rtmutex.c	/^static void mark_wakeup_next_waiter(struct wake_q_head *wake_q,$/;"	f	file:
mark_work_canceling	workqueue.c	/^static void mark_work_canceling(struct work_struct *work)$/;"	f	file:
mask	irq/debugfs.c	/^	unsigned int	mask;$/;"	m	struct:irq_bit_descr	file:
mask	sched/cpupri.h	/^	cpumask_var_t		mask;$/;"	m	struct:cpupri_vec
mask	trace/blktrace.c	/^	int mask;$/;"	m	struct:__anon39	file:
mask_ack_irq	irq/chip.c	/^static inline void mask_ack_irq(struct irq_desc *desc)$/;"	f	file:
mask_irq	irq/chip.c	/^void mask_irq(struct irq_desc *desc)$/;"	f
mask_maps	trace/blktrace.c	/^} mask_maps[] = {$/;"	v	typeref:struct:__anon39	file:
masters_in_kgdb	debug/debug_core.c	/^static atomic_t			masters_in_kgdb;$/;"	v	file:
match	trace/trace.h	/^	regex_match_func	match;$/;"	m	struct:regex
match	trace/trace_dynevent.h	/^	bool (*match)(const char *system, const char *event,$/;"	m	struct:dyn_event_operations
match	trace/trace_events_filter.c	/^	int match;$/;"	m	struct:test_filter_data_t	file:
match_data	trace/trace_events_hist.c	/^		} match_data;$/;"	m	union:action_data::__anon46	typeref:struct:action_data::__anon46::__anon47	file:
match_fn	dma/debug.c	/^typedef bool (*match_fn)(struct dma_debug_entry *, struct dma_debug_entry *);$/;"	t	file:
match_futex	futex.c	/^static inline int match_futex(union futex_key *key1, union futex_key *key2)$/;"	f	file:
match_held_lock	locking/lockdep.c	/^static int match_held_lock(const struct held_lock *hlock,$/;"	f	file:
match_records	trace/ftrace.c	/^match_records(struct ftrace_hash *hash, char *func, int len, char *mod)$/;"	f	file:
match_tree_refs	auditsc.c	/^static int match_tree_refs(struct audit_context *ctx, struct audit_tree *tree)$/;"	f	file:
match_uprobe	events/uprobes.c	/^static int match_uprobe(struct uprobe *l, struct uprobe *r)$/;"	f	file:
math_div	time/timeconv.c	/^static long math_div(long a, long b)$/;"	f	file:
matrix_alloc_area	irq/matrix.c	/^static unsigned int matrix_alloc_area(struct irq_matrix *m, struct cpumap *cm,$/;"	f	file:
matrix_bits	irq/matrix.c	/^	unsigned int		matrix_bits;$/;"	m	struct:irq_matrix	file:
matrix_find_best_cpu	irq/matrix.c	/^static unsigned int matrix_find_best_cpu(struct irq_matrix *m,$/;"	f	file:
matrix_find_best_cpu_managed	irq/matrix.c	/^static unsigned int matrix_find_best_cpu_managed(struct irq_matrix *m,$/;"	f	file:
mattr	module.c	/^	struct module_attribute mattr;$/;"	m	struct:module_sect_attr	typeref:struct:module_sect_attr::module_attribute	file:
mattr	params.c	/^	struct module_attribute mattr;$/;"	m	struct:param_attribute	typeref:struct:param_attribute::module_attribute	file:
max	cgroup/rdma.c	/^	int max;$/;"	m	struct:rdmacg_resource	file:
max	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
max	sched/cpufreq_schedutil.c	/^	unsigned long		max;$/;"	m	struct:sugov_cpu	file:
max	sysctl.c	/^	int *max;$/;"	m	struct:do_proc_dointvec_minmax_conv_param	file:
max	sysctl.c	/^	unsigned int *max;$/;"	m	struct:do_proc_douintvec_minmax_conv_param	file:
max_active	workqueue.c	/^	int			max_active;	\/* L: max active works *\/$/;"	m	struct:pool_workqueue	file:
max_active_show	workqueue.c	/^static ssize_t max_active_show(struct device *dev,$/;"	f	file:
max_active_store	workqueue.c	/^static ssize_t max_active_store(struct device *dev,$/;"	f	file:
max_bfs_queue_depth	locking/lockdep.c	/^unsigned int max_bfs_queue_depth;$/;"	v
max_buffer	trace/trace.h	/^	struct trace_buffer	max_buffer;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_buffer
max_bytes_for_cpu	trace/trace_functions_graph.c	/^static int max_bytes_for_cpu;$/;"	v	file:
max_capacity	sched/sched.h	/^	unsigned long		max_capacity;		\/* Max per-CPU capacity in group *\/$/;"	m	struct:sched_group_capacity
max_cfs_quota_period	sched/core.c	/^const u64 max_cfs_quota_period = 1 * NSEC_PER_SEC; \/* 1s *\/$/;"	v
max_cpu_capacity	sched/sched.h	/^	unsigned long		max_cpu_capacity;$/;"	m	struct:root_domain
max_elts	trace/tracing_map.h	/^	unsigned int			max_elts;$/;"	m	struct:tracing_map
max_extfrag_threshold	sysctl.c	/^static int max_extfrag_threshold = 1000;$/;"	v	file:
max_faults_cpu	sched/fair.c	/^	unsigned long max_faults_cpu;$/;"	m	struct:numa_group	file:
max_idle_balance_cost	sched/sched.h	/^	u64			max_idle_balance_cost;$/;"	m	struct:rq
max_latency	trace/trace.h	/^	unsigned long		max_latency;$/;"	m	struct:trace_array
max_load_balance_interval	sched/fair.c	/^static unsigned long __read_mostly max_load_balance_interval = HZ\/10;$/;"	v	file:
max_lock	trace/trace.h	/^	arch_spinlock_t		max_lock;$/;"	m	struct:trace_array
max_lock_depth	locking/rtmutex.c	/^int max_lock_depth = 1024;$/;"	v
max_lockdep_depth	locking/lockdep.c	/^unsigned int max_lockdep_depth;$/;"	v
max_offline	torture.c	/^static int max_offline;$/;"	v	file:
max_online	torture.c	/^static int max_online;$/;"	v	file:
max_prefixlen	bpf/lpm_trie.c	/^	size_t				max_prefixlen;$/;"	m	struct:lpm_trie	file:
max_sched_granularity_ns	sysctl.c	/^static int max_sched_granularity_ns = NSEC_PER_SEC;	\/* 1 second *\/$/;"	v	file:
max_sched_tunable_scaling	sysctl.c	/^static int max_sched_tunable_scaling = SCHED_TUNABLESCALING_END-1;$/;"	v	file:
max_segment	dma/swiotlb.c	/^unsigned int max_segment;$/;"	v
max_sequence	trace/trace_irqsoff.c	/^static __cacheline_aligned_in_smp	unsigned long max_sequence;$/;"	v	file:
max_size	trace/ring_buffer.c	/^	int			max_size;$/;"	m	struct:rb_test_data	file:
max_size_nested	trace/ring_buffer.c	/^	int			max_size_nested;$/;"	m	struct:rb_test_data	file:
max_task_bp_pinned	events/hw_breakpoint.c	/^static unsigned int max_task_bp_pinned(int cpu, enum bp_type_idx type)$/;"	f	file:
max_threads	fork.c	/^static int max_threads;		\/* tunable limit on nr_threads *\/$/;"	v	file:
max_vruntime	sched/fair.c	/^static inline u64 max_vruntime(u64 max_vruntime, u64 vruntime)$/;"	f	file:
max_wakeup_granularity_ns	sysctl.c	/^static int max_wakeup_granularity_ns = NSEC_PER_SEC;	\/* 1 second *\/$/;"	v	file:
maxcpus	smp.c	/^static int __init maxcpus(char *str)$/;"	f	file:
maxolduid	sysctl.c	/^static int maxolduid = 65535;$/;"	v	file:
may_access_direct_pkt_data	bpf/verifier.c	/^static bool may_access_direct_pkt_data(struct bpf_verifier_env *env,$/;"	f	file:
may_access_skb	bpf/verifier.c	/^static bool may_access_skb(enum bpf_prog_type type)$/;"	f	file:
may_init_module	module.c	/^static int may_init_module(void)$/;"	f	file:
may_ptrace_stop	signal.c	/^static inline bool may_ptrace_stop(void)$/;"	f	file:
may_setgroups	groups.c	/^bool may_setgroups(void)$/;"	f
may_start_working	workqueue.c	/^static bool may_start_working(struct worker_pool *pool)$/;"	f	file:
maybe_kfree_parameter	params.c	/^static void maybe_kfree_parameter(void *param)$/;"	f	file:
maybe_wait_bpf_programs	bpf/syscall.c	/^static void maybe_wait_bpf_programs(struct bpf_map *map)$/;"	f	file:
mayday_node	workqueue.c	/^	struct list_head	mayday_node;	\/* MD: node on wq->maydays *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
mayday_timer	workqueue.c	/^	struct timer_list	mayday_timer;	\/* L: SOS timer for workers *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::timer_list	file:
maydays	workqueue.c	/^	struct list_head	maydays;	\/* MD: pwqs requesting rescue *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
mbind	sys_ni.c	/^COND_SYSCALL(mbind);$/;"	v
mbind	sys_ni.c	/^COND_SYSCALL_COMPAT(mbind);$/;"	v
mcs	locking/qspinlock.c	/^	struct mcs_spinlock mcs;$/;"	m	struct:qnode	typeref:struct:qnode::mcs_spinlock	file:
mcs	locking/qspinlock_paravirt.h	/^	struct mcs_spinlock	mcs;$/;"	m	struct:pv_node	typeref:struct:pv_node::mcs_spinlock
mcs_spin_lock	locking/mcs_spinlock.h	/^void mcs_spin_lock(struct mcs_spinlock **lock, struct mcs_spinlock *node)$/;"	f
mcs_spin_unlock	locking/mcs_spinlock.h	/^void mcs_spin_unlock(struct mcs_spinlock **lock, struct mcs_spinlock *node)$/;"	f
mcs_spinlock	locking/mcs_spinlock.h	/^struct mcs_spinlock {$/;"	s
mem_bm_set_bit_check	power/snapshot.c	/^static int mem_bm_set_bit_check(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
mem_extent	power/snapshot.c	/^struct mem_extent {$/;"	s	file:
mem_sleep	power/main.c	/^power_attr(mem_sleep);$/;"	v
mem_sleep_current	power/power.h	194;"	d
mem_sleep_current	power/suspend.c	/^suspend_state_t mem_sleep_current = PM_SUSPEND_TO_IDLE;$/;"	v
mem_sleep_default	power/suspend.c	/^suspend_state_t mem_sleep_default = PM_SUSPEND_MAX;$/;"	v
mem_sleep_default_setup	power/suspend.c	/^static int __init mem_sleep_default_setup(char *str)$/;"	f	file:
mem_sleep_labels	power/suspend.c	/^static const char * const mem_sleep_labels[] = {$/;"	v	file:
mem_sleep_show	power/main.c	/^static ssize_t mem_sleep_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
mem_sleep_states	power/suspend.c	/^const char *mem_sleep_states[PM_SUSPEND_MAX];$/;"	v
mem_sleep_store	power/main.c	/^static ssize_t mem_sleep_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
mem_unit	sys.c	/^	u32 mem_unit;$/;"	m	struct:compat_sysinfo	file:
mem_zone_bm_rtree	power/snapshot.c	/^struct mem_zone_bm_rtree {$/;"	s	file:
membarrier	sys_ni.c	/^COND_SYSCALL(membarrier);$/;"	v
membarrier_global_expedited	sched/membarrier.c	/^static int membarrier_global_expedited(void)$/;"	f	file:
membarrier_private_expedited	sched/membarrier.c	/^static int membarrier_private_expedited(int flags)$/;"	f	file:
membarrier_register_global_expedited	sched/membarrier.c	/^static int membarrier_register_global_expedited(void)$/;"	f	file:
membarrier_register_private_expedited	sched/membarrier.c	/^static int membarrier_register_private_expedited(int flags)$/;"	f	file:
memcg_charge_kernel_stack	fork.c	/^static int memcg_charge_kernel_stack(struct task_struct *tsk)$/;"	f	file:
memcpy_common	events/internal.h	/^memcpy_common(void *dst, const void *src, unsigned long n)$/;"	f
memcpy_skip	events/internal.h	/^memcpy_skip(void *dst, const void *src, unsigned long n)$/;"	f
memfd_create	sys_ni.c	/^COND_SYSCALL(memfd_create);$/;"	v
memory_bandwidth_pm_qos	power/qos.c	/^static struct pm_qos_object memory_bandwidth_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
memory_bitmap	power/snapshot.c	/^struct memory_bitmap {$/;"	s	file:
memory_bm_clear_bit	power/snapshot.c	/^static void memory_bm_clear_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_clear_current	power/snapshot.c	/^static void memory_bm_clear_current(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_create	power/snapshot.c	/^static int memory_bm_create(struct memory_bitmap *bm, gfp_t gfp_mask,$/;"	f	file:
memory_bm_find_bit	power/snapshot.c	/^static int memory_bm_find_bit(struct memory_bitmap *bm, unsigned long pfn,$/;"	f	file:
memory_bm_free	power/snapshot.c	/^static void memory_bm_free(struct memory_bitmap *bm, int clear_nosave_free)$/;"	f	file:
memory_bm_next_pfn	power/snapshot.c	/^static unsigned long memory_bm_next_pfn(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_pfn_present	power/snapshot.c	/^static bool memory_bm_pfn_present(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_position_reset	power/snapshot.c	/^static void memory_bm_position_reset(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_recycle	power/snapshot.c	/^static void memory_bm_recycle(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_set_bit	power/snapshot.c	/^static void memory_bm_set_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_test_bit	power/snapshot.c	/^static int memory_bm_test_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bw_constraints	power/qos.c	/^static struct pm_qos_constraints memory_bw_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
memremap	iomem.c	/^EXPORT_SYMBOL(memremap);$/;"	v
memremap	iomem.c	/^void *memremap(resource_size_t offset, size_t size, unsigned long flags)$/;"	f
mems_allowed	cgroup/cpuset.c	/^	nodemask_t mems_allowed;$/;"	m	struct:cpuset	file:
memunmap	iomem.c	/^EXPORT_SYMBOL(memunmap);$/;"	v
memunmap	iomem.c	/^void memunmap(void *addr)$/;"	f
merge	gcov/gcc_3_4.c	/^	void		(*merge)(gcov_type *, unsigned int);$/;"	m	struct:gcov_ctr_info	file:
merge	gcov/gcc_4_7.c	/^	void (*merge[GCOV_COUNTERS])(gcov_type *, unsigned int);$/;"	m	struct:gcov_info	file:
message_lost	printk/printk_safe.c	/^	atomic_t		message_lost;$/;"	m	struct:printk_safe_seq_buf	file:
migrate_degrades_locality	sched/fair.c	/^static inline int migrate_degrades_locality(struct task_struct *p,$/;"	f	file:
migrate_degrades_locality	sched/fair.c	/^static int migrate_degrades_locality(struct task_struct *p, struct lb_env *env)$/;"	f	file:
migrate_hrtimer_list	time/hrtimer.c	/^static void migrate_hrtimer_list(struct hrtimer_clock_base *old_base,$/;"	f	file:
migrate_one_irq	irq/cpuhotplug.c	/^static bool migrate_one_irq(struct irq_desc *desc)$/;"	f	file:
migrate_pages	sys_ni.c	/^COND_SYSCALL(migrate_pages);$/;"	v
migrate_pages	sys_ni.c	/^COND_SYSCALL_COMPAT(migrate_pages);$/;"	v
migrate_swap	sched/core.c	/^int migrate_swap(struct task_struct *cur, struct task_struct *p,$/;"	f
migrate_swap_stop	sched/core.c	/^static int migrate_swap_stop(void *data)$/;"	f	file:
migrate_task_rq	sched/sched.h	/^	void (*migrate_task_rq)(struct task_struct *p, int new_cpu);$/;"	m	struct:sched_class
migrate_task_rq_dl	sched/deadline.c	/^static void migrate_task_rq_dl(struct task_struct *p, int new_cpu __maybe_unused)$/;"	f	file:
migrate_task_rq_fair	sched/fair.c	/^static void migrate_task_rq_fair(struct task_struct *p, int new_cpu)$/;"	f	file:
migrate_task_to	sched/core.c	/^int migrate_task_to(struct task_struct *p, int target_cpu)$/;"	f
migrate_tasks	sched/core.c	/^static void migrate_tasks(struct rq *dead_rq, struct rq_flags *rf)$/;"	f	file:
migrate_timer_list	time/timer.c	/^static void migrate_timer_list(struct timer_base *new_base, struct hlist_head *head)$/;"	f	file:
migrate_to_reboot_cpu	reboot.c	/^void migrate_to_reboot_cpu(void)$/;"	f
migration_arg	sched/core.c	/^struct migration_arg {$/;"	s	file:
migration_base	time/hrtimer.c	141;"	d	file:
migration_cpu_base	time/hrtimer.c	/^static struct hrtimer_cpu_base migration_cpu_base = {$/;"	v	typeref:struct:hrtimer_cpu_base	file:
migration_cpu_stop	sched/core.c	/^static int migration_cpu_stop(void *data)$/;"	f	file:
migration_init	sched/core.c	/^early_initcall(migration_init);$/;"	v
migration_init	sched/core.c	/^static int __init migration_init(void)$/;"	f	file:
migration_swap_arg	sched/core.c	/^struct migration_swap_arg {$/;"	s	file:
min	events/core.c	/^	int			maj, min;$/;"	m	struct:perf_mmap_event	file:
min	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
min	sysctl.c	/^	int *min;$/;"	m	struct:do_proc_dointvec_minmax_conv_param	file:
min	sysctl.c	/^	unsigned int *min;$/;"	m	struct:do_proc_douintvec_minmax_conv_param	file:
min_bandwidth_expiration	sched/fair.c	/^static const u64 min_bandwidth_expiration = 2 * NSEC_PER_MSEC;$/;"	v	file:
min_capacity	sched/sched.h	/^	unsigned long		min_capacity;		\/* Min per-CPU capacity in group *\/$/;"	m	struct:sched_group_capacity
min_cfs_quota_period	sched/core.c	/^static const u64 min_cfs_quota_period = 1 * NSEC_PER_MSEC; \/* 1ms *\/$/;"	v	file:
min_cfs_rq_runtime	sched/fair.c	/^static const u64 min_cfs_rq_runtime = 1 * NSEC_PER_MSEC;$/;"	v	file:
min_extfrag_threshold	sysctl.c	/^static int min_extfrag_threshold;$/;"	v	file:
min_free_entries	dma/debug.c	/^static u32 min_free_entries;$/;"	v	file:
min_offline	torture.c	/^static int min_offline = -1;$/;"	v	file:
min_online	torture.c	/^static int min_online = -1;$/;"	v	file:
min_sched_granularity_ns	sysctl.c	/^static int min_sched_granularity_ns = 100000;		\/* 100 usecs *\/$/;"	v	file:
min_sched_tunable_scaling	sysctl.c	/^static int min_sched_tunable_scaling = SCHED_TUNABLESCALING_NONE;$/;"	v	file:
min_size	trace/ring_buffer.c	/^	int			min_size;$/;"	m	struct:rb_test_data	file:
min_size_nested	trace/ring_buffer.c	/^	int			min_size_nested;$/;"	m	struct:rb_test_data	file:
min_vruntime	sched/fair.c	/^static inline u64 min_vruntime(u64 min_vruntime, u64 vruntime)$/;"	f	file:
min_vruntime	sched/sched.h	/^	u64			min_vruntime;$/;"	m	struct:cfs_rq
min_vruntime_copy	sched/sched.h	/^	u64			min_vruntime_copy;$/;"	m	struct:cfs_rq
min_wakeup_granularity_ns	sysctl.c	/^static int min_wakeup_granularity_ns;			\/* 0 usecs *\/$/;"	v	file:
mincore	sys_ni.c	/^COND_SYSCALL(mincore);$/;"	v
minimum_image_size	power/snapshot.c	/^static unsigned long minimum_image_size(unsigned long saveable)$/;"	f	file:
minolduid	sysctl.c	/^static int minolduid;$/;"	v	file:
misfit_task_load	sched/sched.h	/^	unsigned long		misfit_task_load;$/;"	m	struct:rq
misrouted_irq	irq/spurious.c	/^static int misrouted_irq(int irq)$/;"	f	file:
mitigations_parse_cmdline	cpu.c	/^static int __init mitigations_parse_cmdline(char *arg)$/;"	f	file:
mk_reply	taskstats.c	/^static struct taskstats *mk_reply(struct sk_buff *skb, int type, u32 pid)$/;"	f	file:
mktime64	time/time.c	/^EXPORT_SYMBOL(mktime64);$/;"	v
mktime64	time/time.c	/^time64_t mktime64(const unsigned int year0, const unsigned int mon0,$/;"	f
mlock	sys_ni.c	/^COND_SYSCALL(mlock);$/;"	v
mlock2	sys_ni.c	/^COND_SYSCALL(mlock2);$/;"	v
mlockall	sys_ni.c	/^COND_SYSCALL(mlockall);$/;"	v
mm	cgroup/cpuset.c	/^	struct mm_struct	*mm;$/;"	m	struct:cpuset_migrate_mm_work	typeref:struct:cpuset_migrate_mm_work::mm_struct	file:
mm	events/uprobes.c	/^	struct mm_struct *mm;$/;"	m	struct:delayed_uprobe	typeref:struct:delayed_uprobe::mm_struct	file:
mm	events/uprobes.c	/^	struct mm_struct *mm;$/;"	m	struct:map_info	typeref:struct:map_info::mm_struct	file:
mm_access	fork.c	/^struct mm_struct *mm_access(struct task_struct *task, unsigned int mode)$/;"	f
mm_alloc	fork.c	/^struct mm_struct *mm_alloc(void)$/;"	f
mm_alloc_pgd	fork.c	/^static inline int mm_alloc_pgd(struct mm_struct *mm)$/;"	f	file:
mm_alloc_pgd	fork.c	640;"	d	file:
mm_cachep	fork.c	/^static struct kmem_cache *mm_cachep;$/;"	v	typeref:struct:kmem_cache	file:
mm_clear_owner	fork.c	/^static __always_inline void mm_clear_owner(struct mm_struct *mm,$/;"	f	file:
mm_free_pgd	fork.c	/^static inline void mm_free_pgd(struct mm_struct *mm)$/;"	f	file:
mm_free_pgd	fork.c	641;"	d	file:
mm_init	fork.c	/^static struct mm_struct *mm_init(struct mm_struct *mm, struct task_struct *p,$/;"	f	file:
mm_init_aio	fork.c	/^static void mm_init_aio(struct mm_struct *mm)$/;"	f	file:
mm_init_owner	fork.c	/^static void mm_init_owner(struct mm_struct *mm, struct task_struct *p)$/;"	f	file:
mm_init_uprobes_state	fork.c	/^static void mm_init_uprobes_state(struct mm_struct *mm)$/;"	f	file:
mm_release	fork.c	/^void mm_release(struct task_struct *tsk, struct mm_struct *mm)$/;"	f
mm_update_next_owner	exit.c	/^void mm_update_next_owner(struct mm_struct *mm)$/;"	f
mmap	audit.h	/^		} mmap;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon61
mmap_count	events/internal.h	/^	atomic_t			mmap_count;$/;"	m	struct:ring_buffer
mmap_locked	events/internal.h	/^	unsigned long			mmap_locked;$/;"	m	struct:ring_buffer
mmap_user	events/internal.h	/^	struct user_struct		*mmap_user;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::user_struct
mmdrop_async	fork.c	/^static void mmdrop_async(struct mm_struct *mm)$/;"	f	file:
mmdrop_async_fn	fork.c	/^static void mmdrop_async_fn(struct work_struct *work)$/;"	f	file:
mmf_recalc_uprobes	events/uprobes.c	/^static void mmf_recalc_uprobes(struct mm_struct *mm)$/;"	f	file:
mmio_close	trace/trace_mmiotrace.c	/^static void mmio_close(struct trace_iterator *iter)$/;"	f	file:
mmio_pipe_open	trace/trace_mmiotrace.c	/^static void mmio_pipe_open(struct trace_iterator *iter)$/;"	f	file:
mmio_print_line	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_line(struct trace_iterator *iter)$/;"	f	file:
mmio_print_map	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_map(struct trace_iterator *iter)$/;"	f	file:
mmio_print_mark	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_mark(struct trace_iterator *iter)$/;"	f	file:
mmio_print_pcidev	trace/trace_mmiotrace.c	/^static void mmio_print_pcidev(struct trace_seq *s, const struct pci_dev *dev)$/;"	f	file:
mmio_print_rw	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_rw(struct trace_iterator *iter)$/;"	f	file:
mmio_read	trace/trace_mmiotrace.c	/^static ssize_t mmio_read(struct trace_iterator *iter, struct file *filp,$/;"	f	file:
mmio_reset_data	trace/trace_mmiotrace.c	/^static void mmio_reset_data(struct trace_array *tr)$/;"	f	file:
mmio_trace_array	trace/trace_mmiotrace.c	/^static struct trace_array *mmio_trace_array;$/;"	v	typeref:struct:trace_array	file:
mmio_trace_init	trace/trace_mmiotrace.c	/^static int mmio_trace_init(struct trace_array *tr)$/;"	f	file:
mmio_trace_mapping	trace/trace_mmiotrace.c	/^void mmio_trace_mapping(struct mmiotrace_map *map)$/;"	f
mmio_trace_printk	trace/trace_mmiotrace.c	/^int mmio_trace_printk(const char *fmt, va_list args)$/;"	f
mmio_trace_reset	trace/trace_mmiotrace.c	/^static void mmio_trace_reset(struct trace_array *tr)$/;"	f	file:
mmio_trace_rw	trace/trace_mmiotrace.c	/^void mmio_trace_rw(struct mmiotrace_rw *rw)$/;"	f
mmio_trace_start	trace/trace_mmiotrace.c	/^static void mmio_trace_start(struct trace_array *tr)$/;"	f	file:
mmput	fork.c	/^EXPORT_SYMBOL_GPL(mmput);$/;"	v
mmput	fork.c	/^void mmput(struct mm_struct *mm)$/;"	f
mmput_async	fork.c	/^void mmput_async(struct mm_struct *mm)$/;"	f
mmput_async_fn	fork.c	/^static void mmput_async_fn(struct work_struct *work)$/;"	f	file:
mod	jump_label.c	/^	struct module *mod;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::module	file:
mod	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
mod	module-internal.h	/^	struct module *mod;$/;"	m	struct:load_info	typeref:struct:load_info::module
mod	trace/ftrace.c	/^	struct module		*mod;$/;"	m	struct:ftrace_mod_map	typeref:struct:ftrace_mod_map::module	file:
mod	trace/trace.c	/^	struct module			*mod;$/;"	m	struct:trace_eval_map_head	typeref:struct:trace_eval_map_head::module	file:
mod_delayed_work_on	workqueue.c	/^EXPORT_SYMBOL_GPL(mod_delayed_work_on);$/;"	v
mod_delayed_work_on	workqueue.c	/^bool mod_delayed_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
mod_end	debug/kdb/kdb_private.h	/^		unsigned long mod_end;$/;"	m	struct:__ksymtab
mod_find	module.c	/^static struct module *mod_find(unsigned long addr)$/;"	f	file:
mod_initfree	module.c	/^struct mod_initfree {$/;"	s	file:
mod_kallsyms_init_off	module-internal.h	/^	unsigned long mod_kallsyms_init_off;$/;"	m	struct:load_info
mod_kobject_put	module.c	/^static void mod_kobject_put(struct module *mod)$/;"	f	file:
mod_list	trace/ftrace.c	/^	struct list_head		*mod_list;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::list_head	file:
mod_name	debug/kdb/kdb_private.h	/^		const char *mod_name;	\/* Module containing symbol or$/;"	m	struct:__ksymtab
mod_notrace	trace/trace.h	/^	struct list_head	mod_notrace;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
mod_percpu	module.c	/^static inline void __percpu *mod_percpu(struct module *mod)$/;"	f	file:
mod_pos	trace/ftrace.c	/^	loff_t				mod_pos;$/;"	m	struct:ftrace_iterator	file:
mod_start	debug/kdb/kdb_private.h	/^		unsigned long mod_start;$/;"	m	struct:__ksymtab
mod_sysfs_fini	module.c	/^static void mod_sysfs_fini(struct module *mod)$/;"	f	file:
mod_sysfs_init	module.c	/^static int mod_sysfs_init(struct module *mod)$/;"	f	file:
mod_sysfs_setup	module.c	/^static int mod_sysfs_setup(struct module *mod,$/;"	f	file:
mod_sysfs_teardown	module.c	/^static void mod_sysfs_teardown(struct module *mod)$/;"	f	file:
mod_timer	time/timer.c	/^EXPORT_SYMBOL(mod_timer);$/;"	v
mod_timer	time/timer.c	/^int mod_timer(struct timer_list *timer, unsigned long expires)$/;"	f
mod_timer_pending	time/timer.c	/^EXPORT_SYMBOL(mod_timer_pending);$/;"	v
mod_timer_pending	time/timer.c	/^int mod_timer_pending(struct timer_list *timer, unsigned long expires)$/;"	f
mod_trace	trace/trace.h	/^	struct list_head	mod_trace;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
mod_tree_comp	module.c	/^mod_tree_comp(void *key, struct latch_tree_node *n)$/;"	f	file:
mod_tree_insert	module.c	/^static void mod_tree_insert(struct module *mod) { }$/;"	f	file:
mod_tree_insert	module.c	/^static void mod_tree_insert(struct module *mod)$/;"	f	file:
mod_tree_less	module.c	/^mod_tree_less(struct latch_tree_node *a, struct latch_tree_node *b)$/;"	f	file:
mod_tree_ops	module.c	/^static const struct latch_tree_ops mod_tree_ops = {$/;"	v	typeref:struct:latch_tree_ops	file:
mod_tree_remove	module.c	/^static void mod_tree_remove(struct module *mod) { }$/;"	f	file:
mod_tree_remove	module.c	/^static void mod_tree_remove(struct module *mod)$/;"	f	file:
mod_tree_remove_init	module.c	/^static void mod_tree_remove_init(struct module *mod) { }$/;"	f	file:
mod_tree_remove_init	module.c	/^static void mod_tree_remove_init(struct module *mod)$/;"	f	file:
mod_tree_root	module.c	/^static struct mod_tree_root {$/;"	s	file:
mod_update_bounds	module.c	/^static void mod_update_bounds(struct module *mod)$/;"	f	file:
mod_verify_sig	module_signing.c	/^int mod_verify_sig(const void *mod, struct load_info *info)$/;"	f
mode	audit.h	/^			umode_t			mode;$/;"	m	struct:audit_context::__anon53::__anon55
mode	audit.h	/^			umode_t			mode;$/;"	m	struct:audit_context::__anon53::__anon59
mode	audit.h	/^	umode_t			mode;$/;"	m	struct:audit_names
mode	bpf/inode.c	/^	umode_t mode;$/;"	m	struct:bpf_mount_opts	file:
mode	kcov.c	/^	enum kcov_mode		mode;$/;"	m	struct:kcov	typeref:enum:kcov::kcov_mode	file:
mode	power/user.c	/^	int mode;$/;"	m	struct:snapshot_data	file:
mode	time/tick-sched.h	/^	enum tick_device_mode mode;$/;"	m	struct:tick_device	typeref:enum:tick_device::tick_device_mode
mode1_syscalls	seccomp.c	/^static const int mode1_syscalls[] = {$/;"	v	file:
modifier_ops	bpf/btf.c	/^static struct btf_kind_operations modifier_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
modify_bp_slot	events/hw_breakpoint.c	/^static int modify_bp_slot(struct perf_event *bp, u64 old_type, u64 new_type)$/;"	f	file:
modify_ldt	sys_ni.c	/^COND_SYSCALL(modify_ldt);$/;"	v
modify_user_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(modify_user_hw_breakpoint);$/;"	v
modify_user_hw_breakpoint	events/hw_breakpoint.c	/^int modify_user_hw_breakpoint(struct perf_event *bp, struct perf_event_attr *attr)$/;"	f
modify_user_hw_breakpoint_check	events/hw_breakpoint.c	/^modify_user_hw_breakpoint_check(struct perf_event *bp, struct perf_event_attr *attr,$/;"	f
modinfo_attrs	module.c	/^static struct module_attribute *modinfo_attrs[] = {$/;"	v	typeref:struct:module_attribute	file:
modinfo_coresize	module.c	/^static struct module_attribute modinfo_coresize =$/;"	v	typeref:struct:module_attribute	file:
modinfo_initsize	module.c	/^static struct module_attribute modinfo_initsize =$/;"	v	typeref:struct:module_attribute	file:
modinfo_initstate	module.c	/^static struct module_attribute modinfo_initstate =$/;"	v	typeref:struct:module_attribute	file:
modinfo_refcnt	module.c	/^static struct module_attribute modinfo_refcnt =$/;"	v	typeref:struct:module_attribute	file:
modinfo_taint	module.c	/^static struct module_attribute modinfo_taint =$/;"	v	typeref:struct:module_attribute	file:
modprobe_path	kmod.c	/^char modprobe_path[KMOD_PATH_LEN] = "\/sbin\/modprobe";$/;"	v
module	audit.h	/^		} module;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon63
module	trace/bpf_trace.c	/^	struct module *module;$/;"	m	struct:bpf_trace_module	typeref:struct:bpf_trace_module::module	file:
module	trace/trace.h	/^	char			*module;$/;"	m	struct:ftrace_mod_load
module_add_modinfo_attrs	module.c	/^static int module_add_modinfo_attrs(struct module *mod)$/;"	f	file:
module_addr_max	module.c	/^static unsigned long module_addr_min = -1UL, module_addr_max = 0;$/;"	v	file:
module_addr_max	module.c	155;"	d	file:
module_addr_min	module.c	/^static unsigned long module_addr_min = -1UL, module_addr_max = 0;$/;"	v	file:
module_addr_min	module.c	154;"	d	file:
module_address_lookup	module.c	/^const char *module_address_lookup(unsigned long addr,$/;"	f
module_alloc	module.c	/^void * __weak module_alloc(unsigned long size)$/;"	f
module_arch_cleanup	module.c	/^void __weak module_arch_cleanup(struct module *mod)$/;"	f
module_arch_freeing_init	module.c	/^void __weak module_arch_freeing_init(struct module *mod)$/;"	f
module_assert_mutex	module.c	/^static void module_assert_mutex(void)$/;"	f	file:
module_assert_mutex_or_preempt	module.c	/^static void module_assert_mutex_or_preempt(void)$/;"	f	file:
module_attr_show	params.c	/^static ssize_t module_attr_show(struct kobject *kobj,$/;"	f	file:
module_attr_store	params.c	/^static ssize_t module_attr_store(struct kobject *kobj,$/;"	f	file:
module_blacklist	module.c	/^static char *module_blacklist;$/;"	v	file:
module_deallocate	module.c	/^static void module_deallocate(struct module *mod, struct load_info *info)$/;"	f	file:
module_disable_ro	module.c	/^void module_disable_ro(const struct module *mod)$/;"	f
module_enable_nx	module.c	/^static void module_enable_nx(const struct module *mod) { }$/;"	f	file:
module_enable_nx	module.c	/^static void module_enable_nx(const struct module *mod)$/;"	f	file:
module_enable_ro	module.c	/^void module_enable_ro(const struct module *mod, bool after_init)$/;"	f
module_enable_x	module.c	/^static void module_enable_x(const struct module *mod) { }$/;"	f	file:
module_enable_x	module.c	/^static void module_enable_x(const struct module *mod)$/;"	f	file:
module_event	debug/debug_core.c	/^static int module_event(struct notifier_block *self, unsigned long val,$/;"	f	file:
module_exists	trace/ftrace.c	/^static bool module_exists(const char *module)$/;"	f	file:
module_exit_section	module.c	/^bool __weak module_exit_section(const char *name)$/;"	f
module_finalize	module.c	/^int __weak module_finalize(const Elf_Ehdr *hdr,$/;"	f
module_flags	module.c	/^static char *module_flags(struct module *mod, char *buf)$/;"	f	file:
module_flags_taint	module.c	/^static size_t module_flags_taint(struct module *mod, char *buf)$/;"	f	file:
module_frob_arch_sections	module.c	/^int __weak module_frob_arch_sections(Elf_Ehdr *hdr,$/;"	f
module_get	module.c	/^EXPORT_TRACEPOINT_SYMBOL(module_get);$/;"	v
module_get_kallsym	module.c	/^int module_get_kallsym(unsigned int symnum, unsigned long *value, char *type,$/;"	f
module_init	module.c	/^	void *module_init;$/;"	m	struct:mod_initfree	file:
module_kallsyms_lookup_name	module.c	/^unsigned long module_kallsyms_lookup_name(const char *name)$/;"	f
module_kallsyms_on_each_symbol	module.c	/^int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,$/;"	f
module_kobj_release	params.c	/^static void module_kobj_release(struct kobject *kobj)$/;"	f	file:
module_kset	params.c	/^struct kset *module_kset;$/;"	v	typeref:struct:kset
module_ktype	params.c	/^struct kobj_type module_ktype = {$/;"	v	typeref:struct:kobj_type
module_layout	module.c	/^EXPORT_SYMBOL(module_layout);$/;"	v
module_layout	module.c	/^void module_layout(struct module *mod,$/;"	f
module_memfree	module.c	/^void __weak module_memfree(void *module_region)$/;"	f
module_mutex	module.c	/^DEFINE_MUTEX(module_mutex);$/;"	v
module_mutex	module.c	/^EXPORT_SYMBOL_GPL(module_mutex);$/;"	v
module_name	kallsyms.c	/^	char module_name[MODULE_NAME_LEN];$/;"	m	struct:kallsym_iter	file:
module_notes_attrs	module.c	/^struct module_notes_attrs {$/;"	s	file:
module_notes_read	module.c	/^static ssize_t module_notes_read(struct file *filp, struct kobject *kobj,$/;"	f	file:
module_param_attrs	params.c	/^struct module_param_attrs$/;"	s	file:
module_param_sysfs_remove	params.c	/^void module_param_sysfs_remove(struct module *mod)$/;"	f
module_param_sysfs_setup	params.c	/^int module_param_sysfs_setup(struct module *mod,$/;"	f
module_put	module.c	/^EXPORT_SYMBOL(module_put);$/;"	v
module_put	module.c	/^void module_put(struct module *module)$/;"	f
module_refcount	module.c	/^EXPORT_SYMBOL(module_refcount);$/;"	v
module_refcount	module.c	/^int module_refcount(struct module *mod)$/;"	f
module_remove_modinfo_attrs	module.c	/^static void module_remove_modinfo_attrs(struct module *mod, int end)$/;"	f	file:
module_sect_attr	module.c	/^struct module_sect_attr {$/;"	s	file:
module_sect_attrs	module.c	/^struct module_sect_attrs {$/;"	s	file:
module_sect_show	module.c	/^static ssize_t module_sect_show(struct module_attribute *mattr,$/;"	f	file:
module_sig_check	module.c	/^static int module_sig_check(struct load_info *info, int flags)$/;"	f	file:
module_signature	module_signing.c	/^struct module_signature {$/;"	s	file:
module_sysfs_initialized	params.c	/^int module_sysfs_initialized;$/;"	v
module_sysfs_ops	params.c	/^static const struct sysfs_ops module_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
module_trace_bprintk_format_nb	trace/trace_printk.c	/^struct notifier_block module_trace_bprintk_format_nb = {$/;"	v	typeref:struct:notifier_block	file:
module_trace_bprintk_format_notify	trace/trace_printk.c	/^module_trace_bprintk_format_notify(struct notifier_block *self,$/;"	f	file:
module_trace_bprintk_format_notify	trace/trace_printk.c	/^static int module_trace_bprintk_format_notify(struct notifier_block *self,$/;"	f	file:
module_uevent	module.c	/^struct module_attribute module_uevent =$/;"	v	typeref:struct:module_attribute
module_uevent_ops	params.c	/^static const struct kset_uevent_ops module_uevent_ops = {$/;"	v	typeref:struct:kset_uevent_ops	file:
module_unload_free	module.c	/^static inline void module_unload_free(struct module *mod)$/;"	f	file:
module_unload_free	module.c	/^static void module_unload_free(struct module *mod)$/;"	f	file:
module_unload_init	module.c	/^static inline int module_unload_init(struct module *mod)$/;"	f	file:
module_unload_init	module.c	/^static int module_unload_init(struct module *mod)$/;"	f	file:
modules_disabled	module.c	/^int modules_disabled = 0;$/;"	v
modules_op	module.c	/^static const struct seq_operations modules_op = {$/;"	v	typeref:struct:seq_operations	file:
modules_open	module.c	/^static int modules_open(struct inode *inode, struct file *file)$/;"	f	file:
modules_wq_init	module.c	/^module_init(modules_wq_init);$/;"	v
modules_wq_init	module.c	/^static int __init modules_wq_init(void)$/;"	f	file:
move_entity	sched/rt.c	/^static inline bool move_entity(unsigned int flags)$/;"	f	file:
move_iter	time/timer_list.c	/^static void *move_iter(struct timer_list_iter *iter, loff_t offset)$/;"	f	file:
move_linked_works	workqueue.c	/^static void move_linked_works(struct work_struct *work, struct list_head *head,$/;"	f	file:
move_module	module.c	/^static int move_module(struct module *mod, struct load_info *info)$/;"	f	file:
move_pages	sys_ni.c	/^COND_SYSCALL(move_pages);$/;"	v
move_pages	sys_ni.c	/^COND_SYSCALL_COMPAT(move_pages);$/;"	v
move_queued_task	sched/core.c	/^static struct rq *move_queued_task(struct rq *rq, struct rq_flags *rf,$/;"	f	file:
move_to_next_cpu	trace/trace_hwlat.c	/^static void move_to_next_cpu(void)$/;"	f	file:
mprotect	sys_ni.c	/^COND_SYSCALL(mprotect);$/;"	v
mq_getsetattr	audit.h	/^		} mq_getsetattr;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon56
mq_getsetattr	sys_ni.c	/^COND_SYSCALL(mq_getsetattr);$/;"	v
mq_getsetattr	sys_ni.c	/^COND_SYSCALL_COMPAT(mq_getsetattr);$/;"	v
mq_notify	audit.h	/^		} mq_notify;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon57
mq_notify	sys_ni.c	/^COND_SYSCALL(mq_notify);$/;"	v
mq_notify	sys_ni.c	/^COND_SYSCALL_COMPAT(mq_notify);$/;"	v
mq_open	audit.h	/^		} mq_open;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon59
mq_open	sys_ni.c	/^COND_SYSCALL(mq_open);$/;"	v
mq_open	sys_ni.c	/^COND_SYSCALL_COMPAT(mq_open);$/;"	v
mq_sendrecv	audit.h	/^		} mq_sendrecv;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon58
mq_timedreceive	sys_ni.c	/^COND_SYSCALL(mq_timedreceive);$/;"	v
mq_timedreceive_time32	sys_ni.c	/^COND_SYSCALL(mq_timedreceive_time32);$/;"	v
mq_timedsend	sys_ni.c	/^COND_SYSCALL(mq_timedsend);$/;"	v
mq_timedsend_time32	sys_ni.c	/^COND_SYSCALL(mq_timedsend_time32);$/;"	v
mq_unlink	sys_ni.c	/^COND_SYSCALL(mq_unlink);$/;"	v
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon53::__anon56
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon53::__anon57
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon53::__anon58
mqstat	audit.h	/^			struct mq_attr		mqstat;$/;"	m	struct:audit_context::__anon53::__anon56	typeref:struct:audit_context::__anon53::__anon56::mq_attr
mremap	sys_ni.c	/^COND_SYSCALL(mremap);$/;"	v
msg_len	audit.h	/^			size_t			msg_len;$/;"	m	struct:audit_context::__anon53::__anon58
msg_print_ext_body	printk/printk.c	/^static ssize_t msg_print_ext_body(char *buf, size_t size,$/;"	f	file:
msg_print_ext_header	printk/printk.c	/^static ssize_t msg_print_ext_header(char *buf, size_t size,$/;"	f	file:
msg_print_text	printk/printk.c	/^static size_t msg_print_text(const struct printk_log *msg, bool syslog,$/;"	f	file:
msg_prio	audit.h	/^			unsigned int		msg_prio;$/;"	m	struct:audit_context::__anon53::__anon58
msg_used_size	printk/printk.c	/^static u32 msg_used_size(u16 text_len, u16 dict_len, u32 *pad_len)$/;"	f	file:
msgctl	sys_ni.c	/^COND_SYSCALL(msgctl);$/;"	v
msgctl	sys_ni.c	/^COND_SYSCALL_COMPAT(msgctl);$/;"	v
msgget	sys_ni.c	/^COND_SYSCALL(msgget);$/;"	v
msgrcv	sys_ni.c	/^COND_SYSCALL(msgrcv);$/;"	v
msgrcv	sys_ni.c	/^COND_SYSCALL_COMPAT(msgrcv);$/;"	v
msgsnd	sys_ni.c	/^COND_SYSCALL(msgsnd);$/;"	v
msgsnd	sys_ni.c	/^COND_SYSCALL_COMPAT(msgsnd);$/;"	v
msi_check_level	irq/msi.c	/^static void msi_check_level(struct irq_domain *domain, struct msi_msg *msg)$/;"	f	file:
msi_check_reservation_mode	irq/msi.c	/^static bool msi_check_reservation_mode(struct irq_domain *domain,$/;"	f	file:
msi_create_irq_domain	irq/msi.c	/^struct irq_domain *msi_create_irq_domain(struct fwnode_handle *fwnode,$/;"	f
msi_domain_activate	irq/msi.c	/^static int msi_domain_activate(struct irq_domain *domain,$/;"	f	file:
msi_domain_alloc	irq/msi.c	/^static int msi_domain_alloc(struct irq_domain *domain, unsigned int virq,$/;"	f	file:
msi_domain_alloc_irqs	irq/msi.c	/^int msi_domain_alloc_irqs(struct irq_domain *domain, struct device *dev,$/;"	f
msi_domain_deactivate	irq/msi.c	/^static void msi_domain_deactivate(struct irq_domain *domain,$/;"	f	file:
msi_domain_free	irq/msi.c	/^static void msi_domain_free(struct irq_domain *domain, unsigned int virq,$/;"	f	file:
msi_domain_free_irqs	irq/msi.c	/^void msi_domain_free_irqs(struct irq_domain *domain, struct device *dev)$/;"	f
msi_domain_ops	irq/msi.c	/^static const struct irq_domain_ops msi_domain_ops = {$/;"	v	typeref:struct:irq_domain_ops	file:
msi_domain_ops_check	irq/msi.c	/^static int msi_domain_ops_check(struct irq_domain *domain,$/;"	f	file:
msi_domain_ops_default	irq/msi.c	/^static struct msi_domain_ops msi_domain_ops_default = {$/;"	v	typeref:struct:msi_domain_ops	file:
msi_domain_ops_get_hwirq	irq/msi.c	/^static irq_hw_number_t msi_domain_ops_get_hwirq(struct msi_domain_info *info,$/;"	f	file:
msi_domain_ops_get_hwirq	irq/msi.c	210;"	d	file:
msi_domain_ops_init	irq/msi.c	/^static int msi_domain_ops_init(struct irq_domain *domain,$/;"	f	file:
msi_domain_ops_prepare	irq/msi.c	/^static int msi_domain_ops_prepare(struct irq_domain *domain, struct device *dev,$/;"	f	file:
msi_domain_ops_prepare	irq/msi.c	211;"	d	file:
msi_domain_ops_set_desc	irq/msi.c	/^static void msi_domain_ops_set_desc(msi_alloc_info_t *arg,$/;"	f	file:
msi_domain_ops_set_desc	irq/msi.c	212;"	d	file:
msi_domain_populate_irqs	irq/msi.c	/^int msi_domain_populate_irqs(struct irq_domain *domain, struct device *dev,$/;"	f
msi_domain_prepare_irqs	irq/msi.c	/^int msi_domain_prepare_irqs(struct irq_domain *domain, struct device *dev,$/;"	f
msi_domain_set_affinity	irq/msi.c	/^int msi_domain_set_affinity(struct irq_data *irq_data,$/;"	f
msi_domain_update_chip_ops	irq/msi.c	/^static void msi_domain_update_chip_ops(struct msi_domain_info *info)$/;"	f	file:
msi_domain_update_dom_ops	irq/msi.c	/^static void msi_domain_update_dom_ops(struct msi_domain_info *info)$/;"	f	file:
msi_get_domain_info	irq/msi.c	/^struct msi_domain_info *msi_get_domain_info(struct irq_domain *domain)$/;"	f
msize_smax_value	bpf/verifier.c	/^	s64 msize_smax_value;$/;"	m	struct:bpf_call_arg_meta	file:
msize_umax_value	bpf/verifier.c	/^	u64 msize_umax_value;$/;"	m	struct:bpf_call_arg_meta	file:
msk	irq/devres.c	/^	u32 msk;$/;"	m	struct:irq_generic_chip_devres	file:
msleep	time/timer.c	/^EXPORT_SYMBOL(msleep);$/;"	v
msleep	time/timer.c	/^void msleep(unsigned int msecs)$/;"	f
msleep_interruptible	time/timer.c	/^EXPORT_SYMBOL(msleep_interruptible);$/;"	v
msleep_interruptible	time/timer.c	/^unsigned long msleep_interruptible(unsigned int msecs)$/;"	f
msync	sys_ni.c	/^COND_SYSCALL(msync);$/;"	v
mult	time/sched_clock.c	/^	u32 mult;$/;"	m	struct:clock_read_data	file:
multi	cpu.c	/^		int		(*multi)(unsigned int cpu,$/;"	m	union:cpuhp_step::__anon18	file:
multi	cpu.c	/^		int		(*multi)(unsigned int cpu,$/;"	m	union:cpuhp_step::__anon19	file:
multi_cpu_stop	stop_machine.c	/^static int multi_cpu_stop(void *data)$/;"	f	file:
multi_instance	cpu.c	/^	bool			multi_instance;$/;"	m	struct:cpuhp_step	file:
multi_stop_data	stop_machine.c	/^struct multi_stop_data {$/;"	s	file:
multi_stop_state	stop_machine.c	/^enum multi_stop_state {$/;"	g	file:
munlock	sys_ni.c	/^COND_SYSCALL(munlock);$/;"	v
munlockall	sys_ni.c	/^COND_SYSCALL(munlockall);$/;"	v
must_forward_clk	time/timer.c	/^	bool			must_forward_clk;$/;"	m	struct:timer_base	file:
mutex	locking/test-ww_mutex.c	/^	struct ww_mutex mutex;$/;"	m	struct:test_mutex	typeref:struct:test_mutex::ww_mutex	file:
mutex	trace/ring_buffer.c	/^	struct mutex			mutex;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::mutex	file:
mutex	trace/trace_uprobe.c	/^	struct mutex mutex;$/;"	m	struct:uprobe_cpu_buffer	typeref:struct:uprobe_cpu_buffer::mutex	file:
mutex	workqueue.c	/^	struct mutex		mutex;		\/* protects this wq *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::mutex	file:
mutex_can_spin_on_owner	locking/mutex.c	/^static inline int mutex_can_spin_on_owner(struct mutex *lock)$/;"	f	file:
mutex_destroy	locking/mutex-debug.c	/^EXPORT_SYMBOL_GPL(mutex_destroy);$/;"	v
mutex_destroy	locking/mutex-debug.c	/^void mutex_destroy(struct mutex *lock)$/;"	f
mutex_lock	locking/mutex.c	/^EXPORT_SYMBOL(mutex_lock);$/;"	v
mutex_lock	locking/mutex.c	/^void __sched mutex_lock(struct mutex *lock)$/;"	f
mutex_lock_double	events/core.c	/^static void mutex_lock_double(struct mutex *a, struct mutex *b)$/;"	f	file:
mutex_lock_interruptible	locking/mutex.c	/^EXPORT_SYMBOL(mutex_lock_interruptible);$/;"	v
mutex_lock_interruptible	locking/mutex.c	/^int __sched mutex_lock_interruptible(struct mutex *lock)$/;"	f
mutex_lock_interruptible_nested	locking/mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_interruptible_nested);$/;"	v
mutex_lock_interruptible_nested	locking/mutex.c	/^mutex_lock_interruptible_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_io	locking/mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_io);$/;"	v
mutex_lock_io	locking/mutex.c	/^void __sched mutex_lock_io(struct mutex *lock)$/;"	f
mutex_lock_io_nested	locking/mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_io_nested);$/;"	v
mutex_lock_io_nested	locking/mutex.c	/^mutex_lock_io_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_killable	locking/mutex.c	/^EXPORT_SYMBOL(mutex_lock_killable);$/;"	v
mutex_lock_killable	locking/mutex.c	/^int __sched mutex_lock_killable(struct mutex *lock)$/;"	f
mutex_lock_killable_nested	locking/mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_killable_nested);$/;"	v
mutex_lock_killable_nested	locking/mutex.c	/^mutex_lock_killable_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_nested	locking/mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_nested);$/;"	v
mutex_lock_nested	locking/mutex.c	/^mutex_lock_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops mutex_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
mutex_optimistic_spin	locking/mutex.c	/^mutex_optimistic_spin(struct mutex *lock, struct ww_acquire_ctx *ww_ctx,$/;"	f	file:
mutex_remove_waiter	locking/mutex-debug.c	/^void mutex_remove_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f
mutex_remove_waiter	locking/mutex.h	13;"	d
mutex_spin_on_owner	locking/mutex.c	/^bool mutex_spin_on_owner(struct mutex *lock, struct task_struct *owner,$/;"	f	file:
mutex_trylock	locking/mutex.c	/^EXPORT_SYMBOL(mutex_trylock);$/;"	v
mutex_trylock	locking/mutex.c	/^int __sched mutex_trylock(struct mutex *lock)$/;"	f
mutex_unlock	locking/mutex.c	/^EXPORT_SYMBOL(mutex_unlock);$/;"	v
mutex_unlock	locking/mutex.c	/^void __sched mutex_unlock(struct mutex *lock)$/;"	f
mynode	rcu/tree.h	/^	struct rcu_node *mynode;	\/* This CPU's leaf of hierarchy *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_node
n	resource.c	/^	resource_size_t n;$/;"	m	struct:region_devres	file:
n_actions	trace/trace_events_hist.c	/^	unsigned int			n_actions;$/;"	m	struct:hist_trigger_data	file:
n_actions	trace/trace_events_hist.c	/^	unsigned int	n_actions;$/;"	m	struct:hist_trigger_attrs	file:
n_assignments	trace/trace_events_hist.c	/^	unsigned int	n_assignments;$/;"	m	struct:hist_trigger_attrs	file:
n_barrier_attempts	rcu/rcutorture.c	/^static long n_barrier_attempts;$/;"	v	file:
n_barrier_successes	rcu/rcutorture.c	/^static long n_barrier_successes; \/* did rcu_barrier test succeed? *\/$/;"	v	file:
n_buckets	bpf/hashtab.c	/^	u32 n_buckets;	\/* number of hash buckets *\/$/;"	m	struct:bpf_htab	file:
n_buckets	bpf/stackmap.c	/^	u32 n_buckets;$/;"	m	struct:bpf_stack_map	file:
n_ctrs	gcov/gcc_3_4.c	/^	unsigned int n_ctrs[0];$/;"	m	struct:gcov_fn_info	file:
n_entries	bpf/lpm_trie.c	/^	size_t				n_entries;$/;"	m	struct:lpm_trie	file:
n_err_log_entries	trace/trace.h	/^	unsigned int		n_err_log_entries;$/;"	m	struct:trace_array
n_field_var_hists	trace/trace_events_hist.c	/^	unsigned int			n_field_var_hists;$/;"	m	struct:hist_trigger_data	file:
n_field_var_str	trace/trace_events_hist.c	/^	unsigned int			n_field_var_str;$/;"	m	struct:hist_trigger_data	file:
n_field_vars	trace/trace_events_hist.c	/^	unsigned int			n_field_vars;$/;"	m	struct:hist_trigger_data	file:
n_fields	trace/trace_events_hist.c	/^	unsigned int				n_fields;$/;"	m	struct:synth_event	file:
n_fields	trace/trace_events_hist.c	/^	unsigned int			n_fields;$/;"	m	struct:hist_trigger_data	file:
n_fields	trace/tracing_map.h	/^	unsigned int			n_fields;$/;"	m	struct:tracing_map
n_force_qs	rcu/tree.h	/^	unsigned long n_force_qs;		\/* Number of calls to *\/$/;"	m	struct:rcu_state
n_force_qs_gpstart	rcu/tree.h	/^	unsigned long n_force_qs_gpstart;	\/* Snapshot of n_force_qs at *\/$/;"	m	struct:rcu_state
n_force_qs_snap	rcu/tree.h	/^	unsigned long	n_force_qs_snap;$/;"	m	struct:rcu_data
n_functions	gcov/gcc_3_4.c	/^	unsigned int			n_functions;$/;"	m	struct:gcov_info	file:
n_functions	gcov/gcc_4_7.c	/^	unsigned int n_functions;$/;"	m	struct:gcov_info	file:
n_keys	trace/trace_events_hist.c	/^	unsigned int			n_keys;$/;"	m	struct:hist_trigger_data	file:
n_keys	trace/tracing_map.h	/^	unsigned int			n_keys;$/;"	m	struct:tracing_map
n_launders	rcu/rcutorture.c	/^	long n_launders;$/;"	m	struct:rcu_launder_hist	file:
n_launders_cb	rcu/rcutorture.c	/^static long n_launders_cb;$/;"	v	file:
n_launders_hist	rcu/rcutorture.c	/^static struct rcu_launder_hist n_launders_hist[N_LAUNDERS_HIST];$/;"	v	typeref:struct:rcu_launder_hist	file:
n_lock_acquired	locking/locktorture.c	/^	long n_lock_acquired;$/;"	m	struct:lock_stress_stats	file:
n_lock_fail	locking/locktorture.c	/^	long n_lock_fail;$/;"	m	struct:lock_stress_stats	file:
n_lock_torture_errors	locking/locktorture.c	/^	atomic_t n_lock_torture_errors;$/;"	m	struct:lock_torture_cxt	file:
n_offline_attempts	torture.c	/^static long n_offline_attempts;$/;"	v	file:
n_offline_successes	torture.c	/^static long n_offline_successes;$/;"	v	file:
n_online_attempts	torture.c	/^static long n_online_attempts;$/;"	v	file:
n_online_successes	torture.c	/^static long n_online_successes;$/;"	v	file:
n_pages	trace/tracing_map.h	/^	unsigned int n_pages;$/;"	m	struct:tracing_map_array
n_params	trace/trace_events_hist.c	/^	unsigned int		n_params;$/;"	m	struct:action_data	file:
n_rcu_perf_reader_started	rcu/rcuperf.c	/^static atomic_t n_rcu_perf_reader_started;$/;"	v	file:
n_rcu_perf_writer_finished	rcu/rcuperf.c	/^static atomic_t n_rcu_perf_writer_finished;$/;"	v	file:
n_rcu_perf_writer_started	rcu/rcuperf.c	/^static atomic_t n_rcu_perf_writer_started;$/;"	v	file:
n_rcu_torture_alloc	rcu/rcutorture.c	/^static atomic_t n_rcu_torture_alloc;$/;"	v	file:
n_rcu_torture_alloc_fail	rcu/rcutorture.c	/^static atomic_t n_rcu_torture_alloc_fail;$/;"	v	file:
n_rcu_torture_barrier_error	rcu/rcutorture.c	/^static long n_rcu_torture_barrier_error;$/;"	v	file:
n_rcu_torture_boost_failure	rcu/rcutorture.c	/^static long n_rcu_torture_boost_failure;$/;"	v	file:
n_rcu_torture_boost_ktrerror	rcu/rcutorture.c	/^static long n_rcu_torture_boost_ktrerror;$/;"	v	file:
n_rcu_torture_boost_rterror	rcu/rcutorture.c	/^static long n_rcu_torture_boost_rterror;$/;"	v	file:
n_rcu_torture_boosts	rcu/rcutorture.c	/^static long n_rcu_torture_boosts;$/;"	v	file:
n_rcu_torture_error	rcu/rcutorture.c	/^static atomic_t n_rcu_torture_error;$/;"	v	file:
n_rcu_torture_free	rcu/rcutorture.c	/^static atomic_t n_rcu_torture_free;$/;"	v	file:
n_rcu_torture_mberror	rcu/rcutorture.c	/^static atomic_t n_rcu_torture_mberror;$/;"	v	file:
n_rcu_torture_timers	rcu/rcutorture.c	/^static atomic_long_t n_rcu_torture_timers;$/;"	v	file:
n_save_var_str	trace/trace_events_hist.c	/^	unsigned int			n_save_var_str;$/;"	m	struct:hist_trigger_data	file:
n_save_vars	trace/trace_events_hist.c	/^	unsigned int			n_save_vars;$/;"	m	struct:hist_trigger_data	file:
n_sort_keys	trace/trace_events_hist.c	/^	unsigned int			n_sort_keys;$/;"	m	struct:hist_trigger_data	file:
n_u64	trace/trace_events_hist.c	/^	unsigned int				n_u64;$/;"	m	struct:synth_event	file:
n_vals	trace/trace_events_hist.c	/^	unsigned int			n_vals;$/;"	m	struct:hist_trigger_data	file:
n_var_refs	trace/trace_events_hist.c	/^	unsigned int			n_var_refs;$/;"	m	struct:hist_trigger_data	file:
n_vars	trace/trace_events_hist.c	/^	unsigned int			n_vars;$/;"	m	struct:hist_trigger_data	file:
n_vars	trace/trace_events_hist.c	/^	unsigned int	n_vars;$/;"	m	struct:var_defs	file:
n_vars	trace/tracing_map.h	/^	unsigned int			n_vars;$/;"	m	struct:tracing_map
name	audit.h	/^			char			*name;$/;"	m	struct:audit_context::__anon53::__anon63
name	audit.h	/^	struct filename		*name;$/;"	m	struct:audit_names	typeref:struct:audit_names::filename
name	cgroup/cgroup-internal.h	/^	char		*name;			\/* Hierarchy name *\/$/;"	m	struct:cgroup_fs_context
name	cpu.c	/^	const char		*name;$/;"	m	struct:cpuhp_step	file:
name	debug/kdb/kdb_main.c	/^	char *name;$/;"	m	struct:defcmd_set	file:
name	events/core.c	/^	const char	*name;$/;"	m	struct:perf_ksymbol_event	file:
name	gcov/fs.c	/^	char name[0];$/;"	m	struct:gcov_node	file:
name	irq/debugfs.c	/^	char		*name;$/;"	m	struct:irq_bit_descr	file:
name	irq/irqdesc.c	/^IRQ_ATTR_RO(name);$/;"	v
name	irq/irqdomain.c	/^	char			*name;$/;"	m	struct:irqchip_fwid	file:
name	kallsyms.c	/^	char name[KSYM_NAME_LEN];$/;"	m	struct:kallsym_iter	file:
name	livepatch/core.c	/^	const char *name;$/;"	m	struct:klp_find_arg	file:
name	locking/locktorture.c	/^	const char *name;$/;"	m	struct:lock_torture_ops	file:
name	module-internal.h	/^	const char *name;$/;"	m	struct:load_info
name	module.c	/^	char *name;$/;"	m	struct:module_sect_attr	file:
name	module.c	/^	const char *name;$/;"	m	struct:find_symbol_arg	file:
name	power/qos.c	/^	char *name;$/;"	m	struct:pm_qos_object	file:
name	power/wakelock.c	/^	char			*name;$/;"	m	struct:wakelock	file:
name	printk/console_cmdline.h	/^	char	name[16];			\/* Name of the driver	    *\/$/;"	m	struct:console_cmdline
name	rcu/rcuperf.c	/^	const char *name;$/;"	m	struct:rcu_perf_ops	file:
name	rcu/rcutorture.c	/^	const char *name;$/;"	m	struct:rcu_torture_ops	file:
name	rcu/tree.h	/^	const char *name;			\/* Name of structure. *\/$/;"	m	struct:rcu_state
name	seccomp.c	/^	const char	*name;$/;"	m	struct:seccomp_log_name	file:
name	sysctl_binary.c	/^	compat_uptr_t	name;$/;"	m	struct:compat_sysctl_args	file:
name	trace/ftrace.c	/^	char			*name;$/;"	m	struct:ftrace_mod_func	file:
name	trace/trace.c	/^	const char *name;$/;"	m	struct:__anon40	file:
name	trace/trace.h	/^	char				*name;$/;"	m	struct:event_trigger_data
name	trace/trace.h	/^	char			*name;$/;"	m	struct:event_command
name	trace/trace.h	/^	char			*name;$/;"	m	struct:ftrace_func_command
name	trace/trace.h	/^	char			*name;$/;"	m	struct:trace_array
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:event_subsystem
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:ftrace_event_field
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:tracer
name	trace/trace.h	/^	const char	*name; \/* Will appear on the trace_options file *\/$/;"	m	struct:tracer_opt
name	trace/trace_events_hist.c	/^	char					*name;$/;"	m	struct:synth_event	file:
name	trace/trace_events_hist.c	/^	char				*name;$/;"	m	struct:hist_field	file:
name	trace/trace_events_hist.c	/^	char				*name;$/;"	m	struct:hist_var	file:
name	trace/trace_events_hist.c	/^	char		*name;$/;"	m	struct:hist_trigger_attrs	file:
name	trace/trace_events_hist.c	/^	char		*name[TRACING_MAP_VARS_MAX];$/;"	m	struct:var_defs	file:
name	trace/trace_events_hist.c	/^	char *name;$/;"	m	struct:synth_field	file:
name	trace/trace_probe.h	/^	const char		*name;		\/* Name of type *\/$/;"	m	struct:fetch_type
name	trace/trace_probe.h	/^	const char		*name;	\/* Name of this argument *\/$/;"	m	struct:probe_arg
name	trace/trace_stat.h	/^	const char		*name;$/;"	m	struct:tracer_stat
name	workqueue.c	/^	char			name[WQ_NAME_LEN]; \/* I: workqueue name *\/$/;"	m	struct:workqueue_struct	file:
name_count	audit.h	/^	int		    name_count; \/* total records in names_list *\/$/;"	m	struct:audit_context
name_len	audit.h	/^	int			name_len;	\/* number of chars to log *\/$/;"	m	struct:audit_names
name_len	events/core.c	/^	int		name_len;$/;"	m	struct:perf_ksymbol_event	file:
name_show	irq/irqdesc.c	/^static ssize_t name_show(struct kobject *kobj,$/;"	f	file:
name_to_handle_at	sys_ni.c	/^COND_SYSCALL(name_to_handle_at);$/;"	v
name_unique	irq/proc.c	/^static int name_unique(unsigned int irq, struct irqaction *new_action)$/;"	f	file:
named_data	trace/trace.h	/^	struct event_trigger_data	*named_data;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_data
named_list	trace/trace.h	/^	struct list_head		named_list;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head
nameoff	kallsyms.c	/^	unsigned int nameoff; \/* If iterating in core kernel symbols. *\/$/;"	m	struct:kallsym_iter	file:
names_list	audit.h	/^	struct list_head    names_list;	\/* struct audit_names->list anchor *\/$/;"	m	struct:audit_context	typeref:struct:audit_context::list_head
nanosleep_copyout	time/hrtimer.c	/^int nanosleep_copyout(struct restart_block *restart, struct timespec64 *ts)$/;"	f
nargs	audit.h	/^			int nargs;$/;"	m	struct:audit_context::__anon53::__anon54
ncpus	rcu/tree.h	/^	int ncpus;				\/* # CPUs seen so far. *\/$/;"	m	struct:rcu_state
ncpus_snap	rcu/tree.h	/^	int ncpus_snap;				\/* # CPUs seen last time. *\/$/;"	m	struct:rcu_state
ndoms_cur	sched/topology.c	/^static int				ndoms_cur;$/;"	v	file:
nearest_hardwall_ancestor	cgroup/cpuset.c	/^static struct cpuset *nearest_hardwall_ancestor(struct cpuset *cs)$/;"	f	file:
need_active_balance	sched/fair.c	/^static int need_active_balance(struct lb_env *env)$/;"	f	file:
need_freq_update	sched/cpufreq_schedutil.c	/^	bool			need_freq_update;$/;"	m	struct:sugov_policy	file:
need_more_worker	workqueue.c	/^static bool need_more_worker(struct worker_pool *pool)$/;"	f	file:
need_pull_dl_task	sched/deadline.c	/^static inline bool need_pull_dl_task(struct rq *rq, struct task_struct *prev)$/;"	f	file:
need_pull_rt_task	sched/rt.c	/^static inline bool need_pull_rt_task(struct rq *rq, struct task_struct *prev)$/;"	f	file:
need_to_create_worker	workqueue.c	/^static bool need_to_create_worker(struct worker_pool *pool)$/;"	f	file:
needcheck	acct.c	/^	unsigned long		needcheck;$/;"	m	struct:bsd_acct_struct	file:
neg_one	sysctl.c	/^static int __maybe_unused neg_one = -1;$/;"	v	file:
nest	events/internal.h	/^	unsigned int			nest;		\/* nested writers    *\/$/;"	m	struct:ring_buffer
nest	trace/ring_buffer.c	/^	unsigned long			nest;$/;"	m	struct:ring_buffer_per_cpu	file:
nesting	trace/trace.c	/^	int nesting;$/;"	m	struct:trace_buffer_struct	file:
net	audit.c	/^	struct net *net;$/;"	m	struct:audit_reply	typeref:struct:audit_reply::net	file:
net	audit.c	/^	struct net *net;$/;"	m	struct:auditd_connection	typeref:struct:auditd_connection::net	file:
net	audit.h	/^	struct net *net;$/;"	m	struct:audit_netlink_list	typeref:struct:audit_netlink_list::net
netdev	bpf/offload.c	/^	struct net_device *netdev;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::net_device	file:
netdev_map	bpf/devmap.c	/^	struct bpf_dtab_netdev **netdev_map;$/;"	m	struct:bpf_dtab	typeref:struct:bpf_dtab::bpf_dtab_netdev	file:
netdevs	bpf/offload.c	/^	struct list_head netdevs;$/;"	m	struct:bpf_offload_dev	typeref:struct:bpf_offload_dev::list_head	file:
network_lat_constraints	power/qos.c	/^static struct pm_qos_constraints network_lat_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
network_lat_pm_qos	power/qos.c	/^static struct pm_qos_object network_lat_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
network_throughput_pm_qos	power/qos.c	/^static struct pm_qos_object network_throughput_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
network_tput_constraints	power/qos.c	/^static struct pm_qos_constraints network_tput_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
new_cpus	cgroup/cpuset.c	/^	cpumask_var_t new_cpus;		\/* For update_cpumasks_hier() *\/$/;"	m	struct:tmpmasks	file:
new_dst_cpu	sched/fair.c	/^	int			new_dst_cpu;$/;"	m	struct:lb_env	file:
new_hash	trace/ftrace.c	/^	struct ftrace_hash		*new_hash;$/;"	m	struct:ftrace_graph_data	typeref:struct:ftrace_graph_data::ftrace_hash	file:
new_idmap_permitted	user_namespace.c	/^static bool new_idmap_permitted(const struct file *file,$/;"	f	file:
new_log_buf_len	printk/printk.c	/^static unsigned long __initdata new_log_buf_len;$/;"	v	file:
new_node	gcov/fs.c	/^static struct gcov_node *new_node(struct gcov_node *parent,$/;"	f	file:
new_pages	trace/ring_buffer.c	/^	struct list_head		new_pages; \/* new pages to add *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::list_head	file:
new_pcap	auditsc.c	/^	struct audit_cap_data	new_pcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
newlen	sysctl_binary.c	/^	compat_size_t	newlen;$/;"	m	struct:compat_sysctl_args	file:
newval	sysctl_binary.c	/^	compat_uptr_t	newval;$/;"	m	struct:compat_sysctl_args	file:
next	auditsc.c	/^	struct audit_aux_data	*next;$/;"	m	struct:audit_aux_data	typeref:struct:audit_aux_data::audit_aux_data	file:
next	auditsc.c	/^	struct audit_tree_refs *next;$/;"	m	struct:audit_tree_refs	typeref:struct:audit_tree_refs::audit_tree_refs	file:
next	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *next;$/;"	m	struct:pcpu_freelist_node	typeref:struct:pcpu_freelist_node::pcpu_freelist_node
next	bpf/verifier.c	/^	struct bpf_verifier_stack_elem *next;$/;"	m	struct:bpf_verifier_stack_elem	typeref:struct:bpf_verifier_stack_elem::bpf_verifier_stack_elem	file:
next	debug/kdb/kdb_support.c	/^	u32 next;	\/* offset of next header from start of pool *\/$/;"	m	struct:debug_alloc_header	file:
next	events/uprobes.c	/^	struct map_info *next;$/;"	m	struct:map_info	typeref:struct:map_info::map_info	file:
next	gcov/gcc_3_4.c	/^	struct gcov_info		*next;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_info	file:
next	gcov/gcc_4_7.c	/^	struct gcov_info *next;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_info	file:
next	jump_label.c	/^	struct static_key_mod *next;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::static_key_mod	file:
next	locking/mcs_spinlock.h	/^	struct mcs_spinlock *next;$/;"	m	struct:mcs_spinlock	typeref:struct:mcs_spinlock::mcs_spinlock
next	power/snapshot.c	/^	struct highmem_pbe *next;$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::highmem_pbe	file:
next	power/snapshot.c	/^	struct linked_page *next;$/;"	m	struct:linked_page	typeref:struct:linked_page::linked_page	file:
next	power/swap.c	/^	struct swap_map_page_list *next;$/;"	m	struct:swap_map_page_list	typeref:struct:swap_map_page_list::swap_map_page_list	file:
next	sched/sched.h	/^		int		next; \/* next highest *\/$/;"	m	struct:rt_rq::__anon84
next	sched/sched.h	/^		u64		next;$/;"	m	struct:dl_rq::__anon85
next	sched/sched.h	/^	const struct sched_class *next;$/;"	m	struct:sched_class	typeref:struct:sched_class::sched_class
next	sched/sched.h	/^	struct perf_domain *next;$/;"	m	struct:perf_domain	typeref:struct:perf_domain::perf_domain
next	sched/sched.h	/^	struct sched_entity	*next;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
next	sched/sched.h	/^	struct sched_group	*next;			\/* Must be a circular list *\/$/;"	m	struct:sched_group	typeref:struct:sched_group::sched_group
next	trace/ftrace.c	/^	struct ftrace_page	*next;$/;"	m	struct:ftrace_page	typeref:struct:ftrace_page::ftrace_page	file:
next	trace/ftrace.c	/^	struct ftrace_profile_page	*next;$/;"	m	struct:ftrace_profile_page	typeref:struct:ftrace_profile_page::ftrace_profile_page	file:
next	trace/trace.c	/^	union trace_eval_map_item	*next;$/;"	m	struct:trace_eval_map_tail	typeref:union:trace_eval_map_tail::trace_eval_map_item	file:
next	trace/trace.h	/^	struct tracer		*next;$/;"	m	struct:tracer	typeref:struct:tracer::tracer
next_avail	debug/kdb/kdb_io.c	/^static char *next_avail = kdb_buffer;$/;"	v	file:
next_balance	sched/fair.c	/^	unsigned long next_balance;     \/* in jiffy units *\/$/;"	m	struct:__anon87	file:
next_balance	sched/sched.h	/^	unsigned long		next_balance;$/;"	m	struct:rq
next_blocked	sched/fair.c	/^	unsigned long next_blocked;	\/* Next update of blocked load in jiffies *\/$/;"	m	struct:__anon87	file:
next_cookie	async.c	/^static async_cookie_t next_cookie = 1;$/;"	v	file:
next_elt	trace/tracing_map.h	/^	atomic_t			next_elt;$/;"	m	struct:tracing_map
next_event_type	trace/trace_output.c	/^static int next_event_type = __TRACE_LAST_TYPE + 1;$/;"	v	file:
next_expiry	time/timer.c	/^	unsigned long		next_expiry;$/;"	m	struct:timer_base	file:
next_fqs_jiffies_ops	rcu/tree.c	/^static struct kernel_param_ops next_fqs_jiffies_ops = {$/;"	v	typeref:struct:kernel_param_ops	file:
next_freq	sched/cpufreq_schedutil.c	/^	unsigned int		next_freq;$/;"	m	struct:sugov_policy	file:
next_id	seccomp.c	/^	u64 next_id;$/;"	m	struct:notification	file:
next_inactive_rotation	bpf/bpf_lru_list.h	/^	struct list_head *next_inactive_rotation;$/;"	m	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head
next_member	bpf/btf.c	/^	u16 next_member;$/;"	m	struct:resolve_vertex	file:
next_pending_bucket	time/timer.c	/^static int next_pending_bucket(struct timer_base *base, unsigned offset,$/;"	f	file:
next_prev	events/core.c	/^	struct task_struct	*next_prev;$/;"	m	struct:perf_switch_event	typeref:struct:perf_switch_event::task_struct	file:
next_prev_pid	events/core.c	/^		u32				next_prev_pid;$/;"	m	struct:perf_switch_event::__anon5	file:
next_prev_tid	events/core.c	/^		u32				next_prev_tid;$/;"	m	struct:perf_switch_event::__anon5	file:
next_resource	resource.c	/^static struct resource *next_resource(struct resource *p, bool sibling_only)$/;"	f	file:
next_signal	signal.c	/^int next_signal(struct sigpending *pending, sigset_t *mask)$/;"	f
next_steal	bpf/bpf_lru_list.h	/^	u16 next_steal;$/;"	m	struct:bpf_lru_locallist
next_string	module.c	/^static char *next_string(char *string, unsigned long *secsize)$/;"	f	file:
next_swap	power/swap.c	/^	sector_t next_swap;$/;"	m	struct:swap_map_page	file:
next_task_group	sched/rt.c	/^static inline struct task_group *next_task_group(struct task_group *tg)$/;"	f	file:
next_tick	time/tick-sched.h	/^	ktime_t				next_tick;$/;"	m	struct:tick_sched
next_timer	time/tick-sched.h	/^	u64				next_timer;$/;"	m	struct:tick_sched
next_to_ftrace_page	trace/ftrace.c	5655;"	d	file:
next_update	sched/sched.h	/^	unsigned long		next_update;$/;"	m	struct:sched_group_capacity
ngarbage	kprobes.c	/^	int ngarbage;$/;"	m	struct:kprobe_insn_page	file:
ngroups_max	sysctl.c	/^static int ngroups_max = NGROUPS_MAX;$/;"	v	file:
nhit	trace/trace_kprobe.c	/^	unsigned long __percpu *nhit;$/;"	m	struct:trace_kprobe	file:
nhit	trace/trace_uprobe.c	/^	unsigned long			nhit;$/;"	m	struct:trace_uprobe	file:
nice	sched/autogroup.h	/^	int			nice;$/;"	m	struct:autogroup
nice	trace/trace.h	/^	unsigned long		nice;$/;"	m	struct:trace_array_cpu
nlen	sysctl_binary.c	/^	int		nlen;$/;"	m	struct:compat_sysctl_args	file:
nlocks	locking/test-ww_mutex.c	/^	int nlocks;$/;"	m	struct:stress	file:
nmi_count	trace/trace_hwlat.c	/^	int			nmi_count;	\/* # NMIs during this sample *\/$/;"	m	struct:hwlat_sample	file:
nmi_count	trace/trace_hwlat.c	/^static int nmi_count;$/;"	v	file:
nmi_cpu	trace/trace_hwlat.c	/^static int nmi_cpu;$/;"	v	file:
nmi_panic	panic.c	/^EXPORT_SYMBOL(nmi_panic);$/;"	v
nmi_panic	panic.c	/^void nmi_panic(struct pt_regs *regs, const char *msg)$/;"	f
nmi_panic_self_stop	panic.c	/^void __weak nmi_panic_self_stop(struct pt_regs *regs)$/;"	f
nmi_total_ts	trace/trace_hwlat.c	/^	u64			nmi_total_ts;	\/* Total time spent in NMIs *\/$/;"	m	struct:hwlat_sample	file:
nmi_total_ts	trace/trace_hwlat.c	/^static u64 nmi_total_ts;$/;"	v	file:
nmi_ts_start	trace/trace_hwlat.c	/^static u64 nmi_ts_start;$/;"	v	file:
nmi_watchdog_available	watchdog.c	/^static int __read_mostly nmi_watchdog_available;$/;"	v	file:
nmi_watchdog_user_enabled	watchdog.c	/^int __read_mostly nmi_watchdog_user_enabled = NMI_WATCHDOG_DEFAULT;$/;"	v
no_action	irq/handle.c	/^EXPORT_SYMBOL_GPL(no_action);$/;"	v
no_action	irq/handle.c	/^irqreturn_t no_action(int cpl, void *dev_id)$/;"	f
no_blink	panic.c	/^static long no_blink(int state)$/;"	f	file:
no_iotlb_memory	dma/swiotlb.c	/^static bool no_iotlb_memory;$/;"	v	file:
no_irq_affinity	irq/proc.c	/^int no_irq_affinity;$/;"	v
no_irq_chip	irq/dummychip.c	/^struct irq_chip no_irq_chip = {$/;"	v	typeref:struct:irq_chip
no_uprobe_events	events/uprobes.c	40;"	d	file:
noboot	trace/trace.h	/^	bool			noboot;$/;"	m	struct:tracer
nocb_defer_wakeup	rcu/tree.h	/^	int nocb_defer_wakeup;		\/* Defer wakeup of nocb_kthread. *\/$/;"	m	struct:rcu_data
nocb_follower_head	rcu/tree.h	/^	struct rcu_head *nocb_follower_head; \/* CBs ready to invoke. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_follower_tail	rcu/tree.h	/^	struct rcu_head **nocb_follower_tail;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_follower_wait	rcu/tree_plugin.h	/^static void nocb_follower_wait(struct rcu_data *rdp)$/;"	f
nocb_gp_tail	rcu/tree.h	/^	struct rcu_head **nocb_gp_tail;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_gp_wq	rcu/tree.h	/^	struct swait_queue_head nocb_gp_wq[2];$/;"	m	struct:rcu_node	typeref:struct:rcu_node::swait_queue_head
nocb_head	rcu/tree.h	/^	struct rcu_head *nocb_head;	\/* CBs waiting for kthread. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_kthread	rcu/tree.h	/^	struct task_struct *nocb_kthread;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::task_struct
nocb_leader_sleep	rcu/tree.h	/^	bool nocb_leader_sleep;		\/* Is the nocb leader thread asleep? *\/$/;"	m	struct:rcu_data
nocb_leader_wait	rcu/tree_plugin.h	/^static void nocb_leader_wait(struct rcu_data *my_rdp)$/;"	f
nocb_lock	rcu/tree.h	/^	raw_spinlock_t nocb_lock;	\/* Guard following pair of fields. *\/$/;"	m	struct:rcu_data
nocb_next_follower	rcu/tree.h	/^	struct rcu_data *nocb_next_follower;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_data
nocb_q_count	rcu/tree.h	/^	atomic_long_t nocb_q_count;	\/* # CBs waiting for nocb *\/$/;"	m	struct:rcu_data
nocb_q_count_lazy	rcu/tree.h	/^	atomic_long_t nocb_q_count_lazy; \/*  invocation (all stages). *\/$/;"	m	struct:rcu_data
nocb_tail	rcu/tree.h	/^	struct rcu_head **nocb_tail;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_timer	rcu/tree.h	/^	struct timer_list nocb_timer;	\/* Enforce finite deferral. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::timer_list
nocb_wq	rcu/tree.h	/^	struct swait_queue_head nocb_wq; \/* For nocb kthreads to sleep on. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::swait_queue_head
nocompress	power/hibernate.c	/^static int nocompress;$/;"	v	file:
node	audit_tree.c	/^	struct node {$/;"	s	struct:audit_chunk	file:
node	cpu.c	/^	struct hlist_node	*node;$/;"	m	struct:cpuhp_cpu_state	typeref:struct:cpuhp_cpu_state::hlist_node	file:
node	kthread.c	/^	int node;$/;"	m	struct:kthread_create_info	file:
node	livepatch/patch.h	/^	struct list_head node;$/;"	m	struct:klp_ops	typeref:struct:klp_ops::list_head
node	livepatch/shadow.c	/^	struct hlist_node node;$/;"	m	struct:klp_shadow	typeref:struct:klp_shadow::hlist_node	file:
node	locking/qspinlock_paravirt.h	/^	struct pv_node   *node;$/;"	m	struct:pv_hash_entry	typeref:struct:pv_hash_entry::pv_node
node	module.c	/^	struct llist_node node;$/;"	m	struct:mod_initfree	typeref:struct:mod_initfree::llist_node	file:
node	power/snapshot.c	/^	struct rtree_node *node;$/;"	m	struct:bm_position	typeref:struct:bm_position::rtree_node	file:
node	power/swap.c	/^	struct rb_node node;$/;"	m	struct:swsusp_extent	typeref:struct:swsusp_extent::rb_node	file:
node	power/wakelock.c	/^	struct rb_node		node;$/;"	m	struct:wakelock	typeref:struct:wakelock::rb_node	file:
node	rcu/tree.h	/^	struct rcu_node node[NUM_RCU_NODES];	\/* Hierarchy. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_node
node	trace/ftrace.c	/^	struct hlist_node		node;$/;"	m	struct:ftrace_profile	typeref:struct:ftrace_profile::hlist_node	file:
node	trace/ring_buffer.c	/^	struct hlist_node		node;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::hlist_node	file:
node	trace/trace_stat.c	/^	struct rb_node		node;$/;"	m	struct:stat_node	typeref:struct:stat_node::rb_node	file:
node	workqueue.c	/^	int			node;		\/* I: the associated node ID *\/$/;"	m	struct:worker_pool	file:
node	workqueue_internal.h	/^	struct list_head	node;		\/* A: anchored at pool->workers *\/$/;"	m	struct:worker	typeref:struct:worker::list_head
node_bit	power/snapshot.c	/^	int node_bit;$/;"	m	struct:bm_position	file:
node_cpu	locking/osq_lock.c	/^static inline int node_cpu(struct optimistic_spin_node *node)$/;"	f	file:
node_pfn	power/snapshot.c	/^	unsigned long node_pfn;$/;"	m	struct:bm_position	file:
nodes	power/snapshot.c	/^	struct list_head nodes;		\/* Radix Tree inner nodes      *\/$/;"	m	struct:mem_zone_bm_rtree	typeref:struct:mem_zone_bm_rtree::list_head	file:
nohdr_data	bpf/btf.c	/^	void *nohdr_data;$/;"	m	struct:btf	file:
nohibernate	power/hibernate.c	/^static int nohibernate;$/;"	v	file:
nohibernate_setup	power/hibernate.c	/^static int __init nohibernate_setup(char *str)$/;"	f	file:
nohz_balance_enter_idle	sched/fair.c	/^void nohz_balance_enter_idle(int cpu)$/;"	f
nohz_balance_exit_idle	sched/fair.c	/^void nohz_balance_exit_idle(struct rq *rq)$/;"	f
nohz_balance_exit_idle	sched/sched.h	/^static inline void nohz_balance_exit_idle(struct rq *rq) { }$/;"	f
nohz_balancer_kick	sched/fair.c	/^static inline void nohz_balancer_kick(struct rq *rq) { }$/;"	f	file:
nohz_balancer_kick	sched/fair.c	/^static void nohz_balancer_kick(struct rq *rq)$/;"	f	file:
nohz_flags	sched/sched.h	/^	atomic_t nohz_flags;$/;"	m	struct:rq
nohz_flags	sched/sched.h	2166;"	d
nohz_full_kick_func	time/tick-sched.c	/^static void nohz_full_kick_func(struct irq_work *work)$/;"	f	file:
nohz_idle_balance	sched/fair.c	/^static bool nohz_idle_balance(struct rq *this_rq, enum cpu_idle_type idle)$/;"	f	file:
nohz_idle_balance	sched/fair.c	/^static inline bool nohz_idle_balance(struct rq *this_rq, enum cpu_idle_type idle)$/;"	f	file:
nohz_mode	time/tick-sched.h	/^	enum tick_nohz_mode		nohz_mode;$/;"	m	struct:tick_sched	typeref:enum:tick_sched::tick_nohz_mode
nohz_newidle_balance	sched/fair.c	/^static inline void nohz_newidle_balance(struct rq *this_rq) { }$/;"	f	file:
nohz_newidle_balance	sched/fair.c	/^static void nohz_newidle_balance(struct rq *this_rq)$/;"	f	file:
nohz_tick_stopped	sched/sched.h	/^	unsigned int		nohz_tick_stopped;$/;"	m	struct:rq
noirqdebug_setup	irq/spurious.c	/^int noirqdebug_setup(char *str)$/;"	f
none	cgroup/cgroup-internal.h	/^	bool		none;			\/* User explicitly requested empty subsystem *\/$/;"	m	struct:cgroup_fs_context
noop	irq/dummychip.c	/^static void noop(struct irq_data *data) { }$/;"	f	file:
noop_count	locking/lockdep.c	/^static int noop_count(struct lock_list *entry, void *data)$/;"	f	file:
noop_ret	irq/dummychip.c	/^static unsigned int noop_ret(struct irq_data *data)$/;"	f	file:
nop_flags	trace/trace_nop.c	/^static struct tracer_flags nop_flags = {$/;"	v	typeref:struct:tracer_flags	file:
nop_opts	trace/trace_nop.c	/^static struct tracer_opt nop_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
nop_set_flag	trace/trace_nop.c	/^static int nop_set_flag(struct trace_array *tr, u32 old_flags, u32 bit, int set)$/;"	f	file:
nop_trace_init	trace/trace_nop.c	/^static int nop_trace_init(struct trace_array *tr)$/;"	f	file:
nop_trace_reset	trace/trace_nop.c	/^static void nop_trace_reset(struct trace_array *tr)$/;"	f	file:
noresume	power/hibernate.c	/^static int noresume;$/;"	v	file:
noresume_setup	power/hibernate.c	/^static int __init noresume_setup(char *str)$/;"	f	file:
norm	rcu/tree.h	/^		u8 norm;$/;"	m	struct:rcu_noqs::__anon65
normal_prio	sched/core.c	/^static inline int normal_prio(struct task_struct *p)$/;"	f	file:
normalize_cfs_quota	sched/core.c	/^static u64 normalize_cfs_quota(struct task_group *tg,$/;"	f	file:
normalize_rt_tasks	sched/core.c	/^void normalize_rt_tasks(void)$/;"	f
normalized_sysctl_sched_latency	sched/fair.c	/^static unsigned int normalized_sysctl_sched_latency	= 6000000ULL;$/;"	v	file:
normalized_sysctl_sched_min_granularity	sched/fair.c	/^static unsigned int normalized_sysctl_sched_min_granularity	= 750000ULL;$/;"	v	file:
normalized_sysctl_sched_wakeup_granularity	sched/fair.c	/^static unsigned int normalized_sysctl_sched_wakeup_granularity	= 1000000UL;$/;"	v	file:
nosave_region	power/snapshot.c	/^struct nosave_region {$/;"	s	file:
nosmp	smp.c	/^static int __init nosmp(char *str)$/;"	f	file:
nosoftlockup_setup	watchdog.c	/^static int __init nosoftlockup_setup(char *str)$/;"	f	file:
not	trace/trace.h	/^	int			not;$/;"	m	struct:filter_pred
not_in_range	locking/lockdep.c	/^static inline int not_in_range(const void* mem_from, unsigned long mem_len,$/;"	f	file:
not_visited	trace/trace_events_filter.c	/^	char *not_visited;$/;"	m	struct:test_filter_data_t	file:
notask_error	exit.c	/^	int			notask_error;$/;"	m	struct:wait_opts	file:
note_gp_changes	rcu/tree.c	/^static void note_gp_changes(struct rcu_data *rdp)$/;"	f	file:
note_interrupt	irq/spurious.c	/^void note_interrupt(struct irq_desc *desc, irqreturn_t action_ret)$/;"	f
notes	module.c	/^	unsigned int notes;$/;"	m	struct:module_notes_attrs	file:
notes_read	ksysfs.c	/^static ssize_t notes_read(struct file *filp, struct kobject *kobj,$/;"	f	file:
notes_size	ksysfs.c	190;"	d	file:
notif	seccomp.c	/^	struct notification *notif;$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::notification	file:
notification	seccomp.c	/^struct notification {$/;"	s	file:
notifications	seccomp.c	/^	struct list_head notifications;$/;"	m	struct:notification	typeref:struct:notification::list_head	file:
notifier_call_chain	notifier.c	/^NOKPROBE_SYMBOL(notifier_call_chain);$/;"	v
notifier_call_chain	notifier.c	/^static int notifier_call_chain(struct notifier_block **nl,$/;"	f	file:
notifier_chain_cond_register	notifier.c	/^static int notifier_chain_cond_register(struct notifier_block **nl,$/;"	f	file:
notifier_chain_register	notifier.c	/^static int notifier_chain_register(struct notifier_block **nl,$/;"	f	file:
notifier_chain_unregister	notifier.c	/^static int notifier_chain_unregister(struct notifier_block **nl,$/;"	f	file:
notify_cpu_starting	cpu.c	/^void notify_cpu_starting(unsigned int cpu)$/;"	f
notify_die	notifier.c	/^NOKPROBE_SYMBOL(notify_die);$/;"	v
notify_die	notifier.c	/^int notrace notify_die(enum die_val val, const char *str,$/;"	f
notify_lock	seccomp.c	/^	struct mutex notify_lock;$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::mutex	file:
notify_on_release	cgroup/cgroup-internal.h	/^static inline bool notify_on_release(const struct cgroup *cgrp)$/;"	f
notify_state	seccomp.c	/^enum notify_state {$/;"	g	file:
now	time/timer_list.c	/^	u64 now;$/;"	m	struct:timer_list_iter	file:
nowatchdog_setup	watchdog.c	/^static int __init nowatchdog_setup(char *str)$/;"	f	file:
nr	bpf/stackmap.c	/^	u32 nr;$/;"	m	struct:stack_map_bucket	file:
nr	sched/sched.h	/^		int		nr;$/;"	m	struct:cfs_rq::__anon83
nr	trace/trace.h	/^	int			nr;$/;"	m	struct:syscall_trace_enter
nr	trace/trace.h	/^	int			nr;$/;"	m	struct:syscall_trace_exit
nr__cgroup2_params	cgroup/cgroup.c	/^	nr__cgroup2_params$/;"	e	enum:cgroup2_param	file:
nr_active	workqueue.c	/^	int			nr_active;	\/* L: nr of active works *\/$/;"	m	struct:pool_workqueue	file:
nr_addr_filters	events/core.c	/^DEVICE_ATTR_RO(nr_addr_filters);$/;"	v
nr_addr_filters_show	events/core.c	/^static ssize_t nr_addr_filters_show(struct device *dev,$/;"	f	file:
nr_args	trace/trace_probe.h	/^	unsigned int			nr_args;$/;"	m	struct:trace_probe
nr_callchain_events	events/callchain.c	/^static atomic_t nr_callchain_events;$/;"	v	file:
nr_chain_hlocks	locking/lockdep.c	/^int nr_chain_hlocks;$/;"	v
nr_context_switches	sched/core.c	/^unsigned long long nr_context_switches(void)$/;"	f
nr_copy_pages	power/snapshot.c	/^static unsigned int nr_copy_pages;$/;"	v	file:
nr_cpu_ids	smp.c	/^EXPORT_SYMBOL(nr_cpu_ids);$/;"	v
nr_cpus	sched/fair.c	/^	atomic_t nr_cpus;$/;"	m	struct:__anon87	file:
nr_cpusets	cgroup/cpuset.c	/^static inline int nr_cpusets(void)$/;"	f	file:
nr_cyclic_checks	locking/lockdep_internals.h	/^	unsigned int   nr_cyclic_checks;$/;"	m	struct:lockdep_stats
nr_drainers	workqueue.c	/^	int			nr_drainers;	\/* WQ: drain in progress *\/$/;"	m	struct:workqueue_struct	file:
nr_events	trace/trace.h	/^	int				nr_events;$/;"	m	struct:trace_subsystem_dir
nr_ext_console_drivers	printk/printk.c	/^static int nr_ext_console_drivers;$/;"	v	file:
nr_find_usage_backwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_backwards_checks;$/;"	m	struct:lockdep_stats
nr_find_usage_forwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_forwards_checks;$/;"	m	struct:lockdep_stats
nr_hardirq_chains	locking/lockdep.c	/^unsigned int nr_hardirq_chains;$/;"	v
nr_idle	workqueue.c	/^	int			nr_idle;	\/* L: currently idle workers *\/$/;"	m	struct:worker_pool	file:
nr_in_flight	workqueue.c	/^	int			nr_in_flight[WORK_NR_COLORS];$/;"	m	struct:pool_workqueue	file:
nr_iowait	sched/core.c	/^unsigned long nr_iowait(void)$/;"	f
nr_iowait	sched/sched.h	/^	atomic_t		nr_iowait;$/;"	m	struct:rq
nr_iowait_cpu	sched/core.c	/^unsigned long nr_iowait_cpu(int cpu)$/;"	f
nr_irqs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(nr_irqs);$/;"	v
nr_irqs	irq/irqdesc.c	/^int nr_irqs = NR_IRQS;$/;"	v
nr_list_entries	locking/lockdep.c	/^unsigned long nr_list_entries;$/;"	v
nr_load_updates	sched/sched.h	/^	unsigned long		nr_load_updates;$/;"	m	struct:rq
nr_lock_classes	locking/lockdep.c	/^unsigned long nr_lock_classes;$/;"	v
nr_meta_pages	power/snapshot.c	/^static unsigned int nr_meta_pages;$/;"	v	file:
nr_namespaces	events/core.c	/^		u64				nr_namespaces;$/;"	m	struct:perf_namespaces_event::__anon3	file:
nr_numa_running	sched/fair.c	/^	unsigned int nr_numa_running;$/;"	m	struct:sg_lb_stats	file:
nr_numa_running	sched/sched.h	/^	unsigned int		nr_numa_running;$/;"	m	struct:rq
nr_pages	events/internal.h	/^	int				nr_pages;	\/* nr of data pages  *\/$/;"	m	struct:ring_buffer
nr_pages	trace/ring_buffer.c	/^	unsigned long			nr_pages;$/;"	m	struct:ring_buffer_per_cpu	file:
nr_pages_to_update	trace/ring_buffer.c	/^	long				nr_pages_to_update;$/;"	m	struct:ring_buffer_per_cpu	file:
nr_periods	sched/sched.h	/^	int			nr_periods;$/;"	m	struct:cfs_bandwidth
nr_prealloc_entries	dma/debug.c	/^static u32 nr_prealloc_entries = PREALLOC_DMA_DEBUG_ENTRIES;$/;"	v	file:
nr_preferred_running	sched/fair.c	/^	unsigned int nr_preferred_running;$/;"	m	struct:sg_lb_stats	file:
nr_preferred_running	sched/sched.h	/^	unsigned int		nr_preferred_running;$/;"	m	struct:rq
nr_process_chains	locking/lockdep.c	/^unsigned int nr_process_chains;$/;"	v
nr_processes	fork.c	/^int nr_processes(void)$/;"	f
nr_pwqs_to_flush	workqueue.c	/^	atomic_t		nr_pwqs_to_flush; \/* flush in progress *\/$/;"	m	struct:workqueue_struct	file:
nr_redundant	locking/lockdep_internals.h	/^	unsigned int   nr_redundant;$/;"	m	struct:lockdep_stats
nr_redundant_checks	locking/lockdep_internals.h	/^	unsigned int   nr_redundant_checks;$/;"	m	struct:lockdep_stats
nr_running	sched/core.c	/^unsigned long nr_running(void)$/;"	f
nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	m	struct:cfs_rq
nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	m	struct:rq
nr_scans	bpf/bpf_lru_list.h	/^	unsigned int nr_scans;$/;"	m	struct:bpf_lru
nr_slots	events/hw_breakpoint.c	/^static int nr_slots[TYPE_MAX];$/;"	v	file:
nr_softirq_chains	locking/lockdep.c	/^unsigned int nr_softirq_chains;$/;"	v
nr_spread_over	sched/sched.h	/^	unsigned int		nr_spread_over;$/;"	m	struct:cfs_rq
nr_stack_trace_entries	locking/lockdep.c	/^unsigned long nr_stack_trace_entries;$/;"	v
nr_subparts_cpus	cgroup/cpuset.c	/^	int nr_subparts_cpus;$/;"	m	struct:cpuset	file:
nr_switches	sched/sched.h	/^	u64			nr_switches;$/;"	m	struct:rq
nr_systemwide	trace/trace_uprobe.c	/^	int			nr_systemwide;$/;"	m	struct:trace_uprobe_filter	file:
nr_tasks	cgroup/cgroup-internal.h	/^	int			nr_tasks;$/;"	m	struct:cgroup_taskset
nr_tasks	sched/fair.c	/^	int nr_tasks;$/;"	m	struct:numa_group	file:
nr_threads	fork.c	/^int nr_threads;			\/* The idle threads do not count.. *\/$/;"	v
nr_throttled	sched/sched.h	/^	int			nr_throttled;$/;"	m	struct:cfs_bandwidth
nr_todo	stop_machine.c	/^	atomic_t		nr_todo;	\/* nr left to execute *\/$/;"	m	struct:cpu_stop_done	file:
nr_topts	trace/trace.h	/^	int			nr_topts;$/;"	m	struct:trace_array
nr_total_entries	dma/debug.c	/^static u32 nr_total_entries;$/;"	v	file:
nr_types	bpf/btf.c	/^	u32 nr_types;$/;"	m	struct:btf	file:
nr_uninterruptible	sched/sched.h	/^	unsigned long		nr_uninterruptible;$/;"	m	struct:rq
nr_unused_locks	locking/lockdep_internals.h	/^	int            nr_unused_locks;$/;"	m	struct:lockdep_stats
nr_workers	workqueue.c	/^	int			nr_workers;	\/* L: total number of workers *\/$/;"	m	struct:worker_pool	file:
nrcpus	smp.c	/^static int __init nrcpus(char *str)$/;"	f	file:
nrealreaders	rcu/rcuperf.c	/^static int nrealreaders;$/;"	v	file:
nrealreaders	rcu/rcutorture.c	/^static int nrealreaders;$/;"	v	file:
nrealreaders_stress	locking/locktorture.c	/^	int nrealreaders_stress;$/;"	m	struct:lock_torture_cxt	file:
nrealwriters	rcu/rcuperf.c	/^static int nrealwriters;$/;"	v	file:
nrealwriters_stress	locking/locktorture.c	/^	int nrealwriters_stress;$/;"	m	struct:lock_torture_cxt	file:
ns	acct.c	/^	struct pid_namespace	*ns;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::pid_namespace	file:
ns	cgroup/cgroup-internal.h	/^	struct cgroup_namespace	*ns;$/;"	m	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_namespace
ns	cgroup/cgroup-v1.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist::__anon12	typeref:struct:cgroup_pidlist::__anon12::pid_namespace	file:
ns2usecs	trace/trace.c	/^unsigned long long ns2usecs(u64 nsec)$/;"	f
ns_capable	capability.c	/^EXPORT_SYMBOL(ns_capable);$/;"	v
ns_capable	capability.c	/^bool ns_capable(struct user_namespace *ns, int cap)$/;"	f
ns_capable_common	capability.c	/^static bool ns_capable_common(struct user_namespace *ns,$/;"	f	file:
ns_capable_noaudit	capability.c	/^EXPORT_SYMBOL(ns_capable_noaudit);$/;"	v
ns_capable_noaudit	capability.c	/^bool ns_capable_noaudit(struct user_namespace *ns, int cap)$/;"	f
ns_capable_setid	capability.c	/^EXPORT_SYMBOL(ns_capable_setid);$/;"	v
ns_capable_setid	capability.c	/^bool ns_capable_setid(struct user_namespace *ns, int cap)$/;"	f
ns_get_owner	user_namespace.c	/^struct ns_common *ns_get_owner(struct ns_common *ns)$/;"	f
ns_get_path_bpf_map_args	bpf/offload.c	/^struct ns_get_path_bpf_map_args {$/;"	s	file:
ns_get_path_bpf_prog_args	bpf/offload.c	/^struct ns_get_path_bpf_prog_args {$/;"	s	file:
ns_to_kernel_old_timeval	time/time.c	/^EXPORT_SYMBOL(ns_to_kernel_old_timeval);$/;"	v
ns_to_kernel_old_timeval	time/time.c	/^struct __kernel_old_timeval ns_to_kernel_old_timeval(const s64 nsec)$/;"	f
ns_to_timespec	time/time.c	/^EXPORT_SYMBOL(ns_to_timespec);$/;"	v
ns_to_timespec	time/time.c	/^struct timespec ns_to_timespec(const s64 nsec)$/;"	f
ns_to_timespec64	time/time.c	/^EXPORT_SYMBOL(ns_to_timespec64);$/;"	v
ns_to_timespec64	time/time.c	/^struct timespec64 ns_to_timespec64(const s64 nsec)$/;"	f
ns_to_timeval	time/time.c	/^EXPORT_SYMBOL(ns_to_timeval);$/;"	v
ns_to_timeval	time/time.c	/^struct timeval ns_to_timeval(const s64 nsec)$/;"	f
nsec	time/ntp.c	/^	long		nsec;	\/* nanoseconds *\/$/;"	m	struct:pps_normtime	file:
nsec_high	sched/debug.c	/^static long long nsec_high(unsigned long long nsec)$/;"	f	file:
nsec_low	sched/debug.c	/^static unsigned long nsec_low(unsigned long long nsec)$/;"	f	file:
nsec_to_clock_t	time/time.c	/^u64 nsec_to_clock_t(u64 x)$/;"	f
nsecs_to_jiffies	time/time.c	/^EXPORT_SYMBOL_GPL(nsecs_to_jiffies);$/;"	v
nsecs_to_jiffies	time/time.c	/^unsigned long nsecs_to_jiffies(u64 n)$/;"	f
nsecs_to_jiffies64	time/time.c	/^EXPORT_SYMBOL(nsecs_to_jiffies64);$/;"	v
nsecs_to_jiffies64	time/time.c	/^u64 nsecs_to_jiffies64(u64 n)$/;"	f
nsecs_to_usecs	trace/trace.c	/^unsigned long nsecs_to_usecs(unsigned long nsecs)$/;"	f
nsections	module.c	/^	unsigned int nsections;$/;"	m	struct:module_sect_attrs	file:
nsleep	time/posix-timers.h	/^	int	(*nsleep)(const clockid_t which_clock, int flags,$/;"	m	struct:k_clock
nsproxy_cache_init	nsproxy.c	/^int __init nsproxy_cache_init(void)$/;"	f
nsproxy_cachep	nsproxy.c	/^static struct kmem_cache *nsproxy_cachep;$/;"	v	typeref:struct:kmem_cache	file:
ntp_clear	time/ntp.c	/^void ntp_clear(void)$/;"	f
ntp_get_next_leap	time/ntp.c	/^ktime_t ntp_get_next_leap(void)$/;"	f
ntp_init	time/ntp.c	/^void __init ntp_init(void)$/;"	f
ntp_next_leap_sec	time/ntp.c	/^static time64_t			ntp_next_leap_sec = TIME64_MAX;$/;"	v	file:
ntp_notify_cmos_timer	time/ntp.c	/^void ntp_notify_cmos_timer(void)$/;"	f
ntp_offset_chunk	time/ntp.c	/^static inline s64 ntp_offset_chunk(s64 offset)$/;"	f	file:
ntp_synced	time/ntp.c	/^static inline int ntp_synced(void)$/;"	f	file:
ntp_tick_adj	time/ntp.c	/^static s64			ntp_tick_adj;$/;"	v	file:
ntp_tick_adj_setup	time/ntp.c	/^static int __init ntp_tick_adj_setup(char *str)$/;"	f	file:
ntp_tick_length	time/ntp.c	/^u64 ntp_tick_length(void)$/;"	f
ntp_update_frequency	time/ntp.c	/^static void ntp_update_frequency(void)$/;"	f	file:
ntp_update_offset	time/ntp.c	/^static void ntp_update_offset(long offset)$/;"	f	file:
ntp_update_offset_fll	time/ntp.c	/^static inline s64 ntp_update_offset_fll(s64 offset64, long secs)$/;"	f	file:
null_pm_qos	power/qos.c	/^static struct pm_qos_object null_pm_qos;$/;"	v	typeref:struct:pm_qos_object	file:
null_prog	bpf/core.c	/^	struct bpf_prog *null_prog;$/;"	m	struct:__anon67	typeref:struct:__anon67::bpf_prog	file:
num	gcov/gcc_3_4.c	/^	unsigned int	num;$/;"	m	struct:gcov_ctr_info	file:
num	gcov/gcc_4_7.c	/^	unsigned int num;$/;"	m	struct:gcov_ctr_info	file:
num	params.c	/^	unsigned int num;$/;"	m	struct:module_param_attrs	file:
num_counter_active	gcov/gcc_3_4.c	/^static unsigned int num_counter_active(struct gcov_info *info)$/;"	f	file:
num_counter_active	gcov/gcc_4_7.c	/^static unsigned int num_counter_active(struct gcov_info *info)$/;"	f	file:
num_counters	gcov/clang.c	/^	u32 num_counters;$/;"	m	struct:gcov_fn_info	file:
num_cpus_frozen	sched/core.c	/^static int num_cpus_frozen;$/;"	v	file:
num_debug	module-internal.h	/^	unsigned int num_debug;$/;"	m	struct:load_info
num_free_entries	dma/debug.c	/^static u32 num_free_entries;$/;"	v	file:
num_funcs	trace/ftrace.c	/^	unsigned int		num_funcs;$/;"	m	struct:ftrace_mod_map	file:
num_loaded	gcov/fs.c	/^	int num_loaded;$/;"	m	struct:gcov_node	file:
num_max_cnt	cgroup/rdma.c	/^	int			num_max_cnt;$/;"	m	struct:rdmacg_resource_pool	file:
num_physpages	power/power.h	/^	unsigned long		num_physpages;$/;"	m	struct:swsusp_info
num_rcu_lvl	rcu/tree.c	/^int num_rcu_lvl[] = NUM_RCU_LVL_INIT;$/;"	v
num_tests	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
num_threads	stop_machine.c	/^	unsigned int		num_threads;$/;"	m	struct:multi_stop_data	file:
num_types	gcov/gcc_3_4.c	/^	int num_types;$/;"	m	struct:gcov_iterator	file:
numa_faults_stats	sched/sched.h	/^enum numa_faults_stats {$/;"	g
numa_get_avg_runtime	sched/fair.c	/^static u64 numa_get_avg_runtime(struct task_struct *p, u64 *period)$/;"	f	file:
numa_group	sched/fair.c	/^struct numa_group {$/;"	s	file:
numa_group_count_active_nodes	sched/fair.c	/^static void numa_group_count_active_nodes(struct numa_group *numa_group)$/;"	f	file:
numa_is_active_node	sched/fair.c	/^static bool numa_is_active_node(int nid, struct numa_group *ng)$/;"	f	file:
numa_migrate_on	sched/sched.h	/^	unsigned int		numa_migrate_on;$/;"	m	struct:rq
numa_migrate_preferred	sched/fair.c	/^static void numa_migrate_preferred(struct task_struct *p)$/;"	f	file:
numa_pwq_tbl	workqueue.c	/^	struct pool_workqueue __rcu *numa_pwq_tbl[]; \/* PWR: unbound pwqs indexed by node *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::__rcu	file:
numa_pwq_tbl_install	workqueue.c	/^static struct pool_workqueue *numa_pwq_tbl_install(struct workqueue_struct *wq,$/;"	f	file:
numa_stats	sched/fair.c	/^struct numa_stats {$/;"	s	file:
numa_topology_type	sched/sched.h	/^enum numa_topology_type {$/;"	g
number_of_wakelocks	power/wakelock.c	/^static unsigned int number_of_wakelocks;$/;"	v	file:
nused	kprobes.c	/^	int nused;$/;"	m	struct:kprobe_insn_page	file:
obj	bpf/cpumap.c	/^	struct bpf_cpu_map_entry *obj;$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::bpf_cpu_map_entry	file:
obj	bpf/devmap.c	/^	struct bpf_dtab_netdev *obj;$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::bpf_dtab_netdev	file:
obj	livepatch/shadow.c	/^	void *obj;$/;"	m	struct:klp_shadow	file:
obj-y	Makefile	/^obj-y     = fork.o exec_domain.o panic.o \\$/;"	m
obj-y	bpf/Makefile	/^obj-y := core.o$/;"	m
obj-y	cgroup/Makefile	/^obj-y := cgroup.o rstat.o namespace.o cgroup-v1.o freezer.o$/;"	m
obj-y	debug/kdb/Makefile	/^obj-y := kdb_io.o kdb_main.o kdb_support.o kdb_bt.o gen-kdb_cmds.o kdb_bp.o kdb_debugger.o$/;"	m
obj-y	events/Makefile	/^obj-y := core.o ring_buffer.o callchain.o$/;"	m
obj-y	gcov/Makefile	/^obj-y := base.o fs.o$/;"	m
obj-y	irq/Makefile	/^obj-y := irqdesc.o handle.o manage.o spurious.o resend.o chip.o dummychip.o devres.o$/;"	m
obj-y	printk/Makefile	/^obj-y	= printk.o$/;"	m
objname	livepatch/core.c	/^	const char *objname;$/;"	m	struct:klp_find_arg	file:
objtree	gcov/fs.c	/^static const char objtree[] = OBJTREE;$/;"	v	file:
of_css	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(of_css);$/;"	v
of_css	cgroup/cgroup.c	/^struct cgroup_subsys_state *of_css(struct kernfs_open_file *of)$/;"	f
of_phandle_args_to_fwspec	irq/irqdomain.c	/^static void of_phandle_args_to_fwspec(struct device_node *np, const u32 *args,$/;"	f	file:
off	bpf/btf.c	/^	u32 off;$/;"	m	struct:btf_sec_info	file:
offdev	bpf/offload.c	/^	struct bpf_offload_dev *offdev;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::bpf_offload_dev	file:
offdev_netdevs	bpf/offload.c	/^	struct list_head offdev_netdevs;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::list_head	file:
offdevs	bpf/offload.c	/^static struct rhashtable offdevs;$/;"	v	typeref:struct:rhashtable	file:
offdevs_inited	bpf/offload.c	/^static bool offdevs_inited;$/;"	v	file:
offdevs_params	bpf/offload.c	/^static const struct rhashtable_params offdevs_params = {$/;"	v	typeref:struct:rhashtable_params	file:
offline_css	cgroup/cgroup.c	/^static void offline_css(struct cgroup_subsys_state *css)$/;"	f	file:
offmap	bpf/offload.c	/^	struct bpf_offloaded_map *offmap;$/;"	m	struct:ns_get_path_bpf_map_args	typeref:struct:ns_get_path_bpf_map_args::bpf_offloaded_map	file:
offset	dma/debug.c	/^	size_t		 offset;$/;"	m	struct:dma_debug_entry	file:
offset	events/uprobes.c	/^	loff_t			offset;$/;"	m	struct:uprobe	file:
offset	gcov/gcc_3_4.c	/^	unsigned int offset;$/;"	m	struct:type_info	file:
offset	power/user.c	/^	compat_loff_t offset;$/;"	m	struct:compat_resume_swap_area	file:
offset	trace/trace.h	/^	int			offset;$/;"	m	struct:ftrace_event_field
offset	trace/trace.h	/^	int 			offset;$/;"	m	struct:filter_pred
offset	trace/trace_events_hist.c	/^	unsigned int			offset;$/;"	m	struct:hist_field	file:
offset	trace/trace_probe.h	/^			int offset;$/;"	m	struct:fetch_insn::__anon21::__anon22
offset	trace/trace_probe.h	/^	unsigned int		offset;	\/* Offset from argument entry *\/$/;"	m	struct:probe_arg
offset	trace/trace_uprobe.c	/^	unsigned long			offset;$/;"	m	struct:trace_uprobe	file:
offset	trace/tracing_map.h	/^		unsigned int			offset;$/;"	m	union:tracing_map_field::__anon29
offset_to_vaddr	events/uprobes.c	/^static unsigned long offset_to_vaddr(struct vm_area_struct *vma, loff_t offset)$/;"	f	file:
offsets	time/timekeeping.c	/^static ktime_t *offsets[TK_OFFS_MAX] = {$/;"	v	file:
oflag	audit.h	/^			int			oflag;$/;"	m	struct:audit_context::__anon53::__anon59
ok_to_free_tracepoints	tracepoint.c	/^static bool ok_to_free_tracepoints;$/;"	v	file:
ok_to_run	trace/trace_benchmark.c	/^static bool ok_to_run;$/;"	v	file:
ok_to_run_trace_benchmark	trace/trace_benchmark.c	/^early_initcall(ok_to_run_trace_benchmark);$/;"	v
ok_to_run_trace_benchmark	trace/trace_benchmark.c	/^static __init int ok_to_run_trace_benchmark(void)$/;"	f	file:
old	bpf/verifier.c	/^	u32 old;$/;"	m	struct:idpair	file:
old_mems_allowed	cgroup/cpuset.c	/^	nodemask_t old_mems_allowed;$/;"	m	struct:cpuset	file:
old_msgctl	sys_ni.c	/^COND_SYSCALL(old_msgctl);$/;"	v
old_msgctl	sys_ni.c	/^COND_SYSCALL_COMPAT(old_msgctl);$/;"	v
old_pcap	auditsc.c	/^	struct audit_cap_data	old_pcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
old_rt_runtime	rcu/rcutorture.c	/^static int old_rt_runtime = -1;$/;"	v	file:
old_semctl	sys_ni.c	/^COND_SYSCALL(old_semctl);$/;"	v
old_semctl	sys_ni.c	/^COND_SYSCALL_COMPAT(old_semctl);$/;"	v
old_shmctl	sys_ni.c	/^COND_SYSCALL(old_shmctl);$/;"	v
old_shmctl	sys_ni.c	/^COND_SYSCALL_COMPAT(old_shmctl);$/;"	v
oldlenp	sysctl_binary.c	/^	compat_uptr_t	oldlenp;$/;"	m	struct:compat_sysctl_args	file:
oldval	sysctl_binary.c	/^	compat_uptr_t	oldval;$/;"	m	struct:compat_sysctl_args	file:
on_dl_rq	sched/deadline.c	/^static inline int on_dl_rq(struct sched_dl_entity *dl_se)$/;"	f	file:
on_each_cpu	smp.c	/^EXPORT_SYMBOL(on_each_cpu);$/;"	v
on_each_cpu	smp.c	/^void on_each_cpu(void (*func) (void *info), void *info, int wait)$/;"	f
on_each_cpu	up.c	/^EXPORT_SYMBOL(on_each_cpu);$/;"	v
on_each_cpu	up.c	/^void on_each_cpu(smp_call_func_t func, void *info, int wait)$/;"	f
on_each_cpu_cond	smp.c	/^EXPORT_SYMBOL(on_each_cpu_cond);$/;"	v
on_each_cpu_cond	smp.c	/^void on_each_cpu_cond(bool (*cond_func)(int cpu, void *info),$/;"	f
on_each_cpu_cond	up.c	/^EXPORT_SYMBOL(on_each_cpu_cond);$/;"	v
on_each_cpu_cond	up.c	/^void on_each_cpu_cond(bool (*cond_func)(int cpu, void *info),$/;"	f
on_each_cpu_cond_mask	smp.c	/^EXPORT_SYMBOL(on_each_cpu_cond_mask);$/;"	v
on_each_cpu_cond_mask	smp.c	/^void on_each_cpu_cond_mask(bool (*cond_func)(int cpu, void *info),$/;"	f
on_each_cpu_cond_mask	up.c	/^EXPORT_SYMBOL(on_each_cpu_cond_mask);$/;"	v
on_each_cpu_cond_mask	up.c	/^void on_each_cpu_cond_mask(bool (*cond_func)(int cpu, void *info),$/;"	f
on_each_cpu_mask	smp.c	/^EXPORT_SYMBOL(on_each_cpu_mask);$/;"	v
on_each_cpu_mask	smp.c	/^void on_each_cpu_mask(const struct cpumask *mask, smp_call_func_t func,$/;"	f
on_each_cpu_mask	up.c	/^EXPORT_SYMBOL(on_each_cpu_mask);$/;"	v
on_each_cpu_mask	up.c	/^void on_each_cpu_mask(const struct cpumask *mask,$/;"	f
on_list	sched/sched.h	/^	int			on_list;$/;"	m	struct:cfs_rq
on_null_domain	sched/fair.c	/^static inline int on_null_domain(struct rq *rq)$/;"	f	file:
on_rt_rq	sched/rt.c	/^static inline int on_rt_rq(struct sched_rt_entity *rt_se)$/;"	f	file:
one_hundred	sysctl.c	/^static int one_hundred = 100;$/;"	v	file:
one_thousand	sysctl.c	/^static int one_thousand = 1000;$/;"	v	file:
one_ul	sysctl.c	/^static unsigned long one_ul = 1;$/;"	v	file:
online	irq/matrix.c	/^	bool			online;$/;"	m	struct:cpumap	file:
online	sched/sched.h	/^	cpumask_var_t		online;$/;"	m	struct:root_domain
online	sched/sched.h	/^	int			online;$/;"	m	struct:rq
online_css	cgroup/cgroup.c	/^static int online_css(struct cgroup_subsys_state *css)$/;"	f	file:
online_fair_sched_group	sched/fair.c	/^void online_fair_sched_group(struct task_group *tg) { }$/;"	f
online_fair_sched_group	sched/fair.c	/^void online_fair_sched_group(struct task_group *tg)$/;"	f
online_maps	irq/matrix.c	/^	unsigned int		online_maps;$/;"	m	struct:irq_matrix	file:
onmatch_create	trace/trace_events_hist.c	/^static int onmatch_create(struct hist_trigger_data *hist_data,$/;"	f	file:
onmatch_destroy	trace/trace_events_hist.c	/^static void onmatch_destroy(struct action_data *data)$/;"	f	file:
onmatch_parse	trace/trace_events_hist.c	/^static struct action_data *onmatch_parse(struct trace_array *tr, char *str)$/;"	f	file:
onoff_f	torture.c	/^static torture_ofl_func *onoff_f;$/;"	v	file:
onoff_get_trigger_ops	trace/trace_events_trigger.c	/^onoff_get_trigger_ops(char *cmd, char *param)$/;"	f	file:
onoff_holdoff	torture.c	/^static long onoff_holdoff;$/;"	v	file:
onoff_interval	torture.c	/^static long onoff_interval;$/;"	v	file:
onoff_task	torture.c	/^static struct task_struct *onoff_task;$/;"	v	typeref:struct:task_struct	file:
ontrack_action	trace/trace_events_hist.c	/^static void ontrack_action(struct hist_trigger_data *hist_data,$/;"	f	file:
oops_enter	panic.c	/^void oops_enter(void)$/;"	f
oops_exit	panic.c	/^void oops_exit(void)$/;"	f
oops_id	panic.c	/^static u64 oops_id;$/;"	v	file:
oops_in_progress	printk/printk.c	/^EXPORT_SYMBOL(oops_in_progress);$/;"	v
oops_in_progress	printk/printk.c	/^int oops_in_progress;$/;"	v
oops_may_print	panic.c	/^int oops_may_print(void)$/;"	f
oops_setup	panic.c	/^static int __init oops_setup(char *s)$/;"	f	file:
op	trace/trace.h	/^	int 			op;$/;"	m	struct:filter_pred
op	trace/trace_probe.h	/^	enum fetch_op op;$/;"	m	struct:fetch_insn	typeref:enum:fetch_insn::fetch_op
open	trace/trace.h	/^	void			(*open)(struct trace_iterator *iter);$/;"	m	struct:tracer
open_by_handle_at	sys_ni.c	/^COND_SYSCALL(open_by_handle_at);$/;"	v
open_by_handle_at	sys_ni.c	/^COND_SYSCALL_COMPAT(open_by_handle_at);$/;"	v
open_softirq	softirq.c	/^void open_softirq(int nr, void (*action)(struct softirq_action *))$/;"	f
operands	trace/trace_events_hist.c	/^	struct hist_field		*operands[HIST_FIELD_OPERANDS_MAX];$/;"	m	struct:hist_field	typeref:struct:hist_field::hist_field	file:
operator	trace/trace_events_hist.c	/^	enum field_op_id		operator;$/;"	m	struct:hist_field	typeref:enum:hist_field::field_op_id	file:
ops	bpf/offload.c	/^	const struct bpf_prog_offload_ops *ops;$/;"	m	struct:bpf_offload_dev	typeref:struct:bpf_offload_dev::bpf_prog_offload_ops	file:
ops	trace/ftrace.c	/^	struct ftrace_ops		*ops;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_ops	file:
ops	trace/ftrace.c	/^	struct ftrace_ops	ops;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::ftrace_ops	file:
ops	trace/trace.h	/^	struct event_trigger_ops	*ops;$/;"	m	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_ops
ops	trace/trace.h	/^	struct ftrace_ops	*ops;$/;"	m	struct:trace_array	typeref:struct:trace_array::ftrace_ops
ops	trace/trace.h	/^	unsigned short		*ops;$/;"	m	struct:filter_pred
ops	trace/trace_dynevent.h	/^	struct dyn_event_operations	*ops;$/;"	m	struct:dyn_event	typeref:struct:dyn_event::dyn_event_operations
ops	trace/trace_events_filter.c	/^	struct ftrace_ops *ops;$/;"	m	struct:function_filter_data	typeref:struct:function_filter_data::ftrace_ops	file:
ops	trace/trace_events_filter.c	/^static const char * ops[] = { OPS };$/;"	v	file:
ops	trace/tracing_map.h	/^	const struct tracing_map_ops	*ops;$/;"	m	struct:tracing_map	typeref:struct:tracing_map::tracing_map_ops
ops_references_rec	trace/ftrace.c	/^ops_references_rec(struct ftrace_ops *ops, struct dyn_ftrace *rec)$/;"	f	file:
ops_traces_mod	trace/ftrace.c	/^static inline int ops_traces_mod(struct ftrace_ops *ops)$/;"	f	file:
opt	trace/trace.h	/^	struct tracer_opt		*opt;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_opt
opt_hard_wire_dead_code_branches	bpf/verifier.c	/^static void opt_hard_wire_dead_code_branches(struct bpf_verifier_env *env)$/;"	f	file:
opt_kgdb_con	debug/debug_core.c	/^static int __init opt_kgdb_con(char *str)$/;"	f	file:
opt_kgdb_wait	debug/debug_core.c	/^static int __init opt_kgdb_wait(char *str)$/;"	f	file:
opt_nokgdbroundup	debug/debug_core.c	/^static int __init opt_nokgdbroundup(char *str)$/;"	f	file:
opt_pre_handler	kprobes.c	/^NOKPROBE_SYMBOL(opt_pre_handler);$/;"	v
opt_pre_handler	kprobes.c	/^void opt_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
opt_remove_dead_code	bpf/verifier.c	/^static int opt_remove_dead_code(struct bpf_verifier_env *env)$/;"	f	file:
opt_remove_nops	bpf/verifier.c	/^static int opt_remove_nops(struct bpf_verifier_env *env)$/;"	f	file:
opt_subreg_zext_lo32_rnd_hi32	bpf/verifier.c	/^static int opt_subreg_zext_lo32_rnd_hi32(struct bpf_verifier_env *env,$/;"	f	file:
optimize_all_kprobes	kprobes.c	/^static void optimize_all_kprobes(void)$/;"	f	file:
optimize_kprobe	kprobes.c	/^static void optimize_kprobe(struct kprobe *p)$/;"	f	file:
optimize_kprobe	kprobes.c	928;"	d	file:
options	printk/console_cmdline.h	/^	char	*options;			\/* Options for the driver   *\/$/;"	m	struct:console_cmdline
options	trace/trace.h	/^	struct dentry		*options;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
opts	trace/trace.h	/^	struct tracer_opt	*opts;$/;"	m	struct:tracer_flags	typeref:struct:tracer_flags::tracer_opt
ordered_wq_attrs	workqueue.c	/^static struct workqueue_attrs *ordered_wq_attrs[NR_STD_WORKER_POOLS];$/;"	v	typeref:struct:workqueue_attrs	file:
orderly_poweroff	reboot.c	/^EXPORT_SYMBOL_GPL(orderly_poweroff);$/;"	v
orderly_poweroff	reboot.c	/^void orderly_poweroff(bool force)$/;"	f
orderly_reboot	reboot.c	/^EXPORT_SYMBOL_GPL(orderly_reboot);$/;"	v
orderly_reboot	reboot.c	/^void orderly_reboot(void)$/;"	f
orig_bm	power/snapshot.c	/^static struct memory_bitmap orig_bm;$/;"	v	typeref:struct:memory_bitmap	file:
orig_fgconsole	power/console.c	/^static int orig_fgconsole, orig_kmsg;$/;"	v	file:
orig_kmsg	power/console.c	/^static int orig_fgconsole, orig_kmsg;$/;"	v	file:
orig_page	power/snapshot.c	/^	struct page *orig_page;	\/* data was here before the suspend *\/$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::page	file:
orig_sig	power/swap.c	/^	char	orig_sig[10];$/;"	m	struct:swsusp_header	file:
original_mask	locking/lockdep.c	/^static unsigned long original_mask(unsigned long mask)$/;"	f	file:
osid	audit.h	/^			u32			osid;$/;"	m	struct:audit_context::__anon53::__anon55
osid	audit.h	/^	u32			osid;$/;"	m	struct:audit_names
osq_lock	locking/osq_lock.c	/^bool osq_lock(struct optimistic_spin_queue *lock)$/;"	f
osq_unlock	locking/osq_lock.c	/^void osq_unlock(struct optimistic_spin_queue *lock)$/;"	f
osq_wait_next	locking/osq_lock.c	/^osq_wait_next(struct optimistic_spin_queue *lock,$/;"	f	file:
others_have_blocked	sched/fair.c	/^static inline bool others_have_blocked(struct rq *rq) { return false; }$/;"	f	file:
others_have_blocked	sched/fair.c	/^static inline bool others_have_blocked(struct rq *rq)$/;"	f	file:
out_of_line_wait_on_bit	sched/wait_bit.c	/^EXPORT_SYMBOL(out_of_line_wait_on_bit);$/;"	v
out_of_line_wait_on_bit	sched/wait_bit.c	/^int __sched out_of_line_wait_on_bit(void *word, int bit,$/;"	f
out_of_line_wait_on_bit_lock	sched/wait_bit.c	/^EXPORT_SYMBOL(out_of_line_wait_on_bit_lock);$/;"	v
out_of_line_wait_on_bit_lock	sched/wait_bit.c	/^int __sched out_of_line_wait_on_bit_lock(void *word, int bit,$/;"	f
out_of_line_wait_on_bit_timeout	sched/wait_bit.c	/^EXPORT_SYMBOL_GPL(out_of_line_wait_on_bit_timeout);$/;"	v
out_of_line_wait_on_bit_timeout	sched/wait_bit.c	/^int __sched out_of_line_wait_on_bit_timeout($/;"	f
outer_duration	trace/trace_hwlat.c	/^	u64			outer_duration;	\/* delta (outer loop) *\/$/;"	m	struct:hwlat_sample	file:
output_printk	trace/trace.c	/^static void output_printk(struct trace_event_buffer *fbuffer)$/;"	f	file:
overflowgid	sys.c	/^EXPORT_SYMBOL(overflowgid);$/;"	v
overflowgid	sys.c	/^int overflowgid = DEFAULT_OVERFLOWGID;$/;"	v
overflowuid	sys.c	/^EXPORT_SYMBOL(overflowuid);$/;"	v
overflowuid	sys.c	/^int overflowuid = DEFAULT_OVERFLOWUID;$/;"	v
overlap	dma/debug.c	/^static inline bool overlap(void *addr, unsigned long len, void *start, void *end)$/;"	f	file:
overloaded	sched/sched.h	/^	int			overloaded;$/;"	m	struct:dl_rq
overloaded	sched/sched.h	/^	int			overloaded;$/;"	m	struct:rt_rq
override_architecture	sys.c	1199;"	d	file:
override_architecture	sys.c	1204;"	d	file:
override_creds	cred.c	/^EXPORT_SYMBOL(override_creds);$/;"	v
override_creds	cred.c	/^const struct cred *override_creds(const struct cred *new)$/;"	f
override_name	time/clocksource.c	/^static char override_name[CS_NAME_LEN];$/;"	v	file:
override_release	sys.c	/^static int override_release(char __user *release, size_t len)$/;"	f	file:
overrun	trace/ring_buffer.c	/^	local_t				overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
overrun_detected	trace/trace_mmiotrace.c	/^static bool overrun_detected;$/;"	v	file:
overutilized	sched/sched.h	/^	int			overutilized;$/;"	m	struct:root_domain
overwrite	events/internal.h	/^	int				overwrite;	\/* can overwrite itself *\/$/;"	m	struct:ring_buffer
owner	audit.c	/^	void *owner;$/;"	m	struct:audit_ctl_mutex	file:
owner	audit_tree.c	/^		struct audit_tree *owner;$/;"	m	struct:audit_chunk::node	typeref:struct:audit_chunk::node::audit_tree	file:
owner	cgroup/cgroup-v1.c	/^	struct cgroup *owner;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::cgroup	file:
owner	futex.c	/^	struct task_struct *owner;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::task_struct	file:
owner	module.c	/^	struct module *owner;$/;"	m	struct:find_symbol_arg	typeref:struct:find_symbol_arg::module	file:
owner_on_cpu	locking/rwsem.c	/^static inline bool owner_on_cpu(struct task_struct *owner)$/;"	f	file:
owner_state	locking/rwsem.c	/^enum owner_state {$/;"	g	file:
owners	audit_tree.c	/^	} owners[];$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::node	file:
p	events/core.c	/^	struct task_struct	*p;$/;"	m	struct:remote_function_call	typeref:struct:remote_function_call::task_struct	file:
p	sched/fair.c	/^	struct task_struct *p;$/;"	m	struct:task_numa_env	typeref:struct:task_numa_env::task_struct	file:
p_list	power/snapshot.c	/^	struct linked_page *p_list;	\/* list of pages used to store zone$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::linked_page	file:
p_next	trace/trace_events.c	/^p_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
pack_pfns	power/snapshot.c	/^static inline void pack_pfns(unsigned long *buf, struct memory_bitmap *bm)$/;"	f	file:
pack_threadid	debug/gdbstub.c	/^static char *pack_threadid(char *pkt, unsigned char *id)$/;"	f	file:
pad	sys.c	/^	u16 pad;$/;"	m	struct:compat_sysinfo	file:
padata_alloc	padata.c	/^static struct padata_instance *padata_alloc(struct workqueue_struct *wq,$/;"	f	file:
padata_alloc_pd	padata.c	/^static struct parallel_data *padata_alloc_pd(struct padata_instance *pinst,$/;"	f	file:
padata_alloc_possible	padata.c	/^EXPORT_SYMBOL(padata_alloc_possible);$/;"	v
padata_alloc_possible	padata.c	/^struct padata_instance *padata_alloc_possible(struct workqueue_struct *wq)$/;"	f
padata_attr_type	padata.c	/^static struct kobj_type padata_attr_type = {$/;"	v	typeref:struct:kobj_type	file:
padata_cpu_hash	padata.c	/^static int padata_cpu_hash(struct parallel_data *pd)$/;"	f	file:
padata_cpu_online	padata.c	/^static int padata_cpu_online(unsigned int cpu, struct hlist_node *node)$/;"	f	file:
padata_cpu_prep_down	padata.c	/^static int padata_cpu_prep_down(unsigned int cpu, struct hlist_node *node)$/;"	f	file:
padata_default	padata.c	/^ATTRIBUTE_GROUPS(padata_default);$/;"	v
padata_default_attrs	padata.c	/^static struct attribute *padata_default_attrs[] = {$/;"	v	typeref:struct:attribute	file:
padata_do_parallel	padata.c	/^EXPORT_SYMBOL(padata_do_parallel);$/;"	v
padata_do_parallel	padata.c	/^int padata_do_parallel(struct padata_instance *pinst,$/;"	f
padata_do_serial	padata.c	/^EXPORT_SYMBOL(padata_do_serial);$/;"	v
padata_do_serial	padata.c	/^void padata_do_serial(struct padata_priv *padata)$/;"	f
padata_driver_exit	padata.c	/^module_exit(padata_driver_exit);$/;"	v
padata_driver_exit	padata.c	/^static __exit void padata_driver_exit(void)$/;"	f	file:
padata_driver_init	padata.c	/^module_init(padata_driver_init);$/;"	v
padata_driver_init	padata.c	/^static __init int padata_driver_init(void)$/;"	f	file:
padata_flush_queues	padata.c	/^static void padata_flush_queues(struct parallel_data *pd)$/;"	f	file:
padata_free	padata.c	/^EXPORT_SYMBOL(padata_free);$/;"	v
padata_free	padata.c	/^void padata_free(struct padata_instance *pinst)$/;"	f
padata_free_pd	padata.c	/^static void padata_free_pd(struct parallel_data *pd)$/;"	f	file:
padata_get_next	padata.c	/^static struct padata_priv *padata_get_next(struct parallel_data *pd)$/;"	f	file:
padata_index_to_cpu	padata.c	/^static int padata_index_to_cpu(struct parallel_data *pd, int cpu_index)$/;"	f	file:
padata_init_pqueues	padata.c	/^static void padata_init_pqueues(struct parallel_data *pd)$/;"	f	file:
padata_init_squeues	padata.c	/^static void padata_init_squeues(struct parallel_data *pd)$/;"	f	file:
padata_parallel_worker	padata.c	/^static void padata_parallel_worker(struct work_struct *parallel_work)$/;"	f	file:
padata_register_cpumask_notifier	padata.c	/^EXPORT_SYMBOL(padata_register_cpumask_notifier);$/;"	v
padata_register_cpumask_notifier	padata.c	/^int padata_register_cpumask_notifier(struct padata_instance *pinst,$/;"	f
padata_remove_cpu	padata.c	/^EXPORT_SYMBOL(padata_remove_cpu);$/;"	v
padata_remove_cpu	padata.c	/^int padata_remove_cpu(struct padata_instance *pinst, int cpu, int mask)$/;"	f
padata_reorder	padata.c	/^static void padata_reorder(struct parallel_data *pd)$/;"	f	file:
padata_reorder_timer	padata.c	/^static void padata_reorder_timer(struct timer_list *t)$/;"	f	file:
padata_replace	padata.c	/^static void padata_replace(struct padata_instance *pinst,$/;"	f	file:
padata_serial_worker	padata.c	/^static void padata_serial_worker(struct work_struct *serial_work)$/;"	f	file:
padata_set_cpumask	padata.c	/^EXPORT_SYMBOL(padata_set_cpumask);$/;"	v
padata_set_cpumask	padata.c	/^int padata_set_cpumask(struct padata_instance *pinst, int cpumask_type,$/;"	f
padata_setup_cpumasks	padata.c	/^static int padata_setup_cpumasks(struct parallel_data *pd,$/;"	f	file:
padata_start	padata.c	/^EXPORT_SYMBOL(padata_start);$/;"	v
padata_start	padata.c	/^int padata_start(struct padata_instance *pinst)$/;"	f
padata_stop	padata.c	/^EXPORT_SYMBOL(padata_stop);$/;"	v
padata_stop	padata.c	/^void padata_stop(struct padata_instance *pinst)$/;"	f
padata_sysfs_entry	padata.c	/^struct padata_sysfs_entry {$/;"	s	file:
padata_sysfs_ops	padata.c	/^static const struct sysfs_ops padata_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
padata_sysfs_release	padata.c	/^static void padata_sysfs_release(struct kobject *kobj)$/;"	f	file:
padata_sysfs_show	padata.c	/^static ssize_t padata_sysfs_show(struct kobject *kobj,$/;"	f	file:
padata_sysfs_store	padata.c	/^static ssize_t padata_sysfs_store(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
padata_unregister_cpumask_notifier	padata.c	/^EXPORT_SYMBOL(padata_unregister_cpumask_notifier);$/;"	v
padata_unregister_cpumask_notifier	padata.c	/^int padata_unregister_cpumask_notifier(struct padata_instance *pinst,$/;"	f
padata_validate_cpumask	padata.c	/^static bool padata_validate_cpumask(struct padata_instance *pinst,$/;"	f	file:
padding	bpf/hashtab.c	/^			void *padding;$/;"	m	struct:htab_elem::__anon70::__anon71	file:
paddr_vmcoreinfo_note	crash_core.c	/^EXPORT_SYMBOL(paddr_vmcoreinfo_note);$/;"	v
paddr_vmcoreinfo_note	crash_core.c	/^phys_addr_t __weak paddr_vmcoreinfo_note(void)$/;"	f
page	trace/ring_buffer.c	/^	struct buffer_data_page *page;	\/* Actual data page *\/$/;"	m	struct:buffer_page	typeref:struct:buffer_page::buffer_data_page	file:
page	trace/trace.c	/^	void			*page;$/;"	m	struct:buffer_ref	file:
page_is_ram	resource.c	/^EXPORT_SYMBOL_GPL(page_is_ram);$/;"	v
page_is_ram	resource.c	/^int __weak page_is_ram(unsigned long pfn)$/;"	f
page_is_saveable	power/snapshot.c	/^static inline struct page *page_is_saveable(struct zone *zone, unsigned long pfn)$/;"	f	file:
page_is_saveable	power/snapshot.c	1394;"	d	file:
page_order	events/internal.h	/^	int				page_order;	\/* allocation order  *\/$/;"	m	struct:ring_buffer
page_order	events/internal.h	/^static inline int page_order(struct ring_buffer *rb)$/;"	f
pages	events/uprobes.c	/^	struct page 			*pages[2];$/;"	m	struct:xol_area	typeref:struct:xol_area::page	file:
pages	power/power.h	/^	unsigned long		pages;$/;"	m	struct:swsusp_info
pages	trace/ftrace.c	/^	struct ftrace_profile_page	*pages;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::ftrace_profile_page	file:
pages	trace/ring_buffer.c	/^	struct list_head		*pages;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::list_head	file:
pages	trace/tracing_map.h	/^	void **pages;$/;"	m	struct:tracing_map_array
pages_read	trace/ring_buffer.c	/^	local_t				pages_read;$/;"	m	struct:ring_buffer_per_cpu	file:
pages_touched	trace/ring_buffer.c	/^	local_t				pages_touched;$/;"	m	struct:ring_buffer_per_cpu	file:
panic	panic.c	/^EXPORT_SYMBOL(panic);$/;"	v
panic	panic.c	/^void panic(const char *fmt, ...)$/;"	f
panic_blink	panic.c	/^EXPORT_SYMBOL(panic_blink);$/;"	v
panic_blink	panic.c	/^long (*panic_blink)(int state);$/;"	v
panic_block	hung_task.c	/^static struct notifier_block panic_block = {$/;"	v	typeref:struct:notifier_block	file:
panic_cpu	panic.c	/^atomic_t panic_cpu = ATOMIC_INIT(PANIC_CPU_INVALID);$/;"	v
panic_notifier_list	panic.c	/^ATOMIC_NOTIFIER_HEAD(panic_notifier_list);$/;"	v
panic_notifier_list	panic.c	/^EXPORT_SYMBOL(panic_notifier_list);$/;"	v
panic_on_oops	panic.c	/^int panic_on_oops = CONFIG_PANIC_ON_OOPS_VALUE;$/;"	v
panic_on_rcu_stall	rcu/tree_stall.h	/^static void panic_on_rcu_stall(void)$/;"	f
panic_print	panic.c	/^unsigned long panic_print;$/;"	v
panic_print_sys_info	panic.c	/^static void panic_print_sys_info(void)$/;"	f	file:
panic_reboot_mode	reboot.c	/^enum reboot_mode panic_reboot_mode = REBOOT_UNDEFINED;$/;"	v	typeref:enum:reboot_mode
panic_smp_self_stop	panic.c	/^void __weak panic_smp_self_stop(void)$/;"	f
panic_timeout	panic.c	/^EXPORT_SYMBOL_GPL(panic_timeout);$/;"	v
panic_timeout	panic.c	/^int panic_timeout = CONFIG_PANIC_TIMEOUT;$/;"	v
param	params.c	/^	const struct kernel_param *param;$/;"	m	struct:param_attribute	typeref:struct:param_attribute::kernel_param	file:
param	trace/trace_probe.h	/^		unsigned int param;$/;"	m	union:fetch_insn::__anon21
param_array	params.c	/^static int param_array(struct module *mod,$/;"	f	file:
param_array_free	params.c	/^static void param_array_free(void *arg)$/;"	f	file:
param_array_get	params.c	/^static int param_array_get(char *buffer, const struct kernel_param *kp)$/;"	f	file:
param_array_ops	params.c	/^EXPORT_SYMBOL(param_array_ops);$/;"	v
param_array_ops	params.c	/^const struct kernel_param_ops param_array_ops = {$/;"	v	typeref:struct:kernel_param_ops
param_array_set	params.c	/^static int param_array_set(const char *val, const struct kernel_param *kp)$/;"	f	file:
param_attr_show	params.c	/^static ssize_t param_attr_show(struct module_attribute *mattr,$/;"	f	file:
param_attr_store	params.c	/^static ssize_t param_attr_store(struct module_attribute *mattr,$/;"	f	file:
param_attribute	params.c	/^struct param_attribute$/;"	s	file:
param_check_unsafe	params.c	/^static void param_check_unsafe(const struct kernel_param *kp)$/;"	f	file:
param_free_charp	params.c	/^EXPORT_SYMBOL(param_free_charp);$/;"	v
param_free_charp	params.c	/^void param_free_charp(void *arg)$/;"	f
param_get_bool	params.c	/^EXPORT_SYMBOL(param_get_bool);$/;"	v
param_get_bool	params.c	/^int param_get_bool(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_charp	params.c	/^EXPORT_SYMBOL(param_get_charp);$/;"	v
param_get_charp	params.c	/^int param_get_charp(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_invbool	params.c	/^EXPORT_SYMBOL(param_get_invbool);$/;"	v
param_get_invbool	params.c	/^int param_get_invbool(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_string	params.c	/^EXPORT_SYMBOL(param_get_string);$/;"	v
param_get_string	params.c	/^int param_get_string(char *buffer, const struct kernel_param *kp)$/;"	f
param_ops_bint	params.c	/^EXPORT_SYMBOL(param_ops_bint);$/;"	v
param_ops_bint	params.c	/^const struct kernel_param_ops param_ops_bint = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_bool	params.c	/^EXPORT_SYMBOL(param_ops_bool);$/;"	v
param_ops_bool	params.c	/^const struct kernel_param_ops param_ops_bool = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_bool_enable_only	params.c	/^EXPORT_SYMBOL_GPL(param_ops_bool_enable_only);$/;"	v
param_ops_bool_enable_only	params.c	/^const struct kernel_param_ops param_ops_bool_enable_only = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_charp	params.c	/^EXPORT_SYMBOL(param_ops_charp);$/;"	v
param_ops_charp	params.c	/^const struct kernel_param_ops param_ops_charp = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_invbool	params.c	/^EXPORT_SYMBOL(param_ops_invbool);$/;"	v
param_ops_invbool	params.c	/^const struct kernel_param_ops param_ops_invbool = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_string	params.c	/^EXPORT_SYMBOL(param_ops_string);$/;"	v
param_ops_string	params.c	/^const struct kernel_param_ops param_ops_string = {$/;"	v	typeref:struct:kernel_param_ops
param_set_bint	params.c	/^EXPORT_SYMBOL(param_set_bint);$/;"	v
param_set_bint	params.c	/^int param_set_bint(const char *val, const struct kernel_param *kp)$/;"	f
param_set_bool	params.c	/^EXPORT_SYMBOL(param_set_bool);$/;"	v
param_set_bool	params.c	/^int param_set_bool(const char *val, const struct kernel_param *kp)$/;"	f
param_set_bool_enable_only	params.c	/^EXPORT_SYMBOL_GPL(param_set_bool_enable_only);$/;"	v
param_set_bool_enable_only	params.c	/^int param_set_bool_enable_only(const char *val, const struct kernel_param *kp)$/;"	f
param_set_charp	params.c	/^EXPORT_SYMBOL(param_set_charp);$/;"	v
param_set_charp	params.c	/^int param_set_charp(const char *val, const struct kernel_param *kp)$/;"	f
param_set_copystring	params.c	/^EXPORT_SYMBOL(param_set_copystring);$/;"	v
param_set_copystring	params.c	/^int param_set_copystring(const char *val, const struct kernel_param *kp)$/;"	f
param_set_first_fqs_jiffies	rcu/tree.c	/^static int param_set_first_fqs_jiffies(const char *val, const struct kernel_param *kp)$/;"	f	file:
param_set_invbool	params.c	/^EXPORT_SYMBOL(param_set_invbool);$/;"	v
param_set_invbool	params.c	/^int param_set_invbool(const char *val, const struct kernel_param *kp)$/;"	f
param_set_next_fqs_jiffies	rcu/tree.c	/^static int param_set_next_fqs_jiffies(const char *val, const struct kernel_param *kp)$/;"	f	file:
param_sysfs_builtin	params.c	/^static void __init param_sysfs_builtin(void)$/;"	f	file:
param_sysfs_init	params.c	/^static int __init param_sysfs_init(void)$/;"	f	file:
param_sysfs_init	params.c	/^subsys_initcall(param_sysfs_init);$/;"	v
parameq	params.c	/^bool parameq(const char *a, const char *b)$/;"	f
parameqn	params.c	/^bool parameqn(const char *a, const char *b, size_t n)$/;"	f
params	trace/trace_events_hist.c	/^	char			*params[SYNTH_FIELDS_MAX];$/;"	m	struct:action_data	file:
parent	audit_watch.c	/^	struct audit_parent	*parent; \/* associated parent *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::audit_parent	file:
parent	gcov/fs.c	/^	struct gcov_node *parent;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_node	file:
parent	rcu/tree.h	/^	struct rcu_node *parent;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::rcu_node
parent	resource.c	/^	struct resource *parent;$/;"	m	struct:region_devres	typeref:struct:region_devres::resource	file:
parent	sched/cpudeadline.c	/^static inline int parent(int i)$/;"	f	file:
parent	sched/sched.h	/^	struct task_group	*parent;$/;"	m	struct:task_group	typeref:struct:task_group::task_group
parent_ca	sched/cpuacct.c	/^static inline struct cpuacct *parent_ca(struct cpuacct *ca)$/;"	f	file:
parent_cs	cgroup/cpuset.c	/^static inline struct cpuset *parent_cs(struct cpuset *cs)$/;"	f	file:
parent_entity	sched/fair.c	/^static inline struct sched_entity *parent_entity(struct sched_entity *se)$/;"	f	file:
parent_freezer	cgroup/legacy_freezer.c	/^static struct freezer *parent_freezer(struct freezer *freezer)$/;"	f	file:
parent_len	auditfilter.c	/^int parent_len(const char *path)$/;"	f
parent_pids	cgroup/pids.c	/^static struct pids_cgroup *parent_pids(struct pids_cgroup *pids)$/;"	f	file:
parent_rdmacg	cgroup/rdma.c	/^static struct rdma_cgroup *parent_rdmacg(struct rdma_cgroup *cg)$/;"	f	file:
parked	kthread.c	/^	struct completion parked;$/;"	m	struct:kthread	typeref:struct:kthread::completion	file:
parse	taskstats.c	/^static int parse(struct nlattr *na, struct cpumask *mask)$/;"	f	file:
parse_action	trace/trace_events_hist.c	/^static int parse_action(char *str, struct hist_trigger_attrs *attrs)$/;"	f	file:
parse_action_params	trace/trace_events_hist.c	/^static int parse_action_params(struct trace_array *tr, char *params,$/;"	f	file:
parse_actions	trace/trace_events_hist.c	/^static int parse_actions(struct hist_trigger_data *hist_data)$/;"	f	file:
parse_args	params.c	/^char *parse_args(const char *doing,$/;"	f
parse_assignment	trace/trace_events_hist.c	/^static int parse_assignment(struct trace_array *tr,$/;"	f	file:
parse_atom	trace/trace_events_hist.c	/^static struct hist_field *parse_atom(struct hist_trigger_data *hist_data,$/;"	f	file:
parse_crashkernel	crash_core.c	/^int __init parse_crashkernel(char *cmdline,$/;"	f
parse_crashkernel_high	crash_core.c	/^int __init parse_crashkernel_high(char *cmdline,$/;"	f
parse_crashkernel_low	crash_core.c	/^int __init parse_crashkernel_low(char *cmdline,$/;"	f
parse_crashkernel_mem	crash_core.c	/^static int __init parse_crashkernel_mem(char *cmdline,$/;"	f	file:
parse_crashkernel_simple	crash_core.c	/^static int __init parse_crashkernel_simple(char *cmdline,$/;"	f	file:
parse_crashkernel_suffix	crash_core.c	/^static int __init parse_crashkernel_suffix(char *cmdline,$/;"	f	file:
parse_error	trace/trace_events_filter.c	/^static void parse_error(struct filter_parse_error *pe, int err, int pos)$/;"	f	file:
parse_expr	trace/trace_events_hist.c	/^static struct hist_field *parse_expr(struct hist_trigger_data *hist_data,$/;"	f	file:
parse_field	trace/trace_events_hist.c	/^parse_field(struct hist_trigger_data *hist_data, struct trace_event_file *file,$/;"	f	file:
parse_grep	debug/kdb/kdb_main.c	/^static void parse_grep(const char *str)$/;"	f	file:
parse_hist_trigger_attrs	trace/trace_events_hist.c	/^parse_hist_trigger_attrs(struct trace_array *tr, char *trigger_str)$/;"	f	file:
parse_map_size	trace/trace_events_hist.c	/^static int parse_map_size(char *str)$/;"	f	file:
parse_one	params.c	/^static int parse_one(char *param,$/;"	f	file:
parse_pred	trace/trace_events_filter.c	/^static int parse_pred(const char *str, void *data,$/;"	f	file:
parse_pred_fn	trace/trace_events_filter.c	/^typedef int (*parse_pred_fn)(const char *str, void *data, int pos,$/;"	t	file:
parse_probe_arg	trace/trace_probe.c	/^parse_probe_arg(char *arg, const struct fetch_type *type,$/;"	f	file:
parse_probe_vars	trace/trace_probe.c	/^static int parse_probe_vars(char *arg, const struct fetch_type *t,$/;"	f	file:
parse_rcu_nocb_poll	rcu/tree_plugin.h	/^static int __init parse_rcu_nocb_poll(char *arg)$/;"	f
parse_resource	cgroup/rdma.c	/^static int parse_resource(char *c, int *intval)$/;"	f	file:
parse_synth_field	trace/trace_events_hist.c	/^static struct synth_field *parse_synth_field(int argc, const char **argv,$/;"	f	file:
parse_unary	trace/trace_events_hist.c	/^static struct hist_field *parse_unary(struct hist_trigger_data *hist_data,$/;"	f	file:
parse_var_defs	trace/trace_events_hist.c	/^static int parse_var_defs(struct hist_trigger_data *hist_data)$/;"	f	file:
parse_var_ref	trace/trace_events_hist.c	/^static struct hist_field *parse_var_ref(struct hist_trigger_data *hist_data,$/;"	f	file:
parser	trace/ftrace.c	/^	struct trace_parser		parser;$/;"	m	struct:ftrace_graph_data	typeref:struct:ftrace_graph_data::trace_parser	file:
parser	trace/ftrace.c	/^	struct trace_parser		parser;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::trace_parser	file:
partcmd_disable	cgroup/cpuset.c	/^	partcmd_disable,	\/* Disable partition root	 *\/$/;"	e	enum:subparts_cmd	file:
partcmd_enable	cgroup/cpuset.c	/^	partcmd_enable,		\/* Enable partition root	 *\/$/;"	e	enum:subparts_cmd	file:
partcmd_update	cgroup/cpuset.c	/^	partcmd_update,		\/* Update parent's subparts_cpus *\/$/;"	e	enum:subparts_cmd	file:
partition_root_state	cgroup/cpuset.c	/^	int partition_root_state;$/;"	m	struct:cpuset	file:
partition_sched_domains	sched/topology.c	/^void partition_sched_domains(int ndoms_new, cpumask_var_t doms_new[],$/;"	f
pass_exception	debug/debug_core.h	/^	int			pass_exception;$/;"	m	struct:kgdb_state
path	audit_fsnotify.c	/^	char *path;		\/* insertion path *\/$/;"	m	struct:audit_fsnotify_mark	file:
path	audit_watch.c	/^	char			*path;	\/* insertion path *\/$/;"	m	struct:audit_watch	file:
path	trace/trace_uprobe.c	/^	struct path			path;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::path	file:
pathname	audit_tree.c	/^	char pathname[];$/;"	m	struct:audit_tree	file:
pattern	trace/trace.h	/^	char			pattern[MAX_FILTER_STR_VAL];$/;"	m	struct:regex
pause	trace/trace_events_hist.c	/^	bool		pause;$/;"	m	struct:hist_trigger_attrs	file:
pause_named_trigger	trace/trace_events_trigger.c	/^void pause_named_trigger(struct event_trigger_data *data)$/;"	f
pause_on_oops	panic.c	/^static int pause_on_oops;$/;"	v	file:
pause_on_oops_flag	panic.c	/^static int pause_on_oops_flag;$/;"	v	file:
paused	events/internal.h	/^	int				paused;		\/* can write into ring buffer *\/$/;"	m	struct:ring_buffer
paused	trace/trace.h	/^	bool				paused;$/;"	m	struct:event_trigger_data
paused_tmp	trace/trace.h	/^	bool				paused_tmp;$/;"	m	struct:event_trigger_data
pc	profile.c	/^	u32 pc, hits;$/;"	m	struct:profile_hit	file:
pc_clock_adjtime	time/posix-clock.c	/^static int pc_clock_adjtime(clockid_t id, struct __kernel_timex *tx)$/;"	f	file:
pc_clock_getres	time/posix-clock.c	/^static int pc_clock_getres(clockid_t id, struct timespec64 *ts)$/;"	f	file:
pc_clock_gettime	time/posix-clock.c	/^static int pc_clock_gettime(clockid_t id, struct timespec64 *ts)$/;"	f	file:
pc_clock_settime	time/posix-clock.c	/^static int pc_clock_settime(clockid_t id, const struct timespec64 *ts)$/;"	f	file:
pciconfig_iobase	sys_ni.c	/^COND_SYSCALL(pciconfig_iobase);$/;"	v
pciconfig_read	sys_ni.c	/^COND_SYSCALL(pciconfig_read);$/;"	v
pciconfig_write	sys_ni.c	/^COND_SYSCALL(pciconfig_write);$/;"	v
pcpu	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
pcpu_copy_value	bpf/hashtab.c	/^static void pcpu_copy_value(struct bpf_htab *htab, void __percpu *pptr,$/;"	f	file:
pcpu_freelist	bpf/percpu_freelist.h	/^struct pcpu_freelist {$/;"	s
pcpu_freelist_destroy	bpf/percpu_freelist.c	/^void pcpu_freelist_destroy(struct pcpu_freelist *s)$/;"	f
pcpu_freelist_head	bpf/percpu_freelist.h	/^struct pcpu_freelist_head {$/;"	s
pcpu_freelist_init	bpf/percpu_freelist.c	/^int pcpu_freelist_init(struct pcpu_freelist *s)$/;"	f
pcpu_freelist_node	bpf/percpu_freelist.h	/^struct pcpu_freelist_node {$/;"	s
pcpu_freelist_pop	bpf/percpu_freelist.c	/^struct pcpu_freelist_node *pcpu_freelist_pop(struct pcpu_freelist *s)$/;"	f
pcpu_freelist_populate	bpf/percpu_freelist.c	/^void pcpu_freelist_populate(struct pcpu_freelist *s, void *buf, u32 elem_size,$/;"	f
pcpu_freelist_push	bpf/percpu_freelist.c	/^void pcpu_freelist_push(struct pcpu_freelist *s,$/;"	f
pcpu_rwsem	locking/locktorture.c	/^static struct percpu_rw_semaphore pcpu_rwsem;$/;"	v	typeref:struct:percpu_rw_semaphore	file:
pd	sched/sched.h	/^	struct perf_domain __rcu *pd;$/;"	m	struct:root_domain	typeref:struct:root_domain::__rcu
pd_init	sched/topology.c	/^static struct perf_domain *pd_init(int cpu)$/;"	f	file:
pdu_real_len	trace/blktrace.c	/^static inline int pdu_real_len(const struct trace_entry *ent, bool has_cg)$/;"	f	file:
pdu_start	trace/blktrace.c	/^static inline const void *pdu_start(const struct trace_entry *ent, bool has_cg)$/;"	f	file:
pe_prog_convert_ctx_access	trace/bpf_trace.c	/^static u32 pe_prog_convert_ctx_access(enum bpf_access_type type,$/;"	f	file:
pe_prog_func_proto	trace/bpf_trace.c	/^pe_prog_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
pe_prog_is_valid_access	trace/bpf_trace.c	/^static bool pe_prog_is_valid_access(int off, int size, enum bpf_access_type type,$/;"	f	file:
peek_next_entry	trace/trace.c	/^peek_next_entry(struct trace_iterator *iter, int cpu, u64 *ts,$/;"	f	file:
pelt_cfs_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_cfs_tp);$/;"	v
pelt_dl_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_dl_tp);$/;"	v
pelt_irq_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_irq_tp);$/;"	v
pelt_rt_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_rt_tp);$/;"	v
pelt_se_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_se_tp);$/;"	v
pending_free	locking/lockdep.c	/^struct pending_free {$/;"	s	file:
pending_list	events/uprobes.c	/^	struct list_head	pending_list;$/;"	m	struct:uprobe	typeref:struct:uprobe::list_head	file:
per_cpu_count	irq/irqdesc.c	/^IRQ_ATTR_RO(per_cpu_count);$/;"	v
per_cpu_count_show	irq/irqdesc.c	/^static ssize_t per_cpu_count_show(struct kobject *kobj,$/;"	f	file:
per_cpu_show	workqueue.c	/^static ssize_t per_cpu_show(struct device *dev, struct device_attribute *attr,$/;"	f	file:
per_cpu_sum	locking/percpu-rwsem.c	112;"	d	file:
percpu	bpf/bpf_lru_list.h	/^	bool percpu;$/;"	m	struct:bpf_lru
percpu_array_map_lookup_elem	bpf/arraymap.c	/^static void *percpu_array_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
percpu_array_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops percpu_array_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
percpu_array_map_seq_show_elem	bpf/arraymap.c	/^static void percpu_array_map_seq_show_elem(struct bpf_map *map, void *key,$/;"	f	file:
percpu_dir	trace/trace.h	/^	struct dentry		*percpu_dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
percpu_down_write	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(percpu_down_write);$/;"	v
percpu_down_write	locking/percpu-rwsem.c	/^void percpu_down_write(struct percpu_rw_semaphore *sem)$/;"	f
percpu_free_rwsem	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(percpu_free_rwsem);$/;"	v
percpu_free_rwsem	locking/percpu-rwsem.c	/^void percpu_free_rwsem(struct percpu_rw_semaphore *sem)$/;"	f
percpu_lru	bpf/bpf_lru_list.h	/^		struct bpf_lru_list __percpu *percpu_lru;$/;"	m	union:bpf_lru::__anon74	typeref:struct:bpf_lru::__anon74::__percpu
percpu_modalloc	module.c	/^static int percpu_modalloc(struct module *mod, struct load_info *info)$/;"	f	file:
percpu_modcopy	module.c	/^static inline void percpu_modcopy(struct module *mod,$/;"	f	file:
percpu_modcopy	module.c	/^static void percpu_modcopy(struct module *mod,$/;"	f	file:
percpu_modfree	module.c	/^static inline void percpu_modfree(struct module *mod)$/;"	f	file:
percpu_modfree	module.c	/^static void percpu_modfree(struct module *mod)$/;"	f	file:
percpu_rwsem_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops percpu_rwsem_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
percpu_up_write	locking/percpu-rwsem.c	/^EXPORT_SYMBOL_GPL(percpu_up_write);$/;"	v
percpu_up_write	locking/percpu-rwsem.c	/^void percpu_up_write(struct percpu_rw_semaphore *sem)$/;"	f
perf_addr_filter_apply	events/core.c	/^static void perf_addr_filter_apply(struct perf_addr_filter *filter,$/;"	f	file:
perf_addr_filter_match	events/core.c	/^static bool perf_addr_filter_match(struct perf_addr_filter *filter,$/;"	f	file:
perf_addr_filter_new	events/core.c	/^perf_addr_filter_new(struct perf_event *event, struct list_head *filters)$/;"	f	file:
perf_addr_filter_vma_adjust	events/core.c	/^static bool perf_addr_filter_vma_adjust(struct perf_addr_filter *filter,$/;"	f	file:
perf_addr_filters_adjust	events/core.c	/^static void perf_addr_filters_adjust(struct vm_area_struct *vma)$/;"	f	file:
perf_addr_filters_splice	events/core.c	/^static void perf_addr_filters_splice(struct perf_event *event,$/;"	f	file:
perf_adjust_freq_unthr_context	events/core.c	/^static void perf_adjust_freq_unthr_context(struct perf_event_context *ctx,$/;"	f	file:
perf_adjust_period	events/core.c	/^static void perf_adjust_period(struct perf_event *event, u64 nsec, u64 count, bool disable)$/;"	f	file:
perf_aux_output_begin	events/ring_buffer.c	/^EXPORT_SYMBOL_GPL(perf_aux_output_begin);$/;"	v
perf_aux_output_begin	events/ring_buffer.c	/^void *perf_aux_output_begin(struct perf_output_handle *handle,$/;"	f
perf_aux_output_end	events/ring_buffer.c	/^EXPORT_SYMBOL_GPL(perf_aux_output_end);$/;"	v
perf_aux_output_end	events/ring_buffer.c	/^void perf_aux_output_end(struct perf_output_handle *handle, unsigned long size)$/;"	f
perf_aux_output_flag	events/ring_buffer.c	/^EXPORT_SYMBOL_GPL(perf_aux_output_flag);$/;"	v
perf_aux_output_flag	events/ring_buffer.c	/^void perf_aux_output_flag(struct perf_output_handle *handle, u64 flags)$/;"	f
perf_aux_output_skip	events/ring_buffer.c	/^EXPORT_SYMBOL_GPL(perf_aux_output_skip);$/;"	v
perf_aux_output_skip	events/ring_buffer.c	/^int perf_aux_output_skip(struct perf_output_handle *handle, unsigned long size)$/;"	f
perf_aux_size	events/internal.h	/^static inline unsigned long perf_aux_size(struct ring_buffer *rb)$/;"	f
perf_bp_event	events/core.c	/^void perf_bp_event(struct perf_event *bp, void *data)$/;"	f
perf_bpf_event	events/core.c	/^struct perf_bpf_event {$/;"	s	file:
perf_breakpoint	events/hw_breakpoint.c	/^static struct pmu perf_breakpoint = {$/;"	v	typeref:struct:pmu	file:
perf_calculate_period	events/core.c	/^static u64 perf_calculate_period(struct perf_event *event, u64 nsec, u64 count)$/;"	f	file:
perf_call_bpf_enter	trace/trace_syscalls.c	/^static int perf_call_bpf_enter(struct trace_event_call *call, struct pt_regs *regs,$/;"	f	file:
perf_call_bpf_exit	trace/trace_syscalls.c	/^static int perf_call_bpf_exit(struct trace_event_call *call, struct pt_regs *regs,$/;"	f	file:
perf_callchain	events/core.c	/^perf_callchain(struct perf_event *event, struct pt_regs *regs)$/;"	f
perf_callchain_entry__sizeof	events/callchain.c	/^static inline size_t perf_callchain_entry__sizeof(void)$/;"	f	file:
perf_callchain_kernel	events/callchain.c	/^__weak void perf_callchain_kernel(struct perf_callchain_entry_ctx *entry,$/;"	f
perf_callchain_user	events/callchain.c	/^__weak void perf_callchain_user(struct perf_callchain_entry_ctx *entry,$/;"	f
perf_cgroup_attach	events/core.c	/^static void perf_cgroup_attach(struct cgroup_taskset *tset)$/;"	f	file:
perf_cgroup_connect	events/core.c	/^static inline int perf_cgroup_connect(int fd, struct perf_event *event,$/;"	f	file:
perf_cgroup_connect	events/core.c	/^static inline int perf_cgroup_connect(pid_t pid, struct perf_event *event,$/;"	f	file:
perf_cgroup_css_alloc	events/core.c	/^perf_cgroup_css_alloc(struct cgroup_subsys_state *parent_css)$/;"	f	file:
perf_cgroup_css_free	events/core.c	/^static void perf_cgroup_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
perf_cgroup_event_time	events/core.c	/^static inline u64 perf_cgroup_event_time(struct perf_event *event)$/;"	f	file:
perf_cgroup_match	events/core.c	/^perf_cgroup_match(struct perf_event *event)$/;"	f	file:
perf_cgroup_sched_in	events/core.c	/^static inline void perf_cgroup_sched_in(struct task_struct *prev,$/;"	f	file:
perf_cgroup_sched_out	events/core.c	/^static inline void perf_cgroup_sched_out(struct task_struct *task,$/;"	f	file:
perf_cgroup_set_shadow_time	events/core.c	/^perf_cgroup_set_shadow_time(struct perf_event *event, u64 now)$/;"	f	file:
perf_cgroup_set_timestamp	events/core.c	/^perf_cgroup_set_timestamp(struct task_struct *task,$/;"	f	file:
perf_cgroup_switch	events/core.c	/^perf_cgroup_switch(struct task_struct *task, struct task_struct *next)$/;"	f
perf_cgroup_switch	events/core.c	/^static void perf_cgroup_switch(struct task_struct *task, int mode)$/;"	f	file:
perf_clock	events/core.c	/^static inline u64 perf_clock(void)$/;"	f	file:
perf_comm_event	events/core.c	/^struct perf_comm_event {$/;"	s	file:
perf_compat_ioctl	events/core.c	/^static long perf_compat_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
perf_compat_ioctl	events/core.c	5190;"	d	file:
perf_copy_attr	events/core.c	/^static int perf_copy_attr(struct perf_event_attr __user *uattr,$/;"	f	file:
perf_cpu_clock	events/core.c	/^static struct pmu perf_cpu_clock = {$/;"	v	typeref:struct:pmu	file:
perf_cpu_time_max_percent_handler	events/core.c	/^int perf_cpu_time_max_percent_handler(struct ctl_table *table, int write,$/;"	f
perf_ctx_lock	events/core.c	/^static void perf_ctx_lock(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_ctx_unlock	events/core.c	/^static void perf_ctx_unlock(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_data_size	events/internal.h	/^static inline unsigned long perf_data_size(struct ring_buffer *rb)$/;"	f
perf_detach_cgroup	events/core.c	/^static inline void perf_detach_cgroup(struct perf_event *event)$/;"	f	file:
perf_domain	sched/sched.h	/^struct perf_domain {$/;"	s
perf_domain_debug	sched/topology.c	/^static void perf_domain_debug(const struct cpumask *cpu_map,$/;"	f	file:
perf_domain_span	sched/sched.h	2411;"	d
perf_domain_span	sched/sched.h	2422;"	d
perf_duration_warn	events/core.c	/^static void perf_duration_warn(struct irq_work *w)$/;"	f	file:
perf_event__header_size	events/core.c	/^static void perf_event__header_size(struct perf_event *event)$/;"	f	file:
perf_event__id_header_size	events/core.c	/^static void perf_event__id_header_size(struct perf_event *event)$/;"	f	file:
perf_event__output_id_sample	events/core.c	/^void perf_event__output_id_sample(struct perf_event *event,$/;"	f
perf_event__state_init	events/core.c	/^static inline void perf_event__state_init(struct perf_event *event)$/;"	f	file:
perf_event_account_interrupt	events/core.c	/^int perf_event_account_interrupt(struct perf_event *event)$/;"	f
perf_event_addr_filters_apply	events/core.c	/^static void perf_event_addr_filters_apply(struct perf_event *event)$/;"	f	file:
perf_event_addr_filters_exec	events/core.c	/^static void perf_event_addr_filters_exec(struct perf_event *event, void *data)$/;"	f	file:
perf_event_addr_filters_sync	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_addr_filters_sync);$/;"	v
perf_event_addr_filters_sync	events/core.c	/^void perf_event_addr_filters_sync(struct perf_event *event)$/;"	f
perf_event_alloc	events/core.c	/^perf_event_alloc(struct perf_event_attr *attr, int cpu,$/;"	f	file:
perf_event_array_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops perf_event_array_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
perf_event_attach_bpf_prog	trace/bpf_trace.c	/^int perf_event_attach_bpf_prog(struct perf_event *event,$/;"	f
perf_event_attrs	events/core.c	/^const struct perf_event_attr *perf_event_attrs(struct perf_event *event)$/;"	f
perf_event_aux_event	events/core.c	/^void perf_event_aux_event(struct perf_event *event, unsigned long head,$/;"	f
perf_event_bpf_emit_ksymbols	events/core.c	/^static void perf_event_bpf_emit_ksymbols(struct bpf_prog *prog,$/;"	f	file:
perf_event_bpf_event	events/core.c	/^void perf_event_bpf_event(struct bpf_prog *prog,$/;"	f
perf_event_bpf_match	events/core.c	/^static int perf_event_bpf_match(struct perf_event *event)$/;"	f	file:
perf_event_bpf_output	events/core.c	/^static void perf_event_bpf_output(struct perf_event *event, void *data)$/;"	f	file:
perf_event_cgrp_subsys	events/core.c	/^struct cgroup_subsys perf_event_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
perf_event_check_period	events/core.c	/^static int perf_event_check_period(struct perf_event *event, u64 value)$/;"	f	file:
perf_event_clock	events/core.c	/^static inline u64 perf_event_clock(struct perf_event *event)$/;"	f	file:
perf_event_comm	events/core.c	/^void perf_event_comm(struct task_struct *task, bool exec)$/;"	f
perf_event_comm_event	events/core.c	/^static void perf_event_comm_event(struct perf_comm_event *comm_event)$/;"	f	file:
perf_event_comm_match	events/core.c	/^static int perf_event_comm_match(struct perf_event *event)$/;"	f	file:
perf_event_comm_output	events/core.c	/^static void perf_event_comm_output(struct perf_event *event,$/;"	f	file:
perf_event_context_sched_in	events/core.c	/^static void perf_event_context_sched_in(struct perf_event_context *ctx,$/;"	f	file:
perf_event_context_sched_out	events/core.c	/^static void perf_event_context_sched_out(struct task_struct *task, int ctxn,$/;"	f	file:
perf_event_count	events/core.c	/^static inline u64 perf_event_count(struct perf_event *event)$/;"	f	file:
perf_event_create_kernel_counter	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_create_kernel_counter);$/;"	v
perf_event_create_kernel_counter	events/core.c	/^perf_event_create_kernel_counter(struct perf_event_attr *attr, int cpu,$/;"	f
perf_event_ctx_activate	events/core.c	/^static void perf_event_ctx_activate(struct perf_event_context *ctx)$/;"	f	file:
perf_event_ctx_deactivate	events/core.c	/^static void perf_event_ctx_deactivate(struct perf_event_context *ctx)$/;"	f	file:
perf_event_ctx_lock	events/core.c	/^perf_event_ctx_lock(struct perf_event *event)$/;"	f	file:
perf_event_ctx_lock_nested	events/core.c	/^perf_event_ctx_lock_nested(struct perf_event *event, int nesting)$/;"	f	file:
perf_event_ctx_unlock	events/core.c	/^static void perf_event_ctx_unlock(struct perf_event *event,$/;"	f	file:
perf_event_delayed_put	events/core.c	/^void perf_event_delayed_put(struct task_struct *task)$/;"	f
perf_event_detach_bpf_prog	trace/bpf_trace.c	/^void perf_event_detach_bpf_prog(struct perf_event *event)$/;"	f
perf_event_disable	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_disable);$/;"	v
perf_event_disable	events/core.c	/^void perf_event_disable(struct perf_event *event)$/;"	f
perf_event_disable_inatomic	events/core.c	/^void perf_event_disable_inatomic(struct perf_event *event)$/;"	f
perf_event_disable_local	events/core.c	/^void perf_event_disable_local(struct perf_event *event)$/;"	f
perf_event_enable	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_enable);$/;"	v
perf_event_enable	events/core.c	/^void perf_event_enable(struct perf_event *event)$/;"	f
perf_event_enable_on_exec	events/core.c	/^static void perf_event_enable_on_exec(int ctxn)$/;"	f	file:
perf_event_exec	events/core.c	/^void perf_event_exec(void)$/;"	f
perf_event_exit_cpu	events/core.c	/^int perf_event_exit_cpu(unsigned int cpu)$/;"	f
perf_event_exit_cpu_context	events/core.c	/^static void perf_event_exit_cpu_context(int cpu) { }$/;"	f	file:
perf_event_exit_cpu_context	events/core.c	/^static void perf_event_exit_cpu_context(int cpu)$/;"	f	file:
perf_event_exit_event	events/core.c	/^perf_event_exit_event(struct perf_event *child_event,$/;"	f	file:
perf_event_exit_task	events/core.c	/^void perf_event_exit_task(struct task_struct *child)$/;"	f
perf_event_exit_task_context	events/core.c	/^static void perf_event_exit_task_context(struct task_struct *child, int ctxn)$/;"	f	file:
perf_event_fasync	events/core.c	/^static inline struct fasync_struct **perf_event_fasync(struct perf_event *event)$/;"	f	file:
perf_event_fd_array_get_ptr	bpf/arraymap.c	/^static void *perf_event_fd_array_get_ptr(struct bpf_map *map,$/;"	f	file:
perf_event_fd_array_put_ptr	bpf/arraymap.c	/^static void perf_event_fd_array_put_ptr(void *ptr)$/;"	f	file:
perf_event_fd_array_release	bpf/arraymap.c	/^static void perf_event_fd_array_release(struct bpf_map *map,$/;"	f	file:
perf_event_for_each	events/core.c	/^static void perf_event_for_each(struct perf_event *event,$/;"	f	file:
perf_event_for_each_child	events/core.c	/^static void perf_event_for_each_child(struct perf_event *event,$/;"	f	file:
perf_event_fork	events/core.c	/^void perf_event_fork(struct task_struct *task)$/;"	f
perf_event_free_bpf_handler	events/core.c	/^static void perf_event_free_bpf_handler(struct perf_event *event)$/;"	f	file:
perf_event_free_bpf_prog	events/core.c	/^static void perf_event_free_bpf_prog(struct perf_event *event)$/;"	f	file:
perf_event_free_filter	events/core.c	/^static void perf_event_free_filter(struct perf_event *event)$/;"	f	file:
perf_event_free_task	events/core.c	/^void perf_event_free_task(struct task_struct *task)$/;"	f
perf_event_get	events/core.c	/^struct file *perf_event_get(unsigned int fd)$/;"	f
perf_event_groups_delete	events/core.c	/^perf_event_groups_delete(struct perf_event_groups *groups,$/;"	f	file:
perf_event_groups_first	events/core.c	/^perf_event_groups_first(struct perf_event_groups *groups, int cpu)$/;"	f	file:
perf_event_groups_for_each	events/core.c	1654;"	d	file:
perf_event_groups_init	events/core.c	/^static void perf_event_groups_init(struct perf_event_groups *groups)$/;"	f	file:
perf_event_groups_insert	events/core.c	/^perf_event_groups_insert(struct perf_event_groups *groups,$/;"	f	file:
perf_event_groups_less	events/core.c	/^perf_event_groups_less(struct perf_event *left, struct perf_event *right)$/;"	f	file:
perf_event_groups_next	events/core.c	/^perf_event_groups_next(struct perf_event *event)$/;"	f	file:
perf_event_header__init_id	events/core.c	/^void perf_event_header__init_id(struct perf_event_header *header,$/;"	f
perf_event_id	events/core.c	/^static atomic64_t perf_event_id;$/;"	v	file:
perf_event_idx_default	events/core.c	/^static int perf_event_idx_default(struct perf_event *event)$/;"	f	file:
perf_event_index	events/core.c	/^static int perf_event_index(struct perf_event *event)$/;"	f	file:
perf_event_init	events/core.c	/^void __init perf_event_init(void)$/;"	f
perf_event_init_all_cpus	events/core.c	/^static void __init perf_event_init_all_cpus(void)$/;"	f	file:
perf_event_init_context	events/core.c	/^static int perf_event_init_context(struct task_struct *child, int ctxn)$/;"	f	file:
perf_event_init_cpu	events/core.c	/^int perf_event_init_cpu(unsigned int cpu)$/;"	f
perf_event_init_task	events/core.c	/^int perf_event_init_task(struct task_struct *child)$/;"	f
perf_event_init_userpage	events/core.c	/^static void perf_event_init_userpage(struct perf_event *event)$/;"	f	file:
perf_event_is_tracing	events/core.c	/^static inline bool perf_event_is_tracing(struct perf_event *event)$/;"	f	file:
perf_event_itrace_started	events/core.c	/^void perf_event_itrace_started(struct perf_event *event)$/;"	f
perf_event_ksymbol	events/core.c	/^void perf_event_ksymbol(u16 ksym_type, u64 addr, u32 len, bool unregister,$/;"	f
perf_event_ksymbol_match	events/core.c	/^static int perf_event_ksymbol_match(struct perf_event *event)$/;"	f	file:
perf_event_ksymbol_output	events/core.c	/^static void perf_event_ksymbol_output(struct perf_event *event, void *data)$/;"	f	file:
perf_event_max_stack_handler	events/callchain.c	/^int perf_event_max_stack_handler(struct ctl_table *table, int write,$/;"	f
perf_event_mmap	events/core.c	/^void perf_event_mmap(struct vm_area_struct *vma)$/;"	f
perf_event_mmap_event	events/core.c	/^static void perf_event_mmap_event(struct perf_mmap_event *mmap_event)$/;"	f	file:
perf_event_mmap_match	events/core.c	/^static int perf_event_mmap_match(struct perf_event *event,$/;"	f	file:
perf_event_mmap_output	events/core.c	/^static void perf_event_mmap_output(struct perf_event *event,$/;"	f	file:
perf_event_modify_attr	events/core.c	/^static int perf_event_modify_attr(struct perf_event *event,$/;"	f	file:
perf_event_modify_breakpoint	events/core.c	/^static int perf_event_modify_breakpoint(struct perf_event *bp,$/;"	f	file:
perf_event_mux_interval_ms_show	events/core.c	/^perf_event_mux_interval_ms_show(struct device *dev,$/;"	f	file:
perf_event_mux_interval_ms_store	events/core.c	/^perf_event_mux_interval_ms_store(struct device *dev,$/;"	f	file:
perf_event_namespaces	events/core.c	/^void perf_event_namespaces(struct task_struct *task)$/;"	f
perf_event_namespaces_match	events/core.c	/^static int perf_event_namespaces_match(struct perf_event *event)$/;"	f	file:
perf_event_namespaces_output	events/core.c	/^static void perf_event_namespaces_output(struct perf_event *event,$/;"	f	file:
perf_event_nop_int	events/core.c	/^static int perf_event_nop_int(struct perf_event *event, u64 value)$/;"	f	file:
perf_event_open	sys_ni.c	/^COND_SYSCALL(perf_event_open);$/;"	v
perf_event_output	events/core.c	/^perf_event_output(struct perf_event *event,$/;"	f
perf_event_output_backward	events/core.c	/^perf_event_output_backward(struct perf_event *event,$/;"	f
perf_event_output_forward	events/core.c	/^perf_event_output_forward(struct perf_event *event,$/;"	f
perf_event_overflow	events/core.c	/^int perf_event_overflow(struct perf_event *event,$/;"	f
perf_event_parse_addr_filter	events/core.c	/^perf_event_parse_addr_filter(struct perf_event *event, char *fstr,$/;"	f	file:
perf_event_period	events/core.c	/^static int perf_event_period(struct perf_event *event, u64 __user *arg)$/;"	f	file:
perf_event_pid	events/core.c	/^static u32 perf_event_pid(struct perf_event *event, struct task_struct *p)$/;"	f	file:
perf_event_pid_type	events/core.c	/^static u32 perf_event_pid_type(struct perf_event *event, struct task_struct *p,$/;"	f	file:
perf_event_print_debug	events/core.c	/^void __weak perf_event_print_debug(void)	{ }$/;"	f
perf_event_prog_ops	trace/bpf_trace.c	/^const struct bpf_prog_ops perf_event_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
perf_event_query_prog_array	trace/bpf_trace.c	/^int perf_event_query_prog_array(struct perf_event *event, void __user *info)$/;"	f
perf_event_read	events/core.c	/^static int perf_event_read(struct perf_event *event, bool group)$/;"	f	file:
perf_event_read_event	events/core.c	/^perf_event_read_event(struct perf_event *event,$/;"	f	file:
perf_event_read_local	events/core.c	/^int perf_event_read_local(struct perf_event *event, u64 *value,$/;"	f
perf_event_read_value	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_read_value);$/;"	v
perf_event_read_value	events/core.c	/^u64 perf_event_read_value(struct perf_event *event, u64 *enabled, u64 *running)$/;"	f
perf_event_refresh	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_refresh);$/;"	v
perf_event_refresh	events/core.c	/^int perf_event_refresh(struct perf_event *event, int refresh)$/;"	f
perf_event_release_kernel	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_release_kernel);$/;"	v
perf_event_release_kernel	events/core.c	/^int perf_event_release_kernel(struct perf_event *event)$/;"	f
perf_event_sched_in	events/core.c	/^static void perf_event_sched_in(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_event_set_addr_filter	events/core.c	/^perf_event_set_addr_filter(struct perf_event *event, char *filter_str)$/;"	f	file:
perf_event_set_bpf_handler	events/core.c	/^static int perf_event_set_bpf_handler(struct perf_event *event, u32 prog_fd)$/;"	f	file:
perf_event_set_bpf_prog	events/core.c	/^static int perf_event_set_bpf_prog(struct perf_event *event, u32 prog_fd)$/;"	f	file:
perf_event_set_clock	events/core.c	/^static int perf_event_set_clock(struct perf_event *event, clockid_t clk_id)$/;"	f	file:
perf_event_set_filter	events/core.c	/^static int perf_event_set_filter(struct perf_event *event, void __user *arg)$/;"	f	file:
perf_event_set_output	events/core.c	/^perf_event_set_output(struct perf_event *event, struct perf_event *output_event)$/;"	f	file:
perf_event_set_state	events/core.c	/^perf_event_set_state(struct perf_event *event, enum perf_event_state state)$/;"	f	file:
perf_event_stop	events/core.c	/^static int perf_event_stop(struct perf_event *event, int restart)$/;"	f	file:
perf_event_switch	events/core.c	/^static void perf_event_switch(struct task_struct *task,$/;"	f	file:
perf_event_switch_match	events/core.c	/^static int perf_event_switch_match(struct perf_event *event)$/;"	f	file:
perf_event_switch_output	events/core.c	/^static void perf_event_switch_output(struct perf_event *event, void *data)$/;"	f	file:
perf_event_sync_stat	events/core.c	/^static void perf_event_sync_stat(struct perf_event_context *ctx,$/;"	f	file:
perf_event_sysfs_init	events/core.c	/^device_initcall(perf_event_sysfs_init);$/;"	v
perf_event_sysfs_init	events/core.c	/^static int __init perf_event_sysfs_init(void)$/;"	f	file:
perf_event_sysfs_show	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_sysfs_show);$/;"	v
perf_event_sysfs_show	events/core.c	/^ssize_t perf_event_sysfs_show(struct device *dev, struct device_attribute *attr,$/;"	f
perf_event_task	events/core.c	/^static void perf_event_task(struct task_struct *task,$/;"	f	file:
perf_event_task_disable	events/core.c	/^int perf_event_task_disable(void)$/;"	f
perf_event_task_enable	events/core.c	/^int perf_event_task_enable(void)$/;"	f
perf_event_task_match	events/core.c	/^static int perf_event_task_match(struct perf_event *event)$/;"	f	file:
perf_event_task_output	events/core.c	/^static void perf_event_task_output(struct perf_event *event,$/;"	f	file:
perf_event_task_tick	events/core.c	/^void perf_event_task_tick(void)$/;"	f
perf_event_tid	events/core.c	/^static u32 perf_event_tid(struct perf_event *event, struct task_struct *p)$/;"	f	file:
perf_event_time	events/core.c	/^static u64 perf_event_time(struct perf_event *event)$/;"	f	file:
perf_event_update_sibling_time	events/core.c	/^static void perf_event_update_sibling_time(struct perf_event *leader)$/;"	f	file:
perf_event_update_time	events/core.c	/^static void perf_event_update_time(struct perf_event *event)$/;"	f	file:
perf_event_update_userpage	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_update_userpage);$/;"	v
perf_event_update_userpage	events/core.c	/^void perf_event_update_userpage(struct perf_event *event)$/;"	f
perf_event_validate_size	events/core.c	/^static bool perf_event_validate_size(struct perf_event *event)$/;"	f	file:
perf_event_verifier_ops	trace/bpf_trace.c	/^const struct bpf_verifier_ops perf_event_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
perf_event_wakeup	events/core.c	/^void perf_event_wakeup(struct perf_event *event)$/;"	f
perf_events	trace/trace_uprobe.c	/^	struct list_head	perf_events;$/;"	m	struct:trace_uprobe_filter	typeref:struct:trace_uprobe_filter::list_head	file:
perf_exclude_event	events/core.c	/^static int perf_exclude_event(struct perf_event *event,$/;"	f	file:
perf_fasync	events/core.c	/^static int perf_fasync(int fd, struct file *filp, int on)$/;"	f	file:
perf_fget_light	events/core.c	/^static inline int perf_fget_light(int fd, struct fd *p)$/;"	f	file:
perf_fill_ns_link_info	events/core.c	/^static void perf_fill_ns_link_info(struct perf_ns_link_info *ns_link_info,$/;"	f	file:
perf_fops	events/core.c	/^static const struct file_operations perf_fops = {$/;"	v	typeref:struct:file_operations	file:
perf_fops	events/core.c	/^static const struct file_operations perf_fops;$/;"	v	typeref:struct:file_operations	file:
perf_free_event	events/core.c	/^static void perf_free_event(struct perf_event *event,$/;"	f	file:
perf_ftrace_event_register	trace/trace.h	1919;"	d
perf_ftrace_event_register	trace/trace_event_perf.c	/^int perf_ftrace_event_register(struct trace_event_call *call,$/;"	f
perf_ftrace_function_call	trace/trace_event_perf.c	/^perf_ftrace_function_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
perf_ftrace_function_register	trace/trace_event_perf.c	/^static int perf_ftrace_function_register(struct perf_event *event)$/;"	f	file:
perf_ftrace_function_unregister	trace/trace_event_perf.c	/^static int perf_ftrace_function_unregister(struct perf_event *event)$/;"	f	file:
perf_get_aux	events/ring_buffer.c	/^EXPORT_SYMBOL_GPL(perf_get_aux);$/;"	v
perf_get_aux	events/ring_buffer.c	/^void *perf_get_aux(struct perf_output_handle *handle)$/;"	f
perf_get_event	events/core.c	/^const struct perf_event *perf_get_event(struct file *file)$/;"	f
perf_group_attach	events/core.c	/^static void perf_group_attach(struct perf_event *event)$/;"	f	file:
perf_group_detach	events/core.c	/^static void perf_group_detach(struct perf_event *event)$/;"	f	file:
perf_guest_cbs	events/core.c	/^struct perf_guest_info_callbacks *perf_guest_cbs;$/;"	v	typeref:struct:perf_guest_info_callbacks
perf_init_event	events/core.c	/^static struct pmu *perf_init_event(struct perf_event *event)$/;"	f	file:
perf_install_in_context	events/core.c	/^perf_install_in_context(struct perf_event_context *ctx,$/;"	f	file:
perf_ioctl	events/core.c	/^static long perf_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
perf_iterate_ctx	events/core.c	/^perf_iterate_ctx(struct perf_event_context *ctx,$/;"	f	file:
perf_iterate_f	events/core.c	/^typedef void (perf_iterate_f)(struct perf_event *event, void *data);$/;"	t	file:
perf_iterate_sb	events/core.c	/^perf_iterate_sb(perf_iterate_f output, void *data,$/;"	f	file:
perf_iterate_sb_cpu	events/core.c	/^static void perf_iterate_sb_cpu(perf_iterate_f output, void *data)$/;"	f	file:
perf_kprobe	events/core.c	/^static struct pmu perf_kprobe = {$/;"	v	typeref:struct:pmu	file:
perf_kprobe_destroy	trace/trace_event_perf.c	/^void perf_kprobe_destroy(struct perf_event *p_event)$/;"	f
perf_kprobe_event_init	events/core.c	/^static int perf_kprobe_event_init(struct perf_event *event)$/;"	f	file:
perf_kprobe_init	trace/trace_event_perf.c	/^int perf_kprobe_init(struct perf_event *p_event, bool is_retprobe)$/;"	f
perf_ksymbol_event	events/core.c	/^struct perf_ksymbol_event {$/;"	s	file:
perf_lock_task_context	events/core.c	/^perf_lock_task_context(struct task_struct *task, int ctxn, unsigned long *flags)$/;"	f	file:
perf_log_itrace_start	events/core.c	/^static void perf_log_itrace_start(struct perf_event *event)$/;"	f	file:
perf_log_lost_samples	events/core.c	/^void perf_log_lost_samples(struct perf_event *event, u64 lost)$/;"	f
perf_log_throttle	events/core.c	/^static void perf_log_throttle(struct perf_event *event, int enable)$/;"	f	file:
perf_mmap	events/core.c	/^static int perf_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_alloc_page	events/ring_buffer.c	/^static void *perf_mmap_alloc_page(int cpu)$/;"	f	file:
perf_mmap_close	events/core.c	/^static void perf_mmap_close(struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_event	events/core.c	/^struct perf_mmap_event {$/;"	s	file:
perf_mmap_fault	events/core.c	/^static vm_fault_t perf_mmap_fault(struct vm_fault *vmf)$/;"	f	file:
perf_mmap_free_page	events/ring_buffer.c	/^static void perf_mmap_free_page(unsigned long addr)$/;"	f	file:
perf_mmap_open	events/core.c	/^static void perf_mmap_open(struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_to_page	events/ring_buffer.c	/^perf_mmap_to_page(struct ring_buffer *rb, unsigned long pgoff)$/;"	f
perf_mmap_unmark_page	events/ring_buffer.c	/^static void perf_mmap_unmark_page(void *addr)$/;"	f	file:
perf_mmap_vmops	events/core.c	/^static const struct vm_operations_struct perf_mmap_vmops = {$/;"	v	typeref:struct:vm_operations_struct	file:
perf_mux_hrtimer_handler	events/core.c	/^static enum hrtimer_restart perf_mux_hrtimer_handler(struct hrtimer *hr)$/;"	f	file:
perf_mux_hrtimer_restart	events/core.c	/^static int perf_mux_hrtimer_restart(struct perf_cpu_context *cpuctx)$/;"	f	file:
perf_namespaces_event	events/core.c	/^struct perf_namespaces_event {$/;"	s	file:
perf_online_mask	events/core.c	/^static cpumask_var_t perf_online_mask;$/;"	v	file:
perf_output_begin	events/ring_buffer.c	/^int perf_output_begin(struct perf_output_handle *handle,$/;"	f
perf_output_begin_backward	events/ring_buffer.c	/^int perf_output_begin_backward(struct perf_output_handle *handle,$/;"	f
perf_output_begin_forward	events/ring_buffer.c	/^int perf_output_begin_forward(struct perf_output_handle *handle,$/;"	f
perf_output_copy	events/ring_buffer.c	/^unsigned int perf_output_copy(struct perf_output_handle *handle,$/;"	f
perf_output_end	events/ring_buffer.c	/^void perf_output_end(struct perf_output_handle *handle)$/;"	f
perf_output_get_handle	events/ring_buffer.c	/^static void perf_output_get_handle(struct perf_output_handle *handle)$/;"	f	file:
perf_output_put_handle	events/ring_buffer.c	/^static void perf_output_put_handle(struct perf_output_handle *handle)$/;"	f	file:
perf_output_read	events/core.c	/^static void perf_output_read(struct perf_output_handle *handle,$/;"	f	file:
perf_output_read_group	events/core.c	/^static void perf_output_read_group(struct perf_output_handle *handle,$/;"	f	file:
perf_output_read_one	events/core.c	/^static void perf_output_read_one(struct perf_output_handle *handle,$/;"	f	file:
perf_output_sample	events/core.c	/^void perf_output_sample(struct perf_output_handle *handle,$/;"	f
perf_output_sample_regs	events/core.c	/^perf_output_sample_regs(struct perf_output_handle *handle,$/;"	f	file:
perf_output_sample_ustack	events/core.c	/^perf_output_sample_ustack(struct perf_output_handle *handle, u64 dump_size,$/;"	f	file:
perf_output_skip	events/ring_buffer.c	/^unsigned int perf_output_skip(struct perf_output_handle *handle,$/;"	f
perf_output_wakeup	events/ring_buffer.c	/^static void perf_output_wakeup(struct perf_output_handle *handle)$/;"	f	file:
perf_pending_event	events/core.c	/^static void perf_pending_event(struct irq_work *entry)$/;"	f	file:
perf_pending_event_disable	events/core.c	/^static void perf_pending_event_disable(struct perf_event *event)$/;"	f	file:
perf_pin_task_context	events/core.c	/^perf_pin_task_context(struct task_struct *task, int ctxn)$/;"	f	file:
perf_pmu_cancel_txn	events/core.c	/^static void perf_pmu_cancel_txn(struct pmu *pmu)$/;"	f	file:
perf_pmu_commit_txn	events/core.c	/^static int perf_pmu_commit_txn(struct pmu *pmu)$/;"	f	file:
perf_pmu_disable	events/core.c	/^void perf_pmu_disable(struct pmu *pmu)$/;"	f
perf_pmu_enable	events/core.c	/^void perf_pmu_enable(struct pmu *pmu)$/;"	f
perf_pmu_migrate_context	events/core.c	/^EXPORT_SYMBOL_GPL(perf_pmu_migrate_context);$/;"	v
perf_pmu_migrate_context	events/core.c	/^void perf_pmu_migrate_context(struct pmu *pmu, int src_cpu, int dst_cpu)$/;"	f
perf_pmu_name	events/core.c	/^extern __weak const char *perf_pmu_name(void)$/;"	f
perf_pmu_nop_int	events/core.c	/^static int perf_pmu_nop_int(struct pmu *pmu)$/;"	f	file:
perf_pmu_nop_txn	events/core.c	/^static void perf_pmu_nop_txn(struct pmu *pmu, unsigned int flags)$/;"	f	file:
perf_pmu_nop_void	events/core.c	/^static void perf_pmu_nop_void(struct pmu *pmu)$/;"	f	file:
perf_pmu_output_stop	events/core.c	/^static void perf_pmu_output_stop(struct perf_event *event)$/;"	f	file:
perf_pmu_register	events/core.c	/^EXPORT_SYMBOL_GPL(perf_pmu_register);$/;"	v
perf_pmu_register	events/core.c	/^int perf_pmu_register(struct pmu *pmu, const char *name, int type)$/;"	f
perf_pmu_resched	events/core.c	/^void perf_pmu_resched(struct pmu *pmu)$/;"	f
perf_pmu_sched_task	events/core.c	/^static void perf_pmu_sched_task(struct task_struct *prev,$/;"	f	file:
perf_pmu_start_txn	events/core.c	/^static void perf_pmu_start_txn(struct pmu *pmu, unsigned int flags)$/;"	f	file:
perf_pmu_unregister	events/core.c	/^EXPORT_SYMBOL_GPL(perf_pmu_unregister);$/;"	v
perf_pmu_unregister	events/core.c	/^void perf_pmu_unregister(struct pmu *pmu)$/;"	f
perf_poll	events/core.c	/^static __poll_t perf_poll(struct file *file, poll_table *wait)$/;"	f	file:
perf_prepare_sample	events/core.c	/^void perf_prepare_sample(struct perf_event_header *header,$/;"	f
perf_probe_config	events/core.c	/^enum perf_probe_config {$/;"	g	file:
perf_proc_update_handler	events/core.c	/^int perf_proc_update_handler(struct ctl_table *table, int write,$/;"	f
perf_read	events/core.c	/^perf_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
perf_read_data	events/core.c	/^struct perf_read_data {$/;"	s	file:
perf_read_event	events/core.c	/^struct perf_read_event {$/;"	s	file:
perf_read_group	events/core.c	/^static int perf_read_group(struct perf_event *event,$/;"	f	file:
perf_read_one	events/core.c	/^static int perf_read_one(struct perf_event *event,$/;"	f	file:
perf_reboot	events/core.c	/^perf_reboot(struct notifier_block *notifier, unsigned long val, void *v)$/;"	f	file:
perf_reboot_notifier	events/core.c	/^static struct notifier_block perf_reboot_notifier = {$/;"	v	typeref:struct:notifier_block	file:
perf_register_guest_info_callbacks	events/core.c	/^EXPORT_SYMBOL_GPL(perf_register_guest_info_callbacks);$/;"	v
perf_register_guest_info_callbacks	events/core.c	/^int perf_register_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)$/;"	f
perf_release	events/core.c	/^static int perf_release(struct inode *inode, struct file *file)$/;"	f	file:
perf_remove_from_context	events/core.c	/^static void perf_remove_from_context(struct perf_event *event, unsigned long flags)$/;"	f	file:
perf_remove_from_owner	events/core.c	/^static void perf_remove_from_owner(struct perf_event *event)$/;"	f	file:
perf_rotate_context	events/core.c	/^static bool perf_rotate_context(struct perf_cpu_context *cpuctx)$/;"	f	file:
perf_sample_event_took	events/core.c	/^void perf_sample_event_took(u64 sample_len_ns)$/;"	f
perf_sample_regs_intr	events/core.c	/^static void perf_sample_regs_intr(struct perf_regs *regs_intr,$/;"	f	file:
perf_sample_regs_user	events/core.c	/^static void perf_sample_regs_user(struct perf_regs *regs_user,$/;"	f	file:
perf_sample_ustack_size	events/core.c	/^perf_sample_ustack_size(u16 stack_size, u16 header_size,$/;"	f	file:
perf_sched_cb_dec	events/core.c	/^void perf_sched_cb_dec(struct pmu *pmu)$/;"	f
perf_sched_cb_inc	events/core.c	/^void perf_sched_cb_inc(struct pmu *pmu)$/;"	f
perf_sched_count	events/core.c	/^static atomic_t perf_sched_count;$/;"	v	file:
perf_sched_delayed	events/core.c	/^static void perf_sched_delayed(struct work_struct *work)$/;"	f	file:
perf_sched_events	events/core.c	/^DEFINE_STATIC_KEY_FALSE(perf_sched_events);$/;"	v
perf_set_shadow_time	events/core.c	/^static void perf_set_shadow_time(struct perf_event *event,$/;"	f	file:
perf_swevent	events/core.c	/^static struct pmu perf_swevent = {$/;"	v	typeref:struct:pmu	file:
perf_swevent_add	events/core.c	/^static int perf_swevent_add(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_cancel_hrtimer	events/core.c	/^static void perf_swevent_cancel_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_del	events/core.c	/^static void perf_swevent_del(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_enabled	events/core.c	/^struct static_key perf_swevent_enabled[PERF_COUNT_SW_MAX];$/;"	v	typeref:struct:static_key
perf_swevent_event	events/core.c	/^static void perf_swevent_event(struct perf_event *event, u64 nr,$/;"	f	file:
perf_swevent_get_recursion_context	events/core.c	/^EXPORT_SYMBOL_GPL(perf_swevent_get_recursion_context);$/;"	v
perf_swevent_get_recursion_context	events/core.c	/^int perf_swevent_get_recursion_context(void)$/;"	f
perf_swevent_hrtimer	events/core.c	/^static enum hrtimer_restart perf_swevent_hrtimer(struct hrtimer *hrtimer)$/;"	f	file:
perf_swevent_init	events/core.c	/^static int perf_swevent_init(struct perf_event *event)$/;"	f	file:
perf_swevent_init_cpu	events/core.c	/^static void perf_swevent_init_cpu(unsigned int cpu)$/;"	f	file:
perf_swevent_init_hrtimer	events/core.c	/^static void perf_swevent_init_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_match	events/core.c	/^static int perf_swevent_match(struct perf_event *event,$/;"	f	file:
perf_swevent_overflow	events/core.c	/^static void perf_swevent_overflow(struct perf_event *event, u64 overflow,$/;"	f	file:
perf_swevent_put_recursion_context	events/core.c	/^void perf_swevent_put_recursion_context(int rctx)$/;"	f
perf_swevent_read	events/core.c	/^static void perf_swevent_read(struct perf_event *event)$/;"	f	file:
perf_swevent_set_period	events/core.c	/^u64 perf_swevent_set_period(struct perf_event *event)$/;"	f
perf_swevent_start	events/core.c	/^static void perf_swevent_start(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_start_hrtimer	events/core.c	/^static void perf_swevent_start_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_stop	events/core.c	/^static void perf_swevent_stop(struct perf_event *event, int flags)$/;"	f	file:
perf_switch_event	events/core.c	/^struct perf_switch_event {$/;"	s	file:
perf_syscall_enter	trace/trace_syscalls.c	/^static void perf_syscall_enter(void *ignore, struct pt_regs *regs, long id)$/;"	f	file:
perf_syscall_exit	trace/trace_syscalls.c	/^static void perf_syscall_exit(void *ignore, struct pt_regs *regs, long ret)$/;"	f	file:
perf_sysenter_disable	trace/trace_syscalls.c	/^static void perf_sysenter_disable(struct trace_event_call *call)$/;"	f	file:
perf_sysenter_enable	trace/trace_syscalls.c	/^static int perf_sysenter_enable(struct trace_event_call *call)$/;"	f	file:
perf_sysexit_disable	trace/trace_syscalls.c	/^static void perf_sysexit_disable(struct trace_event_call *call)$/;"	f	file:
perf_sysexit_enable	trace/trace_syscalls.c	/^static int perf_sysexit_enable(struct trace_event_call *call)$/;"	f	file:
perf_task_clock	events/core.c	/^static struct pmu perf_task_clock = {$/;"	v	typeref:struct:pmu	file:
perf_task_event	events/core.c	/^struct perf_task_event {$/;"	s	file:
perf_tp_event	events/core.c	/^EXPORT_SYMBOL_GPL(perf_tp_event);$/;"	v
perf_tp_event	events/core.c	/^void perf_tp_event(u16 event_type, u64 count, void *record, int entry_size,$/;"	f
perf_tp_event_init	events/core.c	/^static int perf_tp_event_init(struct perf_event *event)$/;"	f	file:
perf_tp_event_match	events/core.c	/^static int perf_tp_event_match(struct perf_event *event,$/;"	f	file:
perf_tp_filter_match	events/core.c	/^static int perf_tp_filter_match(struct perf_event *event,$/;"	f	file:
perf_tp_register	events/core.c	/^static inline void perf_tp_register(void)$/;"	f	file:
perf_trace_add	trace/trace_event_perf.c	/^int perf_trace_add(struct perf_event *p_event, int flags)$/;"	f
perf_trace_buf	trace/trace_event_perf.c	/^static char __percpu *perf_trace_buf[PERF_NR_CONTEXTS];$/;"	v	file:
perf_trace_buf_alloc	trace/trace_event_perf.c	/^EXPORT_SYMBOL_GPL(perf_trace_buf_alloc);$/;"	v
perf_trace_buf_alloc	trace/trace_event_perf.c	/^NOKPROBE_SYMBOL(perf_trace_buf_alloc);$/;"	v
perf_trace_buf_alloc	trace/trace_event_perf.c	/^void *perf_trace_buf_alloc(int size, struct pt_regs **regs, int *rctxp)$/;"	f
perf_trace_buf_update	trace/trace_event_perf.c	/^NOKPROBE_SYMBOL(perf_trace_buf_update);$/;"	v
perf_trace_buf_update	trace/trace_event_perf.c	/^void perf_trace_buf_update(void *record, u16 type)$/;"	f
perf_trace_del	trace/trace_event_perf.c	/^void perf_trace_del(struct perf_event *p_event, int flags)$/;"	f
perf_trace_destroy	trace/trace_event_perf.c	/^void perf_trace_destroy(struct perf_event *p_event)$/;"	f
perf_trace_event_close	trace/trace_event_perf.c	/^static void perf_trace_event_close(struct perf_event *p_event)$/;"	f	file:
perf_trace_event_init	trace/trace_event_perf.c	/^static int perf_trace_event_init(struct trace_event_call *tp_event,$/;"	f	file:
perf_trace_event_open	trace/trace_event_perf.c	/^static int perf_trace_event_open(struct perf_event *p_event)$/;"	f	file:
perf_trace_event_perm	trace/trace_event_perf.c	/^static int perf_trace_event_perm(struct trace_event_call *tp_event,$/;"	f	file:
perf_trace_event_reg	trace/trace_event_perf.c	/^static int perf_trace_event_reg(struct trace_event_call *tp_event,$/;"	f	file:
perf_trace_event_unreg	trace/trace_event_perf.c	/^static void perf_trace_event_unreg(struct perf_event *p_event)$/;"	f	file:
perf_trace_init	trace/trace_event_perf.c	/^int perf_trace_init(struct perf_event *p_event)$/;"	f
perf_trace_run_bpf_submit	events/core.c	/^EXPORT_SYMBOL_GPL(perf_trace_run_bpf_submit);$/;"	v
perf_trace_run_bpf_submit	events/core.c	/^void perf_trace_run_bpf_submit(void *raw_data, int size, int rctx,$/;"	f
perf_trace_t	trace/trace_event_perf.c	/^	perf_trace_t;$/;"	t	file:
perf_tracepoint	events/core.c	/^static struct pmu perf_tracepoint = {$/;"	v	typeref:struct:pmu	file:
perf_try_init_event	events/core.c	/^static int perf_try_init_event(struct pmu *pmu, struct perf_event *event)$/;"	f	file:
perf_type	rcu/rcuperf.c	/^static char *perf_type = "rcu";$/;"	v	file:
perf_unpin_context	events/core.c	/^static void perf_unpin_context(struct perf_event_context *ctx)$/;"	f	file:
perf_unregister_guest_info_callbacks	events/core.c	/^EXPORT_SYMBOL_GPL(perf_unregister_guest_info_callbacks);$/;"	v
perf_unregister_guest_info_callbacks	events/core.c	/^int perf_unregister_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)$/;"	f
perf_uprobe	events/core.c	/^static struct pmu perf_uprobe = {$/;"	v	typeref:struct:pmu	file:
perf_uprobe_destroy	trace/trace_event_perf.c	/^void perf_uprobe_destroy(struct perf_event *p_event)$/;"	f
perf_uprobe_event_init	events/core.c	/^static int perf_uprobe_event_init(struct perf_event *event)$/;"	f	file:
perf_uprobe_init	trace/trace_event_perf.c	/^int perf_uprobe_init(struct perf_event *p_event,$/;"	f
perf_user_stack_pointer	events/internal.h	239;"	d
perf_user_stack_pointer	events/internal.h	246;"	d
perf_ustack_task_size	events/core.c	/^static u64 perf_ustack_task_size(struct pt_regs *regs)$/;"	f	file:
perf_virt_to_phys	events/core.c	/^static u64 perf_virt_to_phys(u64 virt)$/;"	f	file:
period	sched/core.c	/^	u64 period, quota;$/;"	m	struct:cfs_schedulable_data	file:
period	sched/sched.h	/^	ktime_t			period;$/;"	m	struct:cfs_bandwidth
period_active	sched/sched.h	/^	u8			period_active;$/;"	m	struct:cfs_bandwidth
period_timer	sched/sched.h	/^	struct hrtimer		period_timer;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer
perm_gid	audit.h	/^			gid_t			perm_gid;$/;"	m	struct:audit_context::__anon53::__anon55
perm_mode	audit.h	/^			umode_t			perm_mode;$/;"	m	struct:audit_context::__anon53::__anon55
perm_uid	audit.h	/^			uid_t			perm_uid;$/;"	m	struct:audit_context::__anon53::__anon55
permitted	audit.h	/^	kernel_cap_t		permitted;$/;"	m	struct:audit_cap_data
persistent_clock_exists	time/timekeeping.c	/^static bool persistent_clock_exists;$/;"	v	file:
persistent_clock_is_local	time/timekeeping.c	/^int persistent_clock_is_local;$/;"	v
personality	audit.h	/^	unsigned long	    personality;$/;"	m	struct:audit_context
pf	locking/lockdep.c	/^	struct pending_free	pf[2];$/;"	m	struct:delayed_free	typeref:struct:delayed_free::pending_free	file:
pfn	dma/debug.c	/^	unsigned long	 pfn;$/;"	m	struct:dma_debug_entry	file:
pfn_base	dma/coherent.c	/^	unsigned long	pfn_base;$/;"	m	struct:dma_coherent_mem	file:
pg	trace/ftrace.c	/^	struct ftrace_page		*pg;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_page	file:
pg	trace/ftrace.c	/^	struct ftrace_page	*pg;$/;"	m	struct:ftrace_rec_iter	typeref:struct:ftrace_rec_iter::ftrace_page	file:
pgoff	events/core.c	/^		u64				pgoff;$/;"	m	struct:perf_mmap_event::__anon4	file:
phase	bpf/btf.c	/^	enum verifier_phase phase;$/;"	m	struct:btf_verifier_env	typeref:enum:btf_verifier_env::verifier_phase	file:
phys_addr	dma/debug.c	/^static unsigned long long phys_addr(struct dma_debug_entry *entry)$/;"	f	file:
phys_to_dma_direct	dma/direct.c	/^static inline dma_addr_t phys_to_dma_direct(struct device *dev,$/;"	f	file:
pi_mutex	futex.c	/^	struct rt_mutex pi_mutex;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::rt_mutex	file:
pi_state	futex.c	/^	struct futex_pi_state *pi_state;$/;"	m	struct:futex_q	typeref:struct:futex_q::futex_pi_state	file:
pi_tree_entry	locking/rtmutex_common.h	/^	struct rb_node          pi_tree_entry;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node
pick_dl_task	sched/deadline.c	/^static int pick_dl_task(struct rq *rq, struct task_struct *p, int cpu)$/;"	f	file:
pick_earliest_pushable_dl_task	sched/deadline.c	/^static struct task_struct *pick_earliest_pushable_dl_task(struct rq *rq, int cpu)$/;"	f	file:
pick_highest_pushable_task	sched/rt.c	/^static struct task_struct *pick_highest_pushable_task(struct rq *rq, int cpu)$/;"	f	file:
pick_next_dl_entity	sched/deadline.c	/^static struct sched_dl_entity *pick_next_dl_entity(struct rq *rq,$/;"	f	file:
pick_next_entity	sched/fair.c	/^pick_next_entity(struct cfs_rq *cfs_rq, struct sched_entity *curr)$/;"	f	file:
pick_next_pushable_dl_task	sched/deadline.c	/^static struct task_struct *pick_next_pushable_dl_task(struct rq *rq)$/;"	f	file:
pick_next_pushable_task	sched/rt.c	/^static struct task_struct *pick_next_pushable_task(struct rq *rq)$/;"	f	file:
pick_next_rt_entity	sched/rt.c	/^static struct sched_rt_entity *pick_next_rt_entity(struct rq *rq,$/;"	f	file:
pick_next_task	sched/core.c	/^pick_next_task(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_next_task	sched/sched.h	/^	struct task_struct * (*pick_next_task)(struct rq *rq,$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next_task
pick_next_task_dl	sched/deadline.c	/^pick_next_task_dl(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_next_task_fair	sched/fair.c	/^pick_next_task_fair(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_next_task_idle	sched/idle.c	/^pick_next_task_idle(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_next_task_rt	sched/rt.c	/^pick_next_task_rt(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_next_task_stop	sched/stop_task.c	/^pick_next_task_stop(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)$/;"	f	file:
pick_rt_task	sched/rt.c	/^static int pick_rt_task(struct rq *rq, struct task_struct *p, int cpu)$/;"	f	file:
pid	audit.c	/^	struct pid *pid;$/;"	m	struct:auditd_connection	typeref:struct:auditd_connection::pid	file:
pid	audit.h	/^			pid_t			pid;$/;"	m	struct:audit_context::__anon53::__anon60
pid	audit.h	/^	pid_t		    pid, ppid;$/;"	m	struct:audit_context
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_comm_event::__anon2	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_mmap_event::__anon4	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_namespaces_event::__anon3	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_task_event::__anon1	file:
pid	events/core.c	/^	u32				pid;$/;"	m	struct:perf_read_event	file:
pid	exit.c	/^	pid_t pid;$/;"	m	struct:waitid_info	file:
pid	taskstats.c	/^	pid_t pid;$/;"	m	struct:listener	file:
pid	trace/trace.h	/^	pid_t			pid;$/;"	m	struct:trace_array_cpu
pid_cache	pid_namespace.c	/^static struct kmem_cache *pid_cache[MAX_PID_NS_LEVEL];$/;"	v	typeref:struct:kmem_cache	file:
pid_count	auditsc.c	/^	int			pid_count;$/;"	m	struct:audit_aux_data_pids	file:
pid_idr_init	pid.c	/^void __init pid_idr_init(void)$/;"	f
pid_max	pid.c	/^int pid_max = PID_MAX_DEFAULT;$/;"	v
pid_max	trace/trace.h	/^	int				pid_max;$/;"	m	struct:trace_pid_list
pid_max_max	pid.c	/^int pid_max_max = PID_MAX_LIMIT;$/;"	v
pid_max_min	pid.c	/^int pid_max_min = RESERVED_PIDS + 1;$/;"	v
pid_namespaces_init	pid_namespace.c	/^__initcall(pid_namespaces_init);$/;"	v
pid_namespaces_init	pid_namespace.c	/^static __init int pid_namespaces_init(void)$/;"	f	file:
pid_nr_ns	pid.c	/^EXPORT_SYMBOL_GPL(pid_nr_ns);$/;"	v
pid_nr_ns	pid.c	/^pid_t pid_nr_ns(struct pid *pid, struct pid_namespace *ns)$/;"	f
pid_ns_cachep	pid_namespace.c	/^static struct kmem_cache *pid_ns_cachep;$/;"	v	typeref:struct:kmem_cache	file:
pid_ns_ctl_handler	pid_namespace.c	/^static int pid_ns_ctl_handler(struct ctl_table *table, int write,$/;"	f	file:
pid_ns_ctl_table	pid_namespace.c	/^static struct ctl_table pid_ns_ctl_table[] = {$/;"	v	typeref:struct:ctl_table	file:
pid_task	pid.c	/^EXPORT_SYMBOL(pid_task);$/;"	v
pid_task	pid.c	/^struct task_struct *pid_task(struct pid *pid, enum pid_type type)$/;"	f
pid_vnr	pid.c	/^EXPORT_SYMBOL_GPL(pid_vnr);$/;"	v
pid_vnr	pid.c	/^pid_t pid_vnr(struct pid *pid)$/;"	f
pidfd_create	pid.c	/^static int pidfd_create(struct pid *pid)$/;"	f	file:
pidfd_fops	fork.c	/^const struct file_operations pidfd_fops = {$/;"	v	typeref:struct:file_operations
pidfd_poll	fork.c	/^static unsigned int pidfd_poll(struct file *file, struct poll_table_struct *pts)$/;"	f	file:
pidfd_release	fork.c	/^static int pidfd_release(struct inode *inode, struct file *file)$/;"	f	file:
pidfd_show_fdinfo	fork.c	/^static void pidfd_show_fdinfo(struct seq_file *m, struct file *f)$/;"	f	file:
pidfd_to_pid	signal.c	/^static struct pid *pidfd_to_pid(const struct file *file)$/;"	f	file:
pidlist_allocate	cgroup/cgroup-v1.c	/^static void *pidlist_allocate(int count)$/;"	f	file:
pidlist_array_load	cgroup/cgroup-v1.c	/^static int pidlist_array_load(struct cgroup *cgrp, enum cgroup_filetype type,$/;"	f	file:
pidlist_free	cgroup/cgroup-v1.c	/^static void pidlist_free(void *p)$/;"	f	file:
pidlist_uniq	cgroup/cgroup-v1.c	/^static int pidlist_uniq(pid_t *list, int length)$/;"	f	file:
pidns_for_children_get	pid_namespace.c	/^static struct ns_common *pidns_for_children_get(struct task_struct *task)$/;"	f	file:
pidns_for_children_operations	pid_namespace.c	/^const struct proc_ns_operations pidns_for_children_operations = {$/;"	v	typeref:struct:proc_ns_operations
pidns_get	pid_namespace.c	/^static struct ns_common *pidns_get(struct task_struct *task)$/;"	f	file:
pidns_get_parent	pid_namespace.c	/^static struct ns_common *pidns_get_parent(struct ns_common *ns)$/;"	f	file:
pidns_install	pid_namespace.c	/^static int pidns_install(struct nsproxy *nsproxy, struct ns_common *ns)$/;"	f	file:
pidns_operations	pid_namespace.c	/^const struct proc_ns_operations pidns_operations = {$/;"	v	typeref:struct:proc_ns_operations
pidns_owner	pid_namespace.c	/^static struct user_namespace *pidns_owner(struct ns_common *ns)$/;"	f	file:
pidns_put	pid_namespace.c	/^static void pidns_put(struct ns_common *ns)$/;"	f	file:
pids	trace/trace.h	/^	unsigned long			*pids;$/;"	m	struct:trace_pid_list
pids_can_attach	cgroup/pids.c	/^static int pids_can_attach(struct cgroup_taskset *tset)$/;"	f	file:
pids_can_fork	cgroup/pids.c	/^static int pids_can_fork(struct task_struct *task)$/;"	f	file:
pids_cancel	cgroup/pids.c	/^static void pids_cancel(struct pids_cgroup *pids, int num)$/;"	f	file:
pids_cancel_attach	cgroup/pids.c	/^static void pids_cancel_attach(struct cgroup_taskset *tset)$/;"	f	file:
pids_cancel_fork	cgroup/pids.c	/^static void pids_cancel_fork(struct task_struct *task)$/;"	f	file:
pids_cgroup	cgroup/pids.c	/^struct pids_cgroup {$/;"	s	file:
pids_cgrp_subsys	cgroup/pids.c	/^struct cgroup_subsys pids_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
pids_charge	cgroup/pids.c	/^static void pids_charge(struct pids_cgroup *pids, int num)$/;"	f	file:
pids_css_alloc	cgroup/pids.c	/^pids_css_alloc(struct cgroup_subsys_state *parent)$/;"	f	file:
pids_css_free	cgroup/pids.c	/^static void pids_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
pids_current_read	cgroup/pids.c	/^static s64 pids_current_read(struct cgroup_subsys_state *css,$/;"	f	file:
pids_events_show	cgroup/pids.c	/^static int pids_events_show(struct seq_file *sf, void *v)$/;"	f	file:
pids_files	cgroup/pids.c	/^static struct cftype pids_files[] = {$/;"	v	typeref:struct:cftype	file:
pids_max_show	cgroup/pids.c	/^static int pids_max_show(struct seq_file *sf, void *v)$/;"	f	file:
pids_max_write	cgroup/pids.c	/^static ssize_t pids_max_write(struct kernfs_open_file *of, char *buf,$/;"	f	file:
pids_release	cgroup/pids.c	/^static void pids_release(struct task_struct *task)$/;"	f	file:
pids_try_charge	cgroup/pids.c	/^static int pids_try_charge(struct pids_cgroup *pids, int num)$/;"	f	file:
pids_uncharge	cgroup/pids.c	/^static void pids_uncharge(struct pids_cgroup *pids, int num)$/;"	f	file:
pidx	trace/ftrace.c	/^	int				pidx;$/;"	m	struct:ftrace_iterator	file:
pin	acct.c	/^	struct fs_pin		pin;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::fs_pin	file:
pinned	events/hw_breakpoint.c	/^	unsigned int pinned;$/;"	m	struct:bp_busy_slots	file:
pinned_sched_in	events/core.c	/^static int pinned_sched_in(struct perf_event *event, void *data)$/;"	f	file:
pinst_has_cpu	padata.c	/^static inline int pinst_has_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
pipe_close	trace/trace.h	/^	void			(*pipe_close)(struct trace_iterator *iter);$/;"	m	struct:tracer
pipe_open	trace/trace.h	/^	void			(*pipe_open)(struct trace_iterator *iter);$/;"	m	struct:tracer
pkey_alloc	sys_ni.c	/^COND_SYSCALL(pkey_alloc);$/;"	v
pkey_free	sys_ni.c	/^COND_SYSCALL(pkey_free);$/;"	v
pkey_id_type	module_signing.c	/^enum pkey_id_type {$/;"	g	file:
pkey_mprotect	sys_ni.c	/^COND_SYSCALL(pkey_mprotect);$/;"	v
pkt_access	bpf/verifier.c	/^	bool pkt_access;$/;"	m	struct:bpf_call_arg_meta	file:
place_entity	sched/fair.c	/^place_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int initial)$/;"	f	file:
platform_begin	power/hibernate.c	/^static int platform_begin(int platform_mode)$/;"	f	file:
platform_end	power/hibernate.c	/^static void platform_end(int platform_mode)$/;"	f	file:
platform_finish	power/hibernate.c	/^static void platform_finish(int platform_mode)$/;"	f	file:
platform_leave	power/hibernate.c	/^static void platform_leave(int platform_mode)$/;"	f	file:
platform_pre_restore	power/hibernate.c	/^static int platform_pre_restore(int platform_mode)$/;"	f	file:
platform_pre_snapshot	power/hibernate.c	/^static int platform_pre_snapshot(int platform_mode)$/;"	f	file:
platform_recover	power/hibernate.c	/^static void platform_recover(int platform_mode)$/;"	f	file:
platform_recover	power/suspend.c	/^static void platform_recover(suspend_state_t state)$/;"	f	file:
platform_restore_cleanup	power/hibernate.c	/^static void platform_restore_cleanup(int platform_mode)$/;"	f	file:
platform_resume_early	power/suspend.c	/^static void platform_resume_early(suspend_state_t state)$/;"	f	file:
platform_resume_end	power/suspend.c	/^static void platform_resume_end(suspend_state_t state)$/;"	f	file:
platform_resume_finish	power/suspend.c	/^static void platform_resume_finish(suspend_state_t state)$/;"	f	file:
platform_resume_noirq	power/suspend.c	/^static void platform_resume_noirq(suspend_state_t state)$/;"	f	file:
platform_support	power/user.c	/^	bool platform_support;$/;"	m	struct:snapshot_data	file:
platform_suspend_again	power/suspend.c	/^static bool platform_suspend_again(suspend_state_t state)$/;"	f	file:
platform_suspend_begin	power/suspend.c	/^static int platform_suspend_begin(suspend_state_t state)$/;"	f	file:
platform_suspend_prepare	power/suspend.c	/^static int platform_suspend_prepare(suspend_state_t state)$/;"	f	file:
platform_suspend_prepare_late	power/suspend.c	/^static int platform_suspend_prepare_late(suspend_state_t state)$/;"	f	file:
platform_suspend_prepare_noirq	power/suspend.c	/^static int platform_suspend_prepare_noirq(suspend_state_t state)$/;"	f	file:
play_idle	sched/idle.c	/^EXPORT_SYMBOL_GPL(play_idle);$/;"	v
play_idle	sched/idle.c	/^void play_idle(unsigned long duration_ms)$/;"	f
pm_async	power/main.c	/^power_attr(pm_async);$/;"	v
pm_async_enabled	power/main.c	/^int pm_async_enabled = 1;$/;"	v
pm_async_show	power/main.c	/^static ssize_t pm_async_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_async_store	power/main.c	/^static ssize_t pm_async_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_autosleep_init	power/autosleep.c	/^int __init pm_autosleep_init(void)$/;"	f
pm_autosleep_init	power/power.h	/^static inline int pm_autosleep_init(void) { return 0; }$/;"	f
pm_autosleep_lock	power/autosleep.c	/^int pm_autosleep_lock(void)$/;"	f
pm_autosleep_lock	power/power.h	/^static inline int pm_autosleep_lock(void) { return 0; }$/;"	f
pm_autosleep_set_state	power/autosleep.c	/^int pm_autosleep_set_state(suspend_state_t state)$/;"	f
pm_autosleep_state	power/autosleep.c	/^suspend_state_t pm_autosleep_state(void)$/;"	f
pm_autosleep_state	power/power.h	/^static inline suspend_state_t pm_autosleep_state(void) { return PM_SUSPEND_ON; }$/;"	f
pm_autosleep_unlock	power/autosleep.c	/^void pm_autosleep_unlock(void)$/;"	f
pm_autosleep_unlock	power/power.h	/^static inline void pm_autosleep_unlock(void) {}$/;"	f
pm_debug_messages	power/main.c	/^power_attr(pm_debug_messages);$/;"	v
pm_debug_messages_show	power/main.c	/^static ssize_t pm_debug_messages_show(struct kobject *kobj,$/;"	f	file:
pm_debug_messages_store	power/main.c	/^static ssize_t pm_debug_messages_store(struct kobject *kobj,$/;"	f	file:
pm_debugfs_init	power/main.c	/^late_initcall(pm_debugfs_init);$/;"	v
pm_debugfs_init	power/main.c	/^static int __init pm_debugfs_init(void)$/;"	f	file:
pm_disk_init	power/hibernate.c	/^core_initcall(pm_disk_init);$/;"	v
pm_disk_init	power/hibernate.c	/^static int __init pm_disk_init(void)$/;"	f	file:
pm_freeze_timeout	power/main.c	/^power_attr(pm_freeze_timeout);$/;"	v
pm_freeze_timeout_show	power/main.c	/^static ssize_t pm_freeze_timeout_show(struct kobject *kobj,$/;"	f	file:
pm_freeze_timeout_store	power/main.c	/^static ssize_t pm_freeze_timeout_store(struct kobject *kobj,$/;"	f	file:
pm_freezing	freezer.c	/^EXPORT_SYMBOL_GPL(pm_freezing);$/;"	v
pm_freezing	freezer.c	/^bool pm_freezing;$/;"	v
pm_init	power/main.c	/^core_initcall(pm_init);$/;"	v
pm_init	power/main.c	/^static int __init pm_init(void)$/;"	f	file:
pm_labels	power/suspend.c	/^const char * const pm_labels[] = {$/;"	v
pm_nosig_freezing	freezer.c	/^bool pm_nosig_freezing;$/;"	v
pm_notifier_call_chain	power/main.c	/^int pm_notifier_call_chain(unsigned long val)$/;"	f
pm_power_off_prepare	reboot.c	/^EXPORT_SYMBOL_GPL(pm_power_off_prepare);$/;"	v
pm_power_off_prepare	reboot.c	/^void (*pm_power_off_prepare)(void);$/;"	v
pm_prepare_console	power/console.c	/^void pm_prepare_console(void)$/;"	f
pm_print_times	power/main.c	/^power_attr(pm_print_times);$/;"	v
pm_print_times_enabled	power/main.c	/^bool pm_print_times_enabled;$/;"	v
pm_print_times_init	power/main.c	/^static inline void pm_print_times_init(void) {}$/;"	f	file:
pm_print_times_init	power/main.c	/^static inline void pm_print_times_init(void)$/;"	f	file:
pm_print_times_show	power/main.c	/^static ssize_t pm_print_times_show(struct kobject *kobj,$/;"	f	file:
pm_print_times_store	power/main.c	/^static ssize_t pm_print_times_store(struct kobject *kobj,$/;"	f	file:
pm_qos_add_notifier	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_add_notifier);$/;"	v
pm_qos_add_notifier	power/qos.c	/^int pm_qos_add_notifier(int pm_qos_class, struct notifier_block *notifier)$/;"	f
pm_qos_add_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_add_request);$/;"	v
pm_qos_add_request	power/qos.c	/^void pm_qos_add_request(struct pm_qos_request *req,$/;"	f
pm_qos_array	power/qos.c	/^static struct pm_qos_object *pm_qos_array[] = {$/;"	v	typeref:struct:pm_qos_object	file:
pm_qos_debug	power/qos.c	/^DEFINE_SHOW_ATTRIBUTE(pm_qos_debug);$/;"	v
pm_qos_debug_show	power/qos.c	/^static int pm_qos_debug_show(struct seq_file *s, void *unused)$/;"	f	file:
pm_qos_flags_remove_req	power/qos.c	/^static void pm_qos_flags_remove_req(struct pm_qos_flags *pqf,$/;"	f	file:
pm_qos_get_value	power/qos.c	/^static inline int pm_qos_get_value(struct pm_qos_constraints *c)$/;"	f	file:
pm_qos_object	power/qos.c	/^struct pm_qos_object {$/;"	s	file:
pm_qos_power_fops	power/qos.c	/^static const struct file_operations pm_qos_power_fops = {$/;"	v	typeref:struct:file_operations	file:
pm_qos_power_init	power/qos.c	/^late_initcall(pm_qos_power_init);$/;"	v
pm_qos_power_init	power/qos.c	/^static int __init pm_qos_power_init(void)$/;"	f	file:
pm_qos_power_miscdev	power/qos.c	/^	struct miscdevice pm_qos_power_miscdev;$/;"	m	struct:pm_qos_object	typeref:struct:pm_qos_object::miscdevice	file:
pm_qos_power_open	power/qos.c	/^static int pm_qos_power_open(struct inode *inode, struct file *filp)$/;"	f	file:
pm_qos_power_read	power/qos.c	/^static ssize_t pm_qos_power_read(struct file *filp, char __user *buf,$/;"	f	file:
pm_qos_power_release	power/qos.c	/^static int pm_qos_power_release(struct inode *inode, struct file *filp)$/;"	f	file:
pm_qos_power_write	power/qos.c	/^static ssize_t pm_qos_power_write(struct file *filp, const char __user *buf,$/;"	f	file:
pm_qos_read_value	power/qos.c	/^s32 pm_qos_read_value(struct pm_qos_constraints *c)$/;"	f
pm_qos_remove_notifier	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_remove_notifier);$/;"	v
pm_qos_remove_notifier	power/qos.c	/^int pm_qos_remove_notifier(int pm_qos_class, struct notifier_block *notifier)$/;"	f
pm_qos_remove_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_remove_request);$/;"	v
pm_qos_remove_request	power/qos.c	/^void pm_qos_remove_request(struct pm_qos_request *req)$/;"	f
pm_qos_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_request);$/;"	v
pm_qos_request	power/qos.c	/^int pm_qos_request(int pm_qos_class)$/;"	f
pm_qos_request_active	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_request_active);$/;"	v
pm_qos_request_active	power/qos.c	/^int pm_qos_request_active(struct pm_qos_request *req)$/;"	f
pm_qos_set_value	power/qos.c	/^static inline void pm_qos_set_value(struct pm_qos_constraints *c, s32 value)$/;"	f	file:
pm_qos_update_flags	power/qos.c	/^bool pm_qos_update_flags(struct pm_qos_flags *pqf,$/;"	f
pm_qos_update_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_update_request);$/;"	v
pm_qos_update_request	power/qos.c	/^void pm_qos_update_request(struct pm_qos_request *req,$/;"	f
pm_qos_update_request_timeout	power/qos.c	/^void pm_qos_update_request_timeout(struct pm_qos_request *req, s32 new_value,$/;"	f
pm_qos_update_target	power/qos.c	/^int pm_qos_update_target(struct pm_qos_constraints *c, struct plist_node *node,$/;"	f
pm_qos_work_fn	power/qos.c	/^static void pm_qos_work_fn(struct work_struct *work)$/;"	f	file:
pm_restore_console	power/console.c	/^void pm_restore_console(void)$/;"	f
pm_show_wakelocks	power/wakelock.c	/^ssize_t pm_show_wakelocks(char *buf, bool show_active)$/;"	f
pm_start_workqueue	power/main.c	/^static int __init pm_start_workqueue(void)$/;"	f	file:
pm_states	power/suspend.c	/^const char *pm_states[PM_SUSPEND_MAX];$/;"	v
pm_states_init	power/suspend.c	/^void __init pm_states_init(void)$/;"	f
pm_suspend	power/suspend.c	/^EXPORT_SYMBOL(pm_suspend);$/;"	v
pm_suspend	power/suspend.c	/^int pm_suspend(suspend_state_t state)$/;"	f
pm_suspend_default_s2idle	power/suspend.c	/^EXPORT_SYMBOL_GPL(pm_suspend_default_s2idle);$/;"	v
pm_suspend_default_s2idle	power/suspend.c	/^bool pm_suspend_default_s2idle(void)$/;"	f
pm_suspend_global_flags	power/suspend.c	/^EXPORT_SYMBOL_GPL(pm_suspend_global_flags);$/;"	v
pm_suspend_global_flags	power/suspend.c	/^unsigned int pm_suspend_global_flags;$/;"	v
pm_suspend_target_state	power/suspend.c	/^EXPORT_SYMBOL_GPL(pm_suspend_target_state);$/;"	v
pm_suspend_target_state	power/suspend.c	/^suspend_state_t pm_suspend_target_state;$/;"	v
pm_sysrq_init	power/poweroff.c	/^static int __init pm_sysrq_init(void)$/;"	f	file:
pm_sysrq_init	power/poweroff.c	/^subsys_initcall(pm_sysrq_init);$/;"	v
pm_test	power/main.c	/^power_attr(pm_test);$/;"	v
pm_test_delay	power/suspend.c	/^static unsigned int pm_test_delay = 5;$/;"	v	file:
pm_test_level	power/main.c	/^int pm_test_level = TEST_NONE;$/;"	v
pm_test_level	power/power.h	246;"	d
pm_test_show	power/main.c	/^static ssize_t pm_test_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_test_store	power/main.c	/^static ssize_t pm_test_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_tests	power/main.c	/^static const char * const pm_tests[__TEST_AFTER_LAST] = {$/;"	v	file:
pm_trace	power/main.c	/^power_attr(pm_trace);$/;"	v
pm_trace_dev_match	power/main.c	/^power_attr_ro(pm_trace_dev_match);$/;"	v
pm_trace_dev_match_show	power/main.c	/^static ssize_t pm_trace_dev_match_show(struct kobject *kobj,$/;"	f	file:
pm_trace_enabled	power/main.c	/^int pm_trace_enabled;$/;"	v
pm_trace_show	power/main.c	/^static ssize_t pm_trace_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_trace_store	power/main.c	/^pm_trace_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_vt_switch	power/console.c	/^static bool pm_vt_switch(void)$/;"	f	file:
pm_vt_switch	power/console.c	/^struct pm_vt_switch {$/;"	s	file:
pm_vt_switch_required	power/console.c	/^EXPORT_SYMBOL(pm_vt_switch_required);$/;"	v
pm_vt_switch_required	power/console.c	/^void pm_vt_switch_required(struct device *dev, bool required)$/;"	f
pm_vt_switch_unregister	power/console.c	/^EXPORT_SYMBOL(pm_vt_switch_unregister);$/;"	v
pm_vt_switch_unregister	power/console.c	/^void pm_vt_switch_unregister(struct device *dev)$/;"	f
pm_wake_lock	power/wakelock.c	/^int pm_wake_lock(const char *buf)$/;"	f
pm_wake_unlock	power/wakelock.c	/^int pm_wake_unlock(const char *buf)$/;"	f
pm_wakeup_irq	power/main.c	/^power_attr_ro(pm_wakeup_irq);$/;"	v
pm_wakeup_irq_show	power/main.c	/^static ssize_t pm_wakeup_irq_show(struct kobject *kobj,$/;"	f	file:
pm_wq	power/main.c	/^EXPORT_SYMBOL_GPL(pm_wq);$/;"	v
pm_wq	power/main.c	/^struct workqueue_struct *pm_wq;$/;"	v	typeref:struct:workqueue_struct
pmu_bus	events/core.c	/^static struct bus_type pmu_bus = {$/;"	v	typeref:struct:bus_type	file:
pmu_bus_running	events/core.c	/^static int pmu_bus_running;$/;"	v	file:
pmu_dev	events/core.c	/^ATTRIBUTE_GROUPS(pmu_dev);$/;"	v
pmu_dev_alloc	events/core.c	/^static int pmu_dev_alloc(struct pmu *pmu)$/;"	f	file:
pmu_dev_attrs	events/core.c	/^static struct attribute *pmu_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
pmu_dev_release	events/core.c	/^static void pmu_dev_release(struct device *dev)$/;"	f	file:
pmu_filter_match	events/core.c	/^static inline int pmu_filter_match(struct perf_event *event)$/;"	f	file:
pmu_idr	events/core.c	/^static struct idr pmu_idr;$/;"	v	typeref:struct:idr	file:
pmus_srcu	events/core.c	/^static struct srcu_struct pmus_srcu;$/;"	v	typeref:struct:srcu_struct	file:
pn	cgroup/cpuset.c	/^	int pn;$/;"	m	struct:cpuset	file:
policy	sched/cpufreq_schedutil.c	/^	struct cpufreq_policy	*policy;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::cpufreq_policy	file:
policy	trace/trace.h	/^	unsigned long		policy;$/;"	m	struct:trace_array_cpu
poll	events/internal.h	/^	atomic_t			poll;		\/* POLL_ for wakeups *\/$/;"	m	struct:ring_buffer
poll_spurious_irqs	irq/spurious.c	/^static void poll_spurious_irqs(struct timer_list *unused)$/;"	f	file:
pool	workqueue.c	/^	struct worker_pool	*pool;		\/* I: the associated pool *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::worker_pool	file:
pool	workqueue_internal.h	/^	struct worker_pool	*pool;		\/* A: the associated pool *\/$/;"	m	struct:worker	typeref:struct:worker::worker_pool
pool_mayday_timeout	workqueue.c	/^static void pool_mayday_timeout(struct timer_list *t)$/;"	f	file:
pool_workqueue	workqueue.c	/^struct pool_workqueue {$/;"	s	file:
pop_stack	bpf/verifier.c	/^static int pop_stack(struct bpf_verifier_env *env, int *prev_insn_idx,$/;"	f	file:
populate_kprobe_blacklist	kprobes.c	/^static int __init populate_kprobe_blacklist(unsigned long *start,$/;"	f	file:
populate_seccomp_data	seccomp.c	/^static void populate_seccomp_data(struct seccomp_data *sd)$/;"	f	file:
portid	audit.c	/^	__u32 portid;$/;"	m	struct:audit_reply	file:
portid	audit.c	/^	u32 portid;$/;"	m	struct:auditd_connection	file:
portid	audit.h	/^	__u32 portid;$/;"	m	struct:audit_netlink_list
pos	gcov/clang.c	/^	loff_t pos;$/;"	m	struct:gcov_iterator	file:
pos	gcov/gcc_4_7.c	/^	loff_t pos;$/;"	m	struct:gcov_iterator	file:
pos	kallsyms.c	/^	loff_t pos;$/;"	m	struct:kallsym_iter	file:
pos	livepatch/core.c	/^	unsigned long pos;$/;"	m	struct:klp_find_arg	file:
pos	trace/ftrace.c	/^	loff_t				pos;$/;"	m	struct:ftrace_iterator	file:
pos	trace/trace.c	/^	u8		pos;	\/* MAX_FILTER_STR_VAL = 256 *\/$/;"	m	struct:err_info	file:
pos_arch_end	kallsyms.c	/^	loff_t pos_arch_end;$/;"	m	struct:kallsym_iter	file:
pos_ftrace_mod_end	kallsyms.c	/^	loff_t pos_ftrace_mod_end;$/;"	m	struct:kallsym_iter	file:
pos_mod_end	kallsyms.c	/^	loff_t pos_mod_end;$/;"	m	struct:kallsym_iter	file:
posix_clock_compat_ioctl	time/posix-clock.c	/^static long posix_clock_compat_ioctl(struct file *fp,$/;"	f	file:
posix_clock_desc	time/posix-clock.c	/^struct posix_clock_desc {$/;"	s	file:
posix_clock_file_operations	time/posix-clock.c	/^static const struct file_operations posix_clock_file_operations = {$/;"	v	typeref:struct:file_operations	file:
posix_clock_ioctl	time/posix-clock.c	/^static long posix_clock_ioctl(struct file *fp,$/;"	f	file:
posix_clock_open	time/posix-clock.c	/^static int posix_clock_open(struct inode *inode, struct file *fp)$/;"	f	file:
posix_clock_poll	time/posix-clock.c	/^static __poll_t posix_clock_poll(struct file *fp, poll_table *wait)$/;"	f	file:
posix_clock_read	time/posix-clock.c	/^static ssize_t posix_clock_read(struct file *fp, char __user *buf,$/;"	f	file:
posix_clock_realtime_adj	time/posix-timers.c	/^static int posix_clock_realtime_adj(const clockid_t which_clock,$/;"	f	file:
posix_clock_realtime_get	time/posix-timers.c	/^static int posix_clock_realtime_get(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_clock_realtime_set	time/posix-timers.c	/^static int posix_clock_realtime_set(const clockid_t which_clock,$/;"	f	file:
posix_clock_register	time/posix-clock.c	/^EXPORT_SYMBOL_GPL(posix_clock_register);$/;"	v
posix_clock_register	time/posix-clock.c	/^int posix_clock_register(struct posix_clock *clk, dev_t devid)$/;"	f
posix_clock_release	time/posix-clock.c	/^static int posix_clock_release(struct inode *inode, struct file *fp)$/;"	f	file:
posix_clock_unregister	time/posix-clock.c	/^EXPORT_SYMBOL_GPL(posix_clock_unregister);$/;"	v
posix_clock_unregister	time/posix-clock.c	/^void posix_clock_unregister(struct posix_clock *clk)$/;"	f
posix_clocks	time/posix-timers.c	/^static const struct k_clock * const posix_clocks[] = {$/;"	v	file:
posix_clocks	time/posix-timers.c	/^static const struct k_clock * const posix_clocks[];$/;"	v	file:
posix_cpu_clock_get	time/posix-cpu-timers.c	/^static int posix_cpu_clock_get(const clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_cpu_clock_get_task	time/posix-cpu-timers.c	/^static int posix_cpu_clock_get_task(struct task_struct *tsk,$/;"	f	file:
posix_cpu_clock_getres	time/posix-cpu-timers.c	/^posix_cpu_clock_getres(const clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_cpu_clock_set	time/posix-cpu-timers.c	/^posix_cpu_clock_set(const clockid_t which_clock, const struct timespec64 *tp)$/;"	f	file:
posix_cpu_nsleep	time/posix-cpu-timers.c	/^static int posix_cpu_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
posix_cpu_nsleep_restart	time/posix-cpu-timers.c	/^static long posix_cpu_nsleep_restart(struct restart_block *restart_block)$/;"	f	file:
posix_cpu_timer_create	time/posix-cpu-timers.c	/^static int posix_cpu_timer_create(struct k_itimer *new_timer)$/;"	f	file:
posix_cpu_timer_del	time/posix-cpu-timers.c	/^static int posix_cpu_timer_del(struct k_itimer *timer)$/;"	f	file:
posix_cpu_timer_get	time/posix-cpu-timers.c	/^static void posix_cpu_timer_get(struct k_itimer *timer, struct itimerspec64 *itp)$/;"	f	file:
posix_cpu_timer_rearm	time/posix-cpu-timers.c	/^static void posix_cpu_timer_rearm(struct k_itimer *timer)$/;"	f	file:
posix_cpu_timer_set	time/posix-cpu-timers.c	/^static int posix_cpu_timer_set(struct k_itimer *timer, int timer_flags,$/;"	f	file:
posix_cpu_timers_exit	time/posix-cpu-timers.c	/^void posix_cpu_timers_exit(struct task_struct *tsk)$/;"	f
posix_cpu_timers_exit_group	time/posix-cpu-timers.c	/^void posix_cpu_timers_exit_group(struct task_struct *tsk)$/;"	f
posix_cpu_timers_init	fork.c	/^static inline void posix_cpu_timers_init(struct task_struct *tsk) { }$/;"	f	file:
posix_cpu_timers_init	fork.c	/^static void posix_cpu_timers_init(struct task_struct *tsk)$/;"	f	file:
posix_cpu_timers_init_group	fork.c	/^static inline void posix_cpu_timers_init_group(struct signal_struct *sig) { }$/;"	f	file:
posix_cpu_timers_init_group	fork.c	/^static void posix_cpu_timers_init_group(struct signal_struct *sig)$/;"	f	file:
posix_get_boottime	time/posix-timers.c	/^static int posix_get_boottime(const clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_get_coarse_res	time/posix-timers.c	/^static int posix_get_coarse_res(const clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_get_hrtimer_res	time/posix-timers.c	/^static int posix_get_hrtimer_res(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_get_monotonic_coarse	time/posix-timers.c	/^static int posix_get_monotonic_coarse(clockid_t which_clock,$/;"	f	file:
posix_get_monotonic_raw	time/posix-timers.c	/^static int posix_get_monotonic_raw(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_get_realtime_coarse	time/posix-timers.c	/^static int posix_get_realtime_coarse(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_get_tai	time/posix-timers.c	/^static int posix_get_tai(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_ktime_get_ts	time/posix-timers.c	/^static int posix_ktime_get_ts(clockid_t which_clock, struct timespec64 *tp)$/;"	f	file:
posix_timer_add	time/posix-timers.c	/^static int posix_timer_add(struct k_itimer *timer)$/;"	f	file:
posix_timer_by_id	time/posix-timers.c	/^static struct k_itimer *posix_timer_by_id(timer_t id)$/;"	f	file:
posix_timer_event	time/posix-timers.c	/^int posix_timer_event(struct k_itimer *timr, int si_private)$/;"	f
posix_timer_fn	time/posix-timers.c	/^static enum hrtimer_restart posix_timer_fn(struct hrtimer *timer)$/;"	f	file:
posix_timers_cache	time/posix-timers.c	/^static struct kmem_cache *posix_timers_cache;$/;"	v	typeref:struct:kmem_cache	file:
posixtimer_rearm	time/posix-timers.c	/^void posixtimer_rearm(struct kernel_siginfo *info)$/;"	f
post_copy_siginfo_from_user	signal.c	/^static int post_copy_siginfo_from_user(kernel_siginfo_t *info,$/;"	f	file:
post_copy_siginfo_from_user32	signal.c	/^static int post_copy_siginfo_from_user32(kernel_siginfo_t *to,$/;"	f	file:
post_init_entity_util_avg	sched/fair.c	/^void post_init_entity_util_avg(struct task_struct *p)$/;"	f
post_relocation	module.c	/^static int post_relocation(struct module *mod, const struct load_info *info)$/;"	f	file:
posth_val	test_kprobes.c	/^static u32 rand1, preh_val, posth_val;$/;"	v	file:
power_attr	power/power.h	78;"	d
power_attr_ro	power/power.h	88;"	d
power_down	power/hibernate.c	/^static void power_down(void)$/;"	f	file:
power_kobj	power/main.c	/^struct kobject *power_kobj;$/;"	v	typeref:struct:kobject
power_of_ten	cgroup/cgroup.c	/^static u64 power_of_ten(int power)$/;"	f	file:
powernv_throttle	trace/power-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(powernv_throttle);$/;"	v
poweroff_cmd	reboot.c	/^char poweroff_cmd[POWEROFF_CMD_PATH_LEN] = "\/sbin\/poweroff";$/;"	v
poweroff_force	reboot.c	/^static bool poweroff_force;$/;"	v	file:
poweroff_work_func	reboot.c	/^static void poweroff_work_func(struct work_struct *work)$/;"	f	file:
ppid	audit.h	/^	pid_t		    pid, ppid;$/;"	m	struct:audit_context
ppid	events/core.c	/^		u32				ppid;$/;"	m	struct:perf_task_event::__anon1	file:
pps_calcnt	time/ntp.c	/^static long pps_calcnt;		\/* calibration intervals *\/$/;"	v	file:
pps_clear	time/ntp.c	/^static inline void pps_clear(void) {}$/;"	f	file:
pps_clear	time/ntp.c	/^static inline void pps_clear(void)$/;"	f	file:
pps_dec_freq_interval	time/ntp.c	/^static inline void pps_dec_freq_interval(void)$/;"	f	file:
pps_dec_valid	time/ntp.c	/^static inline void pps_dec_valid(void) {}$/;"	f	file:
pps_dec_valid	time/ntp.c	/^static inline void pps_dec_valid(void)$/;"	f	file:
pps_errcnt	time/ntp.c	/^static long pps_errcnt;		\/* calibration errors *\/$/;"	v	file:
pps_fbase	time/ntp.c	/^static struct timespec64 pps_fbase; \/* beginning of the last freq interval *\/$/;"	v	typeref:struct:timespec64	file:
pps_fill_timex	time/ntp.c	/^static inline void pps_fill_timex(struct __kernel_timex *txc)$/;"	f	file:
pps_freq	time/ntp.c	/^static s64 pps_freq;		\/* frequency offset (scaled ns\/s) *\/$/;"	v	file:
pps_inc_freq_interval	time/ntp.c	/^static inline void pps_inc_freq_interval(void)$/;"	f	file:
pps_intcnt	time/ntp.c	/^static int pps_intcnt;		\/* interval counter *\/$/;"	v	file:
pps_jitcnt	time/ntp.c	/^static long pps_jitcnt;		\/* jitter limit exceeded *\/$/;"	v	file:
pps_jitter	time/ntp.c	/^static long pps_jitter;		\/* current jitter (ns) *\/$/;"	v	file:
pps_normalize_ts	time/ntp.c	/^static inline struct pps_normtime pps_normalize_ts(struct timespec64 ts)$/;"	f	file:
pps_normtime	time/ntp.c	/^struct pps_normtime {$/;"	s	file:
pps_phase_filter_add	time/ntp.c	/^static inline void pps_phase_filter_add(long err)$/;"	f	file:
pps_phase_filter_get	time/ntp.c	/^static inline long pps_phase_filter_get(long *jitter)$/;"	f	file:
pps_reset_freq_interval	time/ntp.c	/^static inline void pps_reset_freq_interval(void) {}$/;"	f	file:
pps_reset_freq_interval	time/ntp.c	/^static inline void pps_reset_freq_interval(void)$/;"	f	file:
pps_set_freq	time/ntp.c	/^static inline void pps_set_freq(s64 freq) {}$/;"	f	file:
pps_set_freq	time/ntp.c	/^static inline void pps_set_freq(s64 freq)$/;"	f	file:
pps_shift	time/ntp.c	/^static int pps_shift;		\/* current interval duration (s) (shift) *\/$/;"	v	file:
pps_stabil	time/ntp.c	/^static long pps_stabil;		\/* current stability (scaled ns\/s) *\/$/;"	v	file:
pps_stbcnt	time/ntp.c	/^static long pps_stbcnt;		\/* stability limit exceeded *\/$/;"	v	file:
pps_tf	time/ntp.c	/^static long pps_tf[3];		\/* phase median filter *\/$/;"	v	file:
pps_valid	time/ntp.c	/^static int pps_valid;		\/* signal watchdog counter *\/$/;"	v	file:
pr_cont_pool_info	workqueue.c	/^static void pr_cont_pool_info(struct worker_pool *pool)$/;"	f	file:
pr_cont_work	workqueue.c	/^static void pr_cont_work(bool comma, struct work_struct *work)$/;"	f	file:
pr_fmt	audit.c	32;"	d	file:
pr_fmt	auditfilter.c	9;"	d	file:
pr_fmt	auditsc.c	45;"	d	file:
pr_fmt	capability.c	11;"	d	file:
pr_fmt	cgroup/cgroup.c	29;"	d	file:
pr_fmt	debug/debug_core.c	31;"	d	file:
pr_fmt	dma/contiguous.c	10;"	d	file:
pr_fmt	dma/contiguous.c	279;"	d	file:
pr_fmt	dma/contiguous.c	280;"	d	file:
pr_fmt	dma/debug.c	8;"	d	file:
pr_fmt	dma/swiotlb.c	21;"	d	file:
pr_fmt	gcov/base.c	17;"	d	file:
pr_fmt	gcov/clang.c	45;"	d	file:
pr_fmt	gcov/fs.c	18;"	d	file:
pr_fmt	irq/ipi.c	9;"	d	file:
pr_fmt	irq/irqdomain.c	3;"	d	file:
pr_fmt	irq/manage.c	9;"	d	file:
pr_fmt	irq/timings.c	3;"	d	file:
pr_fmt	kcov.c	2;"	d	file:
pr_fmt	kexec.c	7;"	d	file:
pr_fmt	kexec_core.c	7;"	d	file:
pr_fmt	kexec_file.c	10;"	d	file:
pr_fmt	livepatch/core.c	9;"	d	file:
pr_fmt	livepatch/patch.c	10;"	d	file:
pr_fmt	livepatch/shadow.c	32;"	d	file:
pr_fmt	livepatch/transition.c	8;"	d	file:
pr_fmt	locking/locktorture.c	12;"	d	file:
pr_fmt	power/energy_model.c	9;"	d	file:
pr_fmt	power/hibernate.c	12;"	d	file:
pr_fmt	power/snapshot.c	11;"	d	file:
pr_fmt	power/suspend.c	10;"	d	file:
pr_fmt	power/swap.c	13;"	d	file:
pr_fmt	printk/braille.c	2;"	d	file:
pr_fmt	printk/printk.c	20;"	d	file:
pr_fmt	rcu/rcuperf.c	10;"	d	file:
pr_fmt	rcu/rcutorture.c	13;"	d	file:
pr_fmt	rcu/srcutree.c	16;"	d	file:
pr_fmt	rcu/tree.c	18;"	d	file:
pr_fmt	reboot.c	8;"	d	file:
pr_fmt	resource.c	11;"	d	file:
pr_fmt	sched/cpufreq_schedutil.c	9;"	d	file:
pr_fmt	smp.c	8;"	d	file:
pr_fmt	softirq.c	10;"	d	file:
pr_fmt	test_kprobes.c	8;"	d	file:
pr_fmt	time/clocksource.c	8;"	d	file:
pr_fmt	torture.c	11;"	d	file:
pr_fmt	trace/trace_events.c	12;"	d	file:
pr_fmt	trace/trace_kprobe.c	8;"	d	file:
pr_fmt	trace/trace_probe.c	12;"	d	file:
pr_fmt	trace/trace_uprobe.c	8;"	d	file:
pr_fmt	watchdog.c	13;"	d	file:
pr_fmt	watchdog_hld.c	13;"	d	file:
prctl_get_seccomp	seccomp.c	/^long prctl_get_seccomp(void)$/;"	f
prctl_get_tid_address	sys.c	/^static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)$/;"	f	file:
prctl_set_auxv	sys.c	/^static int prctl_set_auxv(struct mm_struct *mm, unsigned long addr,$/;"	f	file:
prctl_set_mm	sys.c	/^static int prctl_set_mm(int opt, unsigned long addr,$/;"	f	file:
prctl_set_mm_exe_file	sys.c	/^static int prctl_set_mm_exe_file(struct mm_struct *mm, unsigned int fd)$/;"	f	file:
prctl_set_mm_map	sys.c	/^static int prctl_set_mm_map(int opt, const void __user *addr, unsigned long data_size)$/;"	f	file:
prctl_set_seccomp	seccomp.c	/^long prctl_set_seccomp(unsigned long seccomp_mode, void __user *filter)$/;"	f
pre_handler_kretprobe	kprobes.c	/^NOKPROBE_SYMBOL(pre_handler_kretprobe);$/;"	v
pre_handler_kretprobe	kprobes.c	/^static int pre_handler_kretprobe(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
pre_ssout	events/uprobes.c	/^pre_ssout(struct uprobe *uprobe, struct pt_regs *regs, unsigned long bp_vaddr)$/;"	f	file:
prealloc_destroy	bpf/hashtab.c	/^static void prealloc_destroy(struct bpf_htab *htab)$/;"	f	file:
prealloc_elems_and_freelist	bpf/stackmap.c	/^static int prealloc_elems_and_freelist(struct bpf_stack_map *smap)$/;"	f	file:
prealloc_init	bpf/hashtab.c	/^static int prealloc_init(struct bpf_htab *htab)$/;"	f	file:
prealloc_lru_pop	bpf/hashtab.c	/^static struct htab_elem *prealloc_lru_pop(struct bpf_htab *htab, void *key,$/;"	f	file:
preallocate_highmem_fraction	power/snapshot.c	/^static inline unsigned long preallocate_highmem_fraction(unsigned long nr_pages,$/;"	f	file:
preallocate_highmem_fraction	power/snapshot.c	/^static unsigned long preallocate_highmem_fraction(unsigned long nr_pages,$/;"	f	file:
preallocate_image_highmem	power/snapshot.c	/^static inline unsigned long preallocate_image_highmem(unsigned long nr_pages)$/;"	f	file:
preallocate_image_highmem	power/snapshot.c	/^static unsigned long preallocate_image_highmem(unsigned long nr_pages)$/;"	f	file:
preallocate_image_memory	power/snapshot.c	/^static unsigned long preallocate_image_memory(unsigned long nr_pages,$/;"	f	file:
preallocate_image_pages	power/snapshot.c	/^static unsigned long preallocate_image_pages(unsigned long nr_pages, gfp_t mask)$/;"	f	file:
preallocated_names	audit.h	/^	struct audit_names  preallocated_names[AUDIT_NAMES];$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_names
pred	trace/trace_events_filter.c	/^	struct filter_pred	*pred;$/;"	m	struct:prog_entry	typeref:struct:prog_entry::filter_pred	file:
predicate_parse	trace/trace_events_filter.c	/^predicate_parse(const char *str, int nr_parens, int nr_preds,$/;"	f	file:
preempt_count_add	sched/core.c	/^EXPORT_SYMBOL(preempt_count_add);$/;"	v
preempt_count_add	sched/core.c	/^NOKPROBE_SYMBOL(preempt_count_add);$/;"	v
preempt_count_add	sched/core.c	/^void preempt_count_add(int val)$/;"	f
preempt_count_equals	sched/core.c	/^static inline int preempt_count_equals(int preempt_offset)$/;"	f	file:
preempt_count_sub	sched/core.c	/^EXPORT_SYMBOL(preempt_count_sub);$/;"	v
preempt_count_sub	sched/core.c	/^NOKPROBE_SYMBOL(preempt_count_sub);$/;"	v
preempt_count_sub	sched/core.c	/^void preempt_count_sub(int val)$/;"	f
preempt_latency_start	sched/core.c	/^static inline void preempt_latency_start(int val) { }$/;"	f	file:
preempt_latency_start	sched/core.c	/^static inline void preempt_latency_start(int val)$/;"	f	file:
preempt_latency_stop	sched/core.c	/^static inline void preempt_latency_stop(int val) { }$/;"	f	file:
preempt_latency_stop	sched/core.c	/^static inline void preempt_latency_stop(int val)$/;"	f	file:
preempt_notifier_dec	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_dec);$/;"	v
preempt_notifier_dec	sched/core.c	/^void preempt_notifier_dec(void)$/;"	f
preempt_notifier_inc	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_inc);$/;"	v
preempt_notifier_inc	sched/core.c	/^void preempt_notifier_inc(void)$/;"	f
preempt_notifier_register	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_register);$/;"	v
preempt_notifier_register	sched/core.c	/^void preempt_notifier_register(struct preempt_notifier *notifier)$/;"	f
preempt_notifier_unregister	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_unregister);$/;"	v
preempt_notifier_unregister	sched/core.c	/^void preempt_notifier_unregister(struct preempt_notifier *notifier)$/;"	f
preempt_schedule	sched/core.c	/^EXPORT_SYMBOL(preempt_schedule);$/;"	v
preempt_schedule	sched/core.c	/^NOKPROBE_SYMBOL(preempt_schedule);$/;"	v
preempt_schedule	sched/core.c	/^asmlinkage __visible void __sched notrace preempt_schedule(void)$/;"	f
preempt_schedule_common	sched/core.c	/^static void __sched notrace preempt_schedule_common(void)$/;"	f	file:
preempt_schedule_irq	sched/core.c	/^asmlinkage __visible void __sched preempt_schedule_irq(void)$/;"	f
preempt_schedule_notrace	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_schedule_notrace);$/;"	v
preempt_schedule_notrace	sched/core.c	/^asmlinkage __visible void __sched notrace preempt_schedule_notrace(void)$/;"	f
preempt_timestamp	trace/trace.h	/^	u64			preempt_timestamp;$/;"	m	struct:trace_array_cpu
preempt_trace	trace/trace_irqsoff.c	/^preempt_trace(int pc)$/;"	f	file:
preempt_trace	trace/trace_irqsoff.c	50;"	d	file:
preemptirq_delay_exit	trace/preemptirq_delay_test.c	/^static void __exit preemptirq_delay_exit(void)$/;"	f	file:
preemptirq_delay_init	trace/preemptirq_delay_test.c	/^static int __init preemptirq_delay_init(void)$/;"	f	file:
preemptirq_delay_run	trace/preemptirq_delay_test.c	/^static int preemptirq_delay_run(void *data)$/;"	f	file:
preemptirqsoff_tracer_init	trace/trace_irqsoff.c	/^static int preemptirqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
preemptirqsoff_tracer_reset	trace/trace_irqsoff.c	/^static void preemptirqsoff_tracer_reset(struct trace_array *tr)$/;"	f	file:
preemptoff_tracer_init	trace/trace_irqsoff.c	/^static int preemptoff_tracer_init(struct trace_array *tr)$/;"	f	file:
preemptoff_tracer_reset	trace/trace_irqsoff.c	/^static void preemptoff_tracer_reset(struct trace_array *tr)$/;"	f	file:
preferred_console	printk/printk.c	/^static int preferred_console = -1;$/;"	v	file:
preferred_group_nid	sched/fair.c	/^static int preferred_group_nid(struct task_struct *p, int nid)$/;"	f	file:
prefetch_curr_exec_start	sched/core.c	/^static inline void prefetch_curr_exec_start(struct task_struct *p)$/;"	f	file:
prefixlen	bpf/lpm_trie.c	/^	u32				prefixlen;$/;"	m	struct:lpm_trie_node	file:
preflow_handler	irq/chip.c	/^static inline void preflow_handler(struct irq_desc *desc) { }$/;"	f	file:
preflow_handler	irq/chip.c	/^static inline void preflow_handler(struct irq_desc *desc)$/;"	f	file:
preh_val	test_kprobes.c	/^static u32 rand1, preh_val, posth_val;$/;"	v	file:
preloaded_dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_dst_csets;$/;"	m	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head
preloaded_src_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_src_csets;$/;"	m	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head
prepare_arch_switch	sched/core.c	3012;"	d	file:
prepare_coming_module	module.c	/^static int prepare_coming_module(struct module *mod)$/;"	f	file:
prepare_creds	cred.c	/^EXPORT_SYMBOL(prepare_creds);$/;"	v
prepare_creds	cred.c	/^struct cred *prepare_creds(void)$/;"	f
prepare_exec_creds	cred.c	/^struct cred *prepare_exec_creds(void)$/;"	f
prepare_func_exit	bpf/verifier.c	/^static int prepare_func_exit(struct bpf_verifier_env *env, int *insn_idx)$/;"	f	file:
prepare_highmem_image	power/snapshot.c	/^static inline int prepare_highmem_image(struct memory_bitmap *bm,$/;"	f	file:
prepare_highmem_image	power/snapshot.c	/^static int prepare_highmem_image(struct memory_bitmap *bm,$/;"	f	file:
prepare_image	power/snapshot.c	/^static int prepare_image(struct memory_bitmap *new_bm, struct memory_bitmap *bm)$/;"	f	file:
prepare_kernel_cred	cred.c	/^EXPORT_SYMBOL(prepare_kernel_cred);$/;"	v
prepare_kernel_cred	cred.c	/^struct cred *prepare_kernel_cred(struct task_struct *daemon)$/;"	f
prepare_kill_siginfo	signal.c	/^static inline void prepare_kill_siginfo(int sig, struct kernel_siginfo *info)$/;"	f	file:
prepare_kprobe	kprobes.c	/^static int prepare_kprobe(struct kprobe *p)$/;"	f	file:
prepare_kprobe	kprobes.c	1032;"	d	file:
prepare_lock_switch	sched/core.c	/^prepare_lock_switch(struct rq *rq, struct task_struct *next, struct rq_flags *rf)$/;"	f	file:
prepare_optimized_kprobe	kprobes.c	/^static void prepare_optimized_kprobe(struct kprobe *p)$/;"	f	file:
prepare_optimized_kprobe	kprobes.c	931;"	d	file:
prepare_percpu_nmi	irq/manage.c	/^int prepare_percpu_nmi(unsigned int irq)$/;"	f
prepare_reply	taskstats.c	/^static int prepare_reply(struct genl_info *info, u8 cmd, struct sk_buff **skbp,$/;"	f	file:
prepare_signal	signal.c	/^static bool prepare_signal(int sig, struct task_struct *p, bool force)$/;"	f	file:
prepare_task	sched/core.c	/^static inline void prepare_task(struct task_struct *next)$/;"	f	file:
prepare_task_switch	sched/core.c	/^prepare_task_switch(struct rq *rq, struct task_struct *prev,$/;"	f	file:
prepare_to_swait_event	sched/swait.c	/^EXPORT_SYMBOL(prepare_to_swait_event);$/;"	v
prepare_to_swait_event	sched/swait.c	/^long prepare_to_swait_event(struct swait_queue_head *q, struct swait_queue *wait, int state)$/;"	f
prepare_to_swait_exclusive	sched/swait.c	/^EXPORT_SYMBOL(prepare_to_swait_exclusive);$/;"	v
prepare_to_swait_exclusive	sched/swait.c	/^void prepare_to_swait_exclusive(struct swait_queue_head *q, struct swait_queue *wait, int state)$/;"	f
prepare_to_wait	sched/wait.c	/^EXPORT_SYMBOL(prepare_to_wait);$/;"	v
prepare_to_wait	sched/wait.c	/^prepare_to_wait(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry, int state)$/;"	f
prepare_to_wait_event	sched/wait.c	/^EXPORT_SYMBOL(prepare_to_wait_event);$/;"	v
prepare_to_wait_event	sched/wait.c	/^long prepare_to_wait_event(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry, int state)$/;"	f
prepare_to_wait_exclusive	sched/wait.c	/^EXPORT_SYMBOL(prepare_to_wait_exclusive);$/;"	v
prepare_to_wait_exclusive	sched/wait.c	/^prepare_to_wait_exclusive(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry, int state)$/;"	f
prepare_uprobe	events/uprobes.c	/^static int prepare_uprobe(struct uprobe *uprobe, struct file *file,$/;"	f	file:
prepare_uretprobe	events/uprobes.c	/^static void prepare_uretprobe(struct uprobe *uprobe, struct pt_regs *regs)$/;"	f	file:
prev	seccomp.c	/^	struct seccomp_filter *prev;$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::seccomp_filter	file:
prev_insn_idx	bpf/verifier.c	/^	int prev_insn_idx;$/;"	m	struct:bpf_verifier_stack_elem	file:
prev_irq_time	sched/sched.h	/^	u64			prev_irq_time;$/;"	m	struct:rq
prev_mm	sched/sched.h	/^	struct mm_struct	*prev_mm;$/;"	m	struct:rq	typeref:struct:rq::mm_struct
prev_overruns	trace/trace_mmiotrace.c	/^static unsigned long prev_overruns;$/;"	v	file:
prev_steal_time	sched/sched.h	/^	u64			prev_steal_time;$/;"	m	struct:rq
prev_steal_time_rq	sched/sched.h	/^	u64			prev_steal_time_rq;$/;"	m	struct:rq
prev_time	trace/trace_clock.c	/^	u64 prev_time;$/;"	m	struct:__anon37	file:
pri_to_cpu	sched/cpupri.h	/^	struct cpupri_vec	pri_to_cpu[CPUPRI_NR_PRIORITIES];$/;"	m	struct:cpupri	typeref:struct:cpupri::cpupri_vec
primary_event_id	events/core.c	/^static u64 primary_event_id(struct perf_event *event)$/;"	f	file:
print	trace/blktrace.c	/^	void	   (*print)(struct trace_seq *s, const struct trace_entry *ent,$/;"	m	struct:__anon38	file:
print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	m	struct:event_trigger_ops
print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	m	struct:ftrace_probe_ops
print	trace/trace_probe.h	/^	print_type_func_t	print;		\/* Print functions *\/$/;"	m	struct:fetch_type
print_action_spec	trace/trace_events_hist.c	/^static void print_action_spec(struct seq_file *m,$/;"	f	file:
print_actions	trace/trace_events_hist.c	/^static void print_actions(struct seq_file *m,$/;"	f	file:
print_actions_spec	trace/trace_events_hist.c	/^static void print_actions_spec(struct seq_file *m,$/;"	f	file:
print_active_timers	time/timer_list.c	/^print_active_timers(struct seq_file *m, struct hrtimer_clock_base *base,$/;"	f	file:
print_bad_irq_dependency	locking/lockdep.c	/^print_bad_irq_dependency(struct task_struct *curr,$/;"	f	file:
print_base	time/timer_list.c	/^print_base(struct seq_file *m, struct hrtimer_clock_base *base, u64 now)$/;"	f	file:
print_bfs_bug	locking/lockdep.c	/^static noinline void print_bfs_bug(int ret)$/;"	f	file:
print_bin_fmt	trace/trace.c	/^static enum print_line_t print_bin_fmt(struct trace_iterator *iter)$/;"	f	file:
print_bpf_end_insn	bpf/disasm.c	/^static void print_bpf_end_insn(bpf_insn_print_t verbose,$/;"	f	file:
print_bpf_insn	bpf/disasm.c	/^void print_bpf_insn(const struct bpf_insn_cbs *cbs,$/;"	f
print_bug_type	trace/ftrace.c	/^static void print_bug_type(void)$/;"	f	file:
print_caller	printk/printk.c	/^static size_t print_caller(u32 id, char *buf)$/;"	f	file:
print_caller	printk/printk.c	1275;"	d	file:
print_cfs_group_stats	sched/debug.c	/^static void print_cfs_group_stats(struct seq_file *m, int cpu, struct task_group *tg)$/;"	f	file:
print_cfs_rq	sched/debug.c	/^void print_cfs_rq(struct seq_file *m, int cpu, struct cfs_rq *cfs_rq)$/;"	f
print_cfs_stats	sched/fair.c	/^void print_cfs_stats(struct seq_file *m, int cpu)$/;"	f
print_chain_key_iteration	locking/lockdep.c	/^static u64 print_chain_key_iteration(int class_idx, u64 chain_key)$/;"	f	file:
print_chain_keys_chain	locking/lockdep.c	/^static void print_chain_keys_chain(struct lock_chain *chain)$/;"	f	file:
print_chain_keys_held_locks	locking/lockdep.c	/^print_chain_keys_held_locks(struct task_struct *curr, struct held_lock *hlock_next)$/;"	f	file:
print_circular_bug	locking/lockdep.c	/^static noinline void print_circular_bug(struct lock_list *this,$/;"	f	file:
print_circular_bug_entry	locking/lockdep.c	/^print_circular_bug_entry(struct lock_list *target, int depth)$/;"	f	file:
print_circular_bug_header	locking/lockdep.c	/^print_circular_bug_header(struct lock_list *entry, unsigned int depth,$/;"	f	file:
print_circular_lock_scenario	locking/lockdep.c	/^print_circular_lock_scenario(struct held_lock *src,$/;"	f	file:
print_collision	locking/lockdep.c	/^static void print_collision(struct task_struct *curr,$/;"	f	file:
print_counts	trace/trace_selftest.c	/^static void print_counts(void)$/;"	f	file:
print_cpu	sched/debug.c	/^static void print_cpu(struct seq_file *m, int cpu)$/;"	f	file:
print_cpu	time/timer_list.c	/^static void print_cpu(struct seq_file *m, int cpu, u64 now)$/;"	f	file:
print_cpu_stall	rcu/tree_stall.h	/^static void print_cpu_stall(void)$/;"	f
print_cpu_stall_fast_no_hz	rcu/tree_stall.h	/^static void print_cpu_stall_fast_no_hz(char *cp, int cpu)$/;"	f
print_cpu_stall_info	rcu/tree_stall.h	/^static void print_cpu_stall_info(int cpu)$/;"	f
print_deadlock_bug	locking/lockdep.c	/^print_deadlock_bug(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
print_deadlock_scenario	locking/lockdep.c	/^print_deadlock_scenario(struct held_lock *nxt, struct held_lock *prv)$/;"	f	file:
print_disabled	trace/trace_stack.c	/^static void print_disabled(struct seq_file *m)$/;"	f	file:
print_dl_rq	sched/debug.c	/^void print_dl_rq(struct seq_file *m, int cpu, struct dl_rq *dl_rq)$/;"	f
print_dl_stats	sched/deadline.c	/^void print_dl_stats(struct seq_file *m, int cpu)$/;"	f
print_dropped_signal	signal.c	/^static inline void print_dropped_signal(int sig)$/;"	f	file:
print_entries	trace/trace_events_hist.c	/^static int print_entries(struct seq_file *m,$/;"	f	file:
print_event_filter	trace/trace_events_filter.c	/^void print_event_filter(struct trace_event_file *file, struct trace_seq *s)$/;"	f
print_event_info	trace/trace.c	/^static void print_event_info(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_fatal_signal	signal.c	/^static void print_fatal_signal(int signr)$/;"	f	file:
print_freed_lock_bug	locking/lockdep.c	/^print_freed_lock_bug(struct task_struct *curr, const void *mem_from,$/;"	f	file:
print_func_help_header	trace/trace.c	/^static void print_func_help_header(struct trace_buffer *buf, struct seq_file *m,$/;"	f	file:
print_func_help_header_irq	trace/trace.c	/^static void print_func_help_header_irq(struct trace_buffer *buf, struct seq_file *m,$/;"	f	file:
print_graph_abs_time	trace/trace_functions_graph.c	/^static void print_graph_abs_time(u64 t, struct trace_seq *s)$/;"	f	file:
print_graph_comment	trace/trace_functions_graph.c	/^print_graph_comment(struct trace_seq *s, struct trace_entry *ent,$/;"	f	file:
print_graph_cpu	trace/trace_functions_graph.c	/^static void print_graph_cpu(struct trace_seq *s, int cpu)$/;"	f	file:
print_graph_duration	trace/trace_functions_graph.c	/^print_graph_duration(struct trace_array *tr, unsigned long long duration,$/;"	f	file:
print_graph_entry	trace/trace_functions_graph.c	/^print_graph_entry(struct ftrace_graph_ent_entry *field, struct trace_seq *s,$/;"	f	file:
print_graph_entry_leaf	trace/trace_functions_graph.c	/^print_graph_entry_leaf(struct trace_iterator *iter,$/;"	f	file:
print_graph_entry_nested	trace/trace_functions_graph.c	/^print_graph_entry_nested(struct trace_iterator *iter,$/;"	f	file:
print_graph_function	trace/trace_functions_graph.c	/^print_graph_function(struct trace_iterator *iter)$/;"	f	file:
print_graph_function_event	trace/trace_functions_graph.c	/^print_graph_function_event(struct trace_iterator *iter, int flags,$/;"	f	file:
print_graph_function_flags	trace/trace.h	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags)$/;"	f
print_graph_function_flags	trace/trace_functions_graph.c	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags)$/;"	f
print_graph_headers	trace/trace_functions_graph.c	/^static void print_graph_headers(struct seq_file *s)$/;"	f	file:
print_graph_headers_flags	trace/trace_functions_graph.c	/^void print_graph_headers_flags(struct seq_file *s, u32 flags)$/;"	f
print_graph_irq	trace/trace_functions_graph.c	/^print_graph_irq(struct trace_iterator *iter, unsigned long addr,$/;"	f	file:
print_graph_lat_fmt	trace/trace_functions_graph.c	/^static void print_graph_lat_fmt(struct trace_seq *s, struct trace_entry *entry)$/;"	f	file:
print_graph_proc	trace/trace_functions_graph.c	/^static void print_graph_proc(struct trace_seq *s, pid_t pid)$/;"	f	file:
print_graph_prologue	trace/trace_functions_graph.c	/^print_graph_prologue(struct trace_iterator *iter, struct trace_seq *s,$/;"	f	file:
print_graph_rel_time	trace/trace_functions_graph.c	/^print_graph_rel_time(struct trace_iterator *iter, struct trace_seq *s)$/;"	f	file:
print_graph_return	trace/trace_functions_graph.c	/^print_graph_return(struct ftrace_graph_ret *trace, struct trace_seq *s,$/;"	f	file:
print_header	trace/trace.h	/^	void			(*print_header)(struct seq_file *m);$/;"	m	struct:tracer
print_held_locks_bug	locking/lockdep.c	/^static void print_held_locks_bug(void)$/;"	f	file:
print_hex_fmt	trace/trace.c	/^static enum print_line_t print_hex_fmt(struct trace_iterator *iter)$/;"	f	file:
print_ip_ins	trace/ftrace.c	/^static void print_ip_ins(const char *fmt, const unsigned char *p)$/;"	f	file:
print_irq_desc	irq/debug.h	/^static inline void print_irq_desc(unsigned int irq, struct irq_desc *desc)$/;"	f
print_irq_inversion_bug	locking/lockdep.c	/^print_irq_inversion_bug(struct task_struct *curr,$/;"	f	file:
print_irq_lock_scenario	locking/lockdep.c	/^print_irq_lock_scenario(struct lock_list *safe_entry,$/;"	f	file:
print_irqtrace_events	locking/lockdep.c	/^void print_irqtrace_events(struct task_struct *curr)$/;"	f
print_kernel_ident	locking/lockdep.c	/^static void print_kernel_ident(void)$/;"	f	file:
print_kprobe_event	trace/trace_kprobe.c	/^print_kprobe_event(struct trace_iterator *iter, int flags,$/;"	f	file:
print_kretprobe_event	trace/trace_kprobe.c	/^print_kretprobe_event(struct trace_iterator *iter, int flags,$/;"	f	file:
print_lat_header	trace/trace_functions_graph.c	/^static void print_lat_header(struct seq_file *s, u32 flags)$/;"	f	file:
print_lat_help_header	trace/trace.c	/^static void print_lat_help_header(struct seq_file *m)$/;"	f	file:
print_line	trace/trace.h	/^	enum print_line_t	(*print_line)(struct trace_iterator *iter);$/;"	m	struct:tracer	typeref:enum:tracer::print_line
print_liveness	bpf/verifier.c	/^static void print_liveness(struct bpf_verifier_env *env,$/;"	f	file:
print_lock	locking/lockdep.c	/^static void print_lock(struct held_lock *hlock)$/;"	f	file:
print_lock_class_header	locking/lockdep.c	/^static void print_lock_class_header(struct lock_class *class, int depth)$/;"	f	file:
print_lock_contention_bug	locking/lockdep.c	/^static void print_lock_contention_bug(struct task_struct *curr,$/;"	f	file:
print_lock_name	locking/lockdep.c	/^static void print_lock_name(struct lock_class *class)$/;"	f	file:
print_lock_nested_lock_not_held	locking/lockdep.c	/^print_lock_nested_lock_not_held(struct task_struct *curr,$/;"	f	file:
print_lock_trace	locking/lockdep.c	/^static void print_lock_trace(struct lock_trace *trace, unsigned int spaces)$/;"	f	file:
print_lockdep_cache	locking/lockdep.c	/^static void print_lockdep_cache(struct lockdep_map *lock)$/;"	f	file:
print_lockdep_off	locking/lockdep.c	/^static void print_lockdep_off(const char *bug_msg)$/;"	f	file:
print_max	trace/trace.h	/^	bool			print_max;$/;"	m	struct:tracer
print_max_stack	trace/trace_stack.c	/^static void print_max_stack(void)$/;"	f	file:
print_modules	module.c	/^void print_modules(void)$/;"	f
print_name	locking/lockdep_proc.c	/^static void print_name(struct seq_file *m, struct lock_class *class)$/;"	f	file:
print_name_offset	time/timer_list.c	/^static void print_name_offset(struct seq_file *m, void *sym)$/;"	f	file:
print_numa_stats	sched/debug.c	/^void print_numa_stats(struct seq_file *m, int node, unsigned long tsf,$/;"	f
print_one_line	trace/blktrace.c	/^static enum print_line_t print_one_line(struct trace_iterator *iter,$/;"	f	file:
print_onmatch_spec	trace/trace_events_hist.c	/^static void print_onmatch_spec(struct seq_file *m,$/;"	f	file:
print_oops_end_marker	panic.c	/^void print_oops_end_marker(void)$/;"	f
print_other_cpu_stall	rcu/tree_stall.h	/^static void print_other_cpu_stall(unsigned long gp_seq)$/;"	f
print_prefix	printk/printk.c	/^static size_t print_prefix(const struct printk_log *msg, bool syslog,$/;"	f	file:
print_probe_args	trace/trace_probe_tmpl.h	/^print_probe_args(struct trace_seq *s, struct probe_arg *args, int nr_args,$/;"	f
print_raw_fmt	trace/trace.c	/^static enum print_line_t print_raw_fmt(struct trace_iterator *iter)$/;"	f	file:
print_rpool_values	cgroup/rdma.c	/^static void print_rpool_values(struct seq_file *sf,$/;"	f	file:
print_rq	sched/debug.c	/^static void print_rq(struct seq_file *m, struct rq *rq, int rq_cpu)$/;"	f	file:
print_rt_rq	sched/debug.c	/^void print_rt_rq(struct seq_file *m, int cpu, struct rt_rq *rt_rq)$/;"	f
print_rt_stats	sched/rt.c	/^void print_rt_stats(struct seq_file *m, int cpu)$/;"	f
print_shortest_lock_dependencies	locking/lockdep.c	/^print_shortest_lock_dependencies(struct lock_list *leaf,$/;"	f	file:
print_snapshot_help	trace/trace.c	/^static inline void print_snapshot_help(struct seq_file *m, struct trace_iterator *iter) { }$/;"	f	file:
print_snapshot_help	trace/trace.c	/^static void print_snapshot_help(struct seq_file *m, struct trace_iterator *iter)$/;"	f	file:
print_subsystem_event_filter	trace/trace_events_filter.c	/^void print_subsystem_event_filter(struct event_subsystem *system,$/;"	f
print_synth_event	trace/trace_events_hist.c	/^static enum print_line_t print_synth_event(struct trace_iterator *iter,$/;"	f	file:
print_syscall_enter	trace/trace_syscalls.c	/^print_syscall_enter(struct trace_iterator *iter, int flags,$/;"	f	file:
print_syscall_exit	trace/trace_syscalls.c	/^print_syscall_exit(struct trace_iterator *iter, int flags,$/;"	f	file:
print_syslog	printk/printk.c	/^static size_t print_syslog(unsigned int level, char *buf)$/;"	f	file:
print_tainted	panic.c	/^const char *print_tainted(void)$/;"	f
print_task	sched/debug.c	/^print_task(struct seq_file *m, struct rq *rq, struct task_struct *p)$/;"	f	file:
print_tickdevice	time/timer_list.c	/^print_tickdevice(struct seq_file *m, struct tick_device *td, int cpu)$/;"	f	file:
print_time	printk/printk.c	/^static size_t print_time(u64 ts, char *buf)$/;"	f	file:
print_timer	time/timer_list.c	/^print_timer(struct seq_file *m, struct hrtimer *taddr, struct hrtimer *timer,$/;"	f	file:
print_trace_fmt	trace/trace.c	/^static enum print_line_t print_trace_fmt(struct trace_iterator *iter)$/;"	f	file:
print_trace_header	trace/trace.c	/^print_trace_header(struct seq_file *m, struct trace_iterator *iter)$/;"	f
print_trace_line	trace/trace.c	/^enum print_line_t print_trace_line(struct trace_iterator *iter)$/;"	f
print_track_data_spec	trace/trace_events_hist.c	/^static void print_track_data_spec(struct seq_file *m,$/;"	f	file:
print_type_func_t	trace/trace_probe.h	/^typedef int (*print_type_func_t)(struct trace_seq *, void *, void *);$/;"	t
print_unload_info	module.c	/^static inline void print_unload_info(struct seq_file *m, struct module *mod)$/;"	f	file:
print_unlock_imbalance_bug	locking/lockdep.c	/^static void print_unlock_imbalance_bug(struct task_struct *curr,$/;"	f	file:
print_uprobe_event	trace/trace_uprobe.c	/^print_uprobe_event(struct trace_iterator *iter, int flags, struct trace_event *event)$/;"	f	file:
print_usage_bug	locking/lockdep.c	/^print_usage_bug(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
print_usage_bug_scenario	locking/lockdep.c	/^static void print_usage_bug_scenario(struct held_lock *lock)$/;"	f	file:
print_verification_stats	bpf/verifier.c	/^static void print_verification_stats(struct bpf_verifier_env *env)$/;"	f	file:
print_verifier_state	bpf/verifier.c	/^static void print_verifier_state(struct bpf_verifier_env *env,$/;"	f	file:
print_worker_info	workqueue.c	/^void print_worker_info(const char *log_lvl, struct task_struct *task)$/;"	f
printable_char	debug/kdb/kdb_main.c	1540;"	d	file:
printable_char	debug/kdb/kdb_main.c	1545;"	d	file:
printk	printk/printk.c	/^EXPORT_SYMBOL(printk);$/;"	v
printk	printk/printk.c	/^asmlinkage __visible int printk(const char *fmt, ...)$/;"	f
printk_caller_id	printk/printk.c	/^static inline u32 printk_caller_id(void)$/;"	f	file:
printk_deferred	printk/printk.c	/^int printk_deferred(const char *fmt, ...)$/;"	f
printk_delay	printk/printk.c	/^static inline void printk_delay(void)$/;"	f	file:
printk_late_init	printk/printk.c	/^late_initcall(printk_late_init);$/;"	v
printk_late_init	printk/printk.c	/^static int __init printk_late_init(void)$/;"	f	file:
printk_lock	locking/rtmutex-debug.c	/^static void printk_lock(struct rt_mutex *lock, int print_owner)$/;"	f	file:
printk_log	printk/printk.c	/^struct printk_log {$/;"	s	file:
printk_nmi_direct_enter	printk/printk_safe.c	/^void printk_nmi_direct_enter(void)$/;"	f
printk_nmi_direct_exit	printk/printk_safe.c	/^void printk_nmi_direct_exit(void)$/;"	f
printk_nmi_enter	printk/printk_safe.c	/^void notrace printk_nmi_enter(void)$/;"	f
printk_nmi_exit	printk/printk_safe.c	/^void notrace printk_nmi_exit(void)$/;"	f
printk_safe_enter_irq	printk/internal.h	38;"	d
printk_safe_enter_irq	printk/internal.h	64;"	d
printk_safe_enter_irqsave	printk/internal.h	26;"	d
printk_safe_enter_irqsave	printk/internal.h	61;"	d
printk_safe_exit_irq	printk/internal.h	44;"	d
printk_safe_exit_irq	printk/internal.h	65;"	d
printk_safe_exit_irqrestore	printk/internal.h	32;"	d
printk_safe_exit_irqrestore	printk/internal.h	62;"	d
printk_safe_flush	printk/printk_safe.c	/^void printk_safe_flush(void)$/;"	f
printk_safe_flush_buffer	printk/printk_safe.c	/^static int printk_safe_flush_buffer(const char *start, size_t len)$/;"	f	file:
printk_safe_flush_line	printk/printk_safe.c	/^static inline void printk_safe_flush_line(const char *text, int len)$/;"	f	file:
printk_safe_flush_on_panic	printk/printk_safe.c	/^void printk_safe_flush_on_panic(void)$/;"	f
printk_safe_init	printk/printk_safe.c	/^void __init printk_safe_init(void)$/;"	f
printk_safe_log_store	printk/printk_safe.c	/^static __printf(2, 0) int printk_safe_log_store(struct printk_safe_seq_buf *s,$/;"	f
printk_safe_seq_buf	printk/printk_safe.c	/^struct printk_safe_seq_buf {$/;"	s	file:
printk_task	locking/rtmutex-debug.c	/^static void printk_task(struct task_struct *p)$/;"	f	file:
printk_time	printk/printk.c	/^static bool printk_time = IS_ENABLED(CONFIG_PRINTK_TIME);$/;"	v	file:
printk_time	printk/printk.c	2057;"	d	file:
printk_timed_ratelimit	printk/printk.c	/^EXPORT_SYMBOL(printk_timed_ratelimit);$/;"	v
printk_timed_ratelimit	printk/printk.c	/^bool printk_timed_ratelimit(unsigned long *caller_jiffies,$/;"	f
prio	audit.h	/^	u64		    prio;$/;"	m	struct:audit_context
prio	locking/rtmutex_common.h	/^	int prio;$/;"	m	struct:rt_mutex_waiter
prio_changed	sched/sched.h	/^	void (*prio_changed) (struct rq *this_rq, struct task_struct *task,$/;"	m	struct:sched_class
prio_changed_dl	sched/deadline.c	/^static void prio_changed_dl(struct rq *rq, struct task_struct *p,$/;"	f	file:
prio_changed_fair	sched/fair.c	/^prio_changed_fair(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_idle	sched/idle.c	/^prio_changed_idle(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_rt	sched/rt.c	/^prio_changed_rt(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_stop	sched/stop_task.c	/^prio_changed_stop(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_high	auditfilter.c	/^static u64 prio_high = ~0ULL\/2 - 1;$/;"	v	file:
prio_low	auditfilter.c	/^static u64 prio_low = ~0ULL\/2;$/;"	v	file:
priv	bpf/offload.c	/^	void *priv;$/;"	m	struct:bpf_offload_dev	file:
private_data	bpf/disasm.h	/^	void			*private_data;$/;"	m	struct:bpf_insn_cbs
private_data	trace/trace.h	/^	void				*private_data;$/;"	m	struct:event_trigger_data
private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	m	struct:tracing_map
private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	m	struct:tracing_map_elt
privileged_wrt_inode_uidgid	capability.c	/^bool privileged_wrt_inode_uidgid(struct user_namespace *ns, const struct inode *inode)$/;"	f
probe	trace/ftrace.c	/^	struct ftrace_func_probe	*probe;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_func_probe	file:
probe_arg	trace/trace_probe.h	/^struct probe_arg {$/;"	s
probe_entry	trace/ftrace.c	/^	struct ftrace_func_entry	*probe_entry;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_func_entry	file:
probe_event_disable	trace/trace_uprobe.c	/^probe_event_disable(struct trace_uprobe *tu, struct trace_event_file *file)$/;"	f	file:
probe_event_enable	trace/trace_uprobe.c	/^probe_event_enable(struct trace_uprobe *tu, struct trace_event_file *file,$/;"	f	file:
probe_fetch_types	trace/trace_probe.c	/^static const struct fetch_type probe_fetch_types[] = {$/;"	v	typeref:struct:fetch_type	file:
probe_irq_mask	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_mask);$/;"	v
probe_irq_mask	irq/autoprobe.c	/^unsigned int probe_irq_mask(unsigned long val)$/;"	f
probe_irq_off	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_off);$/;"	v
probe_irq_off	irq/autoprobe.c	/^int probe_irq_off(unsigned long val)$/;"	f
probe_irq_on	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_on);$/;"	v
probe_irq_on	irq/autoprobe.c	/^unsigned long probe_irq_on(void)$/;"	f
probe_likely_condition	trace/trace_branch.c	/^probe_likely_condition(struct ftrace_likely_data *f, int val, int expect)$/;"	f	file:
probe_mem_read	trace/trace_kprobe.c	/^probe_mem_read(void *dest, void *src, size_t size)$/;"	f	file:
probe_mem_read	trace/trace_uprobe.c	/^probe_mem_read(void *dest, void *src, size_t size)$/;"	f	file:
probe_mem_read_user	trace/trace_kprobe.c	/^probe_mem_read_user(void *dest, void *src, size_t size)$/;"	f	file:
probe_mem_read_user	trace/trace_uprobe.c	/^probe_mem_read_user(void *dest, void *src, size_t size)$/;"	f	file:
probe_ops	trace/ftrace.c	/^	struct ftrace_probe_ops	*probe_ops;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::ftrace_probe_ops	file:
probe_remove_event_call	trace/trace_events.c	/^static int probe_remove_event_call(struct trace_event_call *call)$/;"	f	file:
probe_sched_switch	trace/trace_sched_switch.c	/^probe_sched_switch(void *ignore, bool preempt,$/;"	f	file:
probe_sched_wakeup	trace/trace_sched_switch.c	/^probe_sched_wakeup(void *ignore, struct task_struct *wakee)$/;"	f	file:
probe_wakeup	trace/trace_sched_wakeup.c	/^probe_wakeup(void *ignore, struct task_struct *p)$/;"	f	file:
probe_wakeup_migrate_task	trace/trace_sched_wakeup.c	/^probe_wakeup_migrate_task(void *ignore, struct task_struct *task, int cpu)$/;"	f	file:
probe_wakeup_sched_switch	trace/trace_sched_wakeup.c	/^probe_wakeup_sched_switch(void *ignore, bool preempt,$/;"	f	file:
probes	tracepoint.c	/^	struct tracepoint_func probes[0];$/;"	m	struct:tp_probes	typeref:struct:tp_probes::tracepoint_func	file:
probes_open	trace/trace_kprobe.c	/^static int probes_open(struct inode *inode, struct file *file)$/;"	f	file:
probes_open	trace/trace_uprobe.c	/^static int probes_open(struct inode *inode, struct file *file)$/;"	f	file:
probes_profile_seq_show	trace/trace_kprobe.c	/^static int probes_profile_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_profile_seq_show	trace/trace_uprobe.c	/^static int probes_profile_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_op	trace/trace_kprobe.c	/^static const struct seq_operations probes_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
probes_seq_op	trace/trace_uprobe.c	/^static const struct seq_operations probes_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
probes_seq_show	trace/trace_kprobe.c	/^static int probes_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_show	trace/trace_uprobe.c	/^static int probes_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_write	trace/trace_kprobe.c	/^static ssize_t probes_write(struct file *file, const char __user *buffer,$/;"	f	file:
probes_write	trace/trace_uprobe.c	/^static ssize_t probes_write(struct file *file, const char __user *buffer,$/;"	f	file:
proc_caches_init	fork.c	/^void __init proc_caches_init(void)$/;"	f
proc_cap_handler	umh.c	/^static int proc_cap_handler(struct ctl_table *table, int write,$/;"	f	file:
proc_cgroup_show	cgroup/cgroup.c	/^int proc_cgroup_show(struct seq_file *m, struct pid_namespace *ns,$/;"	f
proc_cgroupstats_show	cgroup/cgroup-v1.c	/^int proc_cgroupstats_show(struct seq_file *m, void *v)$/;"	f
proc_cleanup_work	pid_namespace.c	/^static void proc_cleanup_work(struct work_struct *work)$/;"	f	file:
proc_cpuset_show	cgroup/cpuset.c	/^int proc_cpuset_show(struct seq_file *m, struct pid_namespace *ns,$/;"	f
proc_dma_init	dma.c	/^__initcall(proc_dma_init);$/;"	v
proc_dma_init	dma.c	/^static int __init proc_dma_init(void)$/;"	f	file:
proc_dma_show	dma.c	/^static int proc_dma_show(struct seq_file *m, void *v)$/;"	f	file:
proc_do_cad_pid	sysctl.c	/^static int proc_do_cad_pid(struct ctl_table *table, int write,$/;"	f	file:
proc_do_large_bitmap	sysctl.c	/^EXPORT_SYMBOL(proc_do_large_bitmap);$/;"	v
proc_do_large_bitmap	sysctl.c	/^int proc_do_large_bitmap(struct ctl_table *table, int write,$/;"	f
proc_do_static_key	sysctl.c	/^int proc_do_static_key(struct ctl_table *table, int write,$/;"	f
proc_do_uts_string	utsname_sysctl.c	/^static int proc_do_uts_string(struct ctl_table *table, int write,$/;"	f	file:
proc_do_uts_string	utsname_sysctl.c	69;"	d	file:
proc_dohung_task_timeout_secs	hung_task.c	/^int proc_dohung_task_timeout_secs(struct ctl_table *table, int write,$/;"	f
proc_dointvec	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec);$/;"	v
proc_dointvec	sysctl.c	/^int proc_dointvec(struct ctl_table *table, int write,$/;"	f
proc_dointvec_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_jiffies);$/;"	v
proc_dointvec_jiffies	sysctl.c	/^int proc_dointvec_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dointvec_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_minmax);$/;"	v
proc_dointvec_minmax	sysctl.c	/^int proc_dointvec_minmax(struct ctl_table *table, int write,$/;"	f
proc_dointvec_minmax_coredump	sysctl.c	/^static int proc_dointvec_minmax_coredump(struct ctl_table *table, int write,$/;"	f	file:
proc_dointvec_minmax_sysadmin	sysctl.c	/^static int proc_dointvec_minmax_sysadmin(struct ctl_table *table, int write,$/;"	f	file:
proc_dointvec_ms_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_ms_jiffies);$/;"	v
proc_dointvec_ms_jiffies	sysctl.c	/^int proc_dointvec_ms_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dointvec_userhz_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_userhz_jiffies);$/;"	v
proc_dointvec_userhz_jiffies	sysctl.c	/^int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dopipe_max_size	sysctl.c	/^static int proc_dopipe_max_size(struct ctl_table *table, int write,$/;"	f	file:
proc_dostring	sysctl.c	/^EXPORT_SYMBOL(proc_dostring);$/;"	v
proc_dostring	sysctl.c	/^int proc_dostring(struct ctl_table *table, int write,$/;"	f
proc_dostring_coredump	sysctl.c	/^static int proc_dostring_coredump(struct ctl_table *table, int write,$/;"	f	file:
proc_douintvec	sysctl.c	/^EXPORT_SYMBOL(proc_douintvec);$/;"	v
proc_douintvec	sysctl.c	/^int proc_douintvec(struct ctl_table *table, int write,$/;"	f
proc_douintvec_minmax	sysctl.c	/^EXPORT_SYMBOL_GPL(proc_douintvec_minmax);$/;"	v
proc_douintvec_minmax	sysctl.c	/^int proc_douintvec_minmax(struct ctl_table *table, int write,$/;"	f
proc_doulongvec_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_doulongvec_minmax);$/;"	v
proc_doulongvec_minmax	sysctl.c	/^int proc_doulongvec_minmax(struct ctl_table *table, int write,$/;"	f
proc_doulongvec_ms_jiffies_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_doulongvec_ms_jiffies_minmax);$/;"	v
proc_doulongvec_ms_jiffies_minmax	sysctl.c	/^int proc_doulongvec_ms_jiffies_minmax(struct ctl_table *table, int write,$/;"	f
proc_execdomains_init	exec_domain.c	/^module_init(proc_execdomains_init);$/;"	v
proc_execdomains_init	exec_domain.c	/^static int __init proc_execdomains_init(void)$/;"	f	file:
proc_first_pos_non_zero_ignore	sysctl.c	/^static bool proc_first_pos_non_zero_ignore(loff_t *ppos,$/;"	f	file:
proc_get_long	sysctl.c	/^static int proc_get_long(char **buf, size_t *size,$/;"	f	file:
proc_gid_map_write	user_namespace.c	/^ssize_t proc_gid_map_write(struct file *file, const char __user *buf,$/;"	f
proc_gid_seq_operations	user_namespace.c	/^const struct seq_operations proc_gid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_kprobes_optimization_handler	kprobes.c	/^int proc_kprobes_optimization_handler(struct ctl_table *table, int write,$/;"	f
proc_lock_stat_operations	locking/lockdep_proc.c	/^static const struct file_operations proc_lock_stat_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_modules_init	module.c	/^module_init(proc_modules_init);$/;"	v
proc_modules_init	module.c	/^static int __init proc_modules_init(void)$/;"	f	file:
proc_modules_operations	module.c	/^static const struct file_operations proc_modules_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_nmi_watchdog	watchdog.c	/^int proc_nmi_watchdog(struct ctl_table *table, int write,$/;"	f
proc_profile_operations	profile.c	/^static const struct file_operations proc_profile_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_projid_map_write	user_namespace.c	/^ssize_t proc_projid_map_write(struct file *file, const char __user *buf,$/;"	f
proc_projid_seq_operations	user_namespace.c	/^const struct seq_operations proc_projid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_put_char	sysctl.c	/^static int proc_put_char(void __user **buf, size_t *size, char c)$/;"	f	file:
proc_put_long	sysctl.c	/^static int proc_put_long(void __user **buf, size_t *size, unsigned long val,$/;"	f	file:
proc_sched_autogroup_set_nice	sched/autogroup.c	/^int proc_sched_autogroup_set_nice(struct task_struct *p, int nice)$/;"	f
proc_sched_autogroup_show_task	sched/autogroup.c	/^void proc_sched_autogroup_show_task(struct task_struct *p, struct seq_file *m)$/;"	f
proc_sched_set_task	sched/debug.c	/^void proc_sched_set_task(struct task_struct *p)$/;"	f
proc_sched_show_task	sched/debug.c	/^void proc_sched_show_task(struct task_struct *p, struct pid_namespace *ns,$/;"	f
proc_schedstat_init	sched/stats.c	/^static int __init proc_schedstat_init(void)$/;"	f	file:
proc_schedstat_init	sched/stats.c	/^subsys_initcall(proc_schedstat_init);$/;"	v
proc_setgroups_show	user_namespace.c	/^int proc_setgroups_show(struct seq_file *seq, void *v)$/;"	f
proc_setgroups_write	user_namespace.c	/^ssize_t proc_setgroups_write(struct file *file, const char __user *buf,$/;"	f
proc_skip_char	sysctl.c	/^static void proc_skip_char(char **buf, size_t *size, const char v)$/;"	f	file:
proc_skip_spaces	sysctl.c	/^static size_t proc_skip_spaces(char **buf)$/;"	f	file:
proc_soft_watchdog	watchdog.c	/^int proc_soft_watchdog(struct ctl_table *table, int write,$/;"	f
proc_taint	sysctl.c	/^static int proc_taint(struct ctl_table *table, int write,$/;"	f	file:
proc_uid_map_write	user_namespace.c	/^ssize_t proc_uid_map_write(struct file *file, const char __user *buf,$/;"	f
proc_uid_seq_operations	user_namespace.c	/^const struct seq_operations proc_uid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_watchdog	watchdog.c	/^int proc_watchdog(struct ctl_table *table, int write,$/;"	f
proc_watchdog_common	watchdog.c	/^static int proc_watchdog_common(int which, struct ctl_table *table, int write,$/;"	f	file:
proc_watchdog_cpumask	watchdog.c	/^int proc_watchdog_cpumask(struct ctl_table *table, int write,$/;"	f
proc_watchdog_thresh	watchdog.c	/^int proc_watchdog_thresh(struct ctl_table *table, int write,$/;"	f
proc_watchdog_update	watchdog.c	/^static void proc_watchdog_update(void)$/;"	f	file:
proc_wspace_sep	sysctl.c	/^static const char proc_wspace_sep[] = { ' ', '\\t', '\\n' };$/;"	v	file:
process_adj_status	time/ntp.c	/^static inline void process_adj_status(const struct __kernel_timex *txc)$/;"	f	file:
process_adjtimex_modes	time/ntp.c	/^static inline void process_adjtimex_modes(const struct __kernel_timex *txc,$/;"	f	file:
process_cached_mods	trace/ftrace.c	/^static void process_cached_mods(const char *mod_name)$/;"	f	file:
process_cpu_clock_get	time/posix-cpu-timers.c	/^static int process_cpu_clock_get(const clockid_t which_clock,$/;"	f	file:
process_cpu_clock_getres	time/posix-cpu-timers.c	/^static int process_cpu_clock_getres(const clockid_t which_clock,$/;"	f	file:
process_cpu_nsleep	time/posix-cpu-timers.c	/^static int process_cpu_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
process_cpu_timer_create	time/posix-cpu-timers.c	/^static int process_cpu_timer_create(struct k_itimer *timer)$/;"	f	file:
process_fetch_insn	trace/trace_kprobe.c	/^process_fetch_insn(struct fetch_insn *code, struct pt_regs *regs, void *dest,$/;"	f	file:
process_fetch_insn	trace/trace_uprobe.c	/^process_fetch_insn(struct fetch_insn *code, struct pt_regs *regs, void *dest,$/;"	f	file:
process_fetch_insn_bottom	trace/trace_probe_tmpl.h	/^process_fetch_insn_bottom(struct fetch_insn *code, unsigned long val,$/;"	f
process_mod_list	trace/ftrace.c	/^static void process_mod_list(struct list_head *head, struct ftrace_ops *ops,$/;"	f	file:
process_preds	trace/trace_events_filter.c	/^static int process_preds(struct trace_event_call *call,$/;"	f	file:
process_scheduled_works	workqueue.c	/^static void process_scheduled_works(struct worker *worker)$/;"	f	file:
process_spin_lock	bpf/verifier.c	/^static int process_spin_lock(struct bpf_verifier_env *env, int regno,$/;"	f	file:
process_srcu	rcu/srcutree.c	/^static void process_srcu(struct work_struct *work)$/;"	f	file:
process_system_preds	trace/trace_events_filter.c	/^static int process_system_preds(struct trace_subsystem_dir *dir,$/;"	f	file:
process_timeout	time/timer.c	/^static void process_timeout(struct timer_list *t)$/;"	f	file:
process_timer	time/timer.c	/^struct process_timer {$/;"	s	file:
process_vm_readv	sys_ni.c	/^COND_SYSCALL(process_vm_readv);$/;"	v
process_vm_readv	sys_ni.c	/^COND_SYSCALL_COMPAT(process_vm_readv);$/;"	v
process_vm_writev	sys_ni.c	/^COND_SYSCALL(process_vm_writev);$/;"	v
process_vm_writev	sys_ni.c	/^COND_SYSCALL_COMPAT(process_vm_writev);$/;"	v
procname	sysctl_binary.c	/^	const char		*procname;$/;"	m	struct:bin_table	file:
procs	sys.c	/^	u16 procs;$/;"	m	struct:compat_sysinfo	file:
proctitle	audit.h	/^	struct audit_proctitle proctitle;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_proctitle
producer	trace/ring_buffer_benchmark.c	/^static struct task_struct *producer;$/;"	v	typeref:struct:task_struct	file:
producer_fifo	trace/ring_buffer_benchmark.c	/^static int producer_fifo = -1;$/;"	v	file:
producer_nice	trace/ring_buffer_benchmark.c	/^static int producer_nice = MAX_NICE;$/;"	v	file:
prof_buffer	profile.c	/^static atomic_t *prof_buffer;$/;"	v	file:
prof_cpu_mask	profile.c	/^static cpumask_var_t prof_cpu_mask;$/;"	v	file:
prof_cpu_mask_proc_fops	profile.c	/^static const struct file_operations prof_cpu_mask_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
prof_cpu_mask_proc_open	profile.c	/^static int prof_cpu_mask_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
prof_cpu_mask_proc_show	profile.c	/^static int prof_cpu_mask_proc_show(struct seq_file *m, void *v)$/;"	f	file:
prof_cpu_mask_proc_write	profile.c	/^static ssize_t prof_cpu_mask_proc_write(struct file *file,$/;"	f	file:
prof_len	profile.c	/^static unsigned long prof_len, prof_shift;$/;"	v	file:
prof_on	profile.c	/^EXPORT_SYMBOL_GPL(prof_on);$/;"	v
prof_shift	profile.c	/^static unsigned long prof_len, prof_shift;$/;"	v	file:
prof_ticks	time/posix-cpu-timers.c	/^static inline u64 prof_ticks(struct task_struct *p)$/;"	f	file:
profile_dead_cpu	profile.c	/^static int profile_dead_cpu(unsigned int cpu)$/;"	f	file:
profile_discard_flip_buffers	profile.c	/^static void profile_discard_flip_buffers(void)$/;"	f	file:
profile_discard_flip_buffers	profile.c	384;"	d	file:
profile_event_register	profile.c	/^EXPORT_SYMBOL_GPL(profile_event_register);$/;"	v
profile_event_register	profile.c	/^int profile_event_register(enum profile_type type, struct notifier_block *n)$/;"	f
profile_event_unregister	profile.c	/^EXPORT_SYMBOL_GPL(profile_event_unregister);$/;"	v
profile_event_unregister	profile.c	/^int profile_event_unregister(enum profile_type type, struct notifier_block *n)$/;"	f
profile_flip_buffers	profile.c	/^static void profile_flip_buffers(void)$/;"	f	file:
profile_flip_buffers	profile.c	383;"	d	file:
profile_graph_entry	trace/ftrace.c	/^static int profile_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
profile_graph_return	trace/ftrace.c	/^static void profile_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
profile_handoff_task	profile.c	/^int profile_handoff_task(struct task_struct *task)$/;"	f
profile_hit	profile.c	/^struct profile_hit {$/;"	s	file:
profile_hits	profile.c	/^EXPORT_SYMBOL_GPL(profile_hits);$/;"	v
profile_hits	profile.c	/^void profile_hits(int type, void *__pc, unsigned int nr_hits)$/;"	f
profile_init	profile.c	/^int __ref profile_init(void)$/;"	f
profile_munmap	profile.c	/^void profile_munmap(unsigned long addr)$/;"	f
profile_online_cpu	profile.c	/^static int profile_online_cpu(unsigned int cpu)$/;"	f	file:
profile_open	trace/trace_kprobe.c	/^static int profile_open(struct inode *inode, struct file *file)$/;"	f	file:
profile_open	trace/trace_uprobe.c	/^static int profile_open(struct inode *inode, struct file *file)$/;"	f	file:
profile_prepare_cpu	profile.c	/^static int profile_prepare_cpu(unsigned int cpu)$/;"	f	file:
profile_seq_op	trace/trace_kprobe.c	/^static const struct seq_operations profile_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
profile_seq_op	trace/trace_uprobe.c	/^static const struct seq_operations profile_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
profile_setup	profile.c	/^int profile_setup(char *str)$/;"	f
profile_task_exit	profile.c	/^void profile_task_exit(struct task_struct *task)$/;"	f
profile_tick	profile.c	/^void profile_tick(int type)$/;"	f
profiling	ksysfs.c	/^KERNEL_ATTR_RW(profiling);$/;"	v
profiling_show	ksysfs.c	/^static ssize_t profiling_show(struct kobject *kobj,$/;"	f	file:
profiling_store	ksysfs.c	/^static ssize_t profiling_store(struct kobject *kobj,$/;"	f	file:
prog	bpf/core.c	/^	struct bpf_prog prog;$/;"	m	struct:bpf_prog_dummy	typeref:struct:bpf_prog_dummy::bpf_prog	file:
prog	bpf/local_storage.c	/^	struct bpf_prog *prog;$/;"	m	struct:bpf_cgroup_storage_map	typeref:struct:bpf_cgroup_storage_map::bpf_prog	file:
prog	bpf/offload.c	/^	struct bpf_prog *prog;$/;"	m	struct:ns_get_path_bpf_prog_args	typeref:struct:ns_get_path_bpf_prog_args::bpf_prog	file:
prog	bpf/syscall.c	/^	struct bpf_prog *prog;$/;"	m	struct:bpf_raw_tracepoint	typeref:struct:bpf_raw_tracepoint::bpf_prog	file:
prog	events/core.c	/^	struct bpf_prog	*prog;$/;"	m	struct:perf_bpf_event	typeref:struct:perf_bpf_event::bpf_prog	file:
prog	seccomp.c	/^	struct bpf_prog *prog;$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::bpf_prog	file:
prog	trace/trace.h	/^	struct prog_entry __rcu	*prog;$/;"	m	struct:event_filter	typeref:struct:event_filter::__rcu
prog_array_map_ops	bpf/arraymap.c	/^const struct bpf_map_ops prog_array_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
prog_array_map_seq_show_elem	bpf/arraymap.c	/^static void prog_array_map_seq_show_elem(struct bpf_map *map, void *key,$/;"	f	file:
prog_entry	trace/trace_events_filter.c	/^struct prog_entry {$/;"	s	file:
prog_fd_array_get_ptr	bpf/arraymap.c	/^static void *prog_fd_array_get_ptr(struct bpf_map *map,$/;"	f	file:
prog_fd_array_put_ptr	bpf/arraymap.c	/^static void prog_fd_array_put_ptr(void *ptr)$/;"	f	file:
prog_fd_array_sys_lookup_elem	bpf/arraymap.c	/^static u32 prog_fd_array_sys_lookup_elem(void *ptr)$/;"	f	file:
prog_list_length	bpf/cgroup.c	/^static u32 prog_list_length(struct list_head *head)$/;"	f	file:
progs	bpf/offload.c	/^	struct list_head progs;$/;"	m	struct:bpf_offload_netdev	typeref:struct:bpf_offload_netdev::list_head	file:
projid_m_show	user_namespace.c	/^static int projid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
projid_m_start	user_namespace.c	/^static void *projid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
prop_runnable_sum	sched/sched.h	/^	long			prop_runnable_sum;$/;"	m	struct:cfs_rq
propagate	sched/sched.h	/^	long			propagate;$/;"	m	struct:cfs_rq
propagate_entity_cfs_rq	sched/fair.c	/^static void propagate_entity_cfs_rq(struct sched_entity *se) { }$/;"	f	file:
propagate_entity_cfs_rq	sched/fair.c	/^static void propagate_entity_cfs_rq(struct sched_entity *se)$/;"	f	file:
propagate_entity_load_avg	sched/fair.c	/^static inline int propagate_entity_load_avg(struct sched_entity *se)$/;"	f	file:
propagate_has_child_subreaper	sys.c	/^static int propagate_has_child_subreaper(struct task_struct *p, void *data)$/;"	f	file:
propagate_liveness	bpf/verifier.c	/^static int propagate_liveness(struct bpf_verifier_env *env,$/;"	f	file:
propagate_liveness_reg	bpf/verifier.c	/^static int propagate_liveness_reg(struct bpf_verifier_env *env,$/;"	f	file:
propagate_precision	bpf/verifier.c	/^static int propagate_precision(struct bpf_verifier_env *env,$/;"	f	file:
prot	events/core.c	/^	u32			prot, flags;$/;"	m	struct:perf_mmap_event	file:
prove_locking	locking/lockdep.c	/^int prove_locking = 1;$/;"	v
prove_locking	locking/lockdep.c	69;"	d	file:
prune_one	audit_tree.c	/^static void prune_one(struct audit_tree *victim)$/;"	f	file:
prune_thread	audit_tree.c	/^static struct task_struct *prune_thread;$/;"	v	typeref:struct:task_struct	file:
prune_tree_chunks	audit_tree.c	/^static void prune_tree_chunks(struct audit_tree *victim, bool tagged)$/;"	f	file:
prune_tree_thread	audit_tree.c	/^static int prune_tree_thread(void *unused)$/;"	f	file:
psi_avgs_work	sched/psi.c	/^static void psi_avgs_work(struct work_struct *work)$/;"	f	file:
psi_cgroup_alloc	sched/psi.c	/^int psi_cgroup_alloc(struct cgroup *cgroup)$/;"	f
psi_cgroup_free	sched/psi.c	/^void psi_cgroup_free(struct cgroup *cgroup)$/;"	f
psi_cpu_fops	sched/psi.c	/^static const struct file_operations psi_cpu_fops = {$/;"	v	typeref:struct:file_operations	file:
psi_cpu_open	sched/psi.c	/^static int psi_cpu_open(struct inode *inode, struct file *file)$/;"	f	file:
psi_cpu_show	sched/psi.c	/^static int psi_cpu_show(struct seq_file *m, void *v)$/;"	f	file:
psi_cpu_write	sched/psi.c	/^static ssize_t psi_cpu_write(struct file *file, const char __user *user_buf,$/;"	f	file:
psi_dequeue	sched/stats.h	/^static inline void psi_dequeue(struct task_struct *p, bool sleep) {}$/;"	f
psi_dequeue	sched/stats.h	/^static inline void psi_dequeue(struct task_struct *p, bool sleep)$/;"	f
psi_disabled	sched/psi.c	/^DEFINE_STATIC_KEY_FALSE(psi_disabled);$/;"	v
psi_enable	sched/psi.c	/^static bool psi_enable = true;$/;"	v	file:
psi_enable	sched/psi.c	/^static bool psi_enable;$/;"	v	file:
psi_enqueue	sched/stats.h	/^static inline void psi_enqueue(struct task_struct *p, bool wakeup) {}$/;"	f
psi_enqueue	sched/stats.h	/^static inline void psi_enqueue(struct task_struct *p, bool wakeup)$/;"	f
psi_fop_poll	sched/psi.c	/^static __poll_t psi_fop_poll(struct file *file, poll_table *wait)$/;"	f	file:
psi_fop_release	sched/psi.c	/^static int psi_fop_release(struct inode *inode, struct file *file)$/;"	f	file:
psi_group_change	sched/psi.c	/^static u32 psi_group_change(struct psi_group *group, int cpu,$/;"	f	file:
psi_init	sched/psi.c	/^void __init psi_init(void)$/;"	f
psi_io_fops	sched/psi.c	/^static const struct file_operations psi_io_fops = {$/;"	v	typeref:struct:file_operations	file:
psi_io_open	sched/psi.c	/^static int psi_io_open(struct inode *inode, struct file *file)$/;"	f	file:
psi_io_show	sched/psi.c	/^static int psi_io_show(struct seq_file *m, void *v)$/;"	f	file:
psi_io_write	sched/psi.c	/^static ssize_t psi_io_write(struct file *file, const char __user *user_buf,$/;"	f	file:
psi_memory_fops	sched/psi.c	/^static const struct file_operations psi_memory_fops = {$/;"	v	typeref:struct:file_operations	file:
psi_memory_open	sched/psi.c	/^static int psi_memory_open(struct inode *inode, struct file *file)$/;"	f	file:
psi_memory_show	sched/psi.c	/^static int psi_memory_show(struct seq_file *m, void *v)$/;"	f	file:
psi_memory_write	sched/psi.c	/^static ssize_t psi_memory_write(struct file *file, const char __user *user_buf,$/;"	f	file:
psi_memstall_enter	sched/psi.c	/^void psi_memstall_enter(unsigned long *flags)$/;"	f
psi_memstall_leave	sched/psi.c	/^void psi_memstall_leave(unsigned long *flags)$/;"	f
psi_memstall_tick	sched/psi.c	/^void psi_memstall_tick(struct task_struct *task, int cpu)$/;"	f
psi_poll_work	sched/psi.c	/^static void psi_poll_work(struct kthread_work *work)$/;"	f	file:
psi_proc_init	sched/psi.c	/^module_init(psi_proc_init);$/;"	v
psi_proc_init	sched/psi.c	/^static int __init psi_proc_init(void)$/;"	f	file:
psi_schedule_poll_work	sched/psi.c	/^static void psi_schedule_poll_work(struct psi_group *group, unsigned long delay)$/;"	f	file:
psi_show	sched/psi.c	/^int psi_show(struct seq_file *m, struct psi_group *group, enum psi_res res)$/;"	f
psi_system	sched/psi.c	/^struct psi_group psi_system = {$/;"	v	typeref:struct:psi_group
psi_task_change	sched/psi.c	/^void psi_task_change(struct task_struct *task, int clear, int set)$/;"	f
psi_task_tick	sched/stats.h	/^static inline void psi_task_tick(struct rq *rq) {}$/;"	f
psi_task_tick	sched/stats.h	/^static inline void psi_task_tick(struct rq *rq)$/;"	f
psi_trigger_create	sched/psi.c	/^struct psi_trigger *psi_trigger_create(struct psi_group *group,$/;"	f
psi_trigger_destroy	sched/psi.c	/^static void psi_trigger_destroy(struct kref *ref)$/;"	f	file:
psi_trigger_poll	sched/psi.c	/^__poll_t psi_trigger_poll(void **trigger_ptr,$/;"	f
psi_trigger_replace	sched/psi.c	/^void psi_trigger_replace(void **trigger_ptr, struct psi_trigger *new)$/;"	f
psi_ttwu_dequeue	sched/stats.h	/^static inline void psi_ttwu_dequeue(struct task_struct *p) {}$/;"	f
psi_ttwu_dequeue	sched/stats.h	/^static inline void psi_ttwu_dequeue(struct task_struct *p)$/;"	f
psi_write	sched/psi.c	/^static ssize_t psi_write(struct file *file, const char __user *user_buf,$/;"	f	file:
pt_regs_to_gdb_regs	debug/gdbstub.c	/^void pt_regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs)$/;"	f
ptid	events/core.c	/^		u32				ptid;$/;"	m	struct:perf_task_event::__anon1	file:
ptr_ops	bpf/btf.c	/^static struct btf_kind_operations ptr_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
ptrace_access_vm	ptrace.c	/^int ptrace_access_vm(struct task_struct *tsk, unsigned long addr,$/;"	f
ptrace_attach	ptrace.c	/^static int ptrace_attach(struct task_struct *task, long request,$/;"	f	file:
ptrace_check_attach	ptrace.c	/^static int ptrace_check_attach(struct task_struct *child, bool ignore_state)$/;"	f	file:
ptrace_detach	ptrace.c	/^static int ptrace_detach(struct task_struct *child, unsigned int data)$/;"	f	file:
ptrace_do_notify	signal.c	/^static void ptrace_do_notify(int signr, int exit_code, int why)$/;"	f	file:
ptrace_do_wait	exit.c	/^static int ptrace_do_wait(struct wait_opts *wo, struct task_struct *tsk)$/;"	f	file:
ptrace_freeze_traced	ptrace.c	/^static bool ptrace_freeze_traced(struct task_struct *task)$/;"	f	file:
ptrace_get_syscall_info	ptrace.c	/^ptrace_get_syscall_info(struct task_struct *child, unsigned long user_size,$/;"	f	file:
ptrace_get_syscall_info_entry	ptrace.c	/^ptrace_get_syscall_info_entry(struct task_struct *child, struct pt_regs *regs,$/;"	f	file:
ptrace_get_syscall_info_exit	ptrace.c	/^ptrace_get_syscall_info_exit(struct task_struct *child, struct pt_regs *regs,$/;"	f	file:
ptrace_get_syscall_info_seccomp	ptrace.c	/^ptrace_get_syscall_info_seccomp(struct task_struct *child, struct pt_regs *regs,$/;"	f	file:
ptrace_getsiginfo	ptrace.c	/^static int ptrace_getsiginfo(struct task_struct *child, kernel_siginfo_t *info)$/;"	f	file:
ptrace_has_cap	ptrace.c	/^static int ptrace_has_cap(struct user_namespace *ns, unsigned int mode)$/;"	f	file:
ptrace_link	ptrace.c	/^static void ptrace_link(struct task_struct *child, struct task_struct *new_parent)$/;"	f	file:
ptrace_may_access	ptrace.c	/^bool ptrace_may_access(struct task_struct *task, unsigned int mode)$/;"	f
ptrace_notify	signal.c	/^void ptrace_notify(int exit_code)$/;"	f
ptrace_peek_siginfo	ptrace.c	/^static int ptrace_peek_siginfo(struct task_struct *child,$/;"	f	file:
ptrace_readdata	ptrace.c	/^int ptrace_readdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len)$/;"	f
ptrace_regset	ptrace.c	/^static int ptrace_regset(struct task_struct *task, int req, unsigned int type,$/;"	f	file:
ptrace_request	ptrace.c	/^int ptrace_request(struct task_struct *child, long request,$/;"	f
ptrace_resume	ptrace.c	/^static int ptrace_resume(struct task_struct *child, long request,$/;"	f	file:
ptrace_setoptions	ptrace.c	/^static int ptrace_setoptions(struct task_struct *child, unsigned long data)$/;"	f	file:
ptrace_setsiginfo	ptrace.c	/^static int ptrace_setsiginfo(struct task_struct *child, const kernel_siginfo_t *info)$/;"	f	file:
ptrace_signal	signal.c	/^static int ptrace_signal(int signr, kernel_siginfo_t *info)$/;"	f	file:
ptrace_traceme	ptrace.c	/^static int ptrace_traceme(void)$/;"	f	file:
ptrace_trap_notify	signal.c	/^static void ptrace_trap_notify(struct task_struct *t)$/;"	f	file:
ptrace_unfreeze_traced	ptrace.c	/^static void ptrace_unfreeze_traced(struct task_struct *task)$/;"	f	file:
ptrace_writedata	ptrace.c	/^int ptrace_writedata(struct task_struct *tsk, char __user *src, unsigned long dst, int len)$/;"	f
ptracer_capable	capability.c	/^bool ptracer_capable(struct task_struct *tsk, struct user_namespace *ns)$/;"	f
ptrs	bpf/reuseport_array.c	/^	struct sock __rcu *ptrs[];$/;"	m	struct:reuseport_array	typeref:struct:reuseport_array::__rcu	file:
ptype	rcu/rcuperf.c	/^	int ptype;$/;"	m	struct:rcu_perf_ops	file:
pull_dl_task	sched/deadline.c	/^static inline void pull_dl_task(struct rq *rq)$/;"	f	file:
pull_dl_task	sched/deadline.c	/^static void pull_dl_task(struct rq *this_rq)$/;"	f	file:
pull_rt_task	sched/rt.c	/^static inline void pull_rt_task(struct rq *this_rq)$/;"	f	file:
pull_rt_task	sched/rt.c	/^static void pull_rt_task(struct rq *this_rq)$/;"	f	file:
push_cpu	sched/sched.h	/^	int			push_cpu;$/;"	m	struct:rq
push_dl_task	sched/deadline.c	/^static int push_dl_task(struct rq *rq)$/;"	f	file:
push_dl_tasks	sched/deadline.c	/^static void push_dl_tasks(struct rq *rq)$/;"	f	file:
push_insn	bpf/verifier.c	/^static int push_insn(int t, int w, int e, struct bpf_verifier_env *env,$/;"	f	file:
push_jmp_history	bpf/verifier.c	/^static int push_jmp_history(struct bpf_verifier_env *env,$/;"	f	file:
push_rt_task	sched/rt.c	/^static int push_rt_task(struct rq *rq)$/;"	f	file:
push_rt_tasks	sched/rt.c	/^static void push_rt_tasks(struct rq *rq)$/;"	f	file:
push_stack	bpf/verifier.c	/^static struct bpf_verifier_state *push_stack(struct bpf_verifier_env *env,$/;"	f	file:
pushable_dl_tasks_root	sched/sched.h	/^	struct rb_root_cached	pushable_dl_tasks_root;$/;"	m	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached
pushable_tasks	sched/sched.h	/^	struct plist_head	pushable_tasks;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::plist_head
put_bpf_raw_tp_regs	trace/bpf_trace.c	/^static void put_bpf_raw_tp_regs(void)$/;"	f	file:
put_callchain_buffers	events/callchain.c	/^void put_callchain_buffers(void)$/;"	f
put_callchain_entry	events/callchain.c	/^put_callchain_entry(int rctx)$/;"	f	file:
put_clock_desc	time/posix-clock.c	/^static void put_clock_desc(struct posix_clock_desc *cd)$/;"	f	file:
put_compat_itimerval	compat.c	/^int put_compat_itimerval(struct compat_itimerval __user *o, const struct itimerval *i)$/;"	f
put_compat_rusage	compat.c	/^int put_compat_rusage(const struct rusage *r, struct compat_rusage __user *ru)$/;"	f
put_cpu_map_entry	bpf/cpumap.c	/^static void put_cpu_map_entry(struct bpf_cpu_map_entry *rcpu)$/;"	f	file:
put_cred_rcu	cred.c	/^static void put_cred_rcu(struct rcu_head *rcu)$/;"	f	file:
put_css_set	cgroup/cgroup-internal.h	/^static inline void put_css_set(struct css_set *cset)$/;"	f
put_css_set_locked	cgroup/cgroup.c	/^void put_css_set_locked(struct css_set *cset)$/;"	f
put_ctx	events/core.c	/^static void put_ctx(struct perf_event_context *ctx)$/;"	f	file:
put_event	events/core.c	/^static void put_event(struct perf_event *event)$/;"	f	file:
put_futex_key	futex.c	/^static inline void put_futex_key(union futex_key *key)$/;"	f	file:
put_itimerspec64	time/time.c	/^EXPORT_SYMBOL_GPL(put_itimerspec64);$/;"	v
put_itimerspec64	time/time.c	/^int put_itimerspec64(const struct itimerspec64 *it,$/;"	f
put_numa_group	sched/fair.c	/^static inline void put_numa_group(struct numa_group *grp)$/;"	f	file:
put_old_itimerspec32	time/time.c	/^EXPORT_SYMBOL_GPL(put_old_itimerspec32);$/;"	v
put_old_itimerspec32	time/time.c	/^int put_old_itimerspec32(const struct itimerspec64 *its,$/;"	f
put_old_timespec32	time/time.c	/^EXPORT_SYMBOL_GPL(put_old_timespec32);$/;"	v
put_old_timespec32	time/time.c	/^int put_old_timespec32(const struct timespec64 *ts, void __user *uts)$/;"	f
put_old_timex32	time/time.c	/^int put_old_timex32(struct old_timex32 __user *utp, const struct __kernel_timex *txc)$/;"	f
put_packet	debug/gdbstub.c	/^static void put_packet(char *buffer)$/;"	f	file:
put_pi_state	futex.c	/^static void put_pi_state(struct futex_pi_state *pi_state)$/;"	f	file:
put_pid	pid.c	/^EXPORT_SYMBOL_GPL(put_pid);$/;"	v
put_pid	pid.c	/^void put_pid(struct pid *pid)$/;"	f
put_pid_ns	pid_namespace.c	/^EXPORT_SYMBOL_GPL(put_pid_ns);$/;"	v
put_pid_ns	pid_namespace.c	/^void put_pid_ns(struct pid_namespace *ns)$/;"	f
put_posix_clock	time/posix-clock.c	/^static void put_posix_clock(struct posix_clock *clk)$/;"	f	file:
put_prev_entity	sched/fair.c	/^static void put_prev_entity(struct cfs_rq *cfs_rq, struct sched_entity *prev)$/;"	f	file:
put_prev_task	sched/sched.h	/^	void (*put_prev_task)(struct rq *rq, struct task_struct *p);$/;"	m	struct:sched_class
put_prev_task	sched/sched.h	/^static inline void put_prev_task(struct rq *rq, struct task_struct *prev)$/;"	f
put_prev_task_dl	sched/deadline.c	/^static void put_prev_task_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
put_prev_task_fair	sched/fair.c	/^static void put_prev_task_fair(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task_fake	sched/core.c	/^static void put_prev_task_fake(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task_idle	sched/idle.c	/^static void put_prev_task_idle(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task_rt	sched/rt.c	/^static void put_prev_task_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
put_prev_task_stop	sched/stop_task.c	/^static void put_prev_task_stop(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_probe_ref	trace/blktrace.c	/^static void put_probe_ref(void)$/;"	f	file:
put_pwq	workqueue.c	/^static void put_pwq(struct pool_workqueue *pwq)$/;"	f	file:
put_pwq_unlocked	workqueue.c	/^static void put_pwq_unlocked(struct pool_workqueue *pwq)$/;"	f	file:
put_recursion_context	events/internal.h	/^static inline void put_recursion_context(int *recursion, int rctx)$/;"	f
put_seccomp_filter	seccomp.c	/^void put_seccomp_filter(struct task_struct *tsk)$/;"	f
put_signal_struct	fork.c	/^static inline void put_signal_struct(struct signal_struct *sig)$/;"	f	file:
put_system	trace/trace_events.c	/^static void put_system(struct trace_subsystem_dir *dir)$/;"	f	file:
put_task_stack	fork.c	/^void put_task_stack(struct task_struct *tsk)$/;"	f
put_timespec64	time/time.c	/^EXPORT_SYMBOL_GPL(put_timespec64);$/;"	v
put_timespec64	time/time.c	/^int put_timespec64(const struct timespec64 *ts,$/;"	f
put_trace_buf	trace/trace.c	/^static void put_trace_buf(void)$/;"	f	file:
put_tree	audit_tree.c	/^static inline void put_tree(struct audit_tree *tree)$/;"	f	file:
put_tree_ref	auditsc.c	/^static int put_tree_ref(struct audit_context *ctx, struct audit_chunk *chunk)$/;"	f	file:
put_ucounts	ucount.c	/^static void put_ucounts(struct ucounts *ucounts)$/;"	f	file:
put_unbound_pool	workqueue.c	/^static void put_unbound_pool(struct worker_pool *pool)$/;"	f	file:
put_uprobe	events/uprobes.c	/^static void put_uprobe(struct uprobe *uprobe)$/;"	f	file:
pv_enabled	locking/qspinlock.c	280;"	d	file:
pv_enabled	locking/qspinlock.c	569;"	d	file:
pv_enabled	locking/qspinlock.c	570;"	d	file:
pv_hash	locking/qspinlock_paravirt.h	/^static struct qspinlock **pv_hash(struct qspinlock *lock, struct pv_node *node)$/;"	f
pv_hash_entry	locking/qspinlock_paravirt.h	/^struct pv_hash_entry {$/;"	s
pv_hybrid_queued_unfair_trylock	locking/qspinlock_paravirt.h	/^static inline bool pv_hybrid_queued_unfair_trylock(struct qspinlock *lock)$/;"	f
pv_init_node	locking/qspinlock.c	282;"	d	file:
pv_init_node	locking/qspinlock.c	572;"	d	file:
pv_init_node	locking/qspinlock_paravirt.h	/^static void pv_init_node(struct mcs_spinlock *node)$/;"	f
pv_kick	locking/qspinlock_stat.h	133;"	d
pv_kick_node	locking/qspinlock.c	284;"	d	file:
pv_kick_node	locking/qspinlock.c	574;"	d	file:
pv_kick_node	locking/qspinlock_paravirt.h	/^static void pv_kick_node(struct qspinlock *lock, struct mcs_spinlock *node)$/;"	f
pv_lock_hash	locking/qspinlock_paravirt.h	/^static struct pv_hash_entry *pv_lock_hash;$/;"	v	typeref:struct:pv_hash_entry
pv_node	locking/qspinlock_paravirt.h	/^struct pv_node {$/;"	s
pv_unhash	locking/qspinlock_paravirt.h	/^static struct pv_node *pv_unhash(struct qspinlock *lock)$/;"	f
pv_wait	locking/qspinlock_stat.h	134;"	d
pv_wait_early	locking/qspinlock_paravirt.h	/^pv_wait_early(struct pv_node *prev, int loop)$/;"	f
pv_wait_head_or_lock	locking/qspinlock.c	285;"	d	file:
pv_wait_head_or_lock	locking/qspinlock.c	575;"	d	file:
pv_wait_head_or_lock	locking/qspinlock_paravirt.h	/^pv_wait_head_or_lock(struct qspinlock *lock, struct mcs_spinlock *node)$/;"	f
pv_wait_node	locking/qspinlock.c	283;"	d	file:
pv_wait_node	locking/qspinlock.c	573;"	d	file:
pv_wait_node	locking/qspinlock_paravirt.h	/^static void pv_wait_node(struct mcs_spinlock *node, struct mcs_spinlock *prev)$/;"	f
pvclock_gtod_register_notifier	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(pvclock_gtod_register_notifier);$/;"	v
pvclock_gtod_register_notifier	time/timekeeping.c	/^int pvclock_gtod_register_notifier(struct notifier_block *nb)$/;"	f
pvclock_gtod_unregister_notifier	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(pvclock_gtod_unregister_notifier);$/;"	v
pvclock_gtod_unregister_notifier	time/timekeeping.c	/^int pvclock_gtod_unregister_notifier(struct notifier_block *nb)$/;"	f
pwd	audit.h	/^	struct path	    pwd;$/;"	m	struct:audit_context	typeref:struct:audit_context::path
pwq_activate_delayed_work	workqueue.c	/^static void pwq_activate_delayed_work(struct work_struct *work)$/;"	f	file:
pwq_activate_first_delayed	workqueue.c	/^static void pwq_activate_first_delayed(struct pool_workqueue *pwq)$/;"	f	file:
pwq_adjust_max_active	workqueue.c	/^static void pwq_adjust_max_active(struct pool_workqueue *pwq)$/;"	f	file:
pwq_cache	workqueue.c	/^static struct kmem_cache *pwq_cache;$/;"	v	typeref:struct:kmem_cache	file:
pwq_dec_nr_in_flight	workqueue.c	/^static void pwq_dec_nr_in_flight(struct pool_workqueue *pwq, int color)$/;"	f	file:
pwq_tbl	workqueue.c	/^	struct pool_workqueue	*pwq_tbl[];$/;"	m	struct:apply_wqattrs_ctx	typeref:struct:apply_wqattrs_ctx::pool_workqueue	file:
pwq_unbound_release_workfn	workqueue.c	/^static void pwq_unbound_release_workfn(struct work_struct *work)$/;"	f	file:
pwqs	workqueue.c	/^	struct list_head	pwqs;		\/* WR: all pwqs of this wq *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
pwqs_node	workqueue.c	/^	struct list_head	pwqs_node;	\/* WR: node on wq->pwqs *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
q	audit.h	/^	struct sk_buff_head q;$/;"	m	struct:audit_netlink_list	typeref:struct:audit_netlink_list::sk_buff_head
q	bpf/cpumap.c	/^	void *q[CPU_MAP_BULK_SIZE];$/;"	m	struct:xdp_bulk_queue	file:
q	bpf/devmap.c	/^	struct xdp_frame *q[DEV_MAP_BULK_SIZE];$/;"	m	struct:xdp_bulk_queue	typeref:struct:xdp_bulk_queue::xdp_frame	file:
qbytes	audit.h	/^			unsigned long		qbytes;$/;"	m	struct:audit_context::__anon53::__anon55
qhimark	rcu/tree.c	/^static long qhimark = DEFAULT_RCU_QHIMARK;$/;"	v	file:
qlen_last_fqs_check	rcu/tree.h	/^	long		qlen_last_fqs_check;$/;"	m	struct:rcu_data
qlowmark	rcu/tree.c	/^static long qlowmark = DEFAULT_RCU_QLOMARK;$/;"	v	file:
qnode	locking/qspinlock.c	/^struct qnode {$/;"	s	file:
qsize	bpf/cpumap.c	/^	u32 qsize;  \/* Queue size placeholder for map lookup *\/$/;"	m	struct:bpf_cpu_map_entry	file:
qsmask	rcu/tree.h	/^	unsigned long qsmask;	\/* CPUs or groups that need to switch in *\/$/;"	m	struct:rcu_node
qsmaskinit	rcu/tree.h	/^	unsigned long qsmaskinit;$/;"	m	struct:rcu_node
qsmaskinitnext	rcu/tree.h	/^	unsigned long qsmaskinitnext;$/;"	m	struct:rcu_node
queue	bpf/cpumap.c	/^	struct ptr_ring *queue;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::ptr_ring	file:
queue	sched/sched.h	/^	struct list_head queue[MAX_RT_PRIO];$/;"	m	struct:rt_prio_array	typeref:struct:rt_prio_array::list_head
queue_balance_callback	sched/sched.h	/^queue_balance_callback(struct rq *rq,$/;"	f
queue_delayed_work_on	workqueue.c	/^EXPORT_SYMBOL(queue_delayed_work_on);$/;"	v
queue_delayed_work_on	workqueue.c	/^bool queue_delayed_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
queue_flush_work	printk/printk_safe.c	/^static void queue_flush_work(struct printk_safe_seq_buf *s)$/;"	f	file:
queue_map_ops	bpf/queue_stack_maps.c	/^const struct bpf_map_ops queue_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
queue_map_peek_elem	bpf/queue_stack_maps.c	/^static int queue_map_peek_elem(struct bpf_map *map, void *value)$/;"	f	file:
queue_map_pop_elem	bpf/queue_stack_maps.c	/^static int queue_map_pop_elem(struct bpf_map *map, void *value)$/;"	f	file:
queue_rcu_work	workqueue.c	/^EXPORT_SYMBOL(queue_rcu_work);$/;"	v
queue_rcu_work	workqueue.c	/^bool queue_rcu_work(struct workqueue_struct *wq, struct rcu_work *rwork)$/;"	f
queue_stack_map_alloc	bpf/queue_stack_maps.c	/^static struct bpf_map *queue_stack_map_alloc(union bpf_attr *attr)$/;"	f	file:
queue_stack_map_alloc_check	bpf/queue_stack_maps.c	/^static int queue_stack_map_alloc_check(union bpf_attr *attr)$/;"	f	file:
queue_stack_map_delete_elem	bpf/queue_stack_maps.c	/^static int queue_stack_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
queue_stack_map_free	bpf/queue_stack_maps.c	/^static void queue_stack_map_free(struct bpf_map *map)$/;"	f	file:
queue_stack_map_get_next_key	bpf/queue_stack_maps.c	/^static int queue_stack_map_get_next_key(struct bpf_map *map, void *key,$/;"	f	file:
queue_stack_map_is_empty	bpf/queue_stack_maps.c	/^static bool queue_stack_map_is_empty(struct bpf_queue_stack *qs)$/;"	f	file:
queue_stack_map_is_full	bpf/queue_stack_maps.c	/^static bool queue_stack_map_is_full(struct bpf_queue_stack *qs)$/;"	f	file:
queue_stack_map_lookup_elem	bpf/queue_stack_maps.c	/^static void *queue_stack_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
queue_stack_map_push_elem	bpf/queue_stack_maps.c	/^static int queue_stack_map_push_elem(struct bpf_map *map, void *value,$/;"	f	file:
queue_stack_map_update_elem	bpf/queue_stack_maps.c	/^static int queue_stack_map_update_elem(struct bpf_map *map, void *key,$/;"	f	file:
queue_stop_cpus_work	stop_machine.c	/^static bool queue_stop_cpus_work(const struct cpumask *cpumask,$/;"	f	file:
queue_up_suspend_work	power/autosleep.c	/^void queue_up_suspend_work(void)$/;"	f
queue_work_node	workqueue.c	/^EXPORT_SYMBOL_GPL(queue_work_node);$/;"	v
queue_work_node	workqueue.c	/^bool queue_work_node(int node, struct workqueue_struct *wq,$/;"	f
queue_work_on	workqueue.c	/^EXPORT_SYMBOL(queue_work_on);$/;"	v
queue_work_on	workqueue.c	/^bool queue_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
queued_fetch_set_pending_acquire	locking/qspinlock.c	/^static __always_inline u32 queued_fetch_set_pending_acquire(struct qspinlock *lock)$/;"	f	file:
queued_read_lock_slowpath	locking/qrwlock.c	/^EXPORT_SYMBOL(queued_read_lock_slowpath);$/;"	v
queued_read_lock_slowpath	locking/qrwlock.c	/^void queued_read_lock_slowpath(struct qrwlock *lock)$/;"	f
queued_spin_lock_slowpath	locking/qspinlock.c	/^EXPORT_SYMBOL(queued_spin_lock_slowpath);$/;"	v
queued_spin_lock_slowpath	locking/qspinlock.c	/^void queued_spin_lock_slowpath(struct qspinlock *lock, u32 val)$/;"	f
queued_spin_lock_slowpath	locking/qspinlock.c	288;"	d	file:
queued_spin_lock_slowpath	locking/qspinlock.c	577;"	d	file:
queued_spin_lock_slowpath	locking/qspinlock.c	578;"	d	file:
queued_spin_trylock	locking/qspinlock_paravirt.h	80;"	d
queued_write_lock_slowpath	locking/qrwlock.c	/^EXPORT_SYMBOL(queued_write_lock_slowpath);$/;"	v
queued_write_lock_slowpath	locking/qrwlock.c	/^void queued_write_lock_slowpath(struct qrwlock *lock)$/;"	f
queues	futex.c	/^	struct futex_hash_bucket *queues;$/;"	m	struct:__anon91	typeref:struct:__anon91::futex_hash_bucket	file:
queuing_blocked	kthread.c	/^static inline bool queuing_blocked(struct kthread_worker *worker,$/;"	f	file:
quiet_cmd_gen-kdb	debug/kdb/Makefile	/^quiet_cmd_gen-kdb = GENKDB  $@$/;"	m
quiet_cmd_genikh	Makefile	/^quiet_cmd_genikh = CHK     $(obj)\/kheaders_data.tar.xz$/;"	m
quota	sched/core.c	/^	u64 period, quota;$/;"	m	struct:cfs_schedulable_data	file:
quota	sched/sched.h	/^	u64			quota;$/;"	m	struct:cfs_bandwidth
quotactl	sys_ni.c	/^COND_SYSCALL(quotactl);$/;"	v
quotactl32	sys_ni.c	/^COND_SYSCALL_COMPAT(quotactl32);$/;"	v
r_next	resource.c	/^static void *r_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
r_show	resource.c	/^static int r_show(struct seq_file *m, void *v)$/;"	f	file:
raise_softirq	softirq.c	/^void raise_softirq(unsigned int nr)$/;"	f
raise_softirq_irqoff	softirq.c	/^inline void raise_softirq_irqoff(unsigned int nr)$/;"	f
rand1	test_kprobes.c	/^static u32 rand1, preh_val, posth_val;$/;"	v	file:
range_within	bpf/verifier.c	/^static bool range_within(struct bpf_reg_state *old,$/;"	f	file:
rate	time/sched_clock.c	/^	unsigned long		rate;$/;"	m	struct:clock_data	file:
rate_limit_us	sched/cpufreq_schedutil.c	/^	unsigned int		rate_limit_us;$/;"	m	struct:sugov_tunables	file:
rate_limit_us	sched/cpufreq_schedutil.c	/^static struct governor_attr rate_limit_us = __ATTR_RW(rate_limit_us);$/;"	v	typeref:struct:governor_attr	file:
rate_limit_us_show	sched/cpufreq_schedutil.c	/^static ssize_t rate_limit_us_show(struct gov_attr_set *attr_set, char *buf)$/;"	f	file:
rate_limit_us_store	sched/cpufreq_schedutil.c	/^rate_limit_us_store(struct gov_attr_set *attr_set, const char *buf, size_t count)$/;"	f	file:
raw_lockdep_assert_held_rcu_node	rcu/rcu.h	415;"	d
raw_mode	bpf/verifier.c	/^	bool raw_mode;$/;"	m	struct:bpf_call_arg_meta	file:
raw_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_call_chain);$/;"	v
raw_notifier_call_chain	notifier.c	/^int raw_notifier_call_chain(struct raw_notifier_head *nh,$/;"	f
raw_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_chain_register);$/;"	v
raw_notifier_chain_register	notifier.c	/^int raw_notifier_chain_register(struct raw_notifier_head *nh,$/;"	f
raw_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_chain_unregister);$/;"	v
raw_notifier_chain_unregister	notifier.c	/^int raw_notifier_chain_unregister(struct raw_notifier_head *nh,$/;"	f
raw_rq	sched/sched.h	1041;"	d
raw_spin_lock_irq_rcu_node	rcu/rcu.h	388;"	d
raw_spin_lock_irqsave_rcu_node	rcu/rcu.h	397;"	d
raw_spin_lock_rcu_node	rcu/rcu.h	380;"	d
raw_spin_trylock_rcu_node	rcu/rcu.h	406;"	d
raw_spin_unlock_irq_rcu_node	rcu/rcu.h	394;"	d
raw_spin_unlock_irqrestore_rcu_node	rcu/rcu.h	403;"	d
raw_spin_unlock_rcu_node	rcu/rcu.h	386;"	d
raw_tp_prog_func_proto	trace/bpf_trace.c	/^raw_tp_prog_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
raw_tp_prog_is_valid_access	trace/bpf_trace.c	/^static bool raw_tp_prog_is_valid_access(int off, int size,$/;"	f	file:
raw_tp_writable_prog_is_valid_access	trace/bpf_trace.c	/^static bool raw_tp_writable_prog_is_valid_access(int off, int size,$/;"	f	file:
raw_tracepoint_prog_ops	trace/bpf_trace.c	/^const struct bpf_prog_ops raw_tracepoint_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
raw_tracepoint_verifier_ops	trace/bpf_trace.c	/^const struct bpf_verifier_ops raw_tracepoint_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
raw_tracepoint_writable_prog_ops	trace/bpf_trace.c	/^const struct bpf_prog_ops raw_tracepoint_writable_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
raw_tracepoint_writable_verifier_ops	trace/bpf_trace.c	/^const struct bpf_verifier_ops raw_tracepoint_writable_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
rb	events/core.c	/^	struct ring_buffer	*rb;$/;"	m	struct:remote_output	typeref:struct:remote_output::ring_buffer	file:
rb_add_time_stamp	trace/ring_buffer.c	/^rb_add_time_stamp(struct ring_buffer_event *event, u64 delta, bool abs)$/;"	f	file:
rb_advance_iter	trace/ring_buffer.c	/^static void rb_advance_iter(struct ring_buffer_iter *iter)$/;"	f	file:
rb_advance_reader	trace/ring_buffer.c	/^static void rb_advance_reader(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_alloc	events/ring_buffer.c	/^struct ring_buffer *rb_alloc(int nr_pages, long watermark, int cpu, int flags)$/;"	f
rb_alloc_aux	events/ring_buffer.c	/^int rb_alloc_aux(struct ring_buffer *rb, struct perf_event *event,$/;"	f
rb_alloc_aux_page	events/ring_buffer.c	/^static struct page *rb_alloc_aux_page(int node, int order)$/;"	f	file:
rb_allocate_cpu_buffer	trace/ring_buffer.c	/^rb_allocate_cpu_buffer(struct ring_buffer *buffer, long nr_pages, int cpu)$/;"	f	file:
rb_allocate_pages	trace/ring_buffer.c	/^static int rb_allocate_pages(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_buffer_peek	trace/ring_buffer.c	/^rb_buffer_peek(struct ring_buffer_per_cpu *cpu_buffer, u64 *ts,$/;"	f	file:
rb_calculate_event_length	trace/ring_buffer.c	/^static unsigned rb_calculate_event_length(unsigned length)$/;"	f	file:
rb_check_bpage	trace/ring_buffer.c	/^static int rb_check_bpage(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_check_list	trace/ring_buffer.c	/^static int rb_check_list(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_check_pages	trace/ring_buffer.c	/^static int rb_check_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_commit	trace/ring_buffer.c	/^static void rb_commit(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_commit_index	trace/ring_buffer.c	/^rb_commit_index(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_decrement_entry	trace/ring_buffer.c	/^rb_decrement_entry(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_end_commit	trace/ring_buffer.c	/^static __always_inline void rb_end_commit(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_event_data	trace/ring_buffer.c	/^rb_event_data(struct ring_buffer_event *event)$/;"	f	file:
rb_event_data_length	trace/ring_buffer.c	/^rb_event_data_length(struct ring_buffer_event *event)$/;"	f	file:
rb_event_discard	trace/ring_buffer.c	/^static inline void rb_event_discard(struct ring_buffer_event *event)$/;"	f	file:
rb_event_index	trace/ring_buffer.c	/^rb_event_index(struct ring_buffer_event *event)$/;"	f	file:
rb_event_info	trace/ring_buffer.c	/^struct rb_event_info {$/;"	s	file:
rb_event_is_commit	trace/ring_buffer.c	/^rb_event_is_commit(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_event_length	trace/ring_buffer.c	/^rb_event_length(struct ring_buffer_event *event)$/;"	f	file:
rb_event_set_padding	trace/ring_buffer.c	/^static void rb_event_set_padding(struct ring_buffer_event *event)$/;"	f	file:
rb_event_ts_length	trace/ring_buffer.c	/^rb_event_ts_length(struct ring_buffer_event *event)$/;"	f	file:
rb_free	events/ring_buffer.c	/^void rb_free(struct ring_buffer *rb)$/;"	f
rb_free_aux	events/ring_buffer.c	/^void rb_free_aux(struct ring_buffer *rb)$/;"	f
rb_free_aux_page	events/ring_buffer.c	/^static void rb_free_aux_page(struct ring_buffer *rb, int idx)$/;"	f	file:
rb_free_cpu_buffer	trace/ring_buffer.c	/^static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_free_rcu	events/internal.h	/^static inline void rb_free_rcu(struct rcu_head *rcu_head)$/;"	f
rb_free_work	events/ring_buffer.c	/^static void rb_free_work(struct work_struct *work)$/;"	f	file:
rb_get_reader_page	trace/ring_buffer.c	/^rb_get_reader_page(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_hammer_test	trace/ring_buffer.c	/^static __init int rb_hammer_test(void *arg)$/;"	f	file:
rb_handle_head_page	trace/ring_buffer.c	/^rb_handle_head_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_handle_timestamp	trace/ring_buffer.c	/^rb_handle_timestamp(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_has_aux	events/internal.h	/^static inline bool rb_has_aux(struct ring_buffer *rb)$/;"	f
rb_head_page_activate	trace/ring_buffer.c	/^static void rb_head_page_activate(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_head_page_deactivate	trace/ring_buffer.c	/^rb_head_page_deactivate(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_head_page_replace	trace/ring_buffer.c	/^static int rb_head_page_replace(struct buffer_page *old,$/;"	f	file:
rb_head_page_set	trace/ring_buffer.c	/^static int rb_head_page_set(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_head	trace/ring_buffer.c	/^static int rb_head_page_set_head(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_normal	trace/ring_buffer.c	/^static int rb_head_page_set_normal(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_update	trace/ring_buffer.c	/^static int rb_head_page_set_update(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_inc_iter	trace/ring_buffer.c	/^static void rb_inc_iter(struct ring_buffer_iter *iter)$/;"	f	file:
rb_inc_page	trace/ring_buffer.c	/^static inline void rb_inc_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_init_page	trace/ring_buffer.c	/^static void rb_init_page(struct buffer_data_page *bpage)$/;"	f	file:
rb_insert_pages	trace/ring_buffer.c	/^rb_insert_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_ipi	trace/ring_buffer.c	/^static __init void rb_ipi(void *ignore)$/;"	f	file:
rb_irq_work	trace/ring_buffer.c	/^struct rb_irq_work {$/;"	s	file:
rb_is_head_page	trace/ring_buffer.c	/^rb_is_head_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_is_reader_page	trace/ring_buffer.c	/^static bool rb_is_reader_page(struct buffer_page *page)$/;"	f	file:
rb_item	trace/ring_buffer.c	/^struct rb_item {$/;"	s	file:
rb_iter_head_event	trace/ring_buffer.c	/^rb_iter_head_event(struct ring_buffer_iter *iter)$/;"	f	file:
rb_iter_peek	trace/ring_buffer.c	/^rb_iter_peek(struct ring_buffer_iter *iter, u64 *ts)$/;"	f	file:
rb_iter_reset	trace/ring_buffer.c	/^static void rb_iter_reset(struct ring_buffer_iter *iter)$/;"	f	file:
rb_list_head	trace/ring_buffer.c	/^static struct list_head *rb_list_head(struct list_head *list)$/;"	f	file:
rb_list_head_clear	trace/ring_buffer.c	/^static void rb_list_head_clear(struct list_head *list)$/;"	f	file:
rb_lost_events	trace/ring_buffer.c	/^static int rb_lost_events(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_move_tail	trace/ring_buffer.c	/^rb_move_tail(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_need_aux_wakeup	events/ring_buffer.c	/^static __always_inline bool rb_need_aux_wakeup(struct ring_buffer *rb)$/;"	f	file:
rb_node	events/uprobes.c	/^	struct rb_node		rb_node;	\/* node in the rb tree *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::rb_node	file:
rb_null_event	trace/ring_buffer.c	/^static inline int rb_null_event(struct ring_buffer_event *event)$/;"	f	file:
rb_num_of_entries	trace/ring_buffer.c	/^rb_num_of_entries(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_page	trace/ring_buffer_benchmark.c	/^struct rb_page {$/;"	s	file:
rb_page_commit	trace/ring_buffer.c	/^static __always_inline unsigned rb_page_commit(struct buffer_page *bpage)$/;"	f	file:
rb_page_entries	trace/ring_buffer.c	/^static inline unsigned long rb_page_entries(struct buffer_page *bpage)$/;"	f	file:
rb_page_size	trace/ring_buffer.c	/^static __always_inline unsigned rb_page_size(struct buffer_page *bpage)$/;"	f	file:
rb_page_write	trace/ring_buffer.c	/^static inline unsigned long rb_page_write(struct buffer_page *bpage)$/;"	f	file:
rb_per_cpu_empty	trace/ring_buffer.c	/^static bool rb_per_cpu_empty(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reader_event	trace/ring_buffer.c	/^rb_reader_event(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reader_lock	trace/ring_buffer.c	/^static inline bool rb_reader_lock(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reader_unlock	trace/ring_buffer.c	/^rb_reader_unlock(struct ring_buffer_per_cpu *cpu_buffer, bool locked)$/;"	f	file:
rb_remove_pages	trace/ring_buffer.c	/^rb_remove_pages(struct ring_buffer_per_cpu *cpu_buffer, unsigned long nr_pages)$/;"	f	file:
rb_reserve_next_event	trace/ring_buffer.c	/^rb_reserve_next_event(struct ring_buffer *buffer,$/;"	f	file:
rb_reset_cpu	trace/ring_buffer.c	/^rb_reset_cpu(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reset_tail	trace/ring_buffer.c	/^rb_reset_tail(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_set_commit_to_write	trace/ring_buffer.c	/^rb_set_commit_to_write(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_set_head_page	trace/ring_buffer.c	/^rb_set_head_page(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_set_list_to_head	trace/ring_buffer.c	/^static void rb_set_list_to_head(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_simple_fops	trace/trace.c	/^static const struct file_operations rb_simple_fops = {$/;"	v	typeref:struct:file_operations	file:
rb_simple_read	trace/trace.c	/^rb_simple_read(struct file *filp, char __user *ubuf,$/;"	f	file:
rb_simple_write	trace/trace.c	/^rb_simple_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
rb_start_commit	trace/ring_buffer.c	/^static void rb_start_commit(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_tail_page_update	trace/ring_buffer.c	/^static void rb_tail_page_update(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_test	trace/ring_buffer.c	/^static __init int rb_test(void *arg)$/;"	f	file:
rb_test_data	trace/ring_buffer.c	/^struct rb_test_data {$/;"	s	file:
rb_time_stamp	trace/ring_buffer.c	/^static inline u64 rb_time_stamp(struct ring_buffer *buffer)$/;"	f	file:
rb_toggle_paused	events/internal.h	/^static inline void rb_toggle_paused(struct ring_buffer *rb, bool pause)$/;"	f
rb_try_to_discard	trace/ring_buffer.c	/^rb_try_to_discard(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_event	trace/ring_buffer.c	/^rb_update_event(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_iter_read_stamp	trace/ring_buffer.c	/^rb_update_iter_read_stamp(struct ring_buffer_iter *iter,$/;"	f	file:
rb_update_pages	trace/ring_buffer.c	/^static void rb_update_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_update_read_stamp	trace/ring_buffer.c	/^rb_update_read_stamp(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_write_stamp	trace/ring_buffer.c	/^rb_update_write_stamp(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_wake_up_waiters	trace/ring_buffer.c	/^static void rb_wake_up_waiters(struct irq_work *work)$/;"	f	file:
rb_wakeups	trace/ring_buffer.c	/^rb_wakeups(struct ring_buffer *buffer, struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_write_something	trace/ring_buffer.c	/^static __init int rb_write_something(struct rb_test_data *data, bool nested)$/;"	f	file:
rchan_percpu_buf_dispatcher	relay.c	/^struct rchan_percpu_buf_dispatcher {$/;"	s	file:
rcu	acct.c	/^	struct rcu_head		rcu;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::rcu_head	file:
rcu	audit.c	/^	struct rcu_head rcu;$/;"	m	struct:auditd_connection	typeref:struct:auditd_connection::rcu_head	file:
rcu	audit.h	/^	struct rcu_head		rcu;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::rcu_head
rcu	bpf/btf.c	/^	struct rcu_head rcu;$/;"	m	struct:btf	typeref:struct:btf::rcu_head	file:
rcu	bpf/cpumap.c	/^	struct rcu_head rcu;$/;"	m	struct:bpf_cpu_map_entry	typeref:struct:bpf_cpu_map_entry::rcu_head	file:
rcu	bpf/devmap.c	/^	struct rcu_head rcu;$/;"	m	struct:bpf_dtab_netdev	typeref:struct:bpf_dtab_netdev::rcu_head	file:
rcu	bpf/hashtab.c	/^		struct rcu_head rcu;$/;"	m	union:htab_elem::__anon73	typeref:struct:htab_elem::__anon73::rcu_head	file:
rcu	bpf/lpm_trie.c	/^	struct rcu_head rcu;$/;"	m	struct:lpm_trie_node	typeref:struct:lpm_trie_node::rcu_head	file:
rcu	rcu/rcutorture.c	/^	struct rcu_head rcu;$/;"	m	struct:rcu_boost_inflight	typeref:struct:rcu_boost_inflight::rcu_head	file:
rcu	sched/fair.c	/^	struct rcu_head rcu;$/;"	m	struct:numa_group	typeref:struct:numa_group::rcu_head	file:
rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	m	struct:root_domain	typeref:struct:root_domain::rcu_head
rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	m	struct:task_group	typeref:struct:task_group::rcu_head
rcu	sched/sched.h	/^	struct rcu_head rcu;$/;"	m	struct:perf_domain	typeref:struct:perf_domain::rcu_head
rcu	trace/ftrace.c	/^	struct rcu_head		rcu;$/;"	m	struct:ftrace_mod_map	typeref:struct:ftrace_mod_map::rcu_head	file:
rcu	trace/trace.h	/^	struct rcu_head		rcu;$/;"	m	struct:ftrace_hash	typeref:struct:ftrace_hash::rcu_head
rcu	tracepoint.c	/^	struct rcu_head rcu;$/;"	m	struct:tp_probes	typeref:struct:tp_probes::rcu_head	file:
rcu	workqueue.c	/^	struct rcu_head		rcu;$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::rcu_head	file:
rcu	workqueue.c	/^	struct rcu_head		rcu;$/;"	m	struct:worker_pool	typeref:struct:worker_pool::rcu_head	file:
rcu	workqueue.c	/^	struct rcu_head		rcu;$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::rcu_head	file:
rcu_accelerate_cbs	rcu/tree.c	/^static bool rcu_accelerate_cbs(struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
rcu_accelerate_cbs_unlocked	rcu/tree.c	/^static void rcu_accelerate_cbs_unlocked(struct rcu_node *rnp,$/;"	f	file:
rcu_advance_cbs	rcu/tree.c	/^static bool rcu_advance_cbs(struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
rcu_all_qs	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_all_qs);$/;"	v
rcu_all_qs	rcu/tree_plugin.h	/^void rcu_all_qs(void)$/;"	f
rcu_barrier	rcu/tiny.c	/^EXPORT_SYMBOL(rcu_barrier);$/;"	v
rcu_barrier	rcu/tiny.c	/^void rcu_barrier(void)$/;"	f
rcu_barrier	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_barrier);$/;"	v
rcu_barrier	rcu/tree.c	/^void rcu_barrier(void)$/;"	f
rcu_barrier_callback	rcu/tree.c	/^static void rcu_barrier_callback(struct rcu_head *rhp)$/;"	f	file:
rcu_barrier_func	rcu/tree.c	/^static void rcu_barrier_func(void *unused)$/;"	f	file:
rcu_barrier_tasks	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_barrier_tasks);$/;"	v
rcu_barrier_tasks	rcu/update.c	/^void rcu_barrier_tasks(void)$/;"	f
rcu_barrier_trace	rcu/tree.c	/^static void rcu_barrier_trace(const char *s, int cpu, unsigned long done)$/;"	f	file:
rcu_bh_lock_key	rcu/update.c	/^static struct lock_class_key rcu_bh_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_bh_lock_map	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_bh_lock_map);$/;"	v
rcu_bh_lock_map	rcu/update.c	/^struct lockdep_map rcu_bh_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_bind_current_to_nocb	rcu/rcu.h	/^static inline void rcu_bind_current_to_nocb(void) { }$/;"	f
rcu_bind_current_to_nocb	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_bind_current_to_nocb);$/;"	v
rcu_bind_current_to_nocb	rcu/tree_plugin.h	/^void rcu_bind_current_to_nocb(void)$/;"	f
rcu_bind_gp_kthread	rcu/tree_plugin.h	/^static void rcu_bind_gp_kthread(void)$/;"	f
rcu_blocking_is_gp	rcu/tree.c	/^static int rcu_blocking_is_gp(void)$/;"	f	file:
rcu_boost	rcu/tree_plugin.h	/^static int rcu_boost(struct rcu_node *rnp)$/;"	f
rcu_boost_inflight	rcu/rcutorture.c	/^struct rcu_boost_inflight {$/;"	s	file:
rcu_boost_kthread	rcu/tree_plugin.h	/^static int rcu_boost_kthread(void *arg)$/;"	f
rcu_boost_kthread_setaffinity	rcu/tree_plugin.h	/^static void rcu_boost_kthread_setaffinity(struct rcu_node *rnp, int outgoingcpu)$/;"	f
rcu_boot_init_nocb_percpu_data	rcu/tree_plugin.h	/^static void __init rcu_boot_init_nocb_percpu_data(struct rcu_data *rdp)$/;"	f
rcu_boot_init_percpu_data	rcu/tree.c	/^rcu_boot_init_percpu_data(int cpu)$/;"	f	file:
rcu_bootup_announce	rcu/tree_plugin.h	/^static void __init rcu_bootup_announce(void)$/;"	f
rcu_bootup_announce_oddness	rcu/tree_plugin.h	/^static void __init rcu_bootup_announce_oddness(void)$/;"	f
rcu_busted_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops rcu_busted_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_busted_torture_deferred_free	rcu/rcutorture.c	/^static void rcu_busted_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_callback_key	rcu/update.c	/^static struct lock_class_key rcu_callback_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_callback_map	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_callback_map);$/;"	v
rcu_callback_map	rcu/update.c	/^struct lockdep_map rcu_callback_map =$/;"	v	typeref:struct:lockdep_map
rcu_can_boost	rcu/rcutorture.c	211;"	d	file:
rcu_can_boost	rcu/rcutorture.c	213;"	d	file:
rcu_cblist_dequeue	rcu/rcu_segcblist.c	/^struct rcu_head *rcu_cblist_dequeue(struct rcu_cblist *rclp)$/;"	f
rcu_cblist_dequeued_lazy	rcu/rcu_segcblist.h	/^static inline void rcu_cblist_dequeued_lazy(struct rcu_cblist *rclp)$/;"	f
rcu_cblist_init	rcu/rcu_segcblist.c	/^void rcu_cblist_init(struct rcu_cblist *rclp)$/;"	f
rcu_check_gp_kthread_starvation	rcu/tree_stall.h	/^static void rcu_check_gp_kthread_starvation(void)$/;"	f
rcu_check_gp_start_stall	rcu/tree_stall.h	/^static void rcu_check_gp_start_stall(struct rcu_node *rnp, struct rcu_data *rdp,$/;"	f
rcu_check_quiescent_state	rcu/tree.c	/^rcu_check_quiescent_state(struct rcu_data *rdp)$/;"	f	file:
rcu_cleanup_after_idle	rcu/tree_plugin.h	/^static void rcu_cleanup_after_idle(void)$/;"	f
rcu_cleanup_dead_rnp	rcu/tree.c	/^static void rcu_cleanup_dead_rnp(struct rcu_node *rnp_leaf)$/;"	f	file:
rcu_copy_process	fork.c	/^static inline void rcu_copy_process(struct task_struct *p)$/;"	f	file:
rcu_core	rcu/tree.c	/^static __latent_entropy void rcu_core(void)$/;"	f	file:
rcu_core_si	rcu/tree.c	/^static void rcu_core_si(struct softirq_action *h)$/;"	f	file:
rcu_cpu_has_work	rcu/tree.h	/^	char rcu_cpu_has_work;$/;"	m	struct:rcu_data
rcu_cpu_kthread	rcu/tree.c	/^static void rcu_cpu_kthread(unsigned int cpu)$/;"	f	file:
rcu_cpu_kthread_park	rcu/tree.c	/^static void rcu_cpu_kthread_park(unsigned int cpu)$/;"	f	file:
rcu_cpu_kthread_setup	rcu/tree_plugin.h	/^static void rcu_cpu_kthread_setup(unsigned int cpu)$/;"	f
rcu_cpu_kthread_should_run	rcu/tree.c	/^static int rcu_cpu_kthread_should_run(unsigned int cpu)$/;"	f	file:
rcu_cpu_kthread_status	rcu/tree.h	/^	unsigned int rcu_cpu_kthread_status;$/;"	m	struct:rcu_data
rcu_cpu_kthread_task	rcu/tree.h	/^	struct task_struct *rcu_cpu_kthread_task;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::task_struct
rcu_cpu_stall_reset	rcu/tree_stall.h	/^void rcu_cpu_stall_reset(void)$/;"	f
rcu_cpu_stall_suppress	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_cpu_stall_suppress);$/;"	v
rcu_cpu_starting	rcu/tree.c	/^void rcu_cpu_starting(unsigned int cpu)$/;"	f
rcu_cpu_thread_spec	rcu/tree.c	/^static struct smp_hotplug_thread rcu_cpu_thread_spec = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
rcu_ctrlblk	rcu/tiny.c	/^static struct rcu_ctrlblk rcu_ctrlblk = {$/;"	v	typeref:struct:rcu_ctrlblk	file:
rcu_ctrlblk	rcu/tiny.c	/^struct rcu_ctrlblk {$/;"	s	file:
rcu_data	rcu/tree.h	/^struct rcu_data {$/;"	s
rcu_dereference_check_sched_domain	sched/sched.h	1315;"	d
rcu_do_batch	rcu/tree.c	/^static void rcu_do_batch(struct rcu_data *rdp)$/;"	f	file:
rcu_dump_cpu_stacks	rcu/tree_stall.h	/^static void rcu_dump_cpu_stacks(void)$/;"	f
rcu_dump_rcu_node_tree	rcu/tree.c	/^static void __init rcu_dump_rcu_node_tree(void)$/;"	f	file:
rcu_dynticks_curr_cpu_in_eqs	rcu/tree.c	/^bool rcu_dynticks_curr_cpu_in_eqs(void)$/;"	f
rcu_dynticks_eqs_enter	rcu/tree.c	/^static void rcu_dynticks_eqs_enter(void)$/;"	f	file:
rcu_dynticks_eqs_exit	rcu/tree.c	/^static void rcu_dynticks_eqs_exit(void)$/;"	f	file:
rcu_dynticks_eqs_online	rcu/tree.c	/^static void rcu_dynticks_eqs_online(void)$/;"	f	file:
rcu_dynticks_in_eqs	rcu/tree.c	/^static bool rcu_dynticks_in_eqs(int snap)$/;"	f	file:
rcu_dynticks_in_eqs_since	rcu/tree.c	/^static bool rcu_dynticks_in_eqs_since(struct rcu_data *rdp, int snap)$/;"	f	file:
rcu_dynticks_snap	rcu/tree.c	/^int rcu_dynticks_snap(struct rcu_data *rdp)$/;"	f
rcu_dynticks_task_enter	rcu/tree_plugin.h	/^static void rcu_dynticks_task_enter(void)$/;"	f
rcu_dynticks_task_exit	rcu/tree_plugin.h	/^static void rcu_dynticks_task_exit(void)$/;"	f
rcu_early_boot_tests	rcu/update.c	/^void rcu_early_boot_tests(void) {}$/;"	f
rcu_early_boot_tests	rcu/update.c	/^void rcu_early_boot_tests(void)$/;"	f
rcu_end_inkernel_boot	rcu/update.c	/^void rcu_end_inkernel_boot(void)$/;"	f
rcu_eqs_enter	rcu/tree.c	/^static void rcu_eqs_enter(bool user)$/;"	f	file:
rcu_eqs_exit	rcu/tree.c	/^static void rcu_eqs_exit(bool user)$/;"	f	file:
rcu_eqs_special_exit	rcu/tree.c	78;"	d	file:
rcu_eqs_special_set	rcu/tree.c	/^bool rcu_eqs_special_set(int cpu)$/;"	f
rcu_exp_batches_completed	rcu/rcu.h	/^static inline unsigned long rcu_exp_batches_completed(void) { return 0; }$/;"	f
rcu_exp_batches_completed	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_exp_batches_completed);$/;"	v
rcu_exp_batches_completed	rcu/tree.c	/^unsigned long rcu_exp_batches_completed(void)$/;"	f
rcu_exp_gp_seq_done	rcu/tree_exp.h	/^static bool rcu_exp_gp_seq_done(unsigned long s)$/;"	f
rcu_exp_gp_seq_end	rcu/tree_exp.h	/^static void rcu_exp_gp_seq_end(void)$/;"	f
rcu_exp_gp_seq_endval	rcu/tree_exp.h	/^static __maybe_unused unsigned long rcu_exp_gp_seq_endval(void)$/;"	f
rcu_exp_gp_seq_snap	rcu/tree_exp.h	/^static unsigned long rcu_exp_gp_seq_snap(void)$/;"	f
rcu_exp_gp_seq_start	rcu/tree_exp.h	/^static void rcu_exp_gp_seq_start(void)$/;"	f
rcu_exp_handler	rcu/tree_exp.h	/^static void rcu_exp_handler(void *unused)$/;"	f
rcu_exp_need_qs	rcu/tree_exp.h	/^static void rcu_exp_need_qs(void)$/;"	f
rcu_exp_sel_wait_wake	rcu/tree_exp.h	/^static void rcu_exp_sel_wait_wake(unsigned long s)$/;"	f
rcu_exp_wait_wake	rcu/tree_exp.h	/^static void rcu_exp_wait_wake(unsigned long s)$/;"	f
rcu_exp_work	rcu/tree.h	/^struct rcu_exp_work {$/;"	s
rcu_expedite_gp	rcu/rcu.h	/^static inline void rcu_expedite_gp(void) { }$/;"	f
rcu_expedite_gp	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_expedite_gp);$/;"	v
rcu_expedite_gp	rcu/update.c	/^void rcu_expedite_gp(void)$/;"	f
rcu_expedited	ksysfs.c	/^KERNEL_ATTR_RW(rcu_expedited);$/;"	v
rcu_expedited	ksysfs.c	/^int rcu_expedited;$/;"	v
rcu_expedited_nesting	rcu/update.c	/^static atomic_t rcu_expedited_nesting = ATOMIC_INIT(1);$/;"	v	file:
rcu_expedited_show	ksysfs.c	/^static ssize_t rcu_expedited_show(struct kobject *kobj,$/;"	f	file:
rcu_expedited_store	ksysfs.c	/^static ssize_t rcu_expedited_store(struct kobject *kobj,$/;"	f	file:
rcu_fanout_exact	rcu/rcu.h	/^static bool rcu_fanout_exact;$/;"	v
rcu_fanout_exact	rcu/tree.c	/^static bool rcu_fanout_exact;$/;"	v	file:
rcu_fanout_leaf	rcu/rcu.h	/^static int rcu_fanout_leaf;$/;"	v
rcu_fanout_leaf	rcu/tree.c	/^static int rcu_fanout_leaf = RCU_FANOUT_LEAF;$/;"	v	file:
rcu_find_next_bit	rcu/rcu.h	359;"	d
rcu_first_leaf_node	rcu/rcu.h	319;"	d
rcu_flavor_sched_clock_irq	rcu/tree_plugin.h	/^static void rcu_flavor_sched_clock_irq(int user)$/;"	f
rcu_for_each_leaf_node	rcu/rcu.h	344;"	d
rcu_for_each_node_breadth_first	rcu/rcu.h	335;"	d
rcu_force_quiescent_state	rcu/rcu.h	/^static inline void rcu_force_quiescent_state(void) { }$/;"	f
rcu_force_quiescent_state	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_force_quiescent_state);$/;"	v
rcu_force_quiescent_state	rcu/tree.c	/^void rcu_force_quiescent_state(void)$/;"	f
rcu_free_old_probes	tracepoint.c	/^static void rcu_free_old_probes(struct rcu_head *head)$/;"	f	file:
rcu_free_pool	workqueue.c	/^static void rcu_free_pool(struct rcu_head *rcu)$/;"	f	file:
rcu_free_pwq	workqueue.c	/^static void rcu_free_pwq(struct rcu_head *rcu)$/;"	f	file:
rcu_free_wq	workqueue.c	/^static void rcu_free_wq(struct rcu_head *rcu)$/;"	f	file:
rcu_ftrace_dump	rcu/rcu.h	261;"	d
rcu_ftrace_dump_stall_suppress	rcu/rcu.h	234;"	d
rcu_ftrace_dump_stall_suppress	rcu/rcu.h	247;"	d
rcu_ftrace_dump_stall_unsuppress	rcu/rcu.h	240;"	d
rcu_ftrace_dump_stall_unsuppress	rcu/rcu.h	248;"	d
rcu_future_gp_cleanup	rcu/tree.c	/^static bool rcu_future_gp_cleanup(struct rcu_node *rnp)$/;"	f	file:
rcu_fwd_cb	rcu/rcutorture.c	/^struct rcu_fwd_cb {$/;"	s	file:
rcu_fwd_cb_head	rcu/rcutorture.c	/^static struct rcu_fwd_cb *rcu_fwd_cb_head;$/;"	v	typeref:struct:rcu_fwd_cb	file:
rcu_fwd_cb_nodelay	rcu/rcutorture.c	/^static bool rcu_fwd_cb_nodelay;		\/* Short rcu_torture_delay() delays. *\/$/;"	v	file:
rcu_fwd_cb_tail	rcu/rcutorture.c	/^static struct rcu_fwd_cb **rcu_fwd_cb_tail = &rcu_fwd_cb_head;$/;"	v	typeref:struct:rcu_fwd_cb	file:
rcu_fwd_emergency_stop	rcu/rcutorture.c	/^static bool rcu_fwd_emergency_stop;$/;"	v	file:
rcu_fwd_progress_check	rcu/rcu.h	/^static inline void rcu_fwd_progress_check(unsigned long j) { }$/;"	f
rcu_fwd_progress_check	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(rcu_fwd_progress_check);$/;"	v
rcu_fwd_progress_check	rcu/tree_stall.h	/^void rcu_fwd_progress_check(unsigned long j)$/;"	f
rcu_fwd_startat	rcu/rcutorture.c	/^static unsigned long rcu_fwd_startat;$/;"	v	file:
rcu_get_gp_kthreads_prio	rcu/rcu.h	/^static inline int rcu_get_gp_kthreads_prio(void) { return 0; }$/;"	f
rcu_get_gp_kthreads_prio	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_get_gp_kthreads_prio);$/;"	v
rcu_get_gp_kthreads_prio	rcu/tree.c	/^int rcu_get_gp_kthreads_prio(void)$/;"	f
rcu_get_gp_seq	rcu/rcu.h	/^static inline unsigned long rcu_get_gp_seq(void) { return 0; }$/;"	f
rcu_get_gp_seq	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_get_gp_seq);$/;"	v
rcu_get_gp_seq	rcu/tree.c	/^unsigned long rcu_get_gp_seq(void)$/;"	f
rcu_get_n_cbs_cpu	rcu/tree.c	/^static long rcu_get_n_cbs_cpu(int cpu)$/;"	f	file:
rcu_get_n_cbs_nocb_cpu	rcu/tree_plugin.h	/^static unsigned long rcu_get_n_cbs_nocb_cpu(struct rcu_data *rdp)$/;"	f
rcu_get_root	rcu/tree.c	/^static struct rcu_node *rcu_get_root(void)$/;"	f	file:
rcu_gp_cleanup	rcu/tree.c	/^static void rcu_gp_cleanup(void)$/;"	f	file:
rcu_gp_fqs	rcu/tree.c	/^static void rcu_gp_fqs(bool first_time)$/;"	f	file:
rcu_gp_fqs_check_wake	rcu/tree.c	/^static bool rcu_gp_fqs_check_wake(int *gfp)$/;"	f	file:
rcu_gp_fqs_loop	rcu/tree.c	/^static void rcu_gp_fqs_loop(void)$/;"	f	file:
rcu_gp_in_progress	rcu/tree.c	/^static int rcu_gp_in_progress(void)$/;"	f	file:
rcu_gp_init	rcu/tree.c	/^static bool rcu_gp_init(void)$/;"	f	file:
rcu_gp_init_mask	rcu/tree.h	/^	unsigned long rcu_gp_init_mask;	\/* Mask of offline CPUs at GP init. *\/$/;"	m	struct:rcu_node
rcu_gp_is_expedited	rcu/rcu.h	/^static inline bool rcu_gp_is_expedited(void) { return false; }$/;"	f
rcu_gp_is_expedited	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_gp_is_expedited);$/;"	v
rcu_gp_is_expedited	rcu/update.c	/^bool rcu_gp_is_expedited(void)$/;"	f
rcu_gp_is_normal	rcu/rcu.h	/^static inline bool rcu_gp_is_normal(void) { return true; }$/;"	f
rcu_gp_is_normal	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_gp_is_normal);$/;"	v
rcu_gp_is_normal	rcu/update.c	/^bool rcu_gp_is_normal(void)$/;"	f
rcu_gp_kthread	rcu/tree.c	/^static int __noreturn rcu_gp_kthread(void *unused)$/;"	f	file:
rcu_gp_kthread_wake	rcu/tree.c	/^static void rcu_gp_kthread_wake(void)$/;"	f	file:
rcu_gp_slow	rcu/tree.c	/^static void rcu_gp_slow(int delay)$/;"	f	file:
rcu_gp_wq	rcu/tree.c	/^struct workqueue_struct *rcu_gp_wq;$/;"	v	typeref:struct:workqueue_struct
rcu_gpnum_ovf	rcu/tree.c	/^static void rcu_gpnum_ovf(struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
rcu_head	events/callchain.c	/^	struct rcu_head			rcu_head;$/;"	m	struct:callchain_cpus_entries	typeref:struct:callchain_cpus_entries::rcu_head	file:
rcu_head	events/internal.h	/^	struct rcu_head			rcu_head;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::rcu_head
rcu_head	livepatch/shadow.c	/^	struct rcu_head rcu_head;$/;"	m	struct:klp_shadow	typeref:struct:klp_shadow::rcu_head	file:
rcu_head	locking/lockdep.c	/^	struct rcu_head		rcu_head;$/;"	m	struct:delayed_free	typeref:struct:delayed_free::rcu_head	file:
rcu_idle_enter	rcu/tree.c	/^void rcu_idle_enter(void)$/;"	f
rcu_idle_exit	rcu/tree.c	/^void rcu_idle_exit(void)$/;"	f
rcu_idle_gp_delay	rcu/tree_plugin.h	/^static int rcu_idle_gp_delay = RCU_IDLE_GP_DELAY;$/;"	v
rcu_idle_lazy_gp_delay	rcu/tree_plugin.h	/^static int rcu_idle_lazy_gp_delay = RCU_IDLE_LAZY_GP_DELAY;$/;"	v
rcu_implicit_dynticks_qs	rcu/tree.c	/^static int rcu_implicit_dynticks_qs(struct rcu_data *rdp)$/;"	f	file:
rcu_init	rcu/tiny.c	/^void __init rcu_init(void)$/;"	f
rcu_init	rcu/tree.c	/^void __init rcu_init(void)$/;"	f
rcu_init_geometry	rcu/tree.c	/^static void __init rcu_init_geometry(void)$/;"	f	file:
rcu_init_levelspread	rcu/rcu.h	/^static inline void rcu_init_levelspread(int *levelspread, const int *levelcnt)$/;"	f
rcu_init_new_rnp	rcu/tree.c	/^static void rcu_init_new_rnp(struct rcu_node *rnp_leaf)$/;"	f	file:
rcu_init_nohz	rcu/tree_plugin.h	/^void __init rcu_init_nohz(void)$/;"	f
rcu_init_one	rcu/tree.c	/^static void __init rcu_init_one(void)$/;"	f	file:
rcu_init_one_nocb	rcu/tree_plugin.h	/^static void rcu_init_one_nocb(struct rcu_node *rnp)$/;"	f
rcu_irq_enter	rcu/tree.c	/^void rcu_irq_enter(void)$/;"	f
rcu_irq_enter_irqson	rcu/tree.c	/^void rcu_irq_enter_irqson(void)$/;"	f
rcu_irq_exit	rcu/tree.c	/^void rcu_irq_exit(void)$/;"	f
rcu_irq_exit_irqson	rcu/tree.c	/^void rcu_irq_exit_irqson(void)$/;"	f
rcu_is_callbacks_kthread	rcu/tree_plugin.h	/^static bool rcu_is_callbacks_kthread(void)$/;"	f
rcu_is_cpu_rrupt_from_idle	rcu/tree.c	/^static int rcu_is_cpu_rrupt_from_idle(void)$/;"	f	file:
rcu_is_last_leaf_node	rcu/rcu.h	325;"	d
rcu_is_leaf_node	rcu/rcu.h	322;"	d
rcu_is_nocb_cpu	rcu/rcu.h	/^static inline bool rcu_is_nocb_cpu(int cpu) { return false; }$/;"	f
rcu_is_nocb_cpu	rcu/tree_plugin.h	/^bool rcu_is_nocb_cpu(int cpu)$/;"	f
rcu_is_watching	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_is_watching);$/;"	v
rcu_is_watching	rcu/tree.c	/^bool notrace rcu_is_watching(void)$/;"	f
rcu_iw	rcu/tree.h	/^	struct irq_work rcu_iw;		\/* Check for non-irq activity. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::irq_work
rcu_iw_gp_seq	rcu/tree.h	/^	unsigned long rcu_iw_gp_seq;	\/* ->gp_seq associated with ->rcu_iw. *\/$/;"	m	struct:rcu_data
rcu_iw_handler	rcu/tree_stall.h	/^static void rcu_iw_handler(struct irq_work *iwp)$/;"	f
rcu_iw_pending	rcu/tree.h	/^	bool rcu_iw_pending;		\/* Is ->rcu_iw pending? *\/$/;"	m	struct:rcu_data
rcu_jiffies_till_stall_check	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(rcu_jiffies_till_stall_check);$/;"	v
rcu_jiffies_till_stall_check	rcu/tree_stall.h	/^int rcu_jiffies_till_stall_check(void)$/;"	f
rcu_kick_kthreads	rcu/tree.c	/^static bool rcu_kick_kthreads;$/;"	v	file:
rcu_launder_gp_seq_start	rcu/rcutorture.c	/^static unsigned long rcu_launder_gp_seq_start;$/;"	v	file:
rcu_launder_hist	rcu/rcutorture.c	/^struct rcu_launder_hist {$/;"	s	file:
rcu_leak_callback	rcu/tree.c	/^static void rcu_leak_callback(struct rcu_head *rhp)$/;"	f	file:
rcu_lock_break	hung_task.c	/^static bool rcu_lock_break(struct task_struct *g, struct task_struct *t)$/;"	f	file:
rcu_lock_key	rcu/update.c	/^static struct lock_class_key rcu_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_lock_map	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_lock_map);$/;"	v
rcu_lock_map	rcu/update.c	/^struct lockdep_map rcu_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_lockdep_current_cpu_online	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_lockdep_current_cpu_online);$/;"	v
rcu_lockdep_current_cpu_online	rcu/tree.c	/^bool rcu_lockdep_current_cpu_online(void)$/;"	f
rcu_momentary_dyntick_idle	rcu/tree.c	/^static void __maybe_unused rcu_momentary_dyntick_idle(void)$/;"	f	file:
rcu_name	rcu/tree.h	/^static char rcu_name[] = RCU_NAME_RAW;$/;"	v
rcu_need_heavy_qs	rcu/tree.h	/^	bool rcu_need_heavy_qs;		\/* GP old, so heavy quiescent state! *\/$/;"	m	struct:rcu_data
rcu_needs_cpu	rcu/tree_plugin.h	/^int rcu_needs_cpu(u64 basemono, u64 *nextevt)$/;"	f
rcu_next_node_entry	rcu/tree_plugin.h	/^static struct list_head *rcu_next_node_entry(struct task_struct *t,$/;"	f
rcu_nmi_enter	rcu/tree.c	/^NOKPROBE_SYMBOL(rcu_nmi_enter);$/;"	v
rcu_nmi_enter	rcu/tree.c	/^void rcu_nmi_enter(void)$/;"	f
rcu_nmi_enter_common	rcu/tree.c	/^static __always_inline void rcu_nmi_enter_common(bool irq)$/;"	f	file:
rcu_nmi_exit	rcu/tree.c	/^void rcu_nmi_exit(void)$/;"	f
rcu_nmi_exit_common	rcu/tree.c	/^static __always_inline void rcu_nmi_exit_common(bool irq)$/;"	f	file:
rcu_no_completed	rcu/rcuperf.c	/^static unsigned long __maybe_unused rcu_no_completed(void)$/;"	f	file:
rcu_no_completed	rcu/rcutorture.c	/^static unsigned long rcu_no_completed(void)$/;"	f	file:
rcu_nocb_adopt_orphan_cbs	rcu/tree_plugin.h	/^static bool __maybe_unused rcu_nocb_adopt_orphan_cbs(struct rcu_data *my_rdp,$/;"	f
rcu_nocb_cpu_needs_barrier	rcu/tree_plugin.h	/^static bool rcu_nocb_cpu_needs_barrier(int cpu)$/;"	f
rcu_nocb_gp_cleanup	rcu/tree_plugin.h	/^static void rcu_nocb_gp_cleanup(struct swait_queue_head *sq)$/;"	f
rcu_nocb_gp_get	rcu/tree_plugin.h	/^static struct swait_queue_head *rcu_nocb_gp_get(struct rcu_node *rnp)$/;"	f
rcu_nocb_kthread	rcu/tree_plugin.h	/^static int rcu_nocb_kthread(void *arg)$/;"	f
rcu_nocb_leader_stride	rcu/tree_plugin.h	/^static int rcu_nocb_leader_stride = -1;$/;"	v
rcu_nocb_mask	rcu/tree_plugin.h	/^static cpumask_var_t rcu_nocb_mask; \/* CPUs to have callbacks offloaded. *\/$/;"	v
rcu_nocb_need_deferred_wakeup	rcu/tree_plugin.h	/^static int rcu_nocb_need_deferred_wakeup(struct rcu_data *rdp)$/;"	f
rcu_nocb_poll	rcu/tree_plugin.h	/^static bool __read_mostly rcu_nocb_poll;    \/* Offload kthread are to poll. *\/$/;"	v
rcu_nocb_setup	rcu/tree_plugin.h	/^static int __init rcu_nocb_setup(char *str)$/;"	f
rcu_nocb_wait_gp	rcu/tree_plugin.h	/^static void rcu_nocb_wait_gp(struct rcu_data *rdp)$/;"	f
rcu_node	rcu/tree.h	/^struct rcu_node {$/;"	s
rcu_nohz_full_cpu	rcu/tree_plugin.h	/^static bool rcu_nohz_full_cpu(void)$/;"	f
rcu_noqs	rcu/tree.h	/^union rcu_noqs {$/;"	u
rcu_normal	ksysfs.c	/^KERNEL_ATTR_RW(rcu_normal);$/;"	v
rcu_normal	ksysfs.c	/^int rcu_normal;$/;"	v
rcu_normal_after_boot	rcu/update.c	/^static int rcu_normal_after_boot;$/;"	v	file:
rcu_normal_show	ksysfs.c	/^static ssize_t rcu_normal_show(struct kobject *kobj,$/;"	f	file:
rcu_normal_store	ksysfs.c	/^static ssize_t rcu_normal_store(struct kobject *kobj,$/;"	f	file:
rcu_note_context_switch	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_note_context_switch);$/;"	v
rcu_note_context_switch	rcu/tree_plugin.h	/^void rcu_note_context_switch(bool preempt)$/;"	f
rcu_ofl_gp_flags	rcu/tree.h	/^	short rcu_ofl_gp_flags;		\/* ->gp_flags at last offline. *\/$/;"	m	struct:rcu_data
rcu_ofl_gp_seq	rcu/tree.h	/^	unsigned long rcu_ofl_gp_seq;	\/* ->gp_seq at last offline. *\/$/;"	m	struct:rcu_data
rcu_onl_gp_flags	rcu/tree.h	/^	short rcu_onl_gp_flags;		\/* ->gp_flags at last online. *\/$/;"	m	struct:rcu_data
rcu_onl_gp_seq	rcu/tree.h	/^	unsigned long rcu_onl_gp_seq;	\/* ->gp_seq at last online. *\/$/;"	m	struct:rcu_data
rcu_ops	rcu/rcuperf.c	/^static struct rcu_perf_ops rcu_ops = {$/;"	v	typeref:struct:rcu_perf_ops	file:
rcu_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops rcu_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_organize_nocb_kthreads	rcu/tree_plugin.h	/^static void __init rcu_organize_nocb_kthreads(void)$/;"	f
rcu_panic	rcu/tree_stall.h	/^static int rcu_panic(struct notifier_block *this, unsigned long ev, void *ptr)$/;"	f
rcu_panic_block	rcu/tree_stall.h	/^static struct notifier_block rcu_panic_block = {$/;"	v	typeref:struct:notifier_block
rcu_par_gp_wq	rcu/tree.c	/^struct workqueue_struct *rcu_par_gp_wq;$/;"	v	typeref:struct:workqueue_struct
rcu_pending	rcu/tree.c	/^static int rcu_pending(void)$/;"	f	file:
rcu_perf_async_cb	rcu/rcuperf.c	/^static void rcu_perf_async_cb(struct rcu_head *rhp)$/;"	f	file:
rcu_perf_cleanup	rcu/rcuperf.c	/^module_exit(rcu_perf_cleanup);$/;"	v
rcu_perf_cleanup	rcu/rcuperf.c	/^rcu_perf_cleanup(void)$/;"	f	file:
rcu_perf_init	rcu/rcuperf.c	/^module_init(rcu_perf_init);$/;"	v
rcu_perf_init	rcu/rcuperf.c	/^rcu_perf_init(void)$/;"	f	file:
rcu_perf_ops	rcu/rcuperf.c	/^struct rcu_perf_ops {$/;"	s	file:
rcu_perf_print_module_parms	rcu/rcuperf.c	/^rcu_perf_print_module_parms(struct rcu_perf_ops *cur_ops, const char *tag)$/;"	f	file:
rcu_perf_reader	rcu/rcuperf.c	/^rcu_perf_reader(void *arg)$/;"	f	file:
rcu_perf_shutdown	rcu/rcuperf.c	/^rcu_perf_shutdown(void *arg)$/;"	f	file:
rcu_perf_wait_shutdown	rcu/rcuperf.c	/^static void rcu_perf_wait_shutdown(void)$/;"	f	file:
rcu_perf_writer	rcu/rcuperf.c	/^rcu_perf_writer(void *arg)$/;"	f	file:
rcu_perf_writer_state	rcu/rcuperf.c	/^static int rcu_perf_writer_state;$/;"	v	file:
rcu_pm_notify	rcu/tree.c	/^static int rcu_pm_notify(struct notifier_block *self,$/;"	f	file:
rcu_preempt_blocked_readers_cgp	rcu/tree_plugin.h	/^static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp)$/;"	f
rcu_preempt_boost_start_gp	rcu/tree_plugin.h	/^static void rcu_preempt_boost_start_gp(struct rcu_node *rnp)$/;"	f
rcu_preempt_check_blocked_tasks	rcu/tree_plugin.h	/^static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp)$/;"	f
rcu_preempt_deferred_qs	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs(struct task_struct *t) { }$/;"	f
rcu_preempt_deferred_qs	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs(struct task_struct *t)$/;"	f
rcu_preempt_deferred_qs_handler	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs_handler(struct irq_work *iwp)$/;"	f
rcu_preempt_deferred_qs_irqrestore	rcu/tree_plugin.h	/^rcu_preempt_deferred_qs_irqrestore(struct task_struct *t, unsigned long flags)$/;"	f
rcu_preempt_has_tasks	rcu/tree_plugin.h	/^static bool rcu_preempt_has_tasks(struct rcu_node *rnp)$/;"	f
rcu_preempt_need_deferred_qs	rcu/tree_plugin.h	/^static bool rcu_preempt_need_deferred_qs(struct task_struct *t)$/;"	f
rcu_prepare_for_idle	rcu/tree_plugin.h	/^static void rcu_prepare_for_idle(void)$/;"	f
rcu_prepare_kthreads	rcu/tree_plugin.h	/^static void rcu_prepare_kthreads(int cpu)$/;"	f
rcu_print_detail_task_stall_rnp	rcu/tree_stall.h	/^static void rcu_print_detail_task_stall_rnp(struct rcu_node *rnp)$/;"	f
rcu_print_task_exp_stall	rcu/tree_exp.h	/^static int rcu_print_task_exp_stall(struct rcu_node *rnp)$/;"	f
rcu_print_task_stall	rcu/tree_stall.h	/^static int rcu_print_task_stall(struct rcu_node *rnp)$/;"	f
rcu_process_callbacks	rcu/tiny.c	/^static __latent_entropy void rcu_process_callbacks(struct softirq_action *unused)$/;"	f	file:
rcu_qs	rcu/tiny.c	/^void rcu_qs(void)$/;"	f
rcu_qs	rcu/tree_plugin.h	/^static void rcu_qs(void)$/;"	f
rcu_read_delay	rcu/rcutorture.c	/^rcu_read_delay(struct torture_random_state *rrsp, struct rt_read_seg *rtrsp)$/;"	f	file:
rcu_read_lock_bh_held	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_read_lock_bh_held);$/;"	v
rcu_read_lock_bh_held	rcu/update.c	/^int rcu_read_lock_bh_held(void)$/;"	f
rcu_read_lock_held	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_read_lock_held);$/;"	v
rcu_read_lock_held	rcu/update.c	/^int rcu_read_lock_held(void)$/;"	f
rcu_read_lock_sched_held	rcu/update.c	/^EXPORT_SYMBOL(rcu_read_lock_sched_held);$/;"	v
rcu_read_lock_sched_held	rcu/update.c	/^int rcu_read_lock_sched_held(void)$/;"	f
rcu_read_unlock_special	rcu/tree_plugin.h	/^static void rcu_read_unlock_special(struct task_struct *t)$/;"	f
rcu_report_dead	rcu/tree.c	/^void rcu_report_dead(unsigned int cpu)$/;"	f
rcu_report_exp_cpu_mult	rcu/tree_exp.h	/^static void rcu_report_exp_cpu_mult(struct rcu_node *rnp,$/;"	f
rcu_report_exp_rdp	rcu/tree_exp.h	/^static void rcu_report_exp_rdp(struct rcu_data *rdp)$/;"	f
rcu_report_exp_rnp	rcu/tree_exp.h	/^static void __maybe_unused rcu_report_exp_rnp(struct rcu_node *rnp, bool wake)$/;"	f
rcu_report_qs_rdp	rcu/tree.c	/^rcu_report_qs_rdp(int cpu, struct rcu_data *rdp)$/;"	f	file:
rcu_request_urgent_qs_task	rcu/rcu.h	/^static inline void rcu_request_urgent_qs_task(struct task_struct *t) { }$/;"	f
rcu_request_urgent_qs_task	rcu/tree.c	/^void rcu_request_urgent_qs_task(struct task_struct *t)$/;"	f
rcu_rnp_online_cpus	rcu/tree.c	/^unsigned long rcu_rnp_online_cpus(struct rcu_node *rnp)$/;"	f
rcu_sched_clock_irq	rcu/tiny.c	/^void rcu_sched_clock_irq(int user)$/;"	f
rcu_sched_clock_irq	rcu/tree.c	/^void rcu_sched_clock_irq(int user)$/;"	f
rcu_sched_lock_key	rcu/update.c	/^static struct lock_class_key rcu_sched_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_sched_lock_map	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_sched_lock_map);$/;"	v
rcu_sched_lock_map	rcu/update.c	/^struct lockdep_map rcu_sched_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_scheduler_active	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcu_scheduler_active);$/;"	v
rcu_scheduler_starting	rcu/srcutiny.c	/^void __init rcu_scheduler_starting(void)$/;"	f
rcu_scheduler_starting	rcu/tree.c	/^void rcu_scheduler_starting(void)$/;"	f
rcu_segcblist_accelerate	rcu/rcu_segcblist.c	/^bool rcu_segcblist_accelerate(struct rcu_segcblist *rsclp, unsigned long seq)$/;"	f
rcu_segcblist_advance	rcu/rcu_segcblist.c	/^void rcu_segcblist_advance(struct rcu_segcblist *rsclp, unsigned long seq)$/;"	f
rcu_segcblist_disable	rcu/rcu_segcblist.c	/^void rcu_segcblist_disable(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_empty	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_empty(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_enqueue	rcu/rcu_segcblist.c	/^void rcu_segcblist_enqueue(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_entrain	rcu/rcu_segcblist.c	/^bool rcu_segcblist_entrain(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_extract_count	rcu/rcu_segcblist.c	/^void rcu_segcblist_extract_count(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_extract_done_cbs	rcu/rcu_segcblist.c	/^void rcu_segcblist_extract_done_cbs(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_extract_pend_cbs	rcu/rcu_segcblist.c	/^void rcu_segcblist_extract_pend_cbs(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_first_cb	rcu/rcu_segcblist.c	/^struct rcu_head *rcu_segcblist_first_cb(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_first_pend_cb	rcu/rcu_segcblist.c	/^struct rcu_head *rcu_segcblist_first_pend_cb(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_head	rcu/rcu_segcblist.h	/^static inline struct rcu_head *rcu_segcblist_head(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_init	rcu/rcu_segcblist.c	/^void rcu_segcblist_init(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_insert_count	rcu/rcu_segcblist.c	/^void rcu_segcblist_insert_count(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_insert_done_cbs	rcu/rcu_segcblist.c	/^void rcu_segcblist_insert_done_cbs(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_insert_pend_cbs	rcu/rcu_segcblist.c	/^void rcu_segcblist_insert_pend_cbs(struct rcu_segcblist *rsclp,$/;"	f
rcu_segcblist_is_enabled	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_is_enabled(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_merge	rcu/rcu_segcblist.c	/^void rcu_segcblist_merge(struct rcu_segcblist *dst_rsclp,$/;"	f
rcu_segcblist_n_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_cbs(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_n_lazy_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_lazy_cbs(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_n_nonlazy_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_nonlazy_cbs(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_pend_cbs	rcu/rcu_segcblist.c	/^bool rcu_segcblist_pend_cbs(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_ready_cbs	rcu/rcu_segcblist.c	/^bool rcu_segcblist_ready_cbs(struct rcu_segcblist *rsclp)$/;"	f
rcu_segcblist_restempty	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_restempty(struct rcu_segcblist *rsclp, int seg)$/;"	f
rcu_segcblist_tail	rcu/rcu_segcblist.h	/^static inline struct rcu_head **rcu_segcblist_tail(struct rcu_segcblist *rsclp)$/;"	f
rcu_self_test	rcu/update.c	/^static bool rcu_self_test;$/;"	v	file:
rcu_self_test_counter	rcu/update.c	/^static int rcu_self_test_counter;$/;"	v	file:
rcu_seq_completed_gp	rcu/rcu.h	/^static inline bool rcu_seq_completed_gp(unsigned long old, unsigned long new)$/;"	f
rcu_seq_ctr	rcu/rcu.h	/^static inline unsigned long rcu_seq_ctr(unsigned long s)$/;"	f
rcu_seq_current	rcu/rcu.h	/^static inline unsigned long rcu_seq_current(unsigned long *sp)$/;"	f
rcu_seq_diff	rcu/rcu.h	/^static inline unsigned long rcu_seq_diff(unsigned long new, unsigned long old)$/;"	f
rcu_seq_done	rcu/rcu.h	/^static inline bool rcu_seq_done(unsigned long *sp, unsigned long s)$/;"	f
rcu_seq_end	rcu/rcu.h	/^static inline void rcu_seq_end(unsigned long *sp)$/;"	f
rcu_seq_endval	rcu/rcu.h	/^static inline unsigned long rcu_seq_endval(unsigned long *sp)$/;"	f
rcu_seq_new_gp	rcu/rcu.h	/^static inline bool rcu_seq_new_gp(unsigned long old, unsigned long new)$/;"	f
rcu_seq_set_state	rcu/rcu.h	/^static inline void rcu_seq_set_state(unsigned long *sp, int newstate)$/;"	f
rcu_seq_snap	rcu/rcu.h	/^static inline unsigned long rcu_seq_snap(unsigned long *sp)$/;"	f
rcu_seq_start	rcu/rcu.h	/^static inline void rcu_seq_start(unsigned long *sp)$/;"	f
rcu_seq_started	rcu/rcu.h	/^static inline bool rcu_seq_started(unsigned long *sp, unsigned long s)$/;"	f
rcu_seq_state	rcu/rcu.h	/^static inline int rcu_seq_state(unsigned long s)$/;"	f
rcu_set_runtime_mode	rcu/update.c	/^core_initcall(rcu_set_runtime_mode);$/;"	v
rcu_set_runtime_mode	rcu/update.c	/^static int __init rcu_set_runtime_mode(void)$/;"	f	file:
rcu_softirq_qs	rcu/tree.c	/^void rcu_softirq_qs(void)$/;"	f
rcu_spawn_boost_kthreads	rcu/tree_plugin.h	/^static void __init rcu_spawn_boost_kthreads(void)$/;"	f
rcu_spawn_core_kthreads	rcu/tree.c	/^early_initcall(rcu_spawn_core_kthreads);$/;"	v
rcu_spawn_core_kthreads	rcu/tree.c	/^static int __init rcu_spawn_core_kthreads(void)$/;"	f	file:
rcu_spawn_cpu_nocb_kthread	rcu/tree_plugin.h	/^static void rcu_spawn_cpu_nocb_kthread(int cpu)$/;"	f
rcu_spawn_gp_kthread	rcu/tree.c	/^early_initcall(rcu_spawn_gp_kthread);$/;"	v
rcu_spawn_gp_kthread	rcu/tree.c	/^static int __init rcu_spawn_gp_kthread(void)$/;"	f	file:
rcu_spawn_nocb_kthreads	rcu/tree_plugin.h	/^static void __init rcu_spawn_nocb_kthreads(void)$/;"	f
rcu_spawn_one_boost_kthread	rcu/tree_plugin.h	/^static int rcu_spawn_one_boost_kthread(struct rcu_node *rnp)$/;"	f
rcu_spawn_one_nocb_kthread	rcu/tree_plugin.h	/^static void rcu_spawn_one_nocb_kthread(int cpu)$/;"	f
rcu_spawn_tasks_kthread	rcu/update.c	/^core_initcall(rcu_spawn_tasks_kthread);$/;"	v
rcu_spawn_tasks_kthread	rcu/update.c	/^static int __init rcu_spawn_tasks_kthread(void)$/;"	f	file:
rcu_stall_kick_kthreads	rcu/tree_stall.h	/^static void rcu_stall_kick_kthreads(void)$/;"	f
rcu_start_this_gp	rcu/tree.c	/^static bool rcu_start_this_gp(struct rcu_node *rnp_start, struct rcu_data *rdp,$/;"	f	file:
rcu_state	rcu/tree.c	/^struct rcu_state rcu_state = {$/;"	v	typeref:struct:rcu_state
rcu_state	rcu/tree.h	/^struct rcu_state {$/;"	s
rcu_sync_call	rcu/sync.c	/^static void rcu_sync_call(struct rcu_sync *rsp)$/;"	f	file:
rcu_sync_dtor	rcu/sync.c	/^void rcu_sync_dtor(struct rcu_sync *rsp)$/;"	f
rcu_sync_enter	rcu/sync.c	/^void rcu_sync_enter(struct rcu_sync *rsp)$/;"	f
rcu_sync_enter_start	rcu/sync.c	/^void rcu_sync_enter_start(struct rcu_sync *rsp)$/;"	f
rcu_sync_exit	rcu/sync.c	/^void rcu_sync_exit(struct rcu_sync *rsp)$/;"	f
rcu_sync_func	rcu/sync.c	/^static void rcu_sync_func(struct rcu_head *rhp)$/;"	f	file:
rcu_sync_init	rcu/sync.c	/^void rcu_sync_init(struct rcu_sync *rsp)$/;"	f
rcu_sync_perf_init	rcu/rcuperf.c	/^static void rcu_sync_perf_init(void)$/;"	f	file:
rcu_sync_torture_init	rcu/rcutorture.c	/^static void rcu_sync_torture_init(void)$/;"	f	file:
rcu_sysrq_end	rcu/tree_stall.h	/^void rcu_sysrq_end(void)$/;"	f
rcu_sysrq_init	rcu/tree_stall.h	/^early_initcall(rcu_sysrq_init);$/;"	v
rcu_sysrq_init	rcu/tree_stall.h	/^static int __init rcu_sysrq_init(void)$/;"	f
rcu_sysrq_start	rcu/tree_stall.h	/^void rcu_sysrq_start(void)$/;"	f
rcu_tasks_bootup_oddness	rcu/update.c	/^static void __init rcu_tasks_bootup_oddness(void)$/;"	f	file:
rcu_tasks_cbs_head	rcu/update.c	/^static struct rcu_head *rcu_tasks_cbs_head;$/;"	v	typeref:struct:rcu_head	file:
rcu_tasks_cbs_tail	rcu/update.c	/^static struct rcu_head **rcu_tasks_cbs_tail = &rcu_tasks_cbs_head;$/;"	v	typeref:struct:rcu_head	file:
rcu_tasks_kthread	rcu/update.c	/^static int __noreturn rcu_tasks_kthread(void *arg)$/;"	f	file:
rcu_tasks_kthread_ptr	rcu/update.c	/^static struct task_struct *rcu_tasks_kthread_ptr;$/;"	v	typeref:struct:task_struct	file:
rcu_tasks_torture_deferred_free	rcu/rcutorture.c	/^static void rcu_tasks_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_test_debug_objects	rcu/rcutorture.c	/^static void rcu_test_debug_objects(void)$/;"	f	file:
rcu_test_sync_prims	rcu/update.c	/^void rcu_test_sync_prims(void)$/;"	f
rcu_torture	rcu/rcutorture.c	/^struct rcu_torture {$/;"	s	file:
rcu_torture_alloc	rcu/rcutorture.c	/^rcu_torture_alloc(void)$/;"	f	file:
rcu_torture_barrier	rcu/rcutorture.c	/^static int rcu_torture_barrier(void *arg)$/;"	f	file:
rcu_torture_barrier_cbf	rcu/rcutorture.c	/^static void rcu_torture_barrier_cbf(struct rcu_head *rcu)$/;"	f	file:
rcu_torture_barrier_cbs	rcu/rcutorture.c	/^static int rcu_torture_barrier_cbs(void *arg)$/;"	f	file:
rcu_torture_barrier_cleanup	rcu/rcutorture.c	/^static void rcu_torture_barrier_cleanup(void)$/;"	f	file:
rcu_torture_barrier_init	rcu/rcutorture.c	/^static int rcu_torture_barrier_init(void)$/;"	f	file:
rcu_torture_boost	rcu/rcutorture.c	/^static int rcu_torture_boost(void *arg)$/;"	f	file:
rcu_torture_boost_cb	rcu/rcutorture.c	/^static void rcu_torture_boost_cb(struct rcu_head *head)$/;"	f	file:
rcu_torture_boost_failed	rcu/rcutorture.c	/^static bool rcu_torture_boost_failed(unsigned long start, unsigned long end)$/;"	f	file:
rcu_torture_can_boost	rcu/rcutorture.c	/^static bool rcu_torture_can_boost(void)$/;"	f	file:
rcu_torture_cb	rcu/rcutorture.c	/^rcu_torture_cb(struct rcu_head *p)$/;"	f	file:
rcu_torture_cleanup	rcu/rcutorture.c	/^module_exit(rcu_torture_cleanup);$/;"	v
rcu_torture_cleanup	rcu/rcutorture.c	/^rcu_torture_cleanup(void)$/;"	f	file:
rcu_torture_current	rcu/rcutorture.c	/^static struct rcu_torture __rcu *rcu_torture_current;$/;"	v	typeref:struct:__rcu	file:
rcu_torture_current_version	rcu/rcutorture.c	/^static unsigned long rcu_torture_current_version;$/;"	v	file:
rcu_torture_deferred_free	rcu/rcutorture.c	/^static void rcu_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_torture_disable_rt_throttle	rcu/rcutorture.c	/^static void rcu_torture_disable_rt_throttle(void)$/;"	f	file:
rcu_torture_enable_rt_throttle	rcu/rcutorture.c	/^static void rcu_torture_enable_rt_throttle(void)$/;"	f	file:
rcu_torture_err_cb	rcu/rcutorture.c	/^static void rcu_torture_err_cb(struct rcu_head *rhp)$/;"	f	file:
rcu_torture_fakewriter	rcu/rcutorture.c	/^rcu_torture_fakewriter(void *arg)$/;"	f	file:
rcu_torture_fqs	rcu/rcutorture.c	/^rcu_torture_fqs(void *arg)$/;"	f	file:
rcu_torture_free	rcu/rcutorture.c	/^rcu_torture_free(struct rcu_torture *p)$/;"	f	file:
rcu_torture_fwd_cb_cr	rcu/rcutorture.c	/^static void rcu_torture_fwd_cb_cr(struct rcu_head *rhp)$/;"	f	file:
rcu_torture_fwd_cb_hist	rcu/rcutorture.c	/^static void rcu_torture_fwd_cb_hist(void)$/;"	f	file:
rcu_torture_fwd_prog	rcu/rcutorture.c	/^static int rcu_torture_fwd_prog(void *args)$/;"	f	file:
rcu_torture_fwd_prog_cb	rcu/rcutorture.c	/^static void rcu_torture_fwd_prog_cb(struct rcu_head *rhp)$/;"	f	file:
rcu_torture_fwd_prog_cbfree	rcu/rcutorture.c	/^static unsigned long rcu_torture_fwd_prog_cbfree(void)$/;"	f	file:
rcu_torture_fwd_prog_cond_resched	rcu/rcutorture.c	/^static void rcu_torture_fwd_prog_cond_resched(void)$/;"	f	file:
rcu_torture_fwd_prog_cr	rcu/rcutorture.c	/^static void rcu_torture_fwd_prog_cr(void)$/;"	f	file:
rcu_torture_fwd_prog_init	rcu/rcutorture.c	/^static int __init rcu_torture_fwd_prog_init(void)$/;"	f	file:
rcu_torture_fwd_prog_nr	rcu/rcutorture.c	/^static void rcu_torture_fwd_prog_nr(int *tested, int *tested_tries)$/;"	f	file:
rcu_torture_init	rcu/rcutorture.c	/^module_init(rcu_torture_init);$/;"	v
rcu_torture_init	rcu/rcutorture.c	/^rcu_torture_init(void)$/;"	f	file:
rcu_torture_leak_cb	rcu/rcutorture.c	/^static void rcu_torture_leak_cb(struct rcu_head *rhp)$/;"	f	file:
rcu_torture_one_read	rcu/rcutorture.c	/^static bool rcu_torture_one_read(struct torture_random_state *trsp)$/;"	f	file:
rcu_torture_ops	rcu/rcutorture.c	/^struct rcu_torture_ops {$/;"	s	file:
rcu_torture_pipe_update	rcu/rcutorture.c	/^rcu_torture_pipe_update(struct rcu_torture *old_rp)$/;"	f	file:
rcu_torture_pipe_update_one	rcu/rcutorture.c	/^rcu_torture_pipe_update_one(struct rcu_torture *rp)$/;"	f	file:
rcu_torture_print_module_parms	rcu/rcutorture.c	/^rcu_torture_print_module_parms(struct rcu_torture_ops *cur_ops, const char *tag)$/;"	f	file:
rcu_torture_reader	rcu/rcutorture.c	/^rcu_torture_reader(void *arg)$/;"	f	file:
rcu_torture_removed	rcu/rcutorture.c	/^static struct list_head rcu_torture_removed;$/;"	v	typeref:struct:list_head	file:
rcu_torture_stall	rcu/rcutorture.c	/^static int rcu_torture_stall(void *args)$/;"	f	file:
rcu_torture_stall_init	rcu/rcutorture.c	/^static int __init rcu_torture_stall_init(void)$/;"	f	file:
rcu_torture_stats	rcu/rcutorture.c	/^rcu_torture_stats(void *arg)$/;"	f	file:
rcu_torture_stats_print	rcu/rcutorture.c	/^rcu_torture_stats_print(void)$/;"	f	file:
rcu_torture_timer	rcu/rcutorture.c	/^static void rcu_torture_timer(struct timer_list *unused)$/;"	f	file:
rcu_torture_timer_cb	rcu/rcutorture.c	/^static void rcu_torture_timer_cb(struct rcu_head *rhp)$/;"	f	file:
rcu_torture_wcount	rcu/rcutorture.c	/^static atomic_t rcu_torture_wcount[RCU_TORTURE_PIPE_LEN + 1];$/;"	v	file:
rcu_torture_writer	rcu/rcutorture.c	/^rcu_torture_writer(void *arg)$/;"	f	file:
rcu_torture_writer_state	rcu/rcutorture.c	/^static int rcu_torture_writer_state;$/;"	v	file:
rcu_torture_writer_state_getname	rcu/rcutorture.c	/^static const char *rcu_torture_writer_state_getname(void)$/;"	f	file:
rcu_torture_writer_state_names	rcu/rcutorture.c	/^static const char * const rcu_torture_writer_state_names[] = {$/;"	v	file:
rcu_tortures	rcu/rcutorture.c	/^static struct rcu_torture rcu_tortures[10 * RCU_TORTURE_PIPE_LEN];$/;"	v	typeref:struct:rcu_torture	file:
rcu_trace_clock_local	rcu/rcutorture.c	/^static u64 notrace rcu_trace_clock_local(void)$/;"	f	file:
rcu_try_advance_all_cbs	rcu/tree_plugin.h	/^static bool __maybe_unused rcu_try_advance_all_cbs(void)$/;"	f
rcu_unexpedite_gp	rcu/rcu.h	/^static inline void rcu_unexpedite_gp(void) { }$/;"	f
rcu_unexpedite_gp	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcu_unexpedite_gp);$/;"	v
rcu_unexpedite_gp	rcu/update.c	/^void rcu_unexpedite_gp(void)$/;"	f
rcu_urgent_qs	rcu/tree.h	/^	bool rcu_urgent_qs;		\/* GP old need light quiescent state. *\/$/;"	m	struct:rcu_data
rcu_user_enter	rcu/tree.c	/^void rcu_user_enter(void)$/;"	f
rcu_user_exit	rcu/tree.c	/^void rcu_user_exit(void)$/;"	f
rcu_verify_early_boot_tests	rcu/update.c	/^late_initcall(rcu_verify_early_boot_tests);$/;"	v
rcu_verify_early_boot_tests	rcu/update.c	/^static int rcu_verify_early_boot_tests(void)$/;"	f	file:
rcu_wait	rcu/tree.h	260;"	d
rcu_wake_cond	rcu/tree.c	/^static void rcu_wake_cond(struct task_struct *t, int status)$/;"	f	file:
rcu_work_rcufn	workqueue.c	/^static void rcu_work_rcufn(struct rcu_head *rcu)$/;"	f	file:
rcucblist	rcu/tiny.c	/^	struct rcu_head *rcucblist;	\/* List of pending callbacks (CBs). *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head	file:
rcuhead_debug_descr	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcuhead_debug_descr);$/;"	v
rcuhead_debug_descr	rcu/update.c	/^struct debug_obj_descr rcuhead_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr
rcuhead_is_static_object	rcu/update.c	/^static bool rcuhead_is_static_object(void *addr)$/;"	f	file:
rcupdate_announce_bootup_oddness	rcu/update.c	/^void __init rcupdate_announce_bootup_oddness(void)$/;"	f
rcuperf_seq_diff	rcu/rcuperf.c	/^static unsigned long rcuperf_seq_diff(unsigned long new, unsigned long old)$/;"	f	file:
rcutor_hp	rcu/rcutorture.c	/^static enum cpuhp_state rcutor_hp;$/;"	v	typeref:enum:cpuhp_state	file:
rcutorture_booster_cleanup	rcu/rcutorture.c	/^static int rcutorture_booster_cleanup(unsigned int cpu)$/;"	f	file:
rcutorture_booster_init	rcu/rcutorture.c	/^static int rcutorture_booster_init(unsigned int cpu)$/;"	f	file:
rcutorture_extend_mask	rcu/rcutorture.c	/^rcutorture_extend_mask(int oldmask, struct torture_random_state *trsp)$/;"	f	file:
rcutorture_extend_mask_max	rcu/rcutorture.c	/^static int rcutorture_extend_mask_max(void)$/;"	f	file:
rcutorture_get_gp_data	rcu/rcu.h	/^static inline void rcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	f
rcutorture_get_gp_data	rcu/tree.c	/^EXPORT_SYMBOL_GPL(rcutorture_get_gp_data);$/;"	v
rcutorture_get_gp_data	rcu/tree.c	/^void rcutorture_get_gp_data(enum rcutorture_type test_type, int *flags,$/;"	f
rcutorture_loop_extend	rcu/rcutorture.c	/^rcutorture_loop_extend(int *readstate, struct torture_random_state *trsp,$/;"	f	file:
rcutorture_one_extend	rcu/rcutorture.c	/^static void rcutorture_one_extend(int *readstate, int newstate,$/;"	f	file:
rcutorture_oom_nb	rcu/rcutorture.c	/^static struct notifier_block rcutorture_oom_nb = {$/;"	v	typeref:struct:notifier_block	file:
rcutorture_oom_notify	rcu/rcutorture.c	/^static int rcutorture_oom_notify(struct notifier_block *self,$/;"	f	file:
rcutorture_record_progress	rcu/rcu.h	/^static inline void rcutorture_record_progress(unsigned long vernum) { }$/;"	f
rcutorture_sched_setaffinity	rcu/update.c	/^EXPORT_SYMBOL_GPL(rcutorture_sched_setaffinity);$/;"	v
rcutorture_sched_setaffinity	rcu/update.c	/^long rcutorture_sched_setaffinity(pid_t pid, const struct cpumask *in_mask)$/;"	f
rcutorture_seq_diff	rcu/rcutorture.c	/^static unsigned long rcutorture_seq_diff(unsigned long new, unsigned long old)$/;"	f	file:
rcutorture_sync	rcu/rcutorture.c	/^static void rcutorture_sync(void)$/;"	f	file:
rcutorture_type	rcu/rcu.h	/^enum rcutorture_type {$/;"	g
rcutree_affinity_setting	rcu/tree.c	/^static void rcutree_affinity_setting(unsigned int cpu, int outgoing)$/;"	f	file:
rcutree_dead_cpu	rcu/tree.c	/^int rcutree_dead_cpu(unsigned int cpu)$/;"	f
rcutree_dying_cpu	rcu/tree.c	/^int rcutree_dying_cpu(unsigned int cpu)$/;"	f
rcutree_migrate_callbacks	rcu/tree.c	/^void rcutree_migrate_callbacks(int cpu)$/;"	f
rcutree_offline_cpu	rcu/tree.c	/^int rcutree_offline_cpu(unsigned int cpu)$/;"	f
rcutree_online_cpu	rcu/tree.c	/^int rcutree_online_cpu(unsigned int cpu)$/;"	f
rcutree_prepare_cpu	rcu/tree.c	/^int rcutree_prepare_cpu(unsigned int cpu)$/;"	f
rcuwait_wake_up	exit.c	/^void rcuwait_wake_up(struct rcuwait *w)$/;"	f
rd	sched/sched.h	/^	struct root_domain		*rd;$/;"	m	struct:rq	typeref:struct:rq::root_domain
rd	sched/topology.c	/^	struct root_domain	*rd;$/;"	m	struct:s_data	typeref:struct:s_data::root_domain	file:
rdev	audit.h	/^	dev_t			rdev;$/;"	m	struct:audit_names
rdma_cgrp_subsys	cgroup/rdma.c	/^struct cgroup_subsys rdma_cgrp_subsys = {$/;"	v	typeref:struct:cgroup_subsys
rdmacg_css_alloc	cgroup/rdma.c	/^rdmacg_css_alloc(struct cgroup_subsys_state *parent)$/;"	f	file:
rdmacg_css_free	cgroup/rdma.c	/^static void rdmacg_css_free(struct cgroup_subsys_state *css)$/;"	f	file:
rdmacg_css_offline	cgroup/rdma.c	/^static void rdmacg_css_offline(struct cgroup_subsys_state *css)$/;"	f	file:
rdmacg_file_type	cgroup/rdma.c	/^enum rdmacg_file_type {$/;"	g	file:
rdmacg_files	cgroup/rdma.c	/^static struct cftype rdmacg_files[] = {$/;"	v	typeref:struct:cftype	file:
rdmacg_get_device_locked	cgroup/rdma.c	/^static struct rdmacg_device *rdmacg_get_device_locked(const char *name)$/;"	f	file:
rdmacg_parse_limits	cgroup/rdma.c	/^static int rdmacg_parse_limits(char *options,$/;"	f	file:
rdmacg_register_device	cgroup/rdma.c	/^EXPORT_SYMBOL(rdmacg_register_device);$/;"	v
rdmacg_register_device	cgroup/rdma.c	/^void rdmacg_register_device(struct rdmacg_device *device)$/;"	f
rdmacg_resource	cgroup/rdma.c	/^struct rdmacg_resource {$/;"	s	file:
rdmacg_resource_names	cgroup/rdma.c	/^static char const *rdmacg_resource_names[] = {$/;"	v	file:
rdmacg_resource_pool	cgroup/rdma.c	/^struct rdmacg_resource_pool {$/;"	s	file:
rdmacg_resource_read	cgroup/rdma.c	/^static int rdmacg_resource_read(struct seq_file *sf, void *v)$/;"	f	file:
rdmacg_resource_set_max	cgroup/rdma.c	/^static ssize_t rdmacg_resource_set_max(struct kernfs_open_file *of,$/;"	f	file:
rdmacg_try_charge	cgroup/rdma.c	/^EXPORT_SYMBOL(rdmacg_try_charge);$/;"	v
rdmacg_try_charge	cgroup/rdma.c	/^int rdmacg_try_charge(struct rdma_cgroup **rdmacg,$/;"	f
rdmacg_uncharge	cgroup/rdma.c	/^EXPORT_SYMBOL(rdmacg_uncharge);$/;"	v
rdmacg_uncharge	cgroup/rdma.c	/^void rdmacg_uncharge(struct rdma_cgroup *cg,$/;"	f
rdmacg_uncharge_hierarchy	cgroup/rdma.c	/^static void rdmacg_uncharge_hierarchy(struct rdma_cgroup *cg,$/;"	f	file:
rdmacg_unregister_device	cgroup/rdma.c	/^EXPORT_SYMBOL(rdmacg_unregister_device);$/;"	v
rdmacg_unregister_device	cgroup/rdma.c	/^void rdmacg_unregister_device(struct rdmacg_device *device)$/;"	f
reacquire_held_locks	locking/lockdep.c	/^static int reacquire_held_locks(struct task_struct *curr, unsigned int depth,$/;"	f	file:
read	trace/ring_buffer.c	/^	unsigned	 read;		\/* index for next read *\/$/;"	m	struct:buffer_page	file:
read	trace/ring_buffer.c	/^	unsigned long			read;$/;"	m	struct:ring_buffer_per_cpu	file:
read	trace/ring_buffer_benchmark.c	/^static unsigned long read;$/;"	v	file:
read	trace/trace.c	/^	unsigned int		read;$/;"	m	struct:ftrace_buffer_info	file:
read	trace/trace.h	/^	ssize_t			(*read)(struct trace_iterator *iter,$/;"	m	struct:tracer
read_actions_logged	seccomp.c	/^static int read_actions_logged(struct ctl_table *ro_table, void __user *buffer,$/;"	f	file:
read_bytes	trace/ring_buffer.c	/^	unsigned long			read_bytes;$/;"	m	struct:ring_buffer_per_cpu	file:
read_cred_subscribers	cred.c	/^static inline int read_cred_subscribers(const struct cred *cred)$/;"	f	file:
read_data	time/sched_clock.c	/^	struct clock_read_data	read_data[2];$/;"	m	struct:clock_data	typeref:struct:clock_data::clock_read_data	file:
read_delay	locking/locktorture.c	/^	void (*read_delay)(struct torture_random_state *trsp);$/;"	m	struct:lock_torture_ops	file:
read_delay	rcu/rcutorture.c	/^	void (*read_delay)(struct torture_random_state *rrsp,$/;"	m	struct:rcu_torture_ops	file:
read_enabled_file_bool	kprobes.c	/^static ssize_t read_enabled_file_bool(struct file *file,$/;"	f	file:
read_event	trace/ring_buffer_benchmark.c	/^static enum event_status read_event(int cpu)$/;"	f	file:
read_events	trace/ring_buffer_benchmark.c	/^static int read_events;$/;"	v	file:
read_once	trace/trace_events_hist.c	/^	bool                            read_once;$/;"	m	struct:hist_field	file:
read_page	trace/ring_buffer_benchmark.c	/^static enum event_status read_page(int cpu)$/;"	f	file:
read_persistent_clock64	time/timekeeping.c	/^void __weak read_persistent_clock64(struct timespec64 *ts)$/;"	f
read_persistent_wall_and_boot_offset	time/timekeeping.c	/^read_persistent_wall_and_boot_offset(struct timespec64 *wall_time,$/;"	f
read_profile	profile.c	/^read_profile(struct file *file, char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
read_sched_clock	time/sched_clock.c	/^	u64 (*read_sched_clock)(void);$/;"	m	struct:clock_read_data	file:
read_stamp	trace/ring_buffer.c	/^	u64				read_stamp;$/;"	m	struct:ring_buffer_iter	file:
read_stamp	trace/ring_buffer.c	/^	u64				read_stamp;$/;"	m	struct:ring_buffer_per_cpu	file:
read_sum_exec_runtime	sched/cputime.c	/^static inline u64 read_sum_exec_runtime(struct task_struct *t)$/;"	f	file:
read_sum_exec_runtime	sched/cputime.c	/^static u64 read_sum_exec_runtime(struct task_struct *t)$/;"	f	file:
reader_finish	trace/ring_buffer_benchmark.c	/^static int reader_finish;$/;"	v	file:
reader_lock	trace/ring_buffer.c	/^	raw_spinlock_t			reader_lock;	\/* serialize readers *\/$/;"	m	struct:ring_buffer_per_cpu	file:
reader_lock_key	trace/ring_buffer.c	/^	struct lock_class_key		*reader_lock_key;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::lock_class_key	file:
reader_page	trace/ring_buffer.c	/^	struct buffer_page		*reader_page;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
reader_tasks	locking/locktorture.c	/^static struct task_struct **reader_tasks;$/;"	v	typeref:struct:task_struct	file:
reader_tasks	rcu/rcuperf.c	/^static struct task_struct **reader_tasks;$/;"	v	typeref:struct:task_struct	file:
reader_tasks	rcu/rcutorture.c	/^static struct task_struct **reader_tasks;$/;"	v	typeref:struct:task_struct	file:
readers_active_check	locking/percpu-rwsem.c	/^static bool readers_active_check(struct percpu_rw_semaphore *sem)$/;"	f	file:
readlock	locking/locktorture.c	/^	int (*readlock)(void);$/;"	m	struct:lock_torture_ops	file:
readlock	rcu/rcuperf.c	/^	int (*readlock)(void);$/;"	m	struct:rcu_perf_ops	file:
readlock	rcu/rcutorture.c	/^	int (*readlock)(void);$/;"	m	struct:rcu_torture_ops	file:
readme_msg	trace/trace.c	/^static const char readme_msg[] =$/;"	v	file:
readunlock	locking/locktorture.c	/^	void (*readunlock)(void);$/;"	m	struct:lock_torture_ops	file:
readunlock	rcu/rcuperf.c	/^	void (*readunlock)(int idx);$/;"	m	struct:rcu_perf_ops	file:
readunlock	rcu/rcutorture.c	/^	void (*readunlock)(int idx);$/;"	m	struct:rcu_torture_ops	file:
ready	locking/test-ww_mutex.c	/^	struct completion ready, go, done;$/;"	m	struct:test_mutex	typeref:struct:test_mutex::completion	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:cmp_data	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:crc_data	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:dec_data	file:
ready	power/user.c	/^	bool ready;$/;"	m	struct:snapshot_data	file:
ready	seccomp.c	/^	struct completion ready;$/;"	m	struct:seccomp_knotif	typeref:struct:seccomp_knotif::completion	file:
real_end	trace/ring_buffer.c	/^	unsigned long	 real_end;	\/* real end of data *\/$/;"	m	struct:buffer_page	file:
realloc_func_state	bpf/verifier.c	/^static int realloc_func_state(struct bpf_func_state *state, int stack_size,$/;"	f	file:
reallocate_resource	resource.c	/^static int reallocate_resource(struct resource *root, struct resource *old,$/;"	f	file:
rear	locking/lockdep.c	/^	unsigned int  front, rear;$/;"	m	struct:circular_queue	file:
rebalance_domains	sched/fair.c	/^static void rebalance_domains(struct rq *rq, enum cpu_idle_type idle)$/;"	f	file:
rebind_subsystems	cgroup/cgroup.c	/^int rebind_subsystems(struct cgroup_root *dst_root, u16 ss_mask)$/;"	f
rebind_workers	workqueue.c	/^static void rebind_workers(struct worker_pool *pool)$/;"	f	file:
reboot_cmd	reboot.c	/^static const char reboot_cmd[] = "\/sbin\/reboot";$/;"	v	file:
reboot_cpu	reboot.c	/^int reboot_cpu;$/;"	v
reboot_default	reboot.c	/^int reboot_default = 1;$/;"	v
reboot_force	reboot.c	/^int reboot_force;$/;"	v
reboot_notifier_list	notifier.c	/^BLOCKING_NOTIFIER_HEAD(reboot_notifier_list);$/;"	v
reboot_pid_ns	pid_namespace.c	/^int reboot_pid_ns(struct pid_namespace *pid_ns, int cmd)$/;"	f
reboot_setup	reboot.c	/^static int __init reboot_setup(char *str)$/;"	f	file:
reboot_type	reboot.c	/^enum reboot_type reboot_type = BOOT_ACPI;$/;"	v	typeref:enum:reboot_type
reboot_work_func	reboot.c	/^static void reboot_work_func(struct work_struct *work)$/;"	f	file:
rebuild_sched_domains	cgroup/cpuset.c	/^void rebuild_sched_domains(void)$/;"	f
rebuild_sched_domains_locked	cgroup/cpuset.c	/^static void rebuild_sched_domains_locked(void)$/;"	f	file:
rebuild_sd_workfn	sched/cpufreq_schedutil.c	/^static void rebuild_sd_workfn(struct work_struct *work)$/;"	f	file:
rec	trace/trace_events_filter.c	/^	struct trace_event_raw_ftrace_test_filter rec;$/;"	m	struct:test_filter_data_t	typeref:struct:test_filter_data_t::trace_event_raw_ftrace_test_filter	file:
recalc_sigpending	signal.c	/^EXPORT_SYMBOL(recalc_sigpending);$/;"	v
recalc_sigpending	signal.c	/^void recalc_sigpending(void)$/;"	f
recalc_sigpending_and_wake	signal.c	/^void recalc_sigpending_and_wake(struct task_struct *t)$/;"	f
recalc_sigpending_tsk	signal.c	/^static bool recalc_sigpending_tsk(struct task_struct *t)$/;"	f	file:
record	gcov/gcc_3_4.c	/^	int record;$/;"	m	struct:gcov_iterator	file:
record_disabled	trace/ring_buffer.c	/^	atomic_t			record_disabled;$/;"	m	struct:ring_buffer	file:
record_disabled	trace/ring_buffer.c	/^	atomic_t			record_disabled;$/;"	m	struct:ring_buffer_per_cpu	file:
record_func_map	bpf/verifier.c	/^record_func_map(struct bpf_verifier_env *env, struct bpf_call_arg_meta *meta,$/;"	f	file:
record_gp_stall_check_time	rcu/tree_stall.h	/^static void record_gp_stall_check_time(void)$/;"	f
record_irq_time	irq/internals.h	/^static __always_inline void record_irq_time(struct irq_desc *desc)$/;"	f
record_irq_time	irq/internals.h	/^static inline void record_irq_time(struct irq_desc *desc) {}$/;"	f
record_times	sched/psi.c	/^static void record_times(struct psi_group_cpu *groupc, int cpu,$/;"	f	file:
record_wakee	sched/fair.c	/^static void record_wakee(struct task_struct *p)$/;"	f	file:
records	trace/ftrace.c	/^	struct dyn_ftrace	*records;$/;"	m	struct:ftrace_page	typeref:struct:ftrace_page::dyn_ftrace	file:
records	trace/ftrace.c	/^	struct ftrace_profile		records[];$/;"	m	struct:ftrace_profile_page	typeref:struct:ftrace_profile_page::ftrace_profile	file:
recursion	events/core.c	/^	int				recursion[PERF_NR_CONTEXTS];$/;"	m	struct:swevent_htable	file:
recv	sys_ni.c	/^COND_SYSCALL(recv);$/;"	v
recv	sys_ni.c	/^COND_SYSCALL_COMPAT(recv);$/;"	v
recvfrom	sys_ni.c	/^COND_SYSCALL(recvfrom);$/;"	v
recvfrom	sys_ni.c	/^COND_SYSCALL_COMPAT(recvfrom);$/;"	v
recvmmsg	sys_ni.c	/^COND_SYSCALL(recvmmsg);$/;"	v
recvmmsg_time32	sys_ni.c	/^COND_SYSCALL(recvmmsg_time32);$/;"	v
recvmmsg_time32	sys_ni.c	/^COND_SYSCALL_COMPAT(recvmmsg_time32);$/;"	v
recvmmsg_time64	sys_ni.c	/^COND_SYSCALL_COMPAT(recvmmsg_time64);$/;"	v
recvmsg	sys_ni.c	/^COND_SYSCALL(recvmsg);$/;"	v
recvmsg	sys_ni.c	/^COND_SYSCALL_COMPAT(recvmsg);$/;"	v
recycle_rp_inst	kprobes.c	/^NOKPROBE_SYMBOL(recycle_rp_inst);$/;"	v
recycle_rp_inst	kprobes.c	/^void recycle_rp_inst(struct kretprobe_instance *ri,$/;"	f
recycle_safe_page	power/snapshot.c	/^static void recycle_safe_page(void *page_address)$/;"	f	file:
recycle_zone_bm_rtree	power/snapshot.c	/^static void recycle_zone_bm_rtree(struct mem_zone_bm_rtree *zone)$/;"	f	file:
redundant_hardirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_off;$/;"	m	struct:lockdep_stats
redundant_hardirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_on;$/;"	m	struct:lockdep_stats
redundant_softirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_off;$/;"	m	struct:lockdep_stats
redundant_softirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_on;$/;"	m	struct:lockdep_stats
ref	bpf/bpf_lru_list.h	/^	u8 ref;$/;"	m	struct:bpf_lru_node
ref	events/uprobes.c	/^	refcount_t		ref;$/;"	m	struct:uprobe	file:
ref	sched/sched.h	/^	atomic_t		ref;$/;"	m	struct:sched_group
ref	sched/sched.h	/^	atomic_t		ref;$/;"	m	struct:sched_group_capacity
ref	trace/ftrace.c	/^	int			ref;$/;"	m	struct:ftrace_func_probe	file:
ref	trace/trace.h	/^	int				ref;$/;"	m	struct:event_trigger_data
ref	trace/trace.h	/^	int			ref;$/;"	m	struct:trace_array
ref	trace/trace.h	/^	int			ref;$/;"	m	struct:tracer
ref	trace/trace_events.c	/^	int				ref;$/;"	m	struct:event_probe_data	file:
ref	trace/trace_events_hist.c	/^	int					ref;$/;"	m	struct:synth_event	file:
ref_count	trace/trace.h	/^	int				ref_count;$/;"	m	struct:trace_subsystem_dir
ref_count	trace/trace.h	/^	int			ref_count;$/;"	m	struct:event_subsystem
ref_ctr_mismatch_warn	events/uprobes.c	/^ref_ctr_mismatch_warn(struct uprobe *cur_uprobe, struct uprobe *uprobe)$/;"	f	file:
ref_ctr_offset	events/uprobes.c	/^	loff_t			ref_ctr_offset;$/;"	m	struct:uprobe	file:
ref_ctr_offset	trace/trace_uprobe.c	/^	unsigned long			ref_ctr_offset;$/;"	m	struct:trace_uprobe	file:
ref_module	module.c	/^EXPORT_SYMBOL_GPL(ref_module);$/;"	v
ref_module	module.c	/^int ref_module(struct module *a, struct module *b)$/;"	f
ref_obj_id	bpf/verifier.c	/^	int ref_obj_id;$/;"	m	struct:bpf_call_arg_meta	file:
refcnt	bpf/btf.c	/^	refcount_t refcnt;$/;"	m	struct:btf	file:
refcnt	bpf/cpumap.c	/^	atomic_t refcnt; \/* Control when this struct can be free'ed *\/$/;"	m	struct:bpf_cpu_map_entry	file:
refcnt	workqueue.c	/^	int			refcnt;		\/* L: reference count *\/$/;"	m	struct:pool_workqueue	file:
refcnt	workqueue.c	/^	int			refcnt;		\/* PL: refcnt for unbound pools *\/$/;"	m	struct:worker_pool	file:
refcount	events/internal.h	/^	refcount_t			refcount;$/;"	m	struct:ring_buffer
refcount	futex.c	/^	refcount_t refcount;$/;"	m	struct:futex_pi_state	file:
refcount	kcov.c	/^	refcount_t		refcount;$/;"	m	struct:kcov	file:
refcount	sched/fair.c	/^	refcount_t refcount;$/;"	m	struct:numa_group	file:
refcount	sched/sched.h	/^	atomic_t		refcount;$/;"	m	struct:root_domain
refcount	trace/trace.c	/^	refcount_t		refcount;$/;"	m	struct:buffer_ref	file:
refcount_error_report	panic.c	/^void refcount_error_report(struct pt_regs *regs, const char *err)$/;"	f
referenced_filters	trace/ftrace.c	/^static int referenced_filters(struct dyn_ftrace *rec)$/;"	f	file:
refill_pi_state_cache	futex.c	/^static int refill_pi_state_cache(void)$/;"	f	file:
refined_jiffies	time/jiffies.c	/^static struct clocksource refined_jiffies;$/;"	v	typeref:struct:clocksource	file:
refs	audit_tree.c	/^	atomic_long_t refs;$/;"	m	struct:audit_chunk	file:
refsafe	bpf/verifier.c	/^static bool refsafe(struct bpf_func_state *old, struct bpf_func_state *cur)$/;"	f	file:
reg	trace/trace.h	/^	int			(*reg)(char *glob,$/;"	m	struct:event_command
reg_arg_type	bpf/verifier.c	/^enum reg_arg_type {$/;"	g	file:
reg_combine_min_max	bpf/verifier.c	/^static void reg_combine_min_max(struct bpf_reg_state *true_src,$/;"	f	file:
reg_event_syscall_enter	trace/trace_syscalls.c	/^static int reg_event_syscall_enter(struct trace_event_file *file,$/;"	f	file:
reg_event_syscall_exit	trace/trace_syscalls.c	/^static int reg_event_syscall_exit(struct trace_event_file *file,$/;"	f	file:
reg_is_init_pkt_pointer	bpf/verifier.c	/^static bool reg_is_init_pkt_pointer(const struct bpf_reg_state *reg,$/;"	f	file:
reg_is_pkt_pointer	bpf/verifier.c	/^static bool reg_is_pkt_pointer(const struct bpf_reg_state *reg)$/;"	f	file:
reg_is_pkt_pointer_any	bpf/verifier.c	/^static bool reg_is_pkt_pointer_any(const struct bpf_reg_state *reg)$/;"	f	file:
reg_may_point_to_spin_lock	bpf/verifier.c	/^static bool reg_may_point_to_spin_lock(const struct bpf_reg_state *reg)$/;"	f	file:
reg_set_min_max	bpf/verifier.c	/^static void reg_set_min_max(struct bpf_reg_state *true_reg,$/;"	f	file:
reg_set_min_max_inv	bpf/verifier.c	/^static void reg_set_min_max_inv(struct bpf_reg_state *true_reg,$/;"	f	file:
reg_state	bpf/verifier.c	/^static struct bpf_reg_state *reg_state(struct bpf_verifier_env *env, int regno)$/;"	f	file:
reg_type_may_be_null	bpf/verifier.c	/^static bool reg_type_may_be_null(enum bpf_reg_type type)$/;"	f	file:
reg_type_may_be_refcounted_or_null	bpf/verifier.c	/^static bool reg_type_may_be_refcounted_or_null(enum bpf_reg_type type)$/;"	f	file:
reg_type_mismatch	bpf/verifier.c	/^static bool reg_type_mismatch(enum bpf_reg_type src, enum bpf_reg_type prev)$/;"	f	file:
reg_type_mismatch_ok	bpf/verifier.c	/^static bool reg_type_mismatch_ok(enum bpf_reg_type type)$/;"	f	file:
reg_type_str	bpf/verifier.c	/^static const char * const reg_type_str[] = {$/;"	v	file:
regex	trace/trace.h	/^	struct regex		regex;$/;"	m	struct:filter_pred	typeref:struct:filter_pred::regex
regex	trace/trace.h	/^struct regex {$/;"	s
regex_match_end	trace/trace_events_filter.c	/^static int regex_match_end(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_front	trace/trace_events_filter.c	/^static int regex_match_front(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_full	trace/trace_events_filter.c	/^static int regex_match_full(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_func	trace/trace.h	/^typedef int (*regex_match_func)(char *str, struct regex *r, int len);$/;"	t
regex_match_glob	trace/trace_events_filter.c	/^static int regex_match_glob(char *str, struct regex *r, int len __maybe_unused)$/;"	f	file:
regex_match_middle	trace/trace_events_filter.c	/^static int regex_match_middle(char *str, struct regex *r, int len)$/;"	f	file:
regex_type	trace/trace.h	/^enum regex_type {$/;"	g
region_devres	resource.c	/^struct region_devres {$/;"	s	file:
region_intersects	resource.c	/^EXPORT_SYMBOL_GPL(region_intersects);$/;"	v
region_intersects	resource.c	/^int region_intersects(resource_size_t start, size_t size, unsigned long flags,$/;"	f
register_aggr_kprobe	kprobes.c	/^static int register_aggr_kprobe(struct kprobe *orig_p, struct kprobe *p)$/;"	f	file:
register_console	printk/printk.c	/^EXPORT_SYMBOL(register_console);$/;"	v
register_console	printk/printk.c	/^void register_console(struct console *newcon)$/;"	f
register_default_affinity_proc	irq/proc.c	/^static void register_default_affinity_proc(void)$/;"	f	file:
register_die_notifier	notifier.c	/^EXPORT_SYMBOL_GPL(register_die_notifier);$/;"	v
register_die_notifier	notifier.c	/^int register_die_notifier(struct notifier_block *nb)$/;"	f
register_event_cmds	trace/trace_events.c	/^static __init int register_event_cmds(void)$/;"	f	file:
register_event_cmds	trace/trace_events.c	/^static inline int register_event_cmds(void) { return 0; }$/;"	f	file:
register_event_command	trace/trace_events_trigger.c	/^__init int register_event_command(struct event_command *cmd)$/;"	f
register_for_each_vma	events/uprobes.c	/^register_for_each_vma(struct uprobe *uprobe, struct uprobe_consumer *new)$/;"	f	file:
register_ftrace_command	trace/ftrace.c	/^__init int register_ftrace_command(struct ftrace_func_command *cmd)$/;"	f
register_ftrace_command	trace/trace.h	/^static inline __init int register_ftrace_command(struct ftrace_func_command *cmd)$/;"	f
register_ftrace_export	trace/trace.c	/^EXPORT_SYMBOL_GPL(register_ftrace_export);$/;"	v
register_ftrace_export	trace/trace.c	/^int register_ftrace_export(struct trace_export *export)$/;"	f
register_ftrace_function	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(register_ftrace_function);$/;"	v
register_ftrace_function	trace/ftrace.c	/^int register_ftrace_function(struct ftrace_ops *ops)$/;"	f
register_ftrace_function_probe	trace/ftrace.c	/^register_ftrace_function_probe(char *glob, struct trace_array *tr,$/;"	f
register_ftrace_graph	trace/fgraph.c	/^int register_ftrace_graph(struct fgraph_ops *gops)$/;"	f
register_ftrace_profiler	trace/ftrace.c	/^static int register_ftrace_profiler(void)$/;"	f	file:
register_handler_proc	irq/internals.h	/^static inline void register_handler_proc(unsigned int irq,$/;"	f
register_handler_proc	irq/proc.c	/^void register_handler_proc(unsigned int irq, struct irqaction *action)$/;"	f
register_irq_proc	irq/internals.h	/^static inline void register_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	f
register_irq_proc	irq/proc.c	/^void register_irq_proc(unsigned int irq, struct irq_desc *desc)$/;"	f
register_irqsoff_function	trace/trace_irqsoff.c	/^static int register_irqsoff_function(struct trace_array *tr, int graph, int set)$/;"	f	file:
register_is_const	bpf/verifier.c	/^static bool register_is_const(struct bpf_reg_state *reg)$/;"	f	file:
register_is_null	bpf/verifier.c	/^static bool register_is_null(struct bpf_reg_state *reg)$/;"	f	file:
register_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kprobe);$/;"	v
register_kprobe	kprobes.c	/^int register_kprobe(struct kprobe *p)$/;"	f
register_kprobe_event	trace/trace_kprobe.c	/^static int register_kprobe_event(struct trace_kprobe *tk)$/;"	f	file:
register_kprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kprobes);$/;"	v
register_kprobes	kprobes.c	/^int register_kprobes(struct kprobe **kps, int num)$/;"	f
register_kretprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kretprobe);$/;"	v
register_kretprobe	kprobes.c	/^int register_kretprobe(struct kretprobe *rp)$/;"	f
register_kretprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kretprobes);$/;"	v
register_kretprobes	kprobes.c	/^int register_kretprobes(struct kretprobe **rps, int num)$/;"	f
register_lock_class	locking/lockdep.c	/^register_lock_class(struct lockdep_map *lock, unsigned int subclass, int force)$/;"	f	file:
register_module_notifier	module.c	/^EXPORT_SYMBOL(register_module_notifier);$/;"	v
register_module_notifier	module.c	/^int register_module_notifier(struct notifier_block *nb)$/;"	f
register_perf_hw_breakpoint	events/hw_breakpoint.c	/^int register_perf_hw_breakpoint(struct perf_event *bp)$/;"	f
register_pm_notifier	power/main.c	/^EXPORT_SYMBOL_GPL(register_pm_notifier);$/;"	v
register_pm_notifier	power/main.c	/^int register_pm_notifier(struct notifier_block *nb)$/;"	f
register_pm_qos_misc	power/qos.c	/^static int register_pm_qos_misc(struct pm_qos_object *qos, struct dentry *d)$/;"	f	file:
register_reboot_notifier	reboot.c	/^EXPORT_SYMBOL(register_reboot_notifier);$/;"	v
register_reboot_notifier	reboot.c	/^int register_reboot_notifier(struct notifier_block *nb)$/;"	f
register_refined_jiffies	time/jiffies.c	/^int register_refined_jiffies(long cycles_per_second)$/;"	f
register_restart_handler	reboot.c	/^EXPORT_SYMBOL(register_restart_handler);$/;"	v
register_restart_handler	reboot.c	/^int register_restart_handler(struct notifier_block *nb)$/;"	f
register_rwsem	events/uprobes.c	/^	struct rw_semaphore	register_rwsem;$/;"	m	struct:uprobe	typeref:struct:uprobe::rw_semaphore	file:
register_sched_domain_sysctl	sched/debug.c	/^void register_sched_domain_sysctl(void)$/;"	f
register_sched_domain_sysctl	sched/sched.h	/^static inline void register_sched_domain_sysctl(void)$/;"	f
register_snapshot_cmd	trace/trace.c	/^static __init int register_snapshot_cmd(void)$/;"	f	file:
register_snapshot_cmd	trace/trace.c	/^static inline __init int register_snapshot_cmd(void) { return 0; }$/;"	f	file:
register_snapshot_trigger	trace/trace_events_trigger.c	/^register_snapshot_trigger(char *glob, struct event_trigger_ops *ops,$/;"	f	file:
register_stat_tracer	trace/trace_stat.c	/^int register_stat_tracer(struct tracer_stat *trace)$/;"	f
register_synth_event	trace/trace_events_hist.c	/^static int register_synth_event(struct synth_event *event)$/;"	f	file:
register_trace_event	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(register_trace_event);$/;"	v
register_trace_event	trace/trace_output.c	/^int register_trace_event(struct trace_event *event)$/;"	f
register_trace_kprobe	trace/trace_kprobe.c	/^static int register_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
register_trace_uprobe	trace/trace_uprobe.c	/^static int register_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
register_tracepoint_module_notifier	tracepoint.c	/^EXPORT_SYMBOL_GPL(register_tracepoint_module_notifier);$/;"	v
register_tracepoint_module_notifier	tracepoint.c	/^int register_tracepoint_module_notifier(struct notifier_block *nb)$/;"	f
register_tracer	trace/trace.c	/^int __init register_tracer(struct tracer *type)$/;"	f
register_trigger	trace/trace_events_trigger.c	/^static int register_trigger(char *glob, struct event_trigger_ops *ops,$/;"	f	file:
register_trigger_cmds	trace/trace_events_trigger.c	/^__init int register_trigger_cmds(void)$/;"	f
register_trigger_enable_disable_cmds	trace/trace_events_trigger.c	/^static __init int register_trigger_enable_disable_cmds(void)$/;"	f	file:
register_trigger_hist_cmd	trace/trace.h	/^static inline int register_trigger_hist_cmd(void) { return 0; }$/;"	f
register_trigger_hist_cmd	trace/trace_events_hist.c	/^__init int register_trigger_hist_cmd(void)$/;"	f
register_trigger_hist_enable_disable_cmds	trace/trace.h	/^static inline int register_trigger_hist_enable_disable_cmds(void) { return 0; }$/;"	f
register_trigger_hist_enable_disable_cmds	trace/trace_events_hist.c	/^__init int register_trigger_hist_enable_disable_cmds(void)$/;"	f
register_trigger_snapshot_cmd	trace/trace_events_trigger.c	/^static __init int register_trigger_snapshot_cmd(void) { return 0; }$/;"	f	file:
register_trigger_snapshot_cmd	trace/trace_events_trigger.c	/^static __init int register_trigger_snapshot_cmd(void)$/;"	f	file:
register_trigger_stacktrace_cmd	trace/trace_events_trigger.c	/^static __init int register_trigger_stacktrace_cmd(void) { return 0; }$/;"	f	file:
register_trigger_stacktrace_cmd	trace/trace_events_trigger.c	/^static __init int register_trigger_stacktrace_cmd(void)$/;"	f	file:
register_trigger_traceon_traceoff_cmds	trace/trace_events_trigger.c	/^static __init int register_trigger_traceon_traceoff_cmds(void)$/;"	f	file:
register_uprobe_event	trace/trace_uprobe.c	/^static int register_uprobe_event(struct trace_uprobe *tu)$/;"	f	file:
register_user_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(register_user_hw_breakpoint);$/;"	v
register_user_hw_breakpoint	events/hw_breakpoint.c	/^register_user_hw_breakpoint(struct perf_event_attr *attr,$/;"	f
register_wakeup_function	trace/trace_sched_wakeup.c	/^static int register_wakeup_function(struct trace_array *tr, int graph, int set)$/;"	f	file:
register_warn_debugfs	panic.c	/^device_initcall(register_warn_debugfs);$/;"	v
register_warn_debugfs	panic.c	/^static __init int register_warn_debugfs(void)$/;"	f	file:
register_wide_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(register_wide_hw_breakpoint);$/;"	v
register_wide_hw_breakpoint	events/hw_breakpoint.c	/^register_wide_hw_breakpoint(struct perf_event_attr *attr,$/;"	f
regno	bpf/verifier.c	/^	int regno;$/;"	m	struct:bpf_call_arg_meta	file:
regs	trace/bpf_trace.c	/^	struct pt_regs regs[3];$/;"	m	struct:bpf_raw_tp_regs	typeref:struct:bpf_raw_tp_regs::pt_regs	file:
regsafe	bpf/verifier.c	/^static bool regsafe(struct bpf_reg_state *rold, struct bpf_reg_state *rcur,$/;"	f	file:
regular	sched/fair.c	/^enum fbq_type { regular, remote, all };$/;"	e	enum:fbq_type	file:
reinit_class	locking/lockdep.c	/^static void reinit_class(struct lock_class *class)$/;"	f	file:
relax_domain_level	cgroup/cpuset.c	/^	int relax_domain_level;$/;"	m	struct:cpuset	file:
relay_alloc_buf	relay.c	/^static void *relay_alloc_buf(struct rchan_buf *buf, size_t *size)$/;"	f	file:
relay_alloc_page_array	relay.c	/^static struct page **relay_alloc_page_array(unsigned int n_pages)$/;"	f	file:
relay_buf_empty	relay.c	/^static int relay_buf_empty(struct rchan_buf *buf)$/;"	f	file:
relay_buf_fault	relay.c	/^static vm_fault_t relay_buf_fault(struct vm_fault *vmf)$/;"	f	file:
relay_buf_full	relay.c	/^EXPORT_SYMBOL_GPL(relay_buf_full);$/;"	v
relay_buf_full	relay.c	/^int relay_buf_full(struct rchan_buf *buf)$/;"	f
relay_close	relay.c	/^EXPORT_SYMBOL_GPL(relay_close);$/;"	v
relay_close	relay.c	/^void relay_close(struct rchan *chan)$/;"	f
relay_close_buf	relay.c	/^static void relay_close_buf(struct rchan_buf *buf)$/;"	f	file:
relay_consume_bytes	relay.c	/^static void relay_consume_bytes(struct rchan_buf *rbuf, int bytes_consumed)$/;"	f	file:
relay_create_buf	relay.c	/^static struct rchan_buf *relay_create_buf(struct rchan *chan)$/;"	f	file:
relay_create_buf_file	relay.c	/^static struct dentry *relay_create_buf_file(struct rchan *chan,$/;"	f	file:
relay_destroy_buf	relay.c	/^static void relay_destroy_buf(struct rchan_buf *buf)$/;"	f	file:
relay_destroy_channel	relay.c	/^static void relay_destroy_channel(struct kref *kref)$/;"	f	file:
relay_file_mmap	relay.c	/^static int relay_file_mmap(struct file *filp, struct vm_area_struct *vma)$/;"	f	file:
relay_file_mmap_close	relay.c	/^static void relay_file_mmap_close(struct vm_area_struct *vma)$/;"	f	file:
relay_file_mmap_ops	relay.c	/^static const struct vm_operations_struct relay_file_mmap_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
relay_file_open	relay.c	/^static int relay_file_open(struct inode *inode, struct file *filp)$/;"	f	file:
relay_file_operations	relay.c	/^EXPORT_SYMBOL_GPL(relay_file_operations);$/;"	v
relay_file_operations	relay.c	/^const struct file_operations relay_file_operations = {$/;"	v	typeref:struct:file_operations
relay_file_poll	relay.c	/^static __poll_t relay_file_poll(struct file *filp, poll_table *wait)$/;"	f	file:
relay_file_read	relay.c	/^static ssize_t relay_file_read(struct file *filp,$/;"	f	file:
relay_file_read_avail	relay.c	/^static int relay_file_read_avail(struct rchan_buf *buf, size_t read_pos)$/;"	f	file:
relay_file_read_consume	relay.c	/^static void relay_file_read_consume(struct rchan_buf *buf,$/;"	f	file:
relay_file_read_end_pos	relay.c	/^static size_t relay_file_read_end_pos(struct rchan_buf *buf,$/;"	f	file:
relay_file_read_start_pos	relay.c	/^static size_t relay_file_read_start_pos(size_t read_pos,$/;"	f	file:
relay_file_read_subbuf_avail	relay.c	/^static size_t relay_file_read_subbuf_avail(size_t read_pos,$/;"	f	file:
relay_file_release	relay.c	/^static int relay_file_release(struct inode *inode, struct file *filp)$/;"	f	file:
relay_file_splice_read	relay.c	/^static ssize_t relay_file_splice_read(struct file *in,$/;"	f	file:
relay_flush	relay.c	/^EXPORT_SYMBOL_GPL(relay_flush);$/;"	v
relay_flush	relay.c	/^void relay_flush(struct rchan *chan)$/;"	f
relay_free_page_array	relay.c	/^static void relay_free_page_array(struct page **array)$/;"	f	file:
relay_late_setup_files	relay.c	/^EXPORT_SYMBOL_GPL(relay_late_setup_files);$/;"	v
relay_late_setup_files	relay.c	/^int relay_late_setup_files(struct rchan *chan,$/;"	f
relay_mmap_buf	relay.c	/^static int relay_mmap_buf(struct rchan_buf *buf, struct vm_area_struct *vma)$/;"	f	file:
relay_open	relay.c	/^EXPORT_SYMBOL_GPL(relay_open);$/;"	v
relay_open	relay.c	/^struct rchan *relay_open(const char *base_filename,$/;"	f
relay_open_buf	relay.c	/^static struct rchan_buf *relay_open_buf(struct rchan *chan, unsigned int cpu)$/;"	f	file:
relay_page_release	relay.c	/^static void relay_page_release(struct splice_pipe_desc *spd, unsigned int i)$/;"	f	file:
relay_pipe_buf_ops	relay.c	/^static const struct pipe_buf_operations relay_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
relay_pipe_buf_release	relay.c	/^static void relay_pipe_buf_release(struct pipe_inode_info *pipe,$/;"	f	file:
relay_prepare_cpu	relay.c	/^int relay_prepare_cpu(unsigned int cpu)$/;"	f
relay_remove_buf	relay.c	/^static void relay_remove_buf(struct kref *kref)$/;"	f	file:
relay_reset	relay.c	/^EXPORT_SYMBOL_GPL(relay_reset);$/;"	v
relay_reset	relay.c	/^void relay_reset(struct rchan *chan)$/;"	f
relay_set_buf_dentry	relay.c	/^static inline void relay_set_buf_dentry(struct rchan_buf *buf,$/;"	f	file:
relay_subbufs_consumed	relay.c	/^EXPORT_SYMBOL_GPL(relay_subbufs_consumed);$/;"	v
relay_subbufs_consumed	relay.c	/^void relay_subbufs_consumed(struct rchan *chan,$/;"	f
relay_switch_subbuf	relay.c	/^EXPORT_SYMBOL_GPL(relay_switch_subbuf);$/;"	v
relay_switch_subbuf	relay.c	/^size_t relay_switch_subbuf(struct rchan_buf *buf, size_t length)$/;"	f
releasable_read	cgroup/debug.c	/^static u64 releasable_read(struct cgroup_subsys_state *css, struct cftype *cft)$/;"	f	file:
release_agent	cgroup/cgroup-internal.h	/^	char		*release_agent;		\/* Path for release notifications *\/$/;"	m	struct:cgroup_fs_context
release_bp_slot	events/hw_breakpoint.c	/^void release_bp_slot(struct perf_event *bp)$/;"	f
release_callchain_buffers	events/callchain.c	/^static void release_callchain_buffers(void)$/;"	f	file:
release_callchain_buffers_rcu	events/callchain.c	/^static void release_callchain_buffers_rcu(struct rcu_head *head)$/;"	f	file:
release_child_resources	resource.c	/^void release_child_resources(struct resource *r)$/;"	f
release_early_probes	tracepoint.c	/^postcore_initcall(release_early_probes);$/;"	v
release_early_probes	tracepoint.c	/^static __init int release_early_probes(void)$/;"	f	file:
release_maps	bpf/verifier.c	/^static void release_maps(struct bpf_verifier_env *env)$/;"	f	file:
release_mem_region_adjustable	resource.c	/^int release_mem_region_adjustable(struct resource *parent,$/;"	f
release_node	gcov/fs.c	/^static void release_node(struct gcov_node *node)$/;"	f	file:
release_posix_timer	time/posix-timers.c	/^static void release_posix_timer(struct k_itimer *tmr, int it_id_set)$/;"	f	file:
release_probe	trace/ftrace.c	/^static void release_probe(struct ftrace_func_probe *probe)$/;"	f	file:
release_probes	tracepoint.c	/^static inline void release_probes(struct tracepoint_func *old)$/;"	f	file:
release_reference	bpf/verifier.c	/^static int release_reference(struct bpf_verifier_env *env,$/;"	f	file:
release_reference_state	bpf/verifier.c	/^static int release_reference_state(struct bpf_func_state *state, int ptr_id)$/;"	f	file:
release_reg_references	bpf/verifier.c	/^static void release_reg_references(struct bpf_verifier_env *env,$/;"	f	file:
release_resource	resource.c	/^EXPORT_SYMBOL(release_resource);$/;"	v
release_resource	resource.c	/^int release_resource(struct resource *old)$/;"	f
release_swap_reader	power/swap.c	/^static void release_swap_reader(struct swap_map_handle *handle)$/;"	f	file:
release_swap_writer	power/swap.c	/^static void release_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
release_task	exit.c	/^void release_task(struct task_struct *p)$/;"	f
release_task_stack	fork.c	/^static void release_task_stack(struct task_struct *tsk)$/;"	f	file:
remap_file_pages	sys_ni.c	/^COND_SYSCALL(remap_file_pages);$/;"	v
remcom_in_buffer	debug/gdbstub.c	/^static char			remcom_in_buffer[BUFMAX];$/;"	v	file:
remcom_out_buffer	debug/gdbstub.c	/^static char			remcom_out_buffer[BUFMAX];$/;"	v	file:
remote	sched/fair.c	/^enum fbq_type { regular, remote, all };$/;"	e	enum:fbq_type	file:
remote_function	events/core.c	/^static void remote_function(void *data)$/;"	f	file:
remote_function_call	events/core.c	/^struct remote_function_call {$/;"	s	file:
remote_function_f	events/core.c	/^typedef int (*remote_function_f)(void *);$/;"	t	file:
remote_output	events/core.c	/^struct remote_output {$/;"	s	file:
remove	trace/trace_events_hist.c	/^	bool				remove;$/;"	m	struct:hist_trigger_data	file:
remove_breakpoint	events/uprobes.c	/^remove_breakpoint(struct uprobe *uprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f	file:
remove_buf_file_default_callback	relay.c	/^static int remove_buf_file_default_callback(struct dentry *dentry)$/;"	f	file:
remove_chunk_node	audit_tree.c	/^static void remove_chunk_node(struct audit_chunk *chunk, struct node *p)$/;"	f	file:
remove_class_from_lock_chain	locking/lockdep.c	/^static void remove_class_from_lock_chain(struct pending_free *pf,$/;"	f	file:
remove_class_from_lock_chains	locking/lockdep.c	/^static void remove_class_from_lock_chains(struct pending_free *pf,$/;"	f	file:
remove_entity_load_avg	sched/fair.c	/^static inline void remove_entity_load_avg(struct sched_entity *se) {}$/;"	f	file:
remove_entity_load_avg	sched/fair.c	/^static void remove_entity_load_avg(struct sched_entity *se)$/;"	f	file:
remove_event_file_dir	trace/trace_events.c	/^static void remove_event_file_dir(struct trace_event_file *file)$/;"	f	file:
remove_event_from_tracers	trace/trace_events.c	/^static void remove_event_from_tracers(struct trace_event_call *call)$/;"	f	file:
remove_filter_string	trace/trace_events_filter.c	/^static void remove_filter_string(struct event_filter *filter)$/;"	f	file:
remove_ftrace_ops	trace/ftrace.c	/^static int remove_ftrace_ops(struct ftrace_ops __rcu **list,$/;"	f	file:
remove_hash_entry	trace/ftrace.c	/^remove_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
remove_hist_vars	trace/trace_events_hist.c	/^static void remove_hist_vars(struct hist_trigger_data *hist_data)$/;"	f	file:
remove_hrtimer	time/hrtimer.c	/^remove_hrtimer(struct hrtimer *timer, struct hrtimer_clock_base *base, bool restart)$/;"	f	file:
remove_info	gcov/fs.c	/^static void remove_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
remove_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(remove_irq);$/;"	v
remove_irq	irq/manage.c	/^void remove_irq(unsigned int irq, struct irqaction *act)$/;"	f
remove_links	gcov/fs.c	/^static void remove_links(struct gcov_node *node)$/;"	f	file:
remove_node	gcov/fs.c	/^static void remove_node(struct gcov_node *node)$/;"	f	file:
remove_notes_attrs	module.c	/^static inline void remove_notes_attrs(struct module *mod)$/;"	f	file:
remove_notes_attrs	module.c	/^static void remove_notes_attrs(struct module *mod)$/;"	f	file:
remove_percpu_irq	irq/manage.c	/^void remove_percpu_irq(unsigned int irq, struct irqaction *act)$/;"	f
remove_resource	resource.c	/^EXPORT_SYMBOL_GPL(remove_resource);$/;"	v
remove_resource	resource.c	/^int remove_resource(struct resource *old)$/;"	f
remove_sect_attrs	module.c	/^static inline void remove_sect_attrs(struct module *mod)$/;"	f	file:
remove_sect_attrs	module.c	/^static void remove_sect_attrs(struct module *mod)$/;"	f	file:
remove_subsystem	trace/trace_events.c	/^static void remove_subsystem(struct trace_subsystem_dir *dir)$/;"	f	file:
remove_tasks_in_empty_cpuset	cgroup/cpuset.c	/^static void remove_tasks_in_empty_cpuset(struct cpuset *cs)$/;"	f	file:
remove_wait_queue	sched/wait.c	/^EXPORT_SYMBOL(remove_wait_queue);$/;"	v
remove_wait_queue	sched/wait.c	/^void remove_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)$/;"	f
remove_waiter	locking/rtmutex.c	/^static void remove_waiter(struct rt_mutex *lock,$/;"	f	file:
removed	sched/sched.h	/^	} removed;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::__anon83
removed_ops	trace/ftrace.c	/^static struct ftrace_ops *removed_ops;$/;"	v	typeref:struct:ftrace_ops	file:
reorder_lock	locking/test-ww_mutex.c	/^struct reorder_lock {$/;"	s	file:
reparent_leader	exit.c	/^static void reparent_leader(struct task_struct *father, struct task_struct *p,$/;"	f	file:
replace_chunk	audit_tree.c	/^static void replace_chunk(struct audit_chunk *new, struct audit_chunk *old)$/;"	f	file:
replace_map_fd_with_map_ptr	bpf/verifier.c	/^static int replace_map_fd_with_map_ptr(struct bpf_verifier_env *env)$/;"	f	file:
replace_mark_chunk	audit_tree.c	/^static void replace_mark_chunk(struct fsnotify_mark *mark,$/;"	f	file:
replenish_dl_entity	sched/deadline.c	/^static void replenish_dl_entity(struct sched_dl_entity *dl_se,$/;"	f	file:
report_addr	dma/direct.c	/^static void report_addr(struct device *dev, dma_addr_t dma_addr, size_t size)$/;"	f	file:
report_bad_irq	irq/spurious.c	/^static void report_bad_irq(struct irq_desc *desc, irqreturn_t action_ret)$/;"	f	file:
report_latency	trace/trace_irqsoff.c	/^static bool report_latency(struct trace_array *tr, u64 delta)$/;"	f	file:
report_latency	trace/trace_sched_wakeup.c	/^static bool report_latency(struct trace_array *tr, u64 delta)$/;"	f	file:
report_message_lost	printk/printk_safe.c	/^static void report_message_lost(struct printk_safe_seq_buf *s)$/;"	f	file:
report_probe	kprobes.c	/^static void report_probe(struct seq_file *pi, struct kprobe *p,$/;"	f	file:
reqd_free_pages	power/swap.c	/^	unsigned long reqd_free_pages;$/;"	m	struct:swap_map_handle	file:
reqd_free_pages	power/swap.c	/^static inline unsigned long reqd_free_pages(void)$/;"	f	file:
request	seccomp.c	/^	struct semaphore request;$/;"	m	struct:notification	typeref:struct:notification::semaphore	file:
request_any_context_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(request_any_context_irq);$/;"	v
request_any_context_irq	irq/manage.c	/^int request_any_context_irq(unsigned int irq, irq_handler_t handler,$/;"	f
request_dma	dma.c	/^EXPORT_SYMBOL(request_dma);$/;"	v
request_dma	dma.c	/^int request_dma(unsigned int dmanr, const char * device_id)$/;"	f
request_dma	dma.c	/^int request_dma(unsigned int dmanr, const char *device_id)$/;"	f
request_key	sys_ni.c	/^COND_SYSCALL(request_key);$/;"	v
request_nmi	irq/manage.c	/^int request_nmi(unsigned int irq, irq_handler_t handler,$/;"	f
request_percpu_nmi	irq/manage.c	/^int request_percpu_nmi(unsigned int irq, irq_handler_t handler,$/;"	f
request_resource	resource.c	/^EXPORT_SYMBOL(request_resource);$/;"	v
request_resource	resource.c	/^int request_resource(struct resource *root, struct resource *new)$/;"	f
request_resource_conflict	resource.c	/^struct resource *request_resource_conflict(struct resource *root, struct resource *new)$/;"	f
request_threaded_irq	irq/manage.c	/^EXPORT_SYMBOL(request_threaded_irq);$/;"	v
request_threaded_irq	irq/manage.c	/^int request_threaded_irq(unsigned int irq, irq_handler_t handler,$/;"	f
requeue_futex	futex.c	/^void requeue_futex(struct futex_q *q, struct futex_hash_bucket *hb1,$/;"	f	file:
requeue_pi_key	futex.c	/^	union futex_key *requeue_pi_key;$/;"	m	struct:futex_q	typeref:union:futex_q::futex_key	file:
requeue_pi_wake_futex	futex.c	/^void requeue_pi_wake_futex(struct futex_q *q, union futex_key *key,$/;"	f	file:
requeue_rt_entity	sched/rt.c	/^requeue_rt_entity(struct rt_rq *rt_rq, struct sched_rt_entity *rt_se, int head)$/;"	f	file:
requeue_task_rt	sched/rt.c	/^static void requeue_task_rt(struct rq *rq, struct task_struct *p, int head)$/;"	f	file:
required	power/console.c	/^	bool required;$/;"	m	struct:pm_vt_switch	file:
res	time/clockevents.c	/^	int res;$/;"	m	struct:ce_unbind	file:
resched_cpu	sched/core.c	/^void resched_cpu(int cpu)$/;"	f
resched_curr	sched/core.c	/^void resched_curr(struct rq *rq)$/;"	f
rescue_wq	workqueue_internal.h	/^	struct workqueue_struct	*rescue_wq;	\/* I: the workqueue to rescue *\/$/;"	m	struct:worker	typeref:struct:worker::workqueue_struct
rescuer	workqueue.c	/^	struct worker		*rescuer;	\/* I: rescue worker *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::worker	file:
rescuer_thread	workqueue.c	/^static int rescuer_thread(void *__rescuer)$/;"	f	file:
resend_irqs	irq/resend.c	/^static void resend_irqs(unsigned long arg)$/;"	f	file:
reserve_bp_slot	events/hw_breakpoint.c	/^int reserve_bp_slot(struct perf_event *bp)$/;"	f
reserve_region_with_split	resource.c	/^reserve_region_with_split(struct resource *root, resource_size_t start,$/;"	f
reserve_setup	resource.c	/^static int __init reserve_setup(char *str)$/;"	f	file:
reserved	locking/qspinlock.c	/^	long reserved[2];$/;"	m	struct:qnode	file:
reserved	power/swap.c	/^	char reserved[PAGE_SIZE - 20 - sizeof(sector_t) - sizeof(int) -$/;"	m	struct:swsusp_header	file:
reserved_field_names	trace/trace_probe.c	/^static const char *reserved_field_names[] = {$/;"	v	file:
reserved_size	power/hibernate.c	/^power_attr(reserved_size);$/;"	v
reserved_size	power/snapshot.c	/^unsigned long reserved_size;$/;"	v
reserved_size_show	power/hibernate.c	/^static ssize_t reserved_size_show(struct kobject *kobj,$/;"	f	file:
reserved_size_store	power/hibernate.c	/^static ssize_t reserved_size_store(struct kobject *kobj,$/;"	f	file:
reset	trace/trace.h	/^	void			(*reset)(struct trace_array *tr);$/;"	m	struct:tracer
reset_counts	trace/trace_selftest.c	/^static void reset_counts(void)$/;"	f	file:
reset_hung_task	hung_task.c	/^static atomic_t reset_hung_task = ATOMIC_INIT(0);$/;"	v	file:
reset_hung_task_detector	hung_task.c	/^EXPORT_SYMBOL_GPL(reset_hung_task_detector);$/;"	v
reset_hung_task_detector	hung_task.c	/^void reset_hung_task_detector(void)$/;"	f
reset_iter	kallsyms.c	/^static void reset_iter(struct kallsym_iter *iter, loff_t new_pos)$/;"	f	file:
reset_iter_read	trace/ftrace.c	/^static void reset_iter_read(struct ftrace_iterator *iter)$/;"	f	file:
reset_kprobe_instance	kprobes.c	/^static inline void reset_kprobe_instance(void)$/;"	f	file:
reset_node	gcov/fs.c	/^static void reset_node(struct gcov_node *node)$/;"	f	file:
reset_ptenuma_scan	sched/fair.c	/^static void reset_ptenuma_scan(struct task_struct *p)$/;"	f	file:
reset_read	gcov/fs.c	/^static ssize_t reset_read(struct file *file, char __user *addr, size_t len,$/;"	f	file:
reset_stat_session	trace/trace_stat.c	/^static void reset_stat_session(struct stat_session *session)$/;"	f	file:
reset_write	gcov/fs.c	/^static ssize_t reset_write(struct file *file, const char __user *addr,$/;"	f	file:
resize_buffer_duplicate_size	trace/trace.c	/^static int resize_buffer_duplicate_size(struct trace_buffer *trace_buf,$/;"	f	file:
resize_disabled	trace/ring_buffer.c	/^	atomic_t			resize_disabled;$/;"	m	struct:ring_buffer	file:
resolve	bpf/btf.c	/^	int (*resolve)(struct btf_verifier_env *env,$/;"	m	struct:btf_kind_operations	file:
resolve	locking/test-ww_mutex.c	/^	bool resolve;$/;"	m	struct:test_abba	file:
resolve_mode	bpf/btf.c	/^	enum resolve_mode resolve_mode;$/;"	m	struct:btf_verifier_env	typeref:enum:btf_verifier_env::resolve_mode	file:
resolve_mode	bpf/btf.c	/^enum resolve_mode {$/;"	g	file:
resolve_rel_crc	module.c	/^static u32 resolve_rel_crc(const s32 *crc)$/;"	f	file:
resolve_symbol	module.c	/^static const struct kernel_symbol *resolve_symbol(struct module *mod,$/;"	f	file:
resolve_symbol_wait	module.c	/^resolve_symbol_wait(struct module *mod,$/;"	f	file:
resolve_var_refs	trace/trace_events_hist.c	/^static bool resolve_var_refs(struct hist_trigger_data *hist_data, void *key,$/;"	f	file:
resolve_vertex	bpf/btf.c	/^struct resolve_vertex {$/;"	s	file:
resolved_ids	bpf/btf.c	/^	u32 *resolved_ids;$/;"	m	struct:btf	file:
resolved_sizes	bpf/btf.c	/^	u32 *resolved_sizes;$/;"	m	struct:btf	file:
resource_alignment	resource.c	/^resource_size_t resource_alignment(struct resource *res)$/;"	f
resource_clip	resource.c	/^static void resource_clip(struct resource *res, resource_size_t min,$/;"	f	file:
resource_constraint	resource.c	/^struct resource_constraint {$/;"	s	file:
resource_list_create_entry	resource.c	/^EXPORT_SYMBOL(resource_list_create_entry);$/;"	v
resource_list_create_entry	resource.c	/^struct resource_entry *resource_list_create_entry(struct resource *res,$/;"	f
resource_list_free	resource.c	/^EXPORT_SYMBOL(resource_list_free);$/;"	v
resource_list_free	resource.c	/^void resource_list_free(struct list_head *head)$/;"	f
resource_op	resource.c	/^static const struct seq_operations resource_op = {$/;"	v	typeref:struct:seq_operations	file:
resources	cgroup/rdma.c	/^	struct rdmacg_resource	resources[RDMACG_RESOURCE_MAX];$/;"	m	struct:rdmacg_resource_pool	typeref:struct:rdmacg_resource_pool::rdmacg_resource	file:
restart	events/core.c	/^	unsigned int		restart;$/;"	m	struct:stop_event_data	file:
restore_altstack	signal.c	/^int restore_altstack(const stack_t __user *uss)$/;"	f
restore_highmem	power/power.h	/^static inline int restore_highmem(void) { return 0; }$/;"	f
restore_highmem	power/snapshot.c	/^int restore_highmem(void)$/;"	f
restore_pblist	power/snapshot.c	/^struct pbe *restore_pblist;$/;"	v	typeref:struct:pbe
restore_unbound_workers_cpumask	workqueue.c	/^static void restore_unbound_workers_cpumask(struct worker_pool *pool, int cpu)$/;"	f	file:
result	cpu.c	/^	int			result;$/;"	m	struct:cpuhp_cpu_state	file:
result	kthread.c	/^	struct task_struct *result;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::task_struct	file:
result	locking/test-ww_mutex.c	/^	int result;$/;"	m	struct:test_abba	file:
result	locking/test-ww_mutex.c	/^	int result;$/;"	m	struct:test_cycle	file:
resume	power/hibernate.c	/^power_attr(resume);$/;"	v
resume_console	printk/printk.c	/^void resume_console(void)$/;"	f
resume_delay	power/hibernate.c	/^static unsigned int resume_delay;$/;"	v	file:
resume_device_irqs	irq/pm.c	/^EXPORT_SYMBOL_GPL(resume_device_irqs);$/;"	v
resume_device_irqs	irq/pm.c	/^void resume_device_irqs(void)$/;"	f
resume_file	power/hibernate.c	/^static char resume_file[256] = CONFIG_PM_STD_PARTITION;$/;"	v	file:
resume_irq	irq/pm.c	/^static void resume_irq(struct irq_desc *desc)$/;"	f	file:
resume_irqs	irq/pm.c	/^static void resume_irqs(bool want_early)$/;"	f	file:
resume_offset	power/hibernate.c	/^power_attr(resume_offset);$/;"	v
resume_offset_setup	power/hibernate.c	/^static int __init resume_offset_setup(char *str)$/;"	f	file:
resume_offset_show	power/hibernate.c	/^static ssize_t resume_offset_show(struct kobject *kobj,$/;"	f	file:
resume_offset_store	power/hibernate.c	/^static ssize_t resume_offset_store(struct kobject *kobj,$/;"	f	file:
resume_setup	power/hibernate.c	/^static int __init resume_setup(char *str)$/;"	f	file:
resume_show	power/hibernate.c	/^static ssize_t resume_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
resume_store	power/hibernate.c	/^static ssize_t resume_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
resume_target_kernel	power/hibernate.c	/^static int resume_target_kernel(bool platform_mode)$/;"	f	file:
resume_wait	power/hibernate.c	/^static int resume_wait;$/;"	v	file:
resumedelay_setup	power/hibernate.c	/^static int __init resumedelay_setup(char *str)$/;"	f	file:
resumewait_setup	power/hibernate.c	/^static int __init resumewait_setup(char *str)$/;"	f	file:
ret	events/core.c	/^	int			ret;$/;"	m	struct:remote_function_call	file:
ret	events/core.c	/^	int ret;$/;"	m	struct:perf_read_data	file:
ret	power/swap.c	/^	int ret;                                  \/* return code *\/$/;"	m	struct:cmp_data	file:
ret	power/swap.c	/^	int ret;                                  \/* return code *\/$/;"	m	struct:dec_data	file:
ret	smp.c	/^	int			ret;$/;"	m	struct:smp_call_on_cpu_struct	file:
ret	stop_machine.c	/^	int			ret;		\/* collected return value *\/$/;"	m	struct:cpu_stop_done	file:
ret	trace/trace.h	/^	long			ret;$/;"	m	struct:syscall_trace_exit
ret	trace/trace_functions_graph.c	/^	struct ftrace_graph_ret_entry	ret;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::ftrace_graph_ret_entry	file:
ret	workqueue.c	/^	long ret;$/;"	m	struct:work_for_cpu	file:
ret_ip	trace/trace.h	/^	unsigned long		ret_ip;$/;"	m	struct:kretprobe_trace_entry_head
ret_state	debug/debug_core.h	/^	int			ret_state;$/;"	m	struct:debuggerinfo_struct
retarget_shared_pending	signal.c	/^static void retarget_shared_pending(struct task_struct *tsk, sigset_t *which)$/;"	f	file:
retire_userns_sysctls	ucount.c	/^void retire_userns_sysctls(struct user_namespace *ns)$/;"	f
retrieve_ptr_limit	bpf/verifier.c	/^static int retrieve_ptr_limit(const struct bpf_reg_state *ptr_reg,$/;"	f	file:
retrigger_next_event	time/hrtimer.c	/^static inline void retrigger_next_event(void *arg) { }$/;"	f	file:
retrigger_next_event	time/hrtimer.c	/^static void retrigger_next_event(void *arg)$/;"	f	file:
return_cfs_rq_runtime	sched/fair.c	/^static __always_inline void return_cfs_rq_runtime(struct cfs_rq *cfs_rq) {}$/;"	f	file:
return_cfs_rq_runtime	sched/fair.c	/^static __always_inline void return_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
return_code	audit.h	/^	long		    return_code;\/* syscall return code *\/$/;"	m	struct:audit_context
return_handler	test_kprobes.c	/^static int return_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
return_handler2	test_kprobes.c	/^static int return_handler2(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
return_valid	audit.h	/^	int		    return_valid; \/* return code is valid *\/$/;"	m	struct:audit_context
retval	fail_function.c	/^	unsigned long retval;$/;"	m	struct:fei_attr	file:
reuse_unused_kprobe	kprobes.c	/^static int reuse_unused_kprobe(struct kprobe *ap)$/;"	f	file:
reuseport_array	bpf/reuseport_array.c	/^static struct reuseport_array *reuseport_array(struct bpf_map *map)$/;"	f	file:
reuseport_array	bpf/reuseport_array.c	/^struct reuseport_array {$/;"	s	file:
reuseport_array_alloc	bpf/reuseport_array.c	/^static struct bpf_map *reuseport_array_alloc(union bpf_attr *attr)$/;"	f	file:
reuseport_array_alloc_check	bpf/reuseport_array.c	/^static int reuseport_array_alloc_check(union bpf_attr *attr)$/;"	f	file:
reuseport_array_delete_elem	bpf/reuseport_array.c	/^static int reuseport_array_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
reuseport_array_free	bpf/reuseport_array.c	/^static void reuseport_array_free(struct bpf_map *map)$/;"	f	file:
reuseport_array_get_next_key	bpf/reuseport_array.c	/^static int reuseport_array_get_next_key(struct bpf_map *map, void *key,$/;"	f	file:
reuseport_array_lookup_elem	bpf/reuseport_array.c	/^static void *reuseport_array_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
reuseport_array_ops	bpf/reuseport_array.c	/^const struct bpf_map_ops reuseport_array_ops = {$/;"	v	typeref:struct:bpf_map_ops
reuseport_array_update_check	bpf/reuseport_array.c	/^reuseport_array_update_check(const struct reuseport_array *array,$/;"	f	file:
revert_creds	cred.c	/^EXPORT_SYMBOL(revert_creds);$/;"	v
revert_creds	cred.c	/^void revert_creds(const struct cred *old)$/;"	f
rew	rcu/tree.h	/^	struct rcu_exp_work rew;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::rcu_exp_work
rew_s	rcu/tree.h	/^	unsigned long rew_s;$/;"	m	struct:rcu_exp_work
rew_work	rcu/tree.h	/^	struct work_struct rew_work;$/;"	m	struct:rcu_exp_work	typeref:struct:rcu_exp_work::work_struct
reweight_entity	sched/fair.c	/^static void reweight_entity(struct cfs_rq *cfs_rq, struct sched_entity *se,$/;"	f	file:
reweight_task	sched/fair.c	/^void reweight_task(struct task_struct *p, int prio)$/;"	f
rewrite_section_headers	module.c	/^static int rewrite_section_headers(struct load_info *info, int flags)$/;"	f	file:
rfc_gps	rcu/rcutorture.c	/^	int rfc_gps;$/;"	m	struct:rcu_fwd_cb	file:
rfc_next	rcu/rcutorture.c	/^	struct rcu_fwd_cb *rfc_next;$/;"	m	struct:rcu_fwd_cb	typeref:struct:rcu_fwd_cb::rcu_fwd_cb	file:
rh	rcu/rcutorture.c	/^	struct rcu_head rh;$/;"	m	struct:fwd_cb_state	typeref:struct:fwd_cb_state::rcu_head	file:
rh	rcu/rcutorture.c	/^	struct rcu_head rh;$/;"	m	struct:rcu_fwd_cb	typeref:struct:rcu_fwd_cb::rcu_head	file:
right_child	sched/cpudeadline.c	/^static inline int right_child(int i)$/;"	f	file:
ring_buffer	events/internal.h	/^struct ring_buffer {$/;"	s
ring_buffer	trace/ring_buffer.c	/^struct ring_buffer {$/;"	s	file:
ring_buffer_alloc_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_alloc_read_page);$/;"	v
ring_buffer_alloc_read_page	trace/ring_buffer.c	/^void *ring_buffer_alloc_read_page(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_attach	events/core.c	/^static void ring_buffer_attach(struct perf_event *event,$/;"	f	file:
ring_buffer_benchmark_exit	trace/ring_buffer_benchmark.c	/^module_exit(ring_buffer_benchmark_exit);$/;"	v
ring_buffer_benchmark_exit	trace/ring_buffer_benchmark.c	/^static void __exit ring_buffer_benchmark_exit(void)$/;"	f	file:
ring_buffer_benchmark_init	trace/ring_buffer_benchmark.c	/^module_init(ring_buffer_benchmark_init);$/;"	v
ring_buffer_benchmark_init	trace/ring_buffer_benchmark.c	/^static int __init ring_buffer_benchmark_init(void)$/;"	f	file:
ring_buffer_bytes_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_bytes_cpu);$/;"	v
ring_buffer_bytes_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_bytes_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_change_overwrite	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_change_overwrite);$/;"	v
ring_buffer_change_overwrite	trace/ring_buffer.c	/^void ring_buffer_change_overwrite(struct ring_buffer *buffer, int val)$/;"	f
ring_buffer_commit_overrun_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_commit_overrun_cpu);$/;"	v
ring_buffer_commit_overrun_cpu	trace/ring_buffer.c	/^ring_buffer_commit_overrun_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_consume	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_consume);$/;"	v
ring_buffer_consume	trace/ring_buffer.c	/^ring_buffer_consume(struct ring_buffer *buffer, int cpu, u64 *ts,$/;"	f
ring_buffer_consumer	trace/ring_buffer_benchmark.c	/^static void ring_buffer_consumer(void)$/;"	f	file:
ring_buffer_consumer_thread	trace/ring_buffer_benchmark.c	/^static int ring_buffer_consumer_thread(void *arg)$/;"	f	file:
ring_buffer_discard_commit	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_discard_commit);$/;"	v
ring_buffer_discard_commit	trace/ring_buffer.c	/^void ring_buffer_discard_commit(struct ring_buffer *buffer,$/;"	f
ring_buffer_dropped_events_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_dropped_events_cpu);$/;"	v
ring_buffer_dropped_events_cpu	trace/ring_buffer.c	/^ring_buffer_dropped_events_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_empty	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_empty);$/;"	v
ring_buffer_empty	trace/ring_buffer.c	/^bool ring_buffer_empty(struct ring_buffer *buffer)$/;"	f
ring_buffer_empty_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_empty_cpu);$/;"	v
ring_buffer_empty_cpu	trace/ring_buffer.c	/^bool ring_buffer_empty_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_entries	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_entries);$/;"	v
ring_buffer_entries	trace/ring_buffer.c	/^unsigned long ring_buffer_entries(struct ring_buffer *buffer)$/;"	f
ring_buffer_entries_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_entries_cpu);$/;"	v
ring_buffer_entries_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_entries_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_event_data	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_event_data);$/;"	v
ring_buffer_event_data	trace/ring_buffer.c	/^void *ring_buffer_event_data(struct ring_buffer_event *event)$/;"	f
ring_buffer_event_length	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_event_length);$/;"	v
ring_buffer_event_length	trace/ring_buffer.c	/^unsigned ring_buffer_event_length(struct ring_buffer_event *event)$/;"	f
ring_buffer_event_time_stamp	trace/ring_buffer.c	/^u64 ring_buffer_event_time_stamp(struct ring_buffer_event *event)$/;"	f
ring_buffer_expanded	trace/trace.c	/^bool ring_buffer_expanded;$/;"	v
ring_buffer_free	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_free);$/;"	v
ring_buffer_free	trace/ring_buffer.c	/^ring_buffer_free(struct ring_buffer *buffer)$/;"	f
ring_buffer_free_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_free_read_page);$/;"	v
ring_buffer_free_read_page	trace/ring_buffer.c	/^void ring_buffer_free_read_page(struct ring_buffer *buffer, int cpu, void *data)$/;"	f
ring_buffer_get	events/core.c	/^struct ring_buffer *ring_buffer_get(struct perf_event *event)$/;"	f
ring_buffer_has_space	events/ring_buffer.c	/^ring_buffer_has_space(unsigned long head, unsigned long tail,$/;"	f	file:
ring_buffer_init	events/ring_buffer.c	/^ring_buffer_init(struct ring_buffer *rb, long watermark, int flags)$/;"	f	file:
ring_buffer_iter	trace/ring_buffer.c	/^struct ring_buffer_iter {$/;"	s	file:
ring_buffer_iter_empty	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_empty);$/;"	v
ring_buffer_iter_empty	trace/ring_buffer.c	/^int ring_buffer_iter_empty(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_iter_peek	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_peek);$/;"	v
ring_buffer_iter_peek	trace/ring_buffer.c	/^ring_buffer_iter_peek(struct ring_buffer_iter *iter, u64 *ts)$/;"	f
ring_buffer_iter_reset	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_reset);$/;"	v
ring_buffer_iter_reset	trace/ring_buffer.c	/^void ring_buffer_iter_reset(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_lock_reserve	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_lock_reserve);$/;"	v
ring_buffer_lock_reserve	trace/ring_buffer.c	/^ring_buffer_lock_reserve(struct ring_buffer *buffer, unsigned long length)$/;"	f
ring_buffer_nest_end	trace/ring_buffer.c	/^void ring_buffer_nest_end(struct ring_buffer *buffer)$/;"	f
ring_buffer_nest_start	trace/ring_buffer.c	/^void ring_buffer_nest_start(struct ring_buffer *buffer)$/;"	f
ring_buffer_normalize_time_stamp	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_normalize_time_stamp);$/;"	v
ring_buffer_normalize_time_stamp	trace/ring_buffer.c	/^void ring_buffer_normalize_time_stamp(struct ring_buffer *buffer,$/;"	f
ring_buffer_nr_dirty_pages	trace/ring_buffer.c	/^size_t ring_buffer_nr_dirty_pages(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_nr_pages	trace/ring_buffer.c	/^size_t ring_buffer_nr_pages(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_oldest_event_ts	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_oldest_event_ts);$/;"	v
ring_buffer_oldest_event_ts	trace/ring_buffer.c	/^u64 ring_buffer_oldest_event_ts(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_overrun_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_overrun_cpu);$/;"	v
ring_buffer_overrun_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_overrun_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_overruns	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_overruns);$/;"	v
ring_buffer_overruns	trace/ring_buffer.c	/^unsigned long ring_buffer_overruns(struct ring_buffer *buffer)$/;"	f
ring_buffer_peek	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_peek);$/;"	v
ring_buffer_peek	trace/ring_buffer.c	/^ring_buffer_peek(struct ring_buffer *buffer, int cpu, u64 *ts,$/;"	f
ring_buffer_per_cpu	trace/ring_buffer.c	/^struct ring_buffer_per_cpu {$/;"	s	file:
ring_buffer_poll_wait	trace/ring_buffer.c	/^__poll_t ring_buffer_poll_wait(struct ring_buffer *buffer, int cpu,$/;"	f
ring_buffer_print_entry_header	trace/ring_buffer.c	/^int ring_buffer_print_entry_header(struct trace_seq *s)$/;"	f
ring_buffer_print_page_header	trace/ring_buffer.c	/^int ring_buffer_print_page_header(struct trace_seq *s)$/;"	f
ring_buffer_producer	trace/ring_buffer_benchmark.c	/^static void ring_buffer_producer(void)$/;"	f	file:
ring_buffer_producer_thread	trace/ring_buffer_benchmark.c	/^static int ring_buffer_producer_thread(void *arg)$/;"	f	file:
ring_buffer_put	events/core.c	/^void ring_buffer_put(struct ring_buffer *rb)$/;"	f
ring_buffer_read	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read);$/;"	v
ring_buffer_read	trace/ring_buffer.c	/^ring_buffer_read(struct ring_buffer_iter *iter, u64 *ts)$/;"	f
ring_buffer_read_events_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_events_cpu);$/;"	v
ring_buffer_read_events_cpu	trace/ring_buffer.c	/^ring_buffer_read_events_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_read_finish	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_finish);$/;"	v
ring_buffer_read_finish	trace/ring_buffer.c	/^ring_buffer_read_finish(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_page);$/;"	v
ring_buffer_read_page	trace/ring_buffer.c	/^int ring_buffer_read_page(struct ring_buffer *buffer,$/;"	f
ring_buffer_read_prepare	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_prepare);$/;"	v
ring_buffer_read_prepare	trace/ring_buffer.c	/^ring_buffer_read_prepare(struct ring_buffer *buffer, int cpu, gfp_t flags)$/;"	f
ring_buffer_read_prepare_sync	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_prepare_sync);$/;"	v
ring_buffer_read_prepare_sync	trace/ring_buffer.c	/^ring_buffer_read_prepare_sync(void)$/;"	f
ring_buffer_read_start	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_start);$/;"	v
ring_buffer_read_start	trace/ring_buffer.c	/^ring_buffer_read_start(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_record_disable	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_disable);$/;"	v
ring_buffer_record_disable	trace/ring_buffer.c	/^void ring_buffer_record_disable(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_disable_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_disable_cpu);$/;"	v
ring_buffer_record_disable_cpu	trace/ring_buffer.c	/^void ring_buffer_record_disable_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_record_enable	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_enable);$/;"	v
ring_buffer_record_enable	trace/ring_buffer.c	/^void ring_buffer_record_enable(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_enable_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_enable_cpu);$/;"	v
ring_buffer_record_enable_cpu	trace/ring_buffer.c	/^void ring_buffer_record_enable_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_record_is_on	trace/ring_buffer.c	/^bool ring_buffer_record_is_on(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_is_set_on	trace/ring_buffer.c	/^bool ring_buffer_record_is_set_on(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_off	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_off);$/;"	v
ring_buffer_record_off	trace/ring_buffer.c	/^void ring_buffer_record_off(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_on	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_on);$/;"	v
ring_buffer_record_on	trace/ring_buffer.c	/^void ring_buffer_record_on(struct ring_buffer *buffer)$/;"	f
ring_buffer_reset	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_reset);$/;"	v
ring_buffer_reset	trace/ring_buffer.c	/^void ring_buffer_reset(struct ring_buffer *buffer)$/;"	f
ring_buffer_reset_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_reset_cpu);$/;"	v
ring_buffer_reset_cpu	trace/ring_buffer.c	/^void ring_buffer_reset_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_resize	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_resize);$/;"	v
ring_buffer_resize	trace/ring_buffer.c	/^int ring_buffer_resize(struct ring_buffer *buffer, unsigned long size,$/;"	f
ring_buffer_set_clock	trace/ring_buffer.c	/^void ring_buffer_set_clock(struct ring_buffer *buffer,$/;"	f
ring_buffer_set_time_stamp_abs	trace/ring_buffer.c	/^void ring_buffer_set_time_stamp_abs(struct ring_buffer *buffer, bool abs)$/;"	f
ring_buffer_size	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_size);$/;"	v
ring_buffer_size	trace/ring_buffer.c	/^unsigned long ring_buffer_size(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_swap_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_swap_cpu);$/;"	v
ring_buffer_swap_cpu	trace/ring_buffer.c	/^int ring_buffer_swap_cpu(struct ring_buffer *buffer_a,$/;"	f
ring_buffer_time_stamp	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_time_stamp);$/;"	v
ring_buffer_time_stamp	trace/ring_buffer.c	/^u64 ring_buffer_time_stamp(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_time_stamp_abs	trace/ring_buffer.c	/^bool ring_buffer_time_stamp_abs(struct ring_buffer *buffer)$/;"	f
ring_buffer_unlock_commit	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_unlock_commit);$/;"	v
ring_buffer_unlock_commit	trace/ring_buffer.c	/^int ring_buffer_unlock_commit(struct ring_buffer *buffer,$/;"	f
ring_buffer_wait	trace/ring_buffer.c	/^int ring_buffer_wait(struct ring_buffer *buffer, int cpu, int full)$/;"	f
ring_buffer_wakeup	events/core.c	/^static void ring_buffer_wakeup(struct perf_event *event)$/;"	f	file:
ring_buffer_write	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_write);$/;"	v
ring_buffer_write	trace/ring_buffer.c	/^int ring_buffer_write(struct ring_buffer *buffer,$/;"	f
rlim64_is_infinity	sys.c	/^static inline bool rlim64_is_infinity(__u64 rlim64)$/;"	f	file:
rlim64_to_rlim	sys.c	/^static void rlim64_to_rlim(const struct rlimit64 *rlim64, struct rlimit *rlim)$/;"	f	file:
rlim_to_rlim64	sys.c	/^static void rlim_to_rlim64(const struct rlimit *rlim, struct rlimit64 *rlim64)$/;"	f	file:
rm_ftrace_export	trace/trace.c	/^rm_ftrace_export(struct trace_export **list, struct trace_export *export)$/;"	f	file:
rm_trace_export	trace/trace.c	/^rm_trace_export(struct trace_export **list, struct trace_export *export)$/;"	f	file:
rmem_cma_device_init	dma/contiguous.c	/^static int rmem_cma_device_init(struct reserved_mem *rmem, struct device *dev)$/;"	f	file:
rmem_cma_device_release	dma/contiguous.c	/^static void rmem_cma_device_release(struct reserved_mem *rmem,$/;"	f	file:
rmem_cma_ops	dma/contiguous.c	/^static const struct reserved_mem_ops rmem_cma_ops = {$/;"	v	typeref:struct:reserved_mem_ops	file:
rmem_cma_setup	dma/contiguous.c	/^static int __init rmem_cma_setup(struct reserved_mem *rmem)$/;"	f	file:
rmem_dma_device_init	dma/coherent.c	/^static int rmem_dma_device_init(struct reserved_mem *rmem, struct device *dev)$/;"	f	file:
rmem_dma_device_release	dma/coherent.c	/^static void rmem_dma_device_release(struct reserved_mem *rmem,$/;"	f	file:
rmem_dma_ops	dma/coherent.c	/^static const struct reserved_mem_ops rmem_dma_ops = {$/;"	v	typeref:struct:reserved_mem_ops	file:
rmem_dma_setup	dma/coherent.c	/^static int __init rmem_dma_setup(struct reserved_mem *rmem)$/;"	f	file:
rollback	cpu.c	/^	bool			rollback;$/;"	m	struct:cpuhp_cpu_state	file:
root	audit_tree.c	/^	struct audit_chunk *root;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::audit_chunk	file:
root	bpf/local_storage.c	/^	struct rb_root root;$/;"	m	struct:bpf_cgroup_storage_map	typeref:struct:bpf_cgroup_storage_map::rb_root	file:
root	bpf/lpm_trie.c	/^	struct lpm_trie_node __rcu	*root;$/;"	m	struct:lpm_trie	typeref:struct:lpm_trie::__rcu	file:
root	cgroup/cgroup-internal.h	/^	struct cgroup_root	*root;$/;"	m	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_root
root	module.c	/^	struct latch_tree_root root;$/;"	m	struct:mod_tree_root	typeref:struct:mod_tree_root::latch_tree_root	file:
root	sched/sched.h	/^	struct rb_root_cached	root;$/;"	m	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached
root_cpuacct	sched/cpuacct.c	/^static struct cpuacct root_cpuacct = {$/;"	v	typeref:struct:cpuacct	file:
root_domain	sched/sched.h	/^struct root_domain {$/;"	s
root_irq_dir	irq/proc.c	/^static struct proc_dir_entry *root_irq_dir;$/;"	v	typeref:struct:proc_dir_entry	file:
root_node	gcov/fs.c	/^static struct gcov_node root_node;$/;"	v	typeref:struct:gcov_node	file:
root_swap	power/swap.c	/^static unsigned short root_swap = 0xffff;$/;"	v	file:
root_task_group	sched/core.c	/^struct task_group root_task_group;$/;"	v	typeref:struct:task_group
root_user	user.c	/^struct user_struct root_user = {$/;"	v	typeref:struct:user_struct
rootdir	power/energy_model.c	/^static struct dentry *rootdir;$/;"	v	typeref:struct:dentry	file:
rootid	audit.h	/^	kuid_t			rootid;$/;"	m	struct:audit_cap_data
rotate_ctx	events/core.c	/^static void rotate_ctx(struct perf_event_context *ctx, struct perf_event *event)$/;"	f	file:
round_jiffies	time/timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies);$/;"	v
round_jiffies	time/timer.c	/^unsigned long round_jiffies(unsigned long j)$/;"	f
round_jiffies_common	time/timer.c	/^static unsigned long round_jiffies_common(unsigned long j, int cpu,$/;"	f	file:
round_jiffies_relative	time/timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_relative);$/;"	v
round_jiffies_relative	time/timer.c	/^unsigned long round_jiffies_relative(unsigned long j)$/;"	f
round_jiffies_up	time/timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_up);$/;"	v
round_jiffies_up	time/timer.c	/^unsigned long round_jiffies_up(unsigned long j)$/;"	f
round_jiffies_up_relative	time/timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_up_relative);$/;"	v
round_jiffies_up_relative	time/timer.c	/^unsigned long round_jiffies_up_relative(unsigned long j)$/;"	f
rounding_up	debug/debug_core.h	/^	bool			rounding_up;$/;"	m	struct:debuggerinfo_struct
rp	test_kprobes.c	/^static struct kretprobe rp = {$/;"	v	typeref:struct:kretprobe	file:
rp	trace/trace_kprobe.c	/^	struct kretprobe	rp;	\/* Use rp.kp for kprobe use *\/$/;"	m	struct:trace_kprobe	typeref:struct:trace_kprobe::kretprobe	file:
rp2	test_kprobes.c	/^static struct kretprobe rp2 = {$/;"	v	typeref:struct:kretprobe	file:
rpm_idle	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_idle);$/;"	v
rpm_resume	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_resume);$/;"	v
rpm_return_int	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_return_int);$/;"	v
rpm_suspend	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_suspend);$/;"	v
rq	sched/sched.h	/^	struct rq		*rq;	\/* CPU runqueue to which this cfs_rq is attached *\/$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::rq
rq	sched/sched.h	/^	struct rq		*rq;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::rq
rq	sched/sched.h	/^struct rq {$/;"	s
rq_attach_root	sched/topology.c	/^void rq_attach_root(struct rq *rq, struct root_domain *rd)$/;"	f
rq_clock	sched/sched.h	/^static inline u64 rq_clock(struct rq *rq)$/;"	f
rq_clock_cancel_skipupdate	sched/sched.h	/^static inline void rq_clock_cancel_skipupdate(struct rq *rq)$/;"	f
rq_clock_pelt	sched/pelt.h	/^static inline u64 rq_clock_pelt(struct rq *rq)$/;"	f
rq_clock_skip_update	sched/sched.h	/^static inline void rq_clock_skip_update(struct rq *rq)$/;"	f
rq_clock_task	sched/sched.h	/^static inline u64 rq_clock_task(struct rq *rq)$/;"	f
rq_cpu_time	sched/sched.h	/^	unsigned long long	rq_cpu_time;$/;"	m	struct:rq
rq_flags	sched/sched.h	/^struct rq_flags {$/;"	s
rq_of	sched/sched.h	/^static inline struct rq *rq_of(struct cfs_rq *cfs_rq)$/;"	f
rq_of_dl_rq	sched/deadline.c	/^static inline struct rq *rq_of_dl_rq(struct dl_rq *dl_rq)$/;"	f	file:
rq_of_rt_rq	sched/rt.c	/^static inline struct rq *rq_of_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
rq_of_rt_se	sched/rt.c	/^static inline struct rq *rq_of_rt_se(struct sched_rt_entity *rt_se)$/;"	f	file:
rq_offline	sched/sched.h	/^	void (*rq_offline)(struct rq *rq);$/;"	m	struct:sched_class
rq_offline_dl	sched/deadline.c	/^static void rq_offline_dl(struct rq *rq)$/;"	f	file:
rq_offline_fair	sched/fair.c	/^static void rq_offline_fair(struct rq *rq)$/;"	f	file:
rq_offline_rt	sched/rt.c	/^static void rq_offline_rt(struct rq *rq)$/;"	f	file:
rq_online	sched/sched.h	/^	void (*rq_online)(struct rq *rq);$/;"	m	struct:sched_class
rq_online_dl	sched/deadline.c	/^static void rq_online_dl(struct rq *rq)$/;"	f	file:
rq_online_fair	sched/fair.c	/^static void rq_online_fair(struct rq *rq)$/;"	f	file:
rq_online_rt	sched/rt.c	/^static void rq_online_rt(struct rq *rq)$/;"	f	file:
rq_pin_lock	sched/sched.h	/^static inline void rq_pin_lock(struct rq *rq, struct rq_flags *rf)$/;"	f
rq_repin_lock	sched/sched.h	/^static inline void rq_repin_lock(struct rq *rq, struct rq_flags *rf)$/;"	f
rq_sched_info	sched/sched.h	/^	struct sched_info	rq_sched_info;$/;"	m	struct:rq	typeref:struct:rq::sched_info
rq_sched_info_arrive	sched/stats.h	/^rq_sched_info_arrive(struct rq *rq, unsigned long long delta)$/;"	f
rq_sched_info_arrive	sched/stats.h	/^static inline void rq_sched_info_arrive  (struct rq *rq, unsigned long long delta) { }$/;"	f
rq_sched_info_depart	sched/stats.h	/^rq_sched_info_depart(struct rq *rq, unsigned long long delta)$/;"	f
rq_sched_info_depart	sched/stats.h	/^static inline void rq_sched_info_depart  (struct rq *rq, unsigned long long delta) { }$/;"	f
rq_sched_info_dequeued	sched/stats.h	/^rq_sched_info_dequeued(struct rq *rq, unsigned long long delta)$/;"	f
rq_sched_info_dequeued	sched/stats.h	/^static inline void rq_sched_info_dequeued(struct rq *rq, unsigned long long delta) { }$/;"	f
rq_unpin_lock	sched/sched.h	/^static inline void rq_unpin_lock(struct rq *rq, struct rq_flags *rf)$/;"	f
rr_nr_running	sched/sched.h	/^	unsigned int		rr_nr_running;$/;"	m	struct:rt_rq
rs	printk/printk.c	/^	struct ratelimit_state rs;$/;"	m	struct:devkmsg_user	typeref:struct:devkmsg_user::ratelimit_state	file:
rseq	sys_ni.c	/^COND_SYSCALL(rseq);$/;"	v
rseq_get_rseq_cs	rseq.c	/^static int rseq_get_rseq_cs(struct task_struct *t, struct rseq_cs *rseq_cs)$/;"	f	file:
rseq_ip_fixup	rseq.c	/^static int rseq_ip_fixup(struct pt_regs *regs)$/;"	f	file:
rseq_need_restart	rseq.c	/^static int rseq_need_restart(struct task_struct *t, u32 cs_flags)$/;"	f	file:
rseq_reset_rseq_cpu_id	rseq.c	/^static int rseq_reset_rseq_cpu_id(struct task_struct *t)$/;"	f	file:
rseq_syscall	rseq.c	/^void rseq_syscall(struct pt_regs *regs)$/;"	f
rseq_update_cpu_id	rseq.c	/^static int rseq_update_cpu_id(struct task_struct *t)$/;"	f	file:
rshift	trace/trace_probe.h	/^			unsigned char rshift;$/;"	m	struct:fetch_insn::__anon21::__anon23
rss_lock	rcu/sync.c	15;"	d	file:
rt	sched/sched.h	/^	struct rt_rq		rt;$/;"	m	struct:rq	typeref:struct:rq::rt_rq
rt_bandwidth	sched/sched.h	/^	struct rt_bandwidth	rt_bandwidth;$/;"	m	struct:task_group	typeref:struct:task_group::rt_bandwidth
rt_bandwidth	sched/sched.h	/^struct rt_bandwidth {$/;"	s
rt_bandwidth_enabled	sched/sched.h	/^static inline int rt_bandwidth_enabled(void)$/;"	f
rt_clear_overload	sched/rt.c	/^static inline void rt_clear_overload(struct rq *rq)$/;"	f	file:
rt_delay_jiffies	rcu/rcutorture.c	/^	unsigned long rt_delay_jiffies;$/;"	m	struct:rt_read_seg	file:
rt_delay_ms	rcu/rcutorture.c	/^	unsigned long rt_delay_ms;$/;"	m	struct:rt_read_seg	file:
rt_delay_us	rcu/rcutorture.c	/^	unsigned long rt_delay_us;$/;"	m	struct:rt_read_seg	file:
rt_effective_prio	sched/core.c	/^static inline int rt_effective_prio(struct task_struct *p, int prio)$/;"	f	file:
rt_entity_is_task	sched/rt.c	110;"	d	file:
rt_entity_is_task	sched/rt.c	224;"	d	file:
rt_mutex_adjust_pi	locking/rtmutex.c	/^void rt_mutex_adjust_pi(struct task_struct *task)$/;"	f
rt_mutex_adjust_prio	locking/rtmutex.c	/^static void rt_mutex_adjust_prio(struct task_struct *p)$/;"	f	file:
rt_mutex_adjust_prio_chain	locking/rtmutex.c	/^static int rt_mutex_adjust_prio_chain(struct task_struct *task,$/;"	f	file:
rt_mutex_cleanup_proxy_lock	locking/rtmutex.c	/^bool rt_mutex_cleanup_proxy_lock(struct rt_mutex *lock,$/;"	f
rt_mutex_cmpxchg_acquire	locking/rtmutex.c	145;"	d	file:
rt_mutex_cmpxchg_acquire	locking/rtmutex.c	206;"	d	file:
rt_mutex_cmpxchg_relaxed	locking/rtmutex.c	144;"	d	file:
rt_mutex_cmpxchg_relaxed	locking/rtmutex.c	205;"	d	file:
rt_mutex_cmpxchg_release	locking/rtmutex.c	146;"	d	file:
rt_mutex_cmpxchg_release	locking/rtmutex.c	207;"	d	file:
rt_mutex_cond_detect_deadlock	locking/rtmutex.c	/^static bool rt_mutex_cond_detect_deadlock(struct rt_mutex_waiter *waiter,$/;"	f	file:
rt_mutex_deadlock_check	locking/rtmutex.h	14;"	d
rt_mutex_debug_task_free	locking/rtmutex-debug.c	/^void rt_mutex_debug_task_free(struct task_struct *task)$/;"	f
rt_mutex_dequeue	locking/rtmutex.c	/^rt_mutex_dequeue(struct rt_mutex *lock, struct rt_mutex_waiter *waiter)$/;"	f	file:
rt_mutex_dequeue_pi	locking/rtmutex.c	/^rt_mutex_dequeue_pi(struct task_struct *task, struct rt_mutex_waiter *waiter)$/;"	f	file:
rt_mutex_destroy	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_destroy);$/;"	v
rt_mutex_destroy	locking/rtmutex.c	/^void rt_mutex_destroy(struct rt_mutex *lock)$/;"	f
rt_mutex_enqueue	locking/rtmutex.c	/^rt_mutex_enqueue(struct rt_mutex *lock, struct rt_mutex_waiter *waiter)$/;"	f	file:
rt_mutex_enqueue_pi	locking/rtmutex.c	/^rt_mutex_enqueue_pi(struct task_struct *task, struct rt_mutex_waiter *waiter)$/;"	f	file:
rt_mutex_fastlock	locking/rtmutex.c	/^rt_mutex_fastlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_fasttrylock	locking/rtmutex.c	/^rt_mutex_fasttrylock(struct rt_mutex *lock,$/;"	f	file:
rt_mutex_fastunlock	locking/rtmutex.c	/^rt_mutex_fastunlock(struct rt_mutex *lock,$/;"	f	file:
rt_mutex_futex_trylock	locking/rtmutex.c	/^int __sched rt_mutex_futex_trylock(struct rt_mutex *lock)$/;"	f
rt_mutex_futex_unlock	locking/rtmutex.c	/^void __sched rt_mutex_futex_unlock(struct rt_mutex *lock)$/;"	f
rt_mutex_handle_deadlock	locking/rtmutex.c	/^static void rt_mutex_handle_deadlock(int res, int detect_deadlock,$/;"	f	file:
rt_mutex_has_waiters	locking/rtmutex_common.h	/^static inline int rt_mutex_has_waiters(struct rt_mutex *lock)$/;"	f
rt_mutex_init_proxy_locked	locking/rtmutex.c	/^void rt_mutex_init_proxy_locked(struct rt_mutex *lock,$/;"	f
rt_mutex_init_task	fork.c	/^static void rt_mutex_init_task(struct task_struct *p)$/;"	f	file:
rt_mutex_init_waiter	locking/rtmutex.c	/^void rt_mutex_init_waiter(struct rt_mutex_waiter *waiter)$/;"	f
rt_mutex_lock	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_lock);$/;"	v
rt_mutex_lock	locking/rtmutex.c	/^void __sched rt_mutex_lock(struct rt_mutex *lock)$/;"	f
rt_mutex_lock_interruptible	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_lock_interruptible);$/;"	v
rt_mutex_lock_interruptible	locking/rtmutex.c	/^int __sched rt_mutex_lock_interruptible(struct rt_mutex *lock)$/;"	f
rt_mutex_lock_nested	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_lock_nested);$/;"	v
rt_mutex_lock_nested	locking/rtmutex.c	/^void __sched rt_mutex_lock_nested(struct rt_mutex *lock, unsigned int subclass)$/;"	f
rt_mutex_next_owner	locking/rtmutex.c	/^struct task_struct *rt_mutex_next_owner(struct rt_mutex *lock)$/;"	f
rt_mutex_owner	locking/rtmutex_common.h	/^static inline struct task_struct *rt_mutex_owner(struct rt_mutex *lock)$/;"	f
rt_mutex_postunlock	locking/rtmutex.c	/^void rt_mutex_postunlock(struct wake_q_head *wake_q)$/;"	f
rt_mutex_print_deadlock	locking/rtmutex-debug.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	f
rt_mutex_print_deadlock	locking/rtmutex.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	f
rt_mutex_proxy_unlock	locking/rtmutex.c	/^void rt_mutex_proxy_unlock(struct rt_mutex *lock,$/;"	f
rt_mutex_set_owner	locking/rtmutex.c	/^rt_mutex_set_owner(struct rt_mutex *lock, struct task_struct *owner)$/;"	f	file:
rt_mutex_setprio	sched/core.c	/^void rt_mutex_setprio(struct task_struct *p, struct task_struct *pi_task)$/;"	f
rt_mutex_slowlock	locking/rtmutex.c	/^rt_mutex_slowlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_slowtrylock	locking/rtmutex.c	/^static inline int rt_mutex_slowtrylock(struct rt_mutex *lock)$/;"	f	file:
rt_mutex_slowunlock	locking/rtmutex.c	/^static bool __sched rt_mutex_slowunlock(struct rt_mutex *lock,$/;"	f	file:
rt_mutex_start_proxy_lock	locking/rtmutex.c	/^int rt_mutex_start_proxy_lock(struct rt_mutex *lock,$/;"	f
rt_mutex_timed_fastlock	locking/rtmutex.c	/^rt_mutex_timed_fastlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_timed_lock	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_timed_lock);$/;"	v
rt_mutex_timed_lock	locking/rtmutex.c	/^rt_mutex_timed_lock(struct rt_mutex *lock, struct hrtimer_sleeper *timeout)$/;"	f
rt_mutex_top_waiter	locking/rtmutex_common.h	/^rt_mutex_top_waiter(struct rt_mutex *lock)$/;"	f
rt_mutex_trylock	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_trylock);$/;"	v
rt_mutex_trylock	locking/rtmutex.c	/^int __sched rt_mutex_trylock(struct rt_mutex *lock)$/;"	f
rt_mutex_unlock	locking/rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_unlock);$/;"	v
rt_mutex_unlock	locking/rtmutex.c	/^void __sched rt_mutex_unlock(struct rt_mutex *lock)$/;"	f
rt_mutex_wait_proxy_lock	locking/rtmutex.c	/^int rt_mutex_wait_proxy_lock(struct rt_mutex *lock,$/;"	f
rt_mutex_waiter	locking/rtmutex_common.h	/^struct rt_mutex_waiter {$/;"	s
rt_mutex_waiter_equal	locking/rtmutex.c	/^rt_mutex_waiter_equal(struct rt_mutex_waiter *left,$/;"	f	file:
rt_mutex_waiter_less	locking/rtmutex.c	/^rt_mutex_waiter_less(struct rt_mutex_waiter *left,$/;"	f	file:
rt_nr_boosted	sched/sched.h	/^	unsigned long		rt_nr_boosted;$/;"	m	struct:rt_rq
rt_nr_migratory	sched/sched.h	/^	unsigned long		rt_nr_migratory;$/;"	m	struct:rt_rq
rt_nr_running	sched/sched.h	/^	unsigned int		rt_nr_running;$/;"	m	struct:rt_rq
rt_nr_total	sched/sched.h	/^	unsigned long		rt_nr_total;$/;"	m	struct:rt_rq
rt_overloaded	sched/rt.c	/^static inline int rt_overloaded(struct rq *rq)$/;"	f	file:
rt_period	sched/rt.c	/^	u64 rt_period;$/;"	m	struct:rt_schedulable_data	file:
rt_period	sched/sched.h	/^	ktime_t			rt_period;$/;"	m	struct:rt_bandwidth
rt_period_active	sched/sched.h	/^	unsigned int		rt_period_active;$/;"	m	struct:rt_bandwidth
rt_period_timer	sched/sched.h	/^	struct hrtimer		rt_period_timer;$/;"	m	struct:rt_bandwidth	typeref:struct:rt_bandwidth::hrtimer
rt_policy	sched/sched.h	/^static inline int rt_policy(int policy)$/;"	f
rt_preempted	rcu/rcutorture.c	/^	bool rt_preempted;$/;"	m	struct:rt_read_seg	file:
rt_prio_array	sched/sched.h	/^struct rt_prio_array {$/;"	s
rt_priority	trace/trace.h	/^	unsigned long		rt_priority;$/;"	m	struct:trace_array_cpu
rt_queue_pull_task	sched/rt.c	/^static inline void rt_queue_pull_task(struct rq *rq)$/;"	f	file:
rt_queue_push_tasks	sched/rt.c	/^static inline void rt_queue_push_tasks(struct rq *rq)$/;"	f	file:
rt_queued	sched/sched.h	/^	int			rt_queued;$/;"	m	struct:rt_rq
rt_read_nsegs	rcu/rcutorture.c	/^static int rt_read_nsegs;$/;"	v	file:
rt_read_seg	rcu/rcutorture.c	/^struct rt_read_seg {$/;"	s	file:
rt_readstate	rcu/rcutorture.c	/^	int rt_readstate;$/;"	m	struct:rt_read_seg	file:
rt_rq	sched/sched.h	/^	struct rt_rq		**rt_rq;$/;"	m	struct:task_group	typeref:struct:task_group::rt_rq
rt_rq	sched/sched.h	/^struct rt_rq {$/;"	s
rt_rq_is_runnable	sched/sched.h	/^static inline bool rt_rq_is_runnable(struct rt_rq *rt_rq)$/;"	f
rt_rq_iter_t	sched/rt.c	/^typedef struct rt_rq *rt_rq_iter_t;$/;"	t	typeref:struct:rt_rq	file:
rt_rq_iter_t	sched/rt.c	/^typedef struct task_group *rt_rq_iter_t;$/;"	t	typeref:struct:task_group	file:
rt_rq_of_se	sched/rt.c	/^static inline struct rt_rq *rt_rq_of_se(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_rq_throttled	sched/rt.c	/^static inline int rt_rq_throttled(struct rt_rq *rt_rq)$/;"	f	file:
rt_runtime	sched/rt.c	/^	u64 rt_runtime;$/;"	m	struct:rt_schedulable_data	file:
rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	m	struct:rt_bandwidth
rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	m	struct:rt_rq
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	m	struct:rt_bandwidth
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	m	struct:rt_rq
rt_sched_class	sched/rt.c	/^const struct sched_class rt_sched_class = {$/;"	v	typeref:struct:sched_class
rt_schedulable_data	sched/rt.c	/^struct rt_schedulable_data {$/;"	s	file:
rt_se	sched/sched.h	/^	struct sched_rt_entity	**rt_se;$/;"	m	struct:task_group	typeref:struct:task_group::sched_rt_entity
rt_se_boosted	sched/rt.c	/^static int rt_se_boosted(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_se_nr_running	sched/rt.c	/^unsigned int rt_se_nr_running(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_se_prio	sched/rt.c	/^static inline int rt_se_prio(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_se_rr_nr_running	sched/rt.c	/^unsigned int rt_se_rr_nr_running(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_set_overload	sched/rt.c	/^static inline void rt_set_overload(struct rq *rq)$/;"	f	file:
rt_task_of	sched/rt.c	/^static inline struct task_struct *rt_task_of(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_throttled	sched/sched.h	/^	int			rt_throttled;$/;"	m	struct:rt_rq
rt_time	sched/sched.h	/^	u64			rt_time;$/;"	m	struct:rt_rq
rt_waiter	futex.c	/^	struct rt_mutex_waiter *rt_waiter;$/;"	m	struct:futex_q	typeref:struct:futex_q::rt_mutex_waiter	file:
rtas	sys_ni.c	/^COND_SYSCALL(rtas);$/;"	v
rtcdev	time/alarmtimer.c	/^static struct rtc_device	*rtcdev;$/;"	v	typeref:struct:rtc_device	file:
rtcdev	time/alarmtimer.c	145;"	d	file:
rtctimer	time/alarmtimer.c	/^static struct rtc_timer		rtctimer;$/;"	v	typeref:struct:rtc_timer	file:
rtmutex_chainwalk	locking/rtmutex_common.h	/^enum rtmutex_chainwalk {$/;"	g
rtmutex_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops rtmutex_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
rto_count	sched/sched.h	/^	atomic_t		rto_count;$/;"	m	struct:root_domain
rto_cpu	sched/sched.h	/^	int			rto_cpu;$/;"	m	struct:root_domain
rto_lock	sched/sched.h	/^	raw_spinlock_t		rto_lock;$/;"	m	struct:root_domain
rto_loop	sched/sched.h	/^	int			rto_loop;$/;"	m	struct:root_domain
rto_loop_next	sched/sched.h	/^	atomic_t		rto_loop_next;$/;"	m	struct:root_domain
rto_loop_start	sched/sched.h	/^	atomic_t		rto_loop_start;$/;"	m	struct:root_domain
rto_mask	sched/sched.h	/^	cpumask_var_t		rto_mask;$/;"	m	struct:root_domain
rto_next_cpu	sched/rt.c	/^static int rto_next_cpu(struct root_domain *rd)$/;"	f	file:
rto_push_irq_work_func	sched/rt.c	/^void rto_push_irq_work_func(struct irq_work *work)$/;"	f
rto_push_work	sched/sched.h	/^	struct irq_work		rto_push_work;$/;"	m	struct:root_domain	typeref:struct:root_domain::irq_work
rto_start_trylock	sched/rt.c	/^static inline bool rto_start_trylock(atomic_t *v)$/;"	f	file:
rto_start_unlock	sched/rt.c	/^static inline void rto_start_unlock(atomic_t *v)$/;"	f	file:
rtort_free	rcu/rcutorture.c	/^	struct list_head rtort_free;$/;"	m	struct:rcu_torture	typeref:struct:rcu_torture::list_head	file:
rtort_mbtest	rcu/rcutorture.c	/^	int rtort_mbtest;$/;"	m	struct:rcu_torture	file:
rtort_pipe_count	rcu/rcutorture.c	/^	int rtort_pipe_count;$/;"	m	struct:rcu_torture	file:
rtort_rcu	rcu/rcutorture.c	/^	struct rcu_head rtort_rcu;$/;"	m	struct:rcu_torture	typeref:struct:rcu_torture::rcu_head	file:
rtree	power/snapshot.c	/^	struct rtree_node *rtree;	\/* Radix Tree Root             *\/$/;"	m	struct:mem_zone_bm_rtree	typeref:struct:mem_zone_bm_rtree::rtree_node	file:
rtree_next_node	power/snapshot.c	/^static bool rtree_next_node(struct memory_bitmap *bm)$/;"	f	file:
rtree_node	power/snapshot.c	/^struct rtree_node {$/;"	s	file:
rule	audit.h	/^	struct audit_krule	rule;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::audit_krule
rule	audit_fsnotify.c	/^	struct audit_krule *rule;$/;"	m	struct:audit_fsnotify_mark	typeref:struct:audit_fsnotify_mark::audit_krule	file:
rules	audit_tree.c	/^	struct list_head rules;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
rules	audit_watch.c	/^	struct list_head	rules;	\/* anchor for krule->rlist *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::list_head	file:
run_cmd	reboot.c	/^static int run_cmd(const char *cmd)$/;"	f	file:
run_ksoftirqd	softirq.c	/^static void run_ksoftirqd(unsigned int cpu)$/;"	f	file:
run_local_timers	time/timer.c	/^void run_local_timers(void)$/;"	f
run_posix_cpu_timers	time/posix-cpu-timers.c	/^void run_posix_cpu_timers(struct task_struct *tsk)$/;"	f
run_rebalance_domains	sched/fair.c	/^static __latent_entropy void run_rebalance_domains(struct softirq_action *h)$/;"	f	file:
run_threads	power/swap.c	/^	unsigned run_threads;                     \/* nr current threads *\/$/;"	m	struct:crc_data	file:
run_timer_softirq	time/timer.c	/^static __latent_entropy void run_timer_softirq(struct softirq_action *h)$/;"	f	file:
run_tracer_selftest	trace/trace.c	/^static inline int run_tracer_selftest(struct tracer *type)$/;"	f	file:
run_tracer_selftest	trace/trace.c	/^static int run_tracer_selftest(struct tracer *type)$/;"	f	file:
runnable_sum	sched/sched.h	/^		unsigned long	runnable_sum;$/;"	m	struct:cfs_rq::__anon83
runnable_weight	sched/sched.h	/^	unsigned long		runnable_weight;$/;"	m	struct:cfs_rq
running_bw	sched/sched.h	/^	u64			running_bw;$/;"	m	struct:dl_rq
running_clock	sched/clock.c	/^u64 __weak running_clock(void)$/;"	f
running_helpers	umh.c	/^static atomic_t running_helpers = ATOMIC_INIT(0);$/;"	v	file:
running_timer	time/timer.c	/^	struct timer_list	*running_timer;$/;"	m	struct:timer_base	typeref:struct:timer_base::timer_list	file:
runtime	sched/sched.h	/^	u64			runtime;$/;"	m	struct:cfs_bandwidth
runtime_enabled	sched/sched.h	/^	int			runtime_enabled;$/;"	m	struct:cfs_rq
runtime_expires	sched/sched.h	/^	u64			runtime_expires;$/;"	m	struct:cfs_bandwidth
runtime_expires	sched/sched.h	/^	u64			runtime_expires;$/;"	m	struct:cfs_rq
runtime_refresh_within	sched/fair.c	/^static int runtime_refresh_within(struct cfs_bandwidth *cfs_b, u64 min_expire)$/;"	f	file:
runtime_remaining	sched/sched.h	/^	s64			runtime_remaining;$/;"	m	struct:cfs_rq
rw_lock_irq_ops	locking/locktorture.c	/^static struct lock_torture_ops rw_lock_irq_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
rw_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops rw_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
rwlock	trace/trace_uprobe.c	/^	rwlock_t		rwlock;$/;"	m	struct:trace_uprobe_filter	file:
rwlock_bug	locking/spinlock_debug.c	/^static void rwlock_bug(rwlock_t *lock, const char *msg)$/;"	f	file:
rwsem_can_spin_on_owner	locking/rwsem.c	/^static inline bool rwsem_can_spin_on_owner(struct rw_semaphore *sem,$/;"	f	file:
rwsem_clear_owner	locking/rwsem.c	/^static inline void rwsem_clear_owner(struct rw_semaphore *sem)$/;"	f	file:
rwsem_clear_reader_owned	locking/rwsem.c	/^static inline void rwsem_clear_reader_owned(struct rw_semaphore *sem)$/;"	f	file:
rwsem_disable_reader_optspin	locking/rwsem.c	/^static inline void rwsem_disable_reader_optspin(struct rw_semaphore *sem,$/;"	f	file:
rwsem_down_read_slowpath	locking/rwsem.c	/^rwsem_down_read_slowpath(struct rw_semaphore *sem, int state)$/;"	f	file:
rwsem_down_write_slowpath	locking/rwsem.c	/^rwsem_down_write_slowpath(struct rw_semaphore *sem, int state)$/;"	f	file:
rwsem_downgrade_wake	locking/rwsem.c	/^static struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *sem)$/;"	f	file:
rwsem_first_waiter	locking/rwsem.c	355;"	d	file:
rwsem_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops rwsem_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
rwsem_mark_wake	locking/rwsem.c	/^static void rwsem_mark_wake(struct rw_semaphore *sem,$/;"	f	file:
rwsem_optimistic_spin	locking/rwsem.c	/^static bool rwsem_optimistic_spin(struct rw_semaphore *sem, bool wlock)$/;"	f	file:
rwsem_optimistic_spin	locking/rwsem.c	/^static inline bool rwsem_optimistic_spin(struct rw_semaphore *sem, bool wlock)$/;"	f	file:
rwsem_owner	locking/rwsem.c	/^static inline struct task_struct *rwsem_owner(struct rw_semaphore *sem)$/;"	f	file:
rwsem_owner_flags	locking/rwsem.c	/^rwsem_owner_flags(struct rw_semaphore *sem, unsigned long *pflags)$/;"	f	file:
rwsem_owner_state	locking/rwsem.c	/^rwsem_owner_state(struct task_struct *owner, unsigned long flags, unsigned long nonspinnable)$/;"	f	file:
rwsem_read_trylock	locking/rwsem.c	/^static inline bool rwsem_read_trylock(struct rw_semaphore *sem)$/;"	f	file:
rwsem_reader_phase_trylock	locking/rwsem.c	/^static inline bool rwsem_reader_phase_trylock(struct rw_semaphore *sem,$/;"	f	file:
rwsem_rspin_threshold	locking/rwsem.c	/^static inline u64 rwsem_rspin_threshold(struct rw_semaphore *sem)$/;"	f	file:
rwsem_set_nonspinnable	locking/rwsem.c	/^static inline void rwsem_set_nonspinnable(struct rw_semaphore *sem)$/;"	f	file:
rwsem_set_owner	locking/rwsem.c	/^static inline void rwsem_set_owner(struct rw_semaphore *sem)$/;"	f	file:
rwsem_set_reader_owned	locking/rwsem.c	/^static inline void rwsem_set_reader_owned(struct rw_semaphore *sem)$/;"	f	file:
rwsem_spin_on_owner	locking/rwsem.c	/^rwsem_spin_on_owner(struct rw_semaphore *sem, unsigned long nonspinnable)$/;"	f	file:
rwsem_test_oflags	locking/rwsem.c	/^static inline bool rwsem_test_oflags(struct rw_semaphore *sem, long flags)$/;"	f	file:
rwsem_try_read_lock_unqueued	locking/rwsem.c	/^static inline bool rwsem_try_read_lock_unqueued(struct rw_semaphore *sem)$/;"	f	file:
rwsem_try_write_lock	locking/rwsem.c	/^static inline bool rwsem_try_write_lock(struct rw_semaphore *sem,$/;"	f	file:
rwsem_try_write_lock_unqueued	locking/rwsem.c	/^static inline bool rwsem_try_write_lock_unqueued(struct rw_semaphore *sem)$/;"	f	file:
rwsem_waiter	locking/rwsem.c	/^struct rwsem_waiter {$/;"	s	file:
rwsem_waiter_type	locking/rwsem.c	/^enum rwsem_waiter_type {$/;"	g	file:
rwsem_wake	locking/rwsem.c	/^static struct rw_semaphore *rwsem_wake(struct rw_semaphore *sem, long count)$/;"	f	file:
rwsem_wake_type	locking/rwsem.c	/^enum rwsem_wake_type {$/;"	g	file:
s	rcu/tree.h	/^	u16 s; \/* Set of bits, aggregate OR here. *\/$/;"	m	union:rcu_noqs
s16	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s16);$/;"	v
s16	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(s16);$/;"	v
s16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s16);$/;"	v
s16	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(s16);$/;"	v
s2idle_begin	power/suspend.c	/^static void s2idle_begin(void)$/;"	f	file:
s2idle_enter	power/suspend.c	/^static void s2idle_enter(void)$/;"	f	file:
s2idle_loop	power/suspend.c	/^static void s2idle_loop(void)$/;"	f	file:
s2idle_ops	power/suspend.c	/^static const struct platform_s2idle_ops *s2idle_ops;$/;"	v	typeref:struct:platform_s2idle_ops	file:
s2idle_set_ops	power/suspend.c	/^void s2idle_set_ops(const struct platform_s2idle_ops *ops)$/;"	f
s2idle_state	power/suspend.c	/^enum s2idle_states __read_mostly s2idle_state;$/;"	v	typeref:enum:__read_mostly
s2idle_wake	power/suspend.c	/^EXPORT_SYMBOL_GPL(s2idle_wake);$/;"	v
s2idle_wake	power/suspend.c	/^void s2idle_wake(void)$/;"	f
s32	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s32);$/;"	v
s32	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(s32);$/;"	v
s32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s32);$/;"	v
s32	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(s32);$/;"	v
s390_ipc	sys_ni.c	/^COND_SYSCALL(s390_ipc);$/;"	v
s390_ipc	sys_ni.c	/^COND_SYSCALL_COMPAT(s390_ipc);$/;"	v
s390_pci_mmio_read	sys_ni.c	/^COND_SYSCALL(s390_pci_mmio_read);$/;"	v
s390_pci_mmio_write	sys_ni.c	/^COND_SYSCALL(s390_pci_mmio_write);$/;"	v
s64	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s64);$/;"	v
s64	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(s64);$/;"	v
s64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s64);$/;"	v
s64	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(s64);$/;"	v
s8	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s8);$/;"	v
s8	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(s8);$/;"	v
s8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s8);$/;"	v
s8	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(s8);$/;"	v
s_alloc	sched/topology.c	/^enum s_alloc {$/;"	g	file:
s_data	sched/topology.c	/^struct s_data {$/;"	s	file:
s_next	kallsyms.c	/^static void *s_next(struct seq_file *m, void *p, loff_t *pos)$/;"	f	file:
s_next	trace/trace.c	/^static void *s_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
s_next	trace/trace_events.c	/^s_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
s_show	kallsyms.c	/^static int s_show(struct seq_file *m, void *p)$/;"	f	file:
s_show	trace/trace.c	/^static int s_show(struct seq_file *m, void *v)$/;"	f	file:
s_start	kallsyms.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_start	trace/trace.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_start	trace/trace_events.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_stop	kallsyms.c	/^static void s_stop(struct seq_file *m, void *p)$/;"	f	file:
s_stop	trace/trace.c	/^static void s_stop(struct seq_file *m, void *p)$/;"	f	file:
sa_none	sched/topology.c	/^	sa_none,$/;"	e	enum:s_alloc	file:
sa_rootdomain	sched/topology.c	/^	sa_rootdomain,$/;"	e	enum:s_alloc	file:
sa_sd	sched/topology.c	/^	sa_sd,$/;"	e	enum:s_alloc	file:
sa_sd_storage	sched/topology.c	/^	sa_sd_storage,$/;"	e	enum:s_alloc	file:
safe_copy_page	power/snapshot.c	/^static void safe_copy_page(void *dst, struct page *s_page)$/;"	f	file:
safe_highmem_bm	power/snapshot.c	/^static struct memory_bitmap *safe_highmem_bm;$/;"	v	typeref:struct:memory_bitmap	file:
safe_highmem_pages	power/snapshot.c	/^static unsigned int safe_highmem_pages;$/;"	v	file:
safe_needed	power/snapshot.c	/^	int safe_needed;	\/* if set, only "safe" pages are allocated *\/$/;"	m	struct:chain_allocator	file:
safe_pages_list	power/snapshot.c	/^static struct linked_page *safe_pages_list;$/;"	v	typeref:struct:linked_page	file:
same_magic	module.c	/^static inline int same_magic(const char *amagic, const char *bmagic,$/;"	f	file:
same_root	audit_tree.c	/^	struct list_head same_root;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
sample_cputime_atomic	time/posix-cpu-timers.c	/^static inline void sample_cputime_atomic(struct task_cputime *times,$/;"	f	file:
sample_period	watchdog.c	/^static u64 __read_mostly sample_period;$/;"	v	file:
sample_width	trace/trace_hwlat.c	/^	u64	sample_width;		\/* active sampling portion of window *\/$/;"	m	struct:hwlat_data	file:
sample_window	trace/trace_hwlat.c	/^	u64	sample_window;		\/* total sampling window (on+off) *\/$/;"	m	struct:hwlat_data	file:
sanitize_dead_code	bpf/verifier.c	/^static void sanitize_dead_code(struct bpf_verifier_env *env)$/;"	f	file:
sanitize_event_name	trace/trace_kprobe.c	/^static inline void sanitize_event_name(char *name)$/;"	f	file:
sanitize_ptr_alu	bpf/verifier.c	/^static int sanitize_ptr_alu(struct bpf_verifier_env *env,$/;"	f	file:
sanitize_val_alu	bpf/verifier.c	/^static int sanitize_val_alu(struct bpf_verifier_env *env,$/;"	f	file:
sanity_check_segment_list	kexec_core.c	/^int sanity_check_segment_list(struct kimage *image)$/;"	f
save_comm	trace/trace_events_hist.c	/^static inline void save_comm(char *comm, struct task_struct *task)$/;"	f	file:
save_cpumask	trace/trace_hwlat.c	/^static struct cpumask save_cpumask;$/;"	v	typeref:struct:cpumask	file:
save_data	trace/trace_events_hist.c	/^			action_fn_t		save_data;$/;"	m	struct:action_data::__anon46::__anon48	file:
save_field_var	trace/trace_events_hist.c	/^static void save_field_var(struct hist_trigger_data *hist_data,$/;"	f	file:
save_flags	trace/trace_irqsoff.c	/^static int save_flags;$/;"	v	file:
save_flags	trace/trace_sched_wakeup.c	/^static int save_flags;$/;"	v	file:
save_ftrace_mod_rec	trace/ftrace.c	/^static void save_ftrace_mod_rec(struct ftrace_mod_map *mod_map,$/;"	f	file:
save_hist_vars	trace/trace_events_hist.c	/^static int save_hist_vars(struct hist_trigger_data *hist_data)$/;"	f	file:
save_image	power/swap.c	/^static int save_image(struct swap_map_handle *handle,$/;"	f	file:
save_image_lzo	power/swap.c	/^static int save_image_lzo(struct swap_map_handle *handle,$/;"	f	file:
save_info	gcov/fs.c	/^static void save_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
save_named_trigger	trace/trace_events_trigger.c	/^int save_named_trigger(const char *name, struct event_trigger_data *data)$/;"	f
save_register_state	bpf/verifier.c	/^static void save_register_state(struct bpf_func_state *state,$/;"	f	file:
save_selftest	trace/trace.c	/^static int save_selftest(struct tracer *type)$/;"	f	file:
save_stack_trace_regs	stacktrace.c	/^save_stack_trace_regs(struct pt_regs *regs, struct stack_trace *trace)$/;"	f
save_stack_trace_tsk	stacktrace.c	/^save_stack_trace_tsk(struct task_struct *tsk, struct stack_trace *trace)$/;"	f
save_trace	locking/lockdep.c	/^static int save_trace(struct lock_trace *trace)$/;"	f	file:
save_tracing_thresh	trace/trace_hwlat.c	/^static unsigned long save_tracing_thresh;$/;"	v	file:
save_track_data	trace/trace_events_hist.c	/^static void save_track_data(struct hist_trigger_data *hist_data,$/;"	f	file:
save_track_data_snapshot	trace/trace_events_hist.c	/^static void save_track_data_snapshot(struct hist_trigger_data *hist_data,$/;"	f	file:
save_track_data_vars	trace/trace_events_hist.c	/^static void save_track_data_vars(struct hist_trigger_data *hist_data,$/;"	f	file:
save_track_val	trace/trace_events_hist.c	/^static void save_track_val(struct hist_trigger_data *hist_data,$/;"	f	file:
save_vars	trace/trace_events_hist.c	/^	struct field_var		*save_vars[SYNTH_FIELDS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::field_var	file:
saveable_highmem_page	power/snapshot.c	/^static inline void *saveable_highmem_page(struct zone *z, unsigned long p)$/;"	f	file:
saveable_highmem_page	power/snapshot.c	/^static struct page *saveable_highmem_page(struct zone *zone, unsigned long pfn)$/;"	f	file:
saveable_page	power/snapshot.c	/^static struct page *saveable_page(struct zone *zone, unsigned long pfn)$/;"	f	file:
saved_cmdlines	trace/trace.c	/^	char *saved_cmdlines;$/;"	m	struct:saved_cmdlines_buffer	file:
saved_cmdlines_buffer	trace/trace.c	/^struct saved_cmdlines_buffer {$/;"	s	file:
saved_cmdlines_next	trace/trace.c	/^static void *saved_cmdlines_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
saved_cmdlines_show	trace/trace.c	/^static int saved_cmdlines_show(struct seq_file *m, void *v)$/;"	f	file:
saved_cmdlines_start	trace/trace.c	/^static void *saved_cmdlines_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
saved_cmdlines_stop	trace/trace.c	/^static void saved_cmdlines_stop(struct seq_file *m, void *v)$/;"	f	file:
saved_ftrace_func	trace/ftrace.c	/^static ftrace_func_t saved_ftrace_func;$/;"	v	file:
saved_idle_calls	sched/cpufreq_schedutil.c	/^	unsigned long		saved_idle_calls;$/;"	m	struct:sugov_cpu	file:
saved_latency	trace/trace.h	/^	unsigned long		saved_latency;$/;"	m	struct:trace_array_cpu
saved_max_active	workqueue.c	/^	int			saved_max_active; \/* WQ: saved pwq max_active *\/$/;"	m	struct:workqueue_struct	file:
saved_max_pfn	crash_dump.c	/^unsigned long saved_max_pfn;$/;"	v
saved_tgids_next	trace/trace.c	/^static void *saved_tgids_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
saved_tgids_show	trace/trace.c	/^static int saved_tgids_show(struct seq_file *m, void *v)$/;"	f	file:
saved_tgids_start	trace/trace.c	/^static void *saved_tgids_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
saved_tgids_stop	trace/trace.c	/^static void saved_tgids_stop(struct seq_file *m, void *v)$/;"	f	file:
savedcmd	trace/trace.c	/^static struct saved_cmdlines_buffer *savedcmd;$/;"	v	typeref:struct:saved_cmdlines_buffer	file:
scale64_check_overflow	time/timekeeping.c	/^static int scale64_check_overflow(u64 mult, u64 div, u64 *base)$/;"	f	file:
scale_irq_capacity	sched/sched.h	/^unsigned long scale_irq_capacity(unsigned long util, unsigned long irq, unsigned long max)$/;"	f
scale_load	sched/sched.h	120;"	d
scale_load	sched/sched.h	124;"	d
scale_load_down	sched/sched.h	121;"	d
scale_load_down	sched/sched.h	125;"	d
scale_rt_capacity	sched/fair.c	/^static unsigned long scale_rt_capacity(struct sched_domain *sd, int cpu)$/;"	f	file:
scale_stime	sched/cputime.c	/^static u64 scale_stime(u64 stime, u64 rtime, u64 total)$/;"	f	file:
sched_asym_cpucapacity	sched/topology.c	/^DEFINE_STATIC_KEY_FALSE(sched_asym_cpucapacity);$/;"	v
sched_asym_prefer	sched/sched.h	/^static inline bool sched_asym_prefer(int a, int b)$/;"	f
sched_attr_copy_to_user	sched/core.c	/^sched_attr_copy_to_user(struct sched_attr __user *uattr,$/;"	f	file:
sched_autogroup_create_attach	sched/autogroup.c	/^EXPORT_SYMBOL(sched_autogroup_create_attach);$/;"	v
sched_autogroup_create_attach	sched/autogroup.c	/^void sched_autogroup_create_attach(struct task_struct *p)$/;"	f
sched_autogroup_detach	sched/autogroup.c	/^EXPORT_SYMBOL(sched_autogroup_detach);$/;"	v
sched_autogroup_detach	sched/autogroup.c	/^void sched_autogroup_detach(struct task_struct *p)$/;"	f
sched_autogroup_exit	sched/autogroup.c	/^void sched_autogroup_exit(struct signal_struct *sig)$/;"	f
sched_autogroup_exit_task	sched/autogroup.c	/^void sched_autogroup_exit_task(struct task_struct *p)$/;"	f
sched_autogroup_fork	sched/autogroup.c	/^void sched_autogroup_fork(struct signal_struct *sig)$/;"	f
sched_can_stop_tick	sched/core.c	/^bool sched_can_stop_tick(struct rq *rq)$/;"	f
sched_cfs_bandwidth_slice	sched/fair.c	/^static inline u64 sched_cfs_bandwidth_slice(void)$/;"	f	file:
sched_cfs_period_timer	sched/fair.c	/^static enum hrtimer_restart sched_cfs_period_timer(struct hrtimer *timer)$/;"	f	file:
sched_cfs_slack_timer	sched/fair.c	/^static enum hrtimer_restart sched_cfs_slack_timer(struct hrtimer *timer)$/;"	f	file:
sched_change_group	sched/core.c	/^static void sched_change_group(struct task_struct *tsk, int type)$/;"	f	file:
sched_class	sched/sched.h	/^struct sched_class {$/;"	s
sched_class_highest	sched/sched.h	1767;"	d
sched_class_highest	sched/sched.h	1769;"	d
sched_clock	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock);$/;"	v
sched_clock	sched/clock.c	/^unsigned long long __weak sched_clock(void)$/;"	f
sched_clock	time/sched_clock.c	/^unsigned long long notrace sched_clock(void)$/;"	f
sched_clock_cpu	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock_cpu);$/;"	v
sched_clock_cpu	sched/clock.c	/^u64 sched_clock_cpu(int cpu)$/;"	f
sched_clock_data	sched/clock.c	/^struct sched_clock_data {$/;"	s	file:
sched_clock_idle_sleep_event	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock_idle_sleep_event);$/;"	v
sched_clock_idle_sleep_event	sched/clock.c	/^void sched_clock_idle_sleep_event(void)$/;"	f
sched_clock_idle_wakeup_event	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock_idle_wakeup_event);$/;"	v
sched_clock_idle_wakeup_event	sched/clock.c	/^void sched_clock_idle_wakeup_event(void)$/;"	f
sched_clock_init	sched/clock.c	/^void __init sched_clock_init(void)$/;"	f
sched_clock_init_late	sched/clock.c	/^late_initcall(sched_clock_init_late);$/;"	v
sched_clock_init_late	sched/clock.c	/^static int __init sched_clock_init_late(void)$/;"	f	file:
sched_clock_irqtime	sched/cputime.c	/^static int sched_clock_irqtime;$/;"	v	file:
sched_clock_irqtime	sched/cputime.c	89;"	d	file:
sched_clock_local	sched/clock.c	/^static u64 sched_clock_local(struct sched_clock_data *scd)$/;"	f	file:
sched_clock_mask	time/sched_clock.c	/^	u64 sched_clock_mask;$/;"	m	struct:clock_read_data	file:
sched_clock_ops	time/sched_clock.c	/^static struct syscore_ops sched_clock_ops = {$/;"	v	typeref:struct:syscore_ops	file:
sched_clock_poll	time/sched_clock.c	/^static enum hrtimer_restart sched_clock_poll(struct hrtimer *hrt)$/;"	f	file:
sched_clock_register	time/sched_clock.c	/^sched_clock_register(u64 (*read)(void), int bits, unsigned long rate)$/;"	f
sched_clock_remote	sched/clock.c	/^static u64 sched_clock_remote(struct sched_clock_data *scd)$/;"	f	file:
sched_clock_resume	time/sched_clock.c	/^void sched_clock_resume(void)$/;"	f
sched_clock_resume	time/timekeeping.h	/^static inline void sched_clock_resume(void) { }$/;"	f
sched_clock_stable	sched/clock.c	/^int sched_clock_stable(void)$/;"	f
sched_clock_stable	trace/ring_buffer.c	/^static inline bool sched_clock_stable(void)$/;"	f	file:
sched_clock_suspend	time/sched_clock.c	/^int sched_clock_suspend(void)$/;"	f
sched_clock_suspend	time/timekeeping.h	/^static inline int sched_clock_suspend(void) { return 0; }$/;"	f
sched_clock_syscore_init	time/sched_clock.c	/^device_initcall(sched_clock_syscore_init);$/;"	v
sched_clock_syscore_init	time/sched_clock.c	/^static int __init sched_clock_syscore_init(void)$/;"	f	file:
sched_clock_tick	sched/clock.c	/^void sched_clock_tick(void)$/;"	f
sched_clock_tick_stable	sched/clock.c	/^void sched_clock_tick_stable(void)$/;"	f
sched_clock_timer	time/sched_clock.c	/^static struct hrtimer sched_clock_timer;$/;"	v	typeref:struct:hrtimer	file:
sched_cmdline_ref	trace/trace_sched_switch.c	/^static int		sched_cmdline_ref;$/;"	v	file:
sched_copy_attr	sched/core.c	/^static int sched_copy_attr(struct sched_attr __user *uattr, struct sched_attr *attr)$/;"	f	file:
sched_count	sched/sched.h	/^	unsigned int		sched_count;$/;"	m	struct:rq
sched_cpu_activate	sched/core.c	/^int sched_cpu_activate(unsigned int cpu)$/;"	f
sched_cpu_deactivate	sched/core.c	/^int sched_cpu_deactivate(unsigned int cpu)$/;"	f
sched_cpu_dying	sched/core.c	/^int sched_cpu_dying(unsigned int cpu)$/;"	f
sched_cpu_starting	sched/core.c	/^int sched_cpu_starting(unsigned int cpu)$/;"	f
sched_cpufreq_governor_change	sched/cpufreq_schedutil.c	/^void sched_cpufreq_governor_change(struct cpufreq_policy *policy,$/;"	f
sched_create_group	sched/core.c	/^struct task_group *sched_create_group(struct task_group *parent)$/;"	f
sched_debug	sched/topology.c	/^static inline bool sched_debug(void)$/;"	f	file:
sched_debug_enabled	sched/debug.c	/^__read_mostly bool sched_debug_enabled;$/;"	v
sched_debug_enabled	sched/topology.c	140;"	d	file:
sched_debug_header	sched/debug.c	/^static void sched_debug_header(struct seq_file *m)$/;"	f	file:
sched_debug_next	sched/debug.c	/^static void *sched_debug_next(struct seq_file *file, void *data, loff_t *offset)$/;"	f	file:
sched_debug_setup	sched/topology.c	/^static int __init sched_debug_setup(char *str)$/;"	f	file:
sched_debug_show	sched/debug.c	/^static int sched_debug_show(struct seq_file *m, void *v)$/;"	f	file:
sched_debug_sops	sched/debug.c	/^static const struct seq_operations sched_debug_sops = {$/;"	v	typeref:struct:seq_operations	file:
sched_debug_start	sched/debug.c	/^static void *sched_debug_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
sched_debug_stop	sched/debug.c	/^static void sched_debug_stop(struct seq_file *file, void *data)$/;"	f	file:
sched_destroy_group	sched/core.c	/^void sched_destroy_group(struct task_group *tg)$/;"	f
sched_dl_do_global	sched/deadline.c	/^void sched_dl_do_global(void)$/;"	f
sched_dl_global_validate	sched/deadline.c	/^int sched_dl_global_validate(void)$/;"	f
sched_dl_overflow	sched/deadline.c	/^int sched_dl_overflow(struct task_struct *p, int policy,$/;"	f
sched_domain_debug	sched/topology.c	/^static void sched_domain_debug(struct sched_domain *sd, int cpu)$/;"	f	file:
sched_domain_debug	sched/topology.c	141;"	d	file:
sched_domain_debug_one	sched/topology.c	/^static int sched_domain_debug_one(struct sched_domain *sd, int cpu, int level,$/;"	f	file:
sched_domain_level_max	sched/topology.c	/^int sched_domain_level_max;$/;"	v
sched_domain_topology	sched/topology.c	/^static struct sched_domain_topology_level *sched_domain_topology =$/;"	v	typeref:struct:sched_domain_topology_level	file:
sched_domains_curr_level	sched/topology.c	/^static int			sched_domains_curr_level;$/;"	v	file:
sched_domains_mutex	sched/topology.c	/^DEFINE_MUTEX(sched_domains_mutex);$/;"	v
sched_domains_numa_distance	sched/topology.c	/^static int			*sched_domains_numa_distance;$/;"	v	file:
sched_domains_numa_levels	sched/topology.c	/^static int			sched_domains_numa_levels;$/;"	v	file:
sched_domains_numa_masks	sched/topology.c	/^static struct cpumask		***sched_domains_numa_masks;$/;"	v	typeref:struct:cpumask	file:
sched_domains_numa_masks_clear	sched/sched.h	/^static inline void sched_domains_numa_masks_clear(unsigned int cpu) { }$/;"	f
sched_domains_numa_masks_clear	sched/topology.c	/^void sched_domains_numa_masks_clear(unsigned int cpu)$/;"	f
sched_domains_numa_masks_set	sched/sched.h	/^static inline void sched_domains_numa_masks_set(unsigned int cpu) { }$/;"	f
sched_domains_numa_masks_set	sched/topology.c	/^void sched_domains_numa_masks_set(unsigned int cpu)$/;"	f
sched_domains_tmpmask	sched/topology.c	/^static cpumask_var_t sched_domains_tmpmask;$/;"	v	file:
sched_domains_tmpmask2	sched/topology.c	/^static cpumask_var_t sched_domains_tmpmask2;$/;"	v	file:
sched_energy_aware_handler	sched/topology.c	/^int sched_energy_aware_handler(struct ctl_table *table, int write,$/;"	f
sched_energy_enabled	sched/sched.h	/^static inline bool sched_energy_enabled(void) { return false; }$/;"	f
sched_energy_enabled	sched/sched.h	/^static inline bool sched_energy_enabled(void)$/;"	f
sched_energy_mutex	sched/topology.c	/^DEFINE_MUTEX(sched_energy_mutex);$/;"	v
sched_energy_present	sched/sched.h	/^DECLARE_STATIC_KEY_FALSE(sched_energy_present);$/;"	v
sched_energy_present	sched/topology.c	/^DEFINE_STATIC_KEY_FALSE(sched_energy_present);$/;"	v
sched_energy_set	sched/topology.c	/^static void sched_energy_set(bool has_eas)$/;"	f	file:
sched_energy_update	sched/topology.c	/^bool sched_energy_update;$/;"	v
sched_exec	sched/core.c	/^void sched_exec(void)$/;"	f
sched_feat	sched/sched.h	1567;"	d
sched_feat	sched/sched.h	1583;"	d
sched_feat_disable	sched/debug.c	/^static void sched_feat_disable(int i) { };$/;"	f	file:
sched_feat_disable	sched/debug.c	/^static void sched_feat_disable(int i)$/;"	f	file:
sched_feat_enable	sched/debug.c	/^static void sched_feat_enable(int i) { };$/;"	f	file:
sched_feat_enable	sched/debug.c	/^static void sched_feat_enable(int i)$/;"	f	file:
sched_feat_fops	sched/debug.c	/^static const struct file_operations sched_feat_fops = {$/;"	v	typeref:struct:file_operations	file:
sched_feat_keys	sched/debug.c	/^struct static_key sched_feat_keys[__SCHED_FEAT_NR] = {$/;"	v	typeref:struct:static_key
sched_feat_names	sched/debug.c	/^static const char * const sched_feat_names[] = {$/;"	v	file:
sched_feat_open	sched/debug.c	/^static int sched_feat_open(struct inode *inode, struct file *filp)$/;"	f	file:
sched_feat_set	sched/debug.c	/^static int sched_feat_set(char *cmp)$/;"	f	file:
sched_feat_show	sched/debug.c	/^static int sched_feat_show(struct seq_file *m, void *v)$/;"	f	file:
sched_feat_write	sched/debug.c	/^sched_feat_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
sched_fork	sched/core.c	/^int sched_fork(unsigned long clone_flags, struct task_struct *p)$/;"	f
sched_free_group	sched/core.c	/^static void sched_free_group(struct task_group *tg)$/;"	f	file:
sched_free_group_rcu	sched/core.c	/^static void sched_free_group_rcu(struct rcu_head *rhp)$/;"	f	file:
sched_get_rd	sched/topology.c	/^void sched_get_rd(struct root_domain *rd)$/;"	f
sched_getaffinity	sched/core.c	/^long sched_getaffinity(pid_t pid, struct cpumask *mask)$/;"	f
sched_goidle	sched/sched.h	/^	unsigned int		sched_goidle;$/;"	m	struct:rq
sched_group	sched/sched.h	/^struct sched_group {$/;"	s
sched_group_capacity	sched/sched.h	/^struct sched_group_capacity {$/;"	s
sched_group_rt_period	sched/rt.c	/^long sched_group_rt_period(struct task_group *tg)$/;"	f
sched_group_rt_runtime	sched/rt.c	/^long sched_group_rt_runtime(struct task_group *tg)$/;"	f
sched_group_set_rt_period	sched/rt.c	/^int sched_group_set_rt_period(struct task_group *tg, u64 rt_period_us)$/;"	f
sched_group_set_rt_runtime	sched/rt.c	/^int sched_group_set_rt_runtime(struct task_group *tg, long rt_runtime_us)$/;"	f
sched_group_set_shares	sched/fair.c	/^int sched_group_set_shares(struct task_group *tg, unsigned long shares)$/;"	f
sched_group_span	sched/sched.h	/^static inline struct cpumask *sched_group_span(struct sched_group *sg)$/;"	f
sched_idle_set_state	sched/idle.c	/^void sched_idle_set_state(struct cpuidle_state *idle_state)$/;"	f
sched_in_data	events/core.c	/^struct sched_in_data {$/;"	s	file:
sched_info_arrive	sched/stats.h	/^static void sched_info_arrive(struct rq *rq, struct task_struct *t)$/;"	f
sched_info_arrive	sched/stats.h	251;"	d
sched_info_depart	sched/stats.h	/^static inline void sched_info_depart(struct rq *rq, struct task_struct *t)$/;"	f
sched_info_depart	sched/stats.h	250;"	d
sched_info_dequeued	sched/stats.h	/^static inline void sched_info_dequeued(struct rq *rq, struct task_struct *t)$/;"	f
sched_info_dequeued	sched/stats.h	249;"	d
sched_info_queued	sched/stats.h	/^static inline void sched_info_queued(struct rq *rq, struct task_struct *t)$/;"	f
sched_info_queued	sched/stats.h	247;"	d
sched_info_reset_dequeued	sched/stats.h	/^static inline void sched_info_reset_dequeued(struct task_struct *t)$/;"	f
sched_info_reset_dequeued	sched/stats.h	248;"	d
sched_info_switch	sched/stats.h	/^sched_info_switch(struct rq *rq, struct task_struct *prev, struct task_struct *next)$/;"	f
sched_info_switch	sched/stats.h	252;"	d
sched_init	sched/core.c	/^void __init sched_init(void)$/;"	f
sched_init_debug	sched/debug.c	/^late_initcall(sched_init_debug);$/;"	v
sched_init_debug	sched/debug.c	/^static __init int sched_init_debug(void)$/;"	f	file:
sched_init_domains	sched/topology.c	/^int sched_init_domains(const struct cpumask *cpu_map)$/;"	f
sched_init_granularity	sched/fair.c	/^void sched_init_granularity(void)$/;"	f
sched_init_numa	sched/sched.h	/^static inline void sched_init_numa(void) { }$/;"	f
sched_init_numa	sched/topology.c	/^void sched_init_numa(void)$/;"	f
sched_init_smp	sched/core.c	/^void __init sched_init_smp(void)$/;"	f
sched_max_numa_distance	sched/topology.c	/^int				sched_max_numa_distance;$/;"	v
sched_move_task	sched/core.c	/^void sched_move_task(struct task_struct *tsk)$/;"	f
sched_nr_latency	sched/fair.c	/^static unsigned int sched_nr_latency = 8;$/;"	v	file:
sched_nr_migrate_break	sched/fair.c	/^static const unsigned int sched_nr_migrate_break = 32;$/;"	v	file:
sched_numa_balancing	sched/core.c	/^DEFINE_STATIC_KEY_FALSE(sched_numa_balancing);$/;"	v
sched_numa_topology_type	sched/topology.c	/^enum numa_topology_type sched_numa_topology_type;$/;"	v	typeref:enum:numa_topology_type
sched_numa_warn	sched/topology.c	/^static void sched_numa_warn(const char *str)$/;"	f	file:
sched_offline_group	sched/core.c	/^void sched_offline_group(struct task_group *tg)$/;"	f
sched_online_group	sched/core.c	/^void sched_online_group(struct task_group *tg, struct task_group *parent)$/;"	f
sched_overutilized_tp	sched/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(sched_overutilized_tp);$/;"	v
sched_partition_show	cgroup/cpuset.c	/^static int sched_partition_show(struct seq_file *seq, void *v)$/;"	f	file:
sched_partition_write	cgroup/cpuset.c	/^static ssize_t sched_partition_write(struct kernfs_open_file *of, char *buf,$/;"	f	file:
sched_prio_to_weight	sched/core.c	/^const int sched_prio_to_weight[40] = {$/;"	v
sched_prio_to_wmult	sched/core.c	/^const u32 sched_prio_to_wmult[40] = {$/;"	v
sched_proc_update_handler	sched/fair.c	/^int sched_proc_update_handler(struct ctl_table *table, int write,$/;"	f
sched_put_rd	sched/topology.c	/^void sched_put_rd(struct root_domain *rd)$/;"	f
sched_rq_cpu_starting	sched/core.c	/^static void sched_rq_cpu_starting(unsigned int cpu)$/;"	f	file:
sched_rr_get_interval	sched/core.c	/^static int sched_rr_get_interval(pid_t pid, struct timespec64 *t)$/;"	f	file:
sched_rr_handler	sched/rt.c	/^int sched_rr_handler(struct ctl_table *table, int write,$/;"	f
sched_rr_timeslice	sched/rt.c	/^int sched_rr_timeslice = RR_TIMESLICE;$/;"	v
sched_rt_bandwidth	sched/rt.c	/^static inline struct rt_bandwidth *sched_rt_bandwidth(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_bandwidth_account	sched/rt.c	/^bool sched_rt_bandwidth_account(struct rt_rq *rt_rq)$/;"	f
sched_rt_can_attach	sched/rt.c	/^int sched_rt_can_attach(struct task_group *tg, struct task_struct *tsk)$/;"	f
sched_rt_do_global	sched/rt.c	/^static void sched_rt_do_global(void)$/;"	f	file:
sched_rt_global_constraints	sched/rt.c	/^static int sched_rt_global_constraints(void)$/;"	f	file:
sched_rt_global_validate	sched/rt.c	/^static int sched_rt_global_validate(void)$/;"	f	file:
sched_rt_handler	sched/rt.c	/^int sched_rt_handler(struct ctl_table *table, int write,$/;"	f
sched_rt_period	sched/rt.c	/^static inline u64 sched_rt_period(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_period_mask	sched/rt.c	/^static inline const struct cpumask *sched_rt_period_mask(void)$/;"	f	file:
sched_rt_period_rt_rq	sched/rt.c	/^struct rt_rq *sched_rt_period_rt_rq(struct rt_bandwidth *rt_b, int cpu)$/;"	f	file:
sched_rt_period_timer	sched/rt.c	/^static enum hrtimer_restart sched_rt_period_timer(struct hrtimer *timer)$/;"	f	file:
sched_rt_rq_dequeue	sched/rt.c	/^static inline void sched_rt_rq_dequeue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_dequeue	sched/rt.c	/^static void sched_rt_rq_dequeue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_enqueue	sched/rt.c	/^static inline void sched_rt_rq_enqueue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_enqueue	sched/rt.c	/^static void sched_rt_rq_enqueue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_runtime	sched/rt.c	/^static inline u64 sched_rt_runtime(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_runtime_exceeded	sched/rt.c	/^static int sched_rt_runtime_exceeded(struct rt_rq *rt_rq)$/;"	f	file:
sched_schedstats	sched/core.c	/^DEFINE_STATIC_KEY_FALSE(sched_schedstats);$/;"	v
sched_set_stop_task	sched/core.c	/^void sched_set_stop_task(int cpu, struct task_struct *stop)$/;"	f
sched_setaffinity	sched/core.c	/^long sched_setaffinity(pid_t pid, const struct cpumask *in_mask)$/;"	f
sched_setattr	sched/core.c	/^EXPORT_SYMBOL_GPL(sched_setattr);$/;"	v
sched_setattr	sched/core.c	/^int sched_setattr(struct task_struct *p, const struct sched_attr *attr)$/;"	f
sched_setattr_nocheck	sched/core.c	/^int sched_setattr_nocheck(struct task_struct *p, const struct sched_attr *attr)$/;"	f
sched_setnuma	sched/core.c	/^void sched_setnuma(struct task_struct *p, int nid)$/;"	f
sched_setscheduler	sched/core.c	/^EXPORT_SYMBOL_GPL(sched_setscheduler);$/;"	v
sched_setscheduler	sched/core.c	/^int sched_setscheduler(struct task_struct *p, int policy,$/;"	f
sched_setscheduler_nocheck	sched/core.c	/^EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);$/;"	v
sched_setscheduler_nocheck	sched/core.c	/^int sched_setscheduler_nocheck(struct task_struct *p, int policy,$/;"	f
sched_show_numa	sched/debug.c	/^static void sched_show_numa(struct task_struct *p, struct seq_file *m)$/;"	f	file:
sched_show_task	sched/core.c	/^EXPORT_SYMBOL_GPL(sched_show_task);$/;"	v
sched_show_task	sched/core.c	/^void sched_show_task(struct task_struct *p)$/;"	f
sched_skew_tick	time/tick-sched.c	/^static int sched_skew_tick;$/;"	v	file:
sched_slice	sched/fair.c	/^static u64 sched_slice(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
sched_smt_present	sched/fair.c	/^DEFINE_STATIC_KEY_FALSE(sched_smt_present);$/;"	v
sched_smt_present	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_smt_present);$/;"	v
sched_submit_work	sched/core.c	/^static inline void sched_submit_work(struct task_struct *tsk)$/;"	f	file:
sched_sync_hw_clock	time/ntp.c	/^static void sched_sync_hw_clock(struct timespec64 now,$/;"	f	file:
sched_tgid_ref	trace/trace_sched_switch.c	/^static int		sched_tgid_ref;$/;"	v	file:
sched_tick_offload_init	sched/core.c	/^int __init sched_tick_offload_init(void)$/;"	f
sched_tick_offload_init	sched/sched.h	/^static inline int sched_tick_offload_init(void) { return 0; }$/;"	f
sched_tick_remote	sched/core.c	/^static void sched_tick_remote(struct work_struct *work)$/;"	f	file:
sched_tick_start	sched/core.c	/^static inline void sched_tick_start(int cpu) { }$/;"	f	file:
sched_tick_start	sched/core.c	/^static void sched_tick_start(int cpu)$/;"	f	file:
sched_tick_stop	sched/core.c	/^static inline void sched_tick_stop(int cpu) { }$/;"	f	file:
sched_tick_stop	sched/core.c	/^static void sched_tick_stop(int cpu)$/;"	f	file:
sched_timer	time/tick-sched.h	/^	struct hrtimer			sched_timer;$/;"	m	struct:tick_sched	typeref:struct:tick_sched::hrtimer
sched_trace_cfs_rq_avg	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_cfs_rq_avg);$/;"	v
sched_trace_cfs_rq_avg	sched/fair.c	/^const struct sched_avg *sched_trace_cfs_rq_avg(struct cfs_rq *cfs_rq)$/;"	f
sched_trace_cfs_rq_cpu	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_cfs_rq_cpu);$/;"	v
sched_trace_cfs_rq_cpu	sched/fair.c	/^int sched_trace_cfs_rq_cpu(struct cfs_rq *cfs_rq)$/;"	f
sched_trace_cfs_rq_path	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_cfs_rq_path);$/;"	v
sched_trace_cfs_rq_path	sched/fair.c	/^char *sched_trace_cfs_rq_path(struct cfs_rq *cfs_rq, char *str, int len)$/;"	f
sched_trace_rd_span	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_rd_span);$/;"	v
sched_trace_rd_span	sched/fair.c	/^const struct cpumask *sched_trace_rd_span(struct root_domain *rd)$/;"	f
sched_trace_rq_avg_dl	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_rq_avg_dl);$/;"	v
sched_trace_rq_avg_dl	sched/fair.c	/^const struct sched_avg *sched_trace_rq_avg_dl(struct rq *rq)$/;"	f
sched_trace_rq_avg_irq	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_rq_avg_irq);$/;"	v
sched_trace_rq_avg_irq	sched/fair.c	/^const struct sched_avg *sched_trace_rq_avg_irq(struct rq *rq)$/;"	f
sched_trace_rq_avg_rt	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_rq_avg_rt);$/;"	v
sched_trace_rq_avg_rt	sched/fair.c	/^const struct sched_avg *sched_trace_rq_avg_rt(struct rq *rq)$/;"	f
sched_trace_rq_cpu	sched/fair.c	/^EXPORT_SYMBOL_GPL(sched_trace_rq_cpu);$/;"	v
sched_trace_rq_cpu	sched/fair.c	/^int sched_trace_rq_cpu(struct rq *rq)$/;"	f
sched_ttwu_pending	sched/core.c	/^void sched_ttwu_pending(void)$/;"	f
sched_ttwu_pending	sched/sched.h	/^static inline void sched_ttwu_pending(void) { }$/;"	f
sched_tunable_scaling_names	sched/debug.c	/^static const char *sched_tunable_scaling_names[] = {$/;"	v	file:
sched_update_tick_dependency	sched/sched.h	/^static inline void sched_update_tick_dependency(struct rq *rq) { }$/;"	f
sched_update_tick_dependency	sched/sched.h	/^static inline void sched_update_tick_dependency(struct rq *rq)$/;"	f
sched_update_worker	sched/core.c	/^static void sched_update_worker(struct task_struct *tsk)$/;"	f	file:
sched_vslice	sched/fair.c	/^static u64 sched_vslice(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
schedstat_add	sched/stats.h	37;"	d
schedstat_add	sched/stats.h	51;"	d
schedstat_enabled	sched/stats.h	33;"	d
schedstat_enabled	sched/stats.h	47;"	d
schedstat_inc	sched/stats.h	35;"	d
schedstat_inc	sched/stats.h	49;"	d
schedstat_next	sched/stats.c	/^static void *schedstat_next(struct seq_file *file, void *data, loff_t *offset)$/;"	f	file:
schedstat_set	sched/stats.h	39;"	d
schedstat_set	sched/stats.h	53;"	d
schedstat_sops	sched/stats.c	/^static const struct seq_operations schedstat_sops = {$/;"	v	typeref:struct:seq_operations	file:
schedstat_start	sched/stats.c	/^static void *schedstat_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
schedstat_stop	sched/stats.c	/^static void schedstat_stop(struct seq_file *file, void *data)$/;"	f	file:
schedstat_val	sched/stats.h	40;"	d
schedstat_val	sched/stats.h	54;"	d
schedstat_val_or_zero	sched/stats.h	41;"	d
schedstat_val_or_zero	sched/stats.h	55;"	d
schedule	sched/core.c	/^EXPORT_SYMBOL(schedule);$/;"	v
schedule	sched/core.c	/^asmlinkage __visible void __sched schedule(void)$/;"	f
schedule_debug	sched/core.c	/^static inline void schedule_debug(struct task_struct *prev)$/;"	f	file:
schedule_hrtimeout	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(schedule_hrtimeout);$/;"	v
schedule_hrtimeout	time/hrtimer.c	/^int __sched schedule_hrtimeout(ktime_t *expires,$/;"	f
schedule_hrtimeout_range	time/hrtimer.c	/^EXPORT_SYMBOL_GPL(schedule_hrtimeout_range);$/;"	v
schedule_hrtimeout_range	time/hrtimer.c	/^int __sched schedule_hrtimeout_range(ktime_t *expires, u64 delta,$/;"	f
schedule_hrtimeout_range_clock	time/hrtimer.c	/^schedule_hrtimeout_range_clock(ktime_t *expires, u64 delta,$/;"	f
schedule_idle	sched/core.c	/^void __sched schedule_idle(void)$/;"	f
schedule_on_each_cpu	workqueue.c	/^int schedule_on_each_cpu(work_func_t func)$/;"	f
schedule_preempt_disabled	sched/core.c	/^void __sched schedule_preempt_disabled(void)$/;"	f
schedule_timeout	time/timer.c	/^EXPORT_SYMBOL(schedule_timeout);$/;"	v
schedule_timeout	time/timer.c	/^signed long __sched schedule_timeout(signed long timeout)$/;"	f
schedule_timeout_idle	time/timer.c	/^EXPORT_SYMBOL(schedule_timeout_idle);$/;"	v
schedule_timeout_idle	time/timer.c	/^signed long __sched schedule_timeout_idle(signed long timeout)$/;"	f
schedule_timeout_interruptible	time/timer.c	/^EXPORT_SYMBOL(schedule_timeout_interruptible);$/;"	v
schedule_timeout_interruptible	time/timer.c	/^signed long __sched schedule_timeout_interruptible(signed long timeout)$/;"	f
schedule_timeout_killable	time/timer.c	/^EXPORT_SYMBOL(schedule_timeout_killable);$/;"	v
schedule_timeout_killable	time/timer.c	/^signed long __sched schedule_timeout_killable(signed long timeout)$/;"	f
schedule_timeout_uninterruptible	time/timer.c	/^EXPORT_SYMBOL(schedule_timeout_uninterruptible);$/;"	v
schedule_timeout_uninterruptible	time/timer.c	/^signed long __sched schedule_timeout_uninterruptible(signed long timeout)$/;"	f
schedule_user	sched/core.c	/^asmlinkage __visible void __sched schedule_user(void)$/;"	f
scheduled	locking/lockdep.c	/^	int			scheduled;$/;"	m	struct:delayed_free	file:
scheduled	workqueue_internal.h	/^	struct list_head	scheduled;	\/* L: scheduled works *\/$/;"	m	struct:worker	typeref:struct:worker::list_head
scheduler_ipi	sched/core.c	/^void scheduler_ipi(void)$/;"	f
scheduler_running	sched/core.c	/^__read_mostly int scheduler_running;$/;"	v
scheduler_tick	sched/core.c	/^void scheduler_tick(void)$/;"	f
schedutil_cpu_util	sched/cpufreq_schedutil.c	/^unsigned long schedutil_cpu_util(int cpu, unsigned long util_cfs,$/;"	f
schedutil_cpu_util	sched/sched.h	/^static inline unsigned long schedutil_cpu_util(int cpu, unsigned long util_cfs,$/;"	f
schedutil_gov	sched/cpufreq_schedutil.c	/^struct cpufreq_governor schedutil_gov = {$/;"	v	typeref:struct:cpufreq_governor
schedutil_gov	sched/cpufreq_schedutil.c	/^struct cpufreq_governor schedutil_gov;$/;"	v	typeref:struct:cpufreq_governor
schedutil_type	sched/sched.h	/^enum schedutil_type {$/;"	g
score_nearby_nodes	sched/fair.c	/^static unsigned long score_nearby_nodes(struct task_struct *p, int nid,$/;"	f	file:
scratch_map	irq/matrix.c	/^	unsigned long		scratch_map[IRQ_MATRIX_SIZE];$/;"	m	struct:irq_matrix	file:
sd	sched/fair.c	/^	struct sched_domain	*sd;$/;"	m	struct:lb_env	typeref:struct:lb_env::sched_domain	file:
sd	sched/sched.h	/^	struct sched_domain __rcu	*sd;$/;"	m	struct:rq	typeref:struct:rq::__rcu
sd	sched/topology.c	/^	struct sched_domain * __percpu *sd;$/;"	m	struct:s_data	typeref:struct:s_data::__percpu	file:
sd_alloc_ctl_cpu_table	sched/debug.c	/^static struct ctl_table *sd_alloc_ctl_cpu_table(int cpu)$/;"	f	file:
sd_alloc_ctl_domain_table	sched/debug.c	/^sd_alloc_ctl_domain_table(struct sched_domain *sd)$/;"	f	file:
sd_alloc_ctl_entry	sched/debug.c	/^static struct ctl_table *sd_alloc_ctl_entry(int n)$/;"	f	file:
sd_ctl_dir	sched/debug.c	/^static struct ctl_table sd_ctl_dir[] = {$/;"	v	typeref:struct:ctl_table	file:
sd_ctl_root	sched/debug.c	/^static struct ctl_table sd_ctl_root[] = {$/;"	v	typeref:struct:ctl_table	file:
sd_degenerate	sched/topology.c	/^static int sd_degenerate(struct sched_domain *sd)$/;"	f	file:
sd_free_ctl_entry	sched/debug.c	/^static void sd_free_ctl_entry(struct ctl_table **tablep)$/;"	f	file:
sd_init	sched/topology.c	/^sd_init(struct sched_domain_topology_level *tl,$/;"	f	file:
sd_lb_stats	sched/fair.c	/^struct sd_lb_stats {$/;"	s	file:
sd_numa_mask	sched/topology.c	/^static const struct cpumask *sd_numa_mask(int cpu)$/;"	f	file:
sd_parent_degenerate	sched/topology.c	/^sd_parent_degenerate(struct sched_domain *sd, struct sched_domain *parent)$/;"	f	file:
sd_sysctl_cpus	sched/debug.c	/^static cpumask_var_t		sd_sysctl_cpus;$/;"	v	file:
sd_sysctl_header	sched/debug.c	/^static struct ctl_table_header	*sd_sysctl_header;$/;"	v	typeref:struct:ctl_table_header	file:
sds	trace/bpf_trace.c	/^	struct perf_sample_data sds[3];$/;"	m	struct:bpf_trace_sample_data	typeref:struct:bpf_trace_sample_data::perf_sample_data	file:
se	sched/sched.h	/^	struct sched_entity	**se;$/;"	m	struct:task_group	typeref:struct:task_group::sched_entity
se_runnable	sched/sched.h	/^static inline long se_runnable(struct sched_entity *se)$/;"	f
se_weight	sched/sched.h	/^static inline long se_weight(struct sched_entity *se)$/;"	f
search	trace/ftrace.c	/^	char *search;$/;"	m	struct:ftrace_glob	file:
search_exception_tables	extable.c	/^const struct exception_table_entry *search_exception_tables(unsigned long addr)$/;"	f
search_module_extables	module.c	/^const struct exception_table_entry *search_module_extables(unsigned long addr)$/;"	f
sec	time/ntp.c	/^	s64		sec;	\/* seconds *\/$/;"	m	struct:pps_normtime	file:
sec_end	debug/kdb/kdb_private.h	/^		unsigned long sec_end;$/;"	m	struct:__ksymtab
sec_name	debug/kdb/kdb_private.h	/^		const char *sec_name;	\/* Section containing symbol *\/$/;"	m	struct:__ksymtab
sec_start	debug/kdb/kdb_private.h	/^		unsigned long sec_start;$/;"	m	struct:__ksymtab
seccomp	sys_ni.c	/^COND_SYSCALL(seccomp);$/;"	v
seccomp_action_logged_from_name	seccomp.c	/^static bool seccomp_action_logged_from_name(u32 *action_logged,$/;"	f	file:
seccomp_actions_avail	seccomp.c	/^static const char seccomp_actions_avail[] =$/;"	v	file:
seccomp_actions_logged	seccomp.c	/^static u32 seccomp_actions_logged = SECCOMP_LOG_KILL_PROCESS |$/;"	v	file:
seccomp_actions_logged_from_names	seccomp.c	/^static bool seccomp_actions_logged_from_names(u32 *actions_logged, char *names)$/;"	f	file:
seccomp_actions_logged_handler	seccomp.c	/^static int seccomp_actions_logged_handler(struct ctl_table *ro_table, int write,$/;"	f	file:
seccomp_assign_mode	seccomp.c	/^static inline void seccomp_assign_mode(struct task_struct *task,$/;"	f	file:
seccomp_attach_filter	seccomp.c	/^static long seccomp_attach_filter(unsigned int flags,$/;"	f	file:
seccomp_can_sync_threads	seccomp.c	/^static inline pid_t seccomp_can_sync_threads(void)$/;"	f	file:
seccomp_check_filter	seccomp.c	/^static int seccomp_check_filter(struct sock_filter *filter, unsigned int flen)$/;"	f	file:
seccomp_do_user_notification	seccomp.c	/^static void seccomp_do_user_notification(int this_syscall,$/;"	f	file:
seccomp_filter	seccomp.c	/^struct seccomp_filter {$/;"	s	file:
seccomp_filter_free	seccomp.c	/^static inline void seccomp_filter_free(struct seccomp_filter *filter)$/;"	f	file:
seccomp_get_action_avail	seccomp.c	/^static long seccomp_get_action_avail(const char __user *uaction)$/;"	f	file:
seccomp_get_filter	seccomp.c	/^long seccomp_get_filter(struct task_struct *task, unsigned long filter_off,$/;"	f
seccomp_get_metadata	seccomp.c	/^long seccomp_get_metadata(struct task_struct *task,$/;"	f
seccomp_get_notif_sizes	seccomp.c	/^static long seccomp_get_notif_sizes(void __user *usizes)$/;"	f	file:
seccomp_init_siginfo	seccomp.c	/^static void seccomp_init_siginfo(kernel_siginfo_t *info, int syscall, int reason)$/;"	f	file:
seccomp_knotif	seccomp.c	/^struct seccomp_knotif {$/;"	s	file:
seccomp_log	seccomp.c	/^static inline void seccomp_log(unsigned long syscall, long signr, u32 action,$/;"	f	file:
seccomp_log_name	seccomp.c	/^struct seccomp_log_name {$/;"	s	file:
seccomp_log_names	seccomp.c	/^static const struct seccomp_log_name seccomp_log_names[] = {$/;"	v	typeref:struct:seccomp_log_name	file:
seccomp_may_assign_mode	seccomp.c	/^static inline bool seccomp_may_assign_mode(unsigned long seccomp_mode)$/;"	f	file:
seccomp_names_from_actions_logged	seccomp.c	/^static bool seccomp_names_from_actions_logged(char *names, size_t size,$/;"	f	file:
seccomp_next_notify_id	seccomp.c	/^static u64 seccomp_next_notify_id(struct seccomp_filter *filter)$/;"	f	file:
seccomp_notify_id_valid	seccomp.c	/^static long seccomp_notify_id_valid(struct seccomp_filter *filter,$/;"	f	file:
seccomp_notify_ioctl	seccomp.c	/^static long seccomp_notify_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
seccomp_notify_ops	seccomp.c	/^static const struct file_operations seccomp_notify_ops = {$/;"	v	typeref:struct:file_operations	file:
seccomp_notify_poll	seccomp.c	/^static __poll_t seccomp_notify_poll(struct file *file,$/;"	f	file:
seccomp_notify_recv	seccomp.c	/^static long seccomp_notify_recv(struct seccomp_filter *filter,$/;"	f	file:
seccomp_notify_release	seccomp.c	/^static int seccomp_notify_release(struct inode *inode, struct file *file)$/;"	f	file:
seccomp_notify_send	seccomp.c	/^static long seccomp_notify_send(struct seccomp_filter *filter,$/;"	f	file:
seccomp_prepare_filter	seccomp.c	/^static struct seccomp_filter *seccomp_prepare_filter(struct sock_fprog *fprog)$/;"	f	file:
seccomp_prepare_user_filter	seccomp.c	/^seccomp_prepare_user_filter(const char __user *user_filter)$/;"	f	file:
seccomp_run_filters	seccomp.c	/^static u32 seccomp_run_filters(const struct seccomp_data *sd,$/;"	f	file:
seccomp_send_sigsys	seccomp.c	/^static void seccomp_send_sigsys(int syscall, int reason)$/;"	f	file:
seccomp_set_mode_filter	seccomp.c	/^static inline long seccomp_set_mode_filter(unsigned int flags,$/;"	f	file:
seccomp_set_mode_filter	seccomp.c	/^static long seccomp_set_mode_filter(unsigned int flags,$/;"	f	file:
seccomp_set_mode_strict	seccomp.c	/^static long seccomp_set_mode_strict(void)$/;"	f	file:
seccomp_sync_threads	seccomp.c	/^static inline void seccomp_sync_threads(unsigned long flags)$/;"	f	file:
seccomp_sysctl_init	seccomp.c	/^static int __init seccomp_sysctl_init(void)$/;"	f	file:
seccomp_sysctl_path	seccomp.c	/^static struct ctl_path seccomp_sysctl_path[] = {$/;"	v	typeref:struct:ctl_path	file:
seccomp_sysctl_table	seccomp.c	/^static struct ctl_table seccomp_sysctl_table[] = {$/;"	v	typeref:struct:ctl_table	file:
sechdrs	module-internal.h	/^	Elf_Shdr *sechdrs;$/;"	m	struct:load_info
second_overflow	time/ntp.c	/^int second_overflow(time64_t secs)$/;"	f
second_pass	time/timer_list.c	/^	bool second_pass;$/;"	m	struct:timer_list_iter	file:
secstrings	module-internal.h	/^	char *secstrings, *strtab;$/;"	m	struct:load_info
sect_empty	module.c	/^static inline bool sect_empty(const Elf_Shdr *sect)$/;"	f	file:
section_addr	module.c	/^static void *section_addr(const struct load_info *info, const char *name)$/;"	f	file:
section_objs	module.c	/^static void *section_objs(const struct load_info *info,$/;"	f	file:
secure_computing_strict	seccomp.c	/^void secure_computing_strict(int this_syscall)$/;"	f
select_bucket	bpf/hashtab.c	/^static inline struct hlist_nulls_head *select_bucket(struct bpf_htab *htab, u32 hash)$/;"	f	file:
select_comparison_fn	trace/trace_events_filter.c	/^static filter_pred_fn_t select_comparison_fn(enum filter_op_ids op,$/;"	f	file:
select_fallback_rq	sched/core.c	/^static int select_fallback_rq(int cpu, struct task_struct *p)$/;"	f	file:
select_idle_core	sched/fair.c	/^static inline int select_idle_core(struct task_struct *p, struct sched_domain *sd, int target)$/;"	f	file:
select_idle_core	sched/fair.c	/^static int select_idle_core(struct task_struct *p, struct sched_domain *sd, int target)$/;"	f	file:
select_idle_cpu	sched/fair.c	/^static int select_idle_cpu(struct task_struct *p, struct sched_domain *sd, int target)$/;"	f	file:
select_idle_sibling	sched/fair.c	/^static int select_idle_sibling(struct task_struct *p, int prev, int target)$/;"	f	file:
select_idle_smt	sched/fair.c	/^static inline int select_idle_smt(struct task_struct *p, int target)$/;"	f	file:
select_idle_smt	sched/fair.c	/^static int select_idle_smt(struct task_struct *p, int target)$/;"	f	file:
select_task_rq	sched/core.c	/^int select_task_rq(struct task_struct *p, int cpu, int sd_flags, int wake_flags)$/;"	f	file:
select_task_rq	sched/sched.h	/^	int  (*select_task_rq)(struct task_struct *p, int task_cpu, int sd_flag, int flags);$/;"	m	struct:sched_class
select_task_rq_dl	sched/deadline.c	/^select_task_rq_dl(struct task_struct *p, int cpu, int sd_flag, int flags)$/;"	f	file:
select_task_rq_fair	sched/fair.c	/^select_task_rq_fair(struct task_struct *p, int prev_cpu, int sd_flag, int wake_flags)$/;"	f	file:
select_task_rq_idle	sched/idle.c	/^select_task_rq_idle(struct task_struct *p, int cpu, int sd_flag, int flags)$/;"	f	file:
select_task_rq_rt	sched/rt.c	/^select_task_rq_rt(struct task_struct *p, int cpu, int sd_flag, int flags)$/;"	f	file:
select_task_rq_stop	sched/stop_task.c	/^select_task_rq_stop(struct task_struct *p, int cpu, int sd_flag, int flags)$/;"	f	file:
select_value_fn	trace/trace_events_hist.c	/^static hist_field_fn_t select_value_fn(int field_size, int field_is_signed)$/;"	f	file:
selftest	trace/trace.h	/^	int			(*selftest)(struct tracer *trace,$/;"	m	struct:tracer
selftests_can_run	trace/trace.c	/^static bool selftests_can_run;$/;"	v	file:
sem	bpf/stackmap.c	/^	struct rw_semaphore *sem;$/;"	m	struct:stack_map_irq_work	typeref:struct:stack_map_irq_work::rw_semaphore	file:
sem	taskstats.c	/^	struct rw_semaphore sem;$/;"	m	struct:listener_list	typeref:struct:listener_list::rw_semaphore	file:
semaphore_waiter	locking/semaphore.c	/^struct semaphore_waiter {$/;"	s	file:
semctl	sys_ni.c	/^COND_SYSCALL(semctl);$/;"	v
semctl	sys_ni.c	/^COND_SYSCALL_COMPAT(semctl);$/;"	v
semget	sys_ni.c	/^COND_SYSCALL(semget);$/;"	v
semop	sys_ni.c	/^COND_SYSCALL(semop);$/;"	v
semtimedop	sys_ni.c	/^COND_SYSCALL(semtimedop);$/;"	v
semtimedop_time32	sys_ni.c	/^COND_SYSCALL(semtimedop_time32);$/;"	v
send	sys_ni.c	/^COND_SYSCALL(send);$/;"	v
send_cpu_listeners	taskstats.c	/^static void send_cpu_listeners(struct sk_buff *skb,$/;"	f	file:
send_mayday	workqueue.c	/^static void send_mayday(struct work_struct *work)$/;"	f	file:
send_ready	debug/debug_core.h	/^	atomic_t		*send_ready;$/;"	m	struct:kgdb_state
send_reply	taskstats.c	/^static int send_reply(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
send_sig	signal.c	/^EXPORT_SYMBOL(send_sig);$/;"	v
send_sig	signal.c	/^send_sig(int sig, struct task_struct *p, int priv)$/;"	f
send_sig_fault	signal.c	/^int send_sig_fault(int sig, int code, void __user *addr$/;"	f
send_sig_info	signal.c	/^EXPORT_SYMBOL(send_sig_info);$/;"	v
send_sig_info	signal.c	/^int send_sig_info(int sig, struct kernel_siginfo *info, struct task_struct *p)$/;"	f
send_sig_mceerr	signal.c	/^EXPORT_SYMBOL(send_sig_mceerr);$/;"	v
send_sig_mceerr	signal.c	/^int send_sig_mceerr(int code, void __user *addr, short lsb, struct task_struct *t)$/;"	f
send_signal	signal.c	/^static int send_signal(int sig, struct kernel_siginfo *info, struct task_struct *t,$/;"	f	file:
send_signal_irq_work	trace/bpf_trace.c	/^struct send_signal_irq_work {$/;"	s	file:
send_signal_irq_work_init	trace/bpf_trace.c	/^static int __init send_signal_irq_work_init(void)$/;"	f	file:
send_signal_irq_work_init	trace/bpf_trace.c	/^subsys_initcall(send_signal_irq_work_init);$/;"	v
send_sigqueue	signal.c	/^int send_sigqueue(struct sigqueue *q, struct pid *pid, enum pid_type type)$/;"	f
sendmmsg	sys_ni.c	/^COND_SYSCALL(sendmmsg);$/;"	v
sendmmsg	sys_ni.c	/^COND_SYSCALL_COMPAT(sendmmsg);$/;"	v
sendmsg	sys_ni.c	/^COND_SYSCALL(sendmsg);$/;"	v
sendmsg	sys_ni.c	/^COND_SYSCALL_COMPAT(sendmsg);$/;"	v
sendto	sys_ni.c	/^COND_SYSCALL(sendto);$/;"	v
separate_irq_context	locking/lockdep.c	/^static inline int separate_irq_context(struct task_struct *curr,$/;"	f	file:
separate_irq_context	locking/lockdep.c	/^static int separate_irq_context(struct task_struct *curr,$/;"	f	file:
seq	printk/printk.c	/^	u64 seq;$/;"	m	struct:devkmsg_user	file:
seq	time/sched_clock.c	/^	seqcount_t		seq;$/;"	m	struct:clock_data	file:
seq	time/timekeeping.c	/^	seqcount_t		seq;$/;"	m	struct:__anon49	file:
seq	time/timekeeping.c	/^	seqcount_t		seq;$/;"	m	struct:tk_fast	file:
seq_file_to_map	bpf/inode.c	/^static struct bpf_map *seq_file_to_map(struct seq_file *m)$/;"	f	file:
seq_header	locking/lockdep_proc.c	/^static void seq_header(struct seq_file *m)$/;"	f	file:
seq_line	locking/lockdep_proc.c	/^static void seq_line(struct seq_file *m, char c, int offset, int length)$/;"	f	file:
seq_lock_time	locking/lockdep_proc.c	/^static void seq_lock_time(struct seq_file *m, struct lock_time *lt)$/;"	f	file:
seq_ops	trace/ftrace.c	/^	const struct seq_operations	*seq_ops;$/;"	m	struct:ftrace_graph_data	typeref:struct:ftrace_graph_data::seq_operations	file:
seq_print_ip_sym	trace/trace_output.c	/^seq_print_ip_sym(struct trace_seq *s, unsigned long ip, unsigned long sym_flags)$/;"	f
seq_print_sym	trace/trace_output.c	/^seq_print_sym(struct trace_seq *s, unsigned long address, bool offset)$/;"	f	file:
seq_print_user_ip	trace/trace_output.c	/^static int seq_print_user_ip(struct trace_seq *s, struct mm_struct *mm,$/;"	f	file:
seq_show	bpf/btf.c	/^	void (*seq_show)(const struct btf *btf, const struct btf_type *t,$/;"	m	struct:btf_kind_operations	file:
seq_stats	locking/lockdep_proc.c	/^static void seq_stats(struct seq_file *m, struct lock_stat_data *data)$/;"	f	file:
seq_time	locking/lockdep_proc.c	/^static void seq_time(struct seq_file *m, s64 time)$/;"	f	file:
seq_write_gcov_u32	gcov/gcc_3_4.c	/^static int seq_write_gcov_u32(struct seq_file *seq, u32 v)$/;"	f	file:
seq_write_gcov_u64	gcov/gcc_3_4.c	/^static int seq_write_gcov_u64(struct seq_file *seq, u64 v)$/;"	f	file:
seqnum	trace/trace_hwlat.c	/^	u64			seqnum;		\/* unique sequence *\/$/;"	m	struct:hwlat_sample	file:
serial	audit.h	/^	unsigned int	    serial;     \/* serial number for record *\/$/;"	m	struct:audit_context
session_id	audit.c	/^static atomic_t session_id = ATOMIC_INIT(0);$/;"	v	file:
session_list	trace/trace_stat.c	/^	struct list_head	session_list;$/;"	m	struct:stat_session	typeref:struct:stat_session::list_head	file:
set	irq/devres.c	/^	unsigned int set;$/;"	m	struct:irq_generic_chip_devres	file:
set_all_modules_text_ro	module.c	/^void set_all_modules_text_ro(void)$/;"	f
set_all_modules_text_rw	module.c	/^void set_all_modules_text_rw(void)$/;"	f
set_all_resource_max_limit	cgroup/rdma.c	/^static void set_all_resource_max_limit(struct rdmacg_resource_pool *rpool)$/;"	f	file:
set_buf_size	trace/trace.c	/^static int __init set_buf_size(char *str)$/;"	f	file:
set_buffer_entries	trace/trace.c	/^static void set_buffer_entries(struct trace_buffer *buf, unsigned long val)$/;"	f	file:
set_cmdline	trace/trace.c	/^static inline void set_cmdline(int idx, const char *cmdline)$/;"	f	file:
set_cmdline_ftrace	trace/trace.c	/^static int __init set_cmdline_ftrace(char *str)$/;"	f	file:
set_compat_user_sigmask	signal.c	/^int set_compat_user_sigmask(const compat_sigset_t __user *umask,$/;"	f
set_cpu_itimer	time/itimer.c	/^static void set_cpu_itimer(struct task_struct *tsk, unsigned int clock_id,$/;"	f	file:
set_cpu_sd_state_busy	sched/fair.c	/^static void set_cpu_sd_state_busy(int cpu)$/;"	f	file:
set_cpu_sd_state_idle	sched/fair.c	/^static void set_cpu_sd_state_idle(int cpu)$/;"	f	file:
set_cpus_allowed	sched/sched.h	/^	void (*set_cpus_allowed)(struct task_struct *p,$/;"	m	struct:sched_class
set_cpus_allowed_common	sched/core.c	/^void set_cpus_allowed_common(struct task_struct *p, const struct cpumask *new_mask)$/;"	f
set_cpus_allowed_dl	sched/deadline.c	/^static void set_cpus_allowed_dl(struct task_struct *p,$/;"	f	file:
set_cpus_allowed_ptr	sched/core.c	/^EXPORT_SYMBOL_GPL(set_cpus_allowed_ptr);$/;"	v
set_cpus_allowed_ptr	sched/core.c	/^int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask)$/;"	f
set_create_files_as	cred.c	/^EXPORT_SYMBOL(set_create_files_as);$/;"	v
set_create_files_as	cred.c	/^int set_create_files_as(struct cred *new, struct inode *inode)$/;"	f
set_cred_subscribers	cred.c	/^static inline void set_cred_subscribers(struct cred *cred, int n)$/;"	f	file:
set_cred_user_ns	user_namespace.c	/^static void set_cred_user_ns(struct cred *cred, struct user_namespace *user_ns)$/;"	f	file:
set_curr_task	sched/sched.h	/^	void (*set_curr_task)(struct rq *rq);$/;"	m	struct:sched_class
set_curr_task	sched/sched.h	/^static inline void set_curr_task(struct rq *rq, struct task_struct *curr)$/;"	f
set_curr_task_dl	sched/deadline.c	/^static void set_curr_task_dl(struct rq *rq)$/;"	f	file:
set_curr_task_fair	sched/fair.c	/^static void set_curr_task_fair(struct rq *rq)$/;"	f	file:
set_curr_task_idle	sched/idle.c	/^static void set_curr_task_idle(struct rq *rq)$/;"	f	file:
set_curr_task_rt	sched/rt.c	/^static void set_curr_task_rt(struct rq *rq)$/;"	f	file:
set_curr_task_stop	sched/stop_task.c	/^static void set_curr_task_stop(struct rq *rq)$/;"	f	file:
set_current_blocked	signal.c	/^void set_current_blocked(sigset_t *newset)$/;"	f
set_current_groups	groups.c	/^EXPORT_SYMBOL(set_current_groups);$/;"	v
set_current_groups	groups.c	/^int set_current_groups(struct group_info *group_info)$/;"	f
set_domain_attribute	sched/topology.c	/^static void set_domain_attribute(struct sched_domain *sd,$/;"	f	file:
set_filter	trace/trace.h	/^	int			(*set_filter)(char *filter_str,$/;"	m	struct:event_command
set_flag	trace/trace.h	/^	int			(*set_flag)(struct trace_array *tr,$/;"	m	struct:tracer
set_freezable	freezer.c	/^EXPORT_SYMBOL(set_freezable);$/;"	v
set_freezable	freezer.c	/^bool set_freezable(void)$/;"	f
set_ftrace_dump_on_oops	trace/trace.c	/^static int __init set_ftrace_dump_on_oops(char *str)$/;"	f	file:
set_ftrace_early_filters	trace/ftrace.c	/^static void __init set_ftrace_early_filters(void)$/;"	f	file:
set_ftrace_early_graph	trace/ftrace.c	/^static void __init set_ftrace_early_graph(char *buf, int enable)$/;"	f	file:
set_ftrace_filter	trace/ftrace.c	/^static int __init set_ftrace_filter(char *str)$/;"	f	file:
set_ftrace_notrace	trace/ftrace.c	/^static int __init set_ftrace_notrace(char *str)$/;"	f	file:
set_function_trace_op	trace/ftrace.c	/^static struct ftrace_ops *set_function_trace_op;$/;"	v	typeref:struct:ftrace_ops	file:
set_graph_array	trace/trace_functions_graph.c	/^void set_graph_array(struct trace_array *tr)$/;"	f
set_graph_function	trace/ftrace.c	/^static int __init set_graph_function(char *str)$/;"	f	file:
set_graph_max_depth_function	trace/ftrace.c	/^static int __init set_graph_max_depth_function(char *str)$/;"	f	file:
set_graph_notrace_function	trace/ftrace.c	/^static int __init set_graph_notrace_function(char *str)$/;"	f	file:
set_groups	groups.c	/^EXPORT_SYMBOL(set_groups);$/;"	v
set_groups	groups.c	/^void set_groups(struct cred *new, struct group_info *group_info)$/;"	f
set_handle_irq	irq/handle.c	/^int __init set_handle_irq(void (*handle_irq)(struct pt_regs *))$/;"	f
set_idle_cores	sched/fair.c	/^static inline void set_idle_cores(int cpu, int val)$/;"	f	file:
set_info_rec_size	bpf/syscall.c	/^static int set_info_rec_size(struct bpf_prog_info *info)$/;"	f	file:
set_irq_wake_real	irq/manage.c	/^static int set_irq_wake_real(unsigned int irq, unsigned int on)$/;"	f	file:
set_is_seen	ucount.c	/^static int set_is_seen(struct ctl_table_set *set)$/;"	f	file:
set_kprobe_boot_events	trace/trace_kprobe.c	/^static int __init set_kprobe_boot_events(char *str)$/;"	f	file:
set_kprobe_instance	kprobes.c	/^static inline void set_kprobe_instance(struct kprobe *kp)$/;"	f	file:
set_kthread_struct	kthread.c	/^static inline void set_kthread_struct(void *kthread)$/;"	f	file:
set_last_buddy	sched/fair.c	/^static void set_last_buddy(struct sched_entity *se)$/;"	f	file:
set_license	module.c	/^static void set_license(struct module *mod, const char *license)$/;"	f	file:
set_load_weight	sched/core.c	/^static void set_load_weight(struct task_struct *p, bool update_load)$/;"	f	file:
set_locked	locking/qspinlock.c	/^static __always_inline void set_locked(struct qspinlock *lock)$/;"	f	file:
set_lookup	ucount.c	/^set_lookup(struct ctl_table_root *root)$/;"	f	file:
set_max_threads	fork.c	/^static void set_max_threads(unsigned int max_threads_suggested)$/;"	f	file:
set_mempolicy	sys_ni.c	/^COND_SYSCALL(set_mempolicy);$/;"	v
set_mempolicy	sys_ni.c	/^COND_SYSCALL_COMPAT(set_mempolicy);$/;"	v
set_mm_exe_file	fork.c	/^void set_mm_exe_file(struct mm_struct *mm, struct file *new_exe_file)$/;"	f
set_module_sig_enforced	module.c	/^void set_module_sig_enforced(void)$/;"	f
set_named_trigger_data	trace/trace_events_trigger.c	/^void set_named_trigger_data(struct event_trigger_data *data,$/;"	f
set_next_buddy	sched/fair.c	/^static void set_next_buddy(struct sched_entity *se)$/;"	f	file:
set_next_entity	sched/fair.c	/^set_next_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
set_next_task	sched/deadline.c	/^static inline void set_next_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
set_next_task	sched/rt.c	/^static inline void set_next_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
set_normalized_timespec64	time/time.c	/^EXPORT_SYMBOL(set_normalized_timespec64);$/;"	v
set_normalized_timespec64	time/time.c	/^void set_normalized_timespec64(struct timespec64 *ts, time64_t sec, s64 nsec)$/;"	f
set_nr_and_not_polling	sched/core.c	/^static bool set_nr_and_not_polling(struct task_struct *p)$/;"	f	file:
set_nr_if_polling	sched/core.c	/^static bool set_nr_if_polling(struct task_struct *p)$/;"	f	file:
set_numabalancing_state	sched/core.c	/^void set_numabalancing_state(bool enabled)$/;"	f
set_one_prio	sys.c	/^static int set_one_prio(struct task_struct *p, int niceval, int error)$/;"	f	file:
set_one_prio_perm	sys.c	/^static bool set_one_prio_perm(struct task_struct *p)$/;"	f	file:
set_orig_insn	events/uprobes.c	/^set_orig_insn(struct arch_uprobe *auprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f
set_pending	locking/qspinlock_paravirt.h	/^static __always_inline void set_pending(struct qspinlock *lock)$/;"	f
set_permissions	ucount.c	/^static int set_permissions(struct ctl_table_header *head,$/;"	f	file:
set_pf_worker	workqueue.c	/^static void set_pf_worker(bool val)$/;"	f	file:
set_process_cpu_timer	time/posix-cpu-timers.c	/^void set_process_cpu_timer(struct task_struct *tsk, unsigned int clock_idx,$/;"	f
set_resource_limit	cgroup/rdma.c	/^static void set_resource_limit(struct rdmacg_resource_pool *rpool,$/;"	f	file:
set_robust_list	sys_ni.c	/^COND_SYSCALL(set_robust_list);$/;"	v
set_robust_list	sys_ni.c	/^COND_SYSCALL_COMPAT(set_robust_list);$/;"	v
set_root	ucount.c	/^static struct ctl_table_root set_root = {$/;"	v	typeref:struct:ctl_table_root	file:
set_rq_offline	sched/core.c	/^void set_rq_offline(struct rq *rq)$/;"	f
set_rq_online	sched/core.c	/^void set_rq_online(struct rq *rq)$/;"	f
set_sample_period	watchdog.c	/^static void set_sample_period(void)$/;"	f	file:
set_sched_topology	sched/topology.c	/^void set_sched_topology(struct sched_domain_topology_level *tl)$/;"	f
set_schedstats	sched/core.c	/^static void set_schedstats(bool enabled)$/;"	f	file:
set_security_override	cred.c	/^EXPORT_SYMBOL(set_security_override);$/;"	v
set_security_override	cred.c	/^int set_security_override(struct cred *new, u32 secid)$/;"	f
set_security_override_from_ctx	cred.c	/^EXPORT_SYMBOL(set_security_override_from_ctx);$/;"	v
set_security_override_from_ctx	cred.c	/^int set_security_override_from_ctx(struct cred *new, const char *secctx)$/;"	f
set_skip_buddy	sched/fair.c	/^static void set_skip_buddy(struct sched_entity *se)$/;"	f	file:
set_sort_key	trace/tracing_map.c	/^static void set_sort_key(struct tracing_map *map,$/;"	f	file:
set_special_pids	sys.c	/^static void set_special_pids(struct pid *pid)$/;"	f	file:
set_state	stop_machine.c	/^static void set_state(struct multi_stop_data *msdata,$/;"	f	file:
set_swbp	events/uprobes.c	/^int __weak set_swbp(struct arch_uprobe *auprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f
set_synth_event_print_fmt	trace/trace_events_hist.c	/^static int set_synth_event_print_fmt(struct trace_event_call *call)$/;"	f	file:
set_syscall_print_fmt	trace/trace_syscalls.c	/^static int __init set_syscall_print_fmt(struct trace_event_call *call)$/;"	f	file:
set_table_entry	sched/debug.c	/^set_table_entry(struct ctl_table *entry,$/;"	f	file:
set_task_cpu	sched/core.c	/^void set_task_cpu(struct task_struct *p, unsigned int new_cpu)$/;"	f
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu) { }$/;"	f
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu)$/;"	f
set_task_rq_fair	sched/fair.c	/^void set_task_rq_fair(struct sched_entity *se,$/;"	f
set_task_rq_fair	sched/sched.h	/^static inline void set_task_rq_fair(struct sched_entity *se,$/;"	f
set_task_stack_end_magic	fork.c	/^void set_task_stack_end_magic(struct task_struct *tsk)$/;"	f
set_trace_boot_clock	trace/trace.c	/^static int __init set_trace_boot_clock(char *str)$/;"	f	file:
set_trace_boot_options	trace/trace.c	/^static int __init set_trace_boot_options(char *str)$/;"	f	file:
set_tracepoint_printk	trace/trace.c	/^static int __init set_tracepoint_printk(char *str)$/;"	f	file:
set_tracer_flag	trace/trace.c	/^int set_tracer_flag(struct trace_array *tr, unsigned int mask, int enabled)$/;"	f
set_tracer_fops	trace/trace.c	/^static const struct file_operations set_tracer_fops = {$/;"	v	typeref:struct:file_operations	file:
set_tracer_option	trace/trace.c	/^static int set_tracer_option(struct trace_array *tr, char *cmp, int neg)$/;"	f	file:
set_tracing_thresh	trace/trace.c	/^static int __init set_tracing_thresh(char *str)$/;"	f	file:
set_trigger_filter	trace/trace_events_trigger.c	/^int set_trigger_filter(char *filter_str,$/;"	f
set_user	sys.c	/^static int set_user(struct cred *new)$/;"	f	file:
set_user_nice	sched/core.c	/^EXPORT_SYMBOL(set_user_nice);$/;"	v
set_user_nice	sched/core.c	/^void set_user_nice(struct task_struct *p, long nice)$/;"	f
set_user_sigmask	signal.c	/^int set_user_sigmask(const sigset_t __user *umask, size_t sigsetsize)$/;"	f
set_work_data	workqueue.c	/^static inline void set_work_data(struct work_struct *work, unsigned long data,$/;"	f	file:
set_work_pool_and_clear_pending	workqueue.c	/^static void set_work_pool_and_clear_pending(struct work_struct *work,$/;"	f	file:
set_work_pool_and_keep_pending	workqueue.c	/^static void set_work_pool_and_keep_pending(struct work_struct *work,$/;"	f	file:
set_work_pwq	workqueue.c	/^static void set_work_pwq(struct work_struct *work, struct pool_workqueue *pwq,$/;"	f	file:
set_worker_desc	workqueue.c	/^EXPORT_SYMBOL_GPL(set_worker_desc);$/;"	v
set_worker_desc	workqueue.c	/^void set_worker_desc(const char *fmt, ...)$/;"	f
setfsgid	sys_ni.c	/^COND_SYSCALL(setfsgid);$/;"	v
setfsgid16	sys_ni.c	/^COND_SYSCALL(setfsgid16);$/;"	v
setfsuid	sys_ni.c	/^COND_SYSCALL(setfsuid);$/;"	v
setfsuid16	sys_ni.c	/^COND_SYSCALL(setfsuid16);$/;"	v
setgid	sys_ni.c	/^COND_SYSCALL(setgid);$/;"	v
setgid16	sys_ni.c	/^COND_SYSCALL(setgid16);$/;"	v
setgroups	sys_ni.c	/^COND_SYSCALL(setgroups);$/;"	v
setgroups16	sys_ni.c	/^COND_SYSCALL(setgroups16);$/;"	v
setitimer	time/posix-stubs.c	/^COMPAT_SYS_NI(setitimer);$/;"	v
setitimer	time/posix-stubs.c	/^SYS_NI(setitimer);$/;"	v
setregid	sys_ni.c	/^COND_SYSCALL(setregid);$/;"	v
setregid16	sys_ni.c	/^COND_SYSCALL(setregid16);$/;"	v
setresgid	sys_ni.c	/^COND_SYSCALL(setresgid);$/;"	v
setresgid16	sys_ni.c	/^COND_SYSCALL(setresgid16);$/;"	v
setresuid	sys_ni.c	/^COND_SYSCALL(setresuid);$/;"	v
setresuid16	sys_ni.c	/^COND_SYSCALL(setresuid16);$/;"	v
setreuid	sys_ni.c	/^COND_SYSCALL(setreuid);$/;"	v
setreuid16	sys_ni.c	/^COND_SYSCALL(setreuid16);$/;"	v
setsockopt	sys_ni.c	/^COND_SYSCALL(setsockopt);$/;"	v
setsockopt	sys_ni.c	/^COND_SYSCALL_COMPAT(setsockopt);$/;"	v
setuid	sys_ni.c	/^COND_SYSCALL(setuid);$/;"	v
setuid16	sys_ni.c	/^COND_SYSCALL(setuid16);$/;"	v
setup_autogroup	sched/autogroup.c	/^static int __init setup_autogroup(char *str)$/;"	f	file:
setup_boot_kprobe_events	trace/trace_kprobe.c	/^static __init void setup_boot_kprobe_events(void)$/;"	f	file:
setup_callbacks	relay.c	/^static void setup_callbacks(struct rchan *chan,$/;"	f	file:
setup_elfcorehdr	crash_dump.c	/^static int __init setup_elfcorehdr(char *arg)$/;"	f	file:
setup_fail_futex	futex.c	/^static int __init setup_fail_futex(char *str)$/;"	f	file:
setup_forced_irqthreads	irq/manage.c	/^static int __init setup_forced_irqthreads(char *arg)$/;"	f	file:
setup_hrtimer_hres	time/hrtimer.c	/^static int __init setup_hrtimer_hres(char *str)$/;"	f	file:
setup_io_tlb_npages	dma/swiotlb.c	/^setup_io_tlb_npages(char *str)$/;"	f	file:
setup_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(setup_irq);$/;"	v
setup_irq	irq/manage.c	/^int setup_irq(unsigned int irq, struct irqaction *act)$/;"	f
setup_irq_thread	irq/manage.c	/^setup_irq_thread(struct irqaction *new, unsigned int irq, bool secondary)$/;"	f	file:
setup_load_info	module.c	/^static int setup_load_info(struct load_info *info, int flags)$/;"	f	file:
setup_log_buf	printk/printk.c	/^void __init setup_log_buf(int early)$/;"	f
setup_max_cpus	smp.c	/^EXPORT_SYMBOL(setup_max_cpus);$/;"	v
setup_max_cpus	smp.c	/^unsigned int setup_max_cpus = NR_CPUS;$/;"	v
setup_modinfo	module.c	/^static void setup_modinfo(struct module *mod, struct load_info *info)$/;"	f	file:
setup_new_dl_entity	sched/deadline.c	/^static inline void setup_new_dl_entity(struct sched_dl_entity *dl_se)$/;"	f	file:
setup_nr_cpu_ids	smp.c	/^void __init setup_nr_cpu_ids(void)$/;"	f
setup_percpu_irq	irq/manage.c	/^int setup_percpu_irq(unsigned int irq, struct irqaction *act)$/;"	f
setup_print_fatal_signals	signal.c	/^static int __init setup_print_fatal_signals(char *str)$/;"	f	file:
setup_psi	sched/psi.c	/^static int __init setup_psi(char *str)$/;"	f	file:
setup_relax_domain_level	sched/topology.c	/^static int __init setup_relax_domain_level(char *str)$/;"	f	file:
setup_schedstats	sched/core.c	/^static int __init setup_schedstats(char *str)$/;"	f	file:
setup_test_suspend	power/suspend_test.c	/^static int __init setup_test_suspend(char *value)$/;"	f	file:
setup_tick_nohz	time/tick-sched.c	/^static int __init setup_tick_nohz(char *str)$/;"	f	file:
setup_trace_event	trace/trace_events.c	/^static __init int setup_trace_event(char *str)$/;"	f	file:
setup_userns_sysctls	ucount.c	/^bool setup_userns_sysctls(struct user_namespace *ns)$/;"	f
sg_call_ents	dma/debug.c	/^	int		 sg_call_ents;$/;"	m	struct:dma_debug_entry	file:
sg_imbalanced	sched/fair.c	/^static inline int sg_imbalanced(struct sched_group *group)$/;"	f	file:
sg_lb_stats	sched/fair.c	/^struct sg_lb_stats {$/;"	s	file:
sg_mapped_ents	dma/debug.c	/^	int		 sg_mapped_ents;$/;"	m	struct:dma_debug_entry	file:
sg_policy	sched/cpufreq_schedutil.c	/^	struct sugov_policy	*sg_policy;$/;"	m	struct:sugov_cpu	typeref:struct:sugov_cpu::sugov_policy	file:
sgc	sched/sched.h	/^	struct sched_group_capacity *sgc;$/;"	m	struct:sched_group	typeref:struct:sched_group::sched_group_capacity
sgetmask	sys_ni.c	/^COND_SYSCALL(sgetmask);$/;"	v
sgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
shadow_pid	debug/gdbstub.c	/^static inline int shadow_pid(int realpid)$/;"	f	file:
shadow_timekeeper	time/timekeeping.c	/^static struct timekeeper shadow_timekeeper;$/;"	v	typeref:struct:timekeeper	file:
sharedram	sys.c	/^	u32 sharedram;$/;"	m	struct:compat_sysinfo	file:
shares	sched/sched.h	/^	unsigned long		shares;$/;"	m	struct:task_group
shift	time/sched_clock.c	/^	u32 shift;$/;"	m	struct:clock_read_data	file:
shmat	sys_ni.c	/^COND_SYSCALL(shmat);$/;"	v
shmat	sys_ni.c	/^COND_SYSCALL_COMPAT(shmat);$/;"	v
shmctl	sys_ni.c	/^COND_SYSCALL(shmctl);$/;"	v
shmctl	sys_ni.c	/^COND_SYSCALL_COMPAT(shmctl);$/;"	v
shmdt	sys_ni.c	/^COND_SYSCALL(shmdt);$/;"	v
shmget	sys_ni.c	/^COND_SYSCALL(shmget);$/;"	v
shortest_full	trace/ring_buffer.c	/^	size_t				shortest_full;$/;"	m	struct:ring_buffer_per_cpu	file:
should_fail_futex	futex.c	/^static bool should_fail_futex(bool fshared)$/;"	f	file:
should_fail_futex	futex.c	/^static inline bool should_fail_futex(bool fshared)$/;"	f	file:
should_free	audit.h	/^	bool			should_free;$/;"	m	struct:audit_names
should_numa_migrate_memory	sched/fair.c	/^bool should_numa_migrate_memory(struct task_struct *p, struct page * page,$/;"	f
should_run	cpu.c	/^	bool			should_run;$/;"	m	struct:cpuhp_cpu_state	file:
should_we_balance	sched/fair.c	/^static int should_we_balance(struct lb_env *env)$/;"	f	file:
show	padata.c	/^	ssize_t (*show)(struct padata_instance *, struct attribute *, char *);$/;"	m	struct:padata_sysfs_entry	file:
show	trace/trace_dynevent.h	/^	int (*show)(struct seq_file *m, struct dyn_event *ev);$/;"	m	struct:dyn_event_operations
show_coresize	module.c	/^static ssize_t show_coresize(struct module_attribute *mattr,$/;"	f	file:
show_cpuhp_fail	cpu.c	/^static ssize_t show_cpuhp_fail(struct device *dev,$/;"	f	file:
show_cpuhp_state	cpu.c	/^static ssize_t show_cpuhp_state(struct device *dev,$/;"	f	file:
show_cpuhp_states	cpu.c	/^static ssize_t show_cpuhp_states(struct device *dev,$/;"	f	file:
show_cpuhp_target	cpu.c	/^static ssize_t show_cpuhp_target(struct device *dev,$/;"	f	file:
show_cpumask	padata.c	/^static ssize_t show_cpumask(struct padata_instance *pinst,$/;"	f	file:
show_delegatable_files	cgroup/cgroup.c	/^static ssize_t show_delegatable_files(struct cftype *files, char *buf,$/;"	f	file:
show_event_seq_ops	trace/trace_events.c	/^static const struct seq_operations show_event_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_format_seq_ops	trace/trace_printk.c	/^static const struct seq_operations show_format_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_ftrace_seq_ops	trace/ftrace.c	/^static const struct seq_operations show_ftrace_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_header	trace/trace_events.c	/^show_header(struct file *filp, char __user *ubuf, size_t cnt, loff_t *ppos)$/;"	f	file:
show_initsize	module.c	/^static ssize_t show_initsize(struct module_attribute *mattr,$/;"	f	file:
show_initstate	module.c	/^static ssize_t show_initstate(struct module_attribute *mattr,$/;"	f	file:
show_interrupts	irq/proc.c	/^int show_interrupts(struct seq_file *p, void *v)$/;"	f
show_irq_affinity	irq/proc.c	/^static int show_irq_affinity(int type, struct seq_file *m)$/;"	f	file:
show_kprobe_addr	kprobes.c	/^static int show_kprobe_addr(struct seq_file *pi, void *v)$/;"	f	file:
show_num_errors	dma/debug.c	/^static u32 show_num_errors = 1;$/;"	v	file:
show_numa_stats	sched/fair.c	/^void show_numa_stats(struct task_struct *p, struct seq_file *m)$/;"	f
show_pwq	workqueue.c	/^static void show_pwq(struct pool_workqueue *pwq)$/;"	f	file:
show_rcu_gp_kthreads	rcu/rcu.h	/^static inline void show_rcu_gp_kthreads(void) { }$/;"	f
show_rcu_gp_kthreads	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(show_rcu_gp_kthreads);$/;"	v
show_rcu_gp_kthreads	rcu/tree_stall.h	/^void show_rcu_gp_kthreads(void)$/;"	f
show_refcnt	module.c	/^static ssize_t show_refcnt(struct module_attribute *mattr,$/;"	f	file:
show_schedstat	sched/stats.c	/^static int show_schedstat(struct seq_file *seq, void *v)$/;"	f	file:
show_set_event_seq_ops	trace/trace_events.c	/^static const struct seq_operations show_set_event_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_set_pid_seq_ops	trace/trace_events.c	/^static const struct seq_operations show_set_pid_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_smt_active	cpu.c	/^show_smt_active(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
show_smt_control	cpu.c	/^show_smt_control(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
show_snapshot_main_help	trace/trace.c	/^static void show_snapshot_main_help(struct seq_file *m)$/;"	f	file:
show_snapshot_percpu_help	trace/trace.c	/^static void show_snapshot_percpu_help(struct seq_file *m)$/;"	f	file:
show_special	auditsc.c	/^static void show_special(struct audit_context *context, int *call_panic)$/;"	f	file:
show_state_filter	sched/core.c	/^void show_state_filter(unsigned long state_filter)$/;"	f
show_taint	module.c	/^static ssize_t show_taint(struct module_attribute *mattr,$/;"	f	file:
show_traces_fops	trace/trace.c	/^static const struct file_operations show_traces_fops = {$/;"	v	typeref:struct:file_operations	file:
show_traces_open	trace/trace.c	/^static int show_traces_open(struct inode *inode, struct file *file)$/;"	f	file:
show_traces_seq_ops	trace/trace.c	/^static const struct seq_operations show_traces_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_value	kallsyms.c	/^	int show_value;$/;"	m	struct:kallsym_iter	file:
show_workqueue_state	workqueue.c	/^void show_workqueue_state(void)$/;"	f
shuffle_idle_cpu	torture.c	/^static int shuffle_idle_cpu;	\/* Force all torture tasks off this CPU *\/$/;"	v	file:
shuffle_interval	torture.c	/^static long shuffle_interval;	\/* In jiffies. *\/$/;"	v	file:
shuffle_task	torture.c	/^struct shuffle_task {$/;"	s	file:
shuffle_task_list	torture.c	/^static struct list_head shuffle_task_list = LIST_HEAD_INIT(shuffle_task_list);$/;"	v	typeref:struct:list_head	file:
shuffle_tmp_mask	torture.c	/^static cpumask_var_t shuffle_tmp_mask;$/;"	v	file:
shuffler_task	torture.c	/^static struct task_struct *shuffler_task;$/;"	v	typeref:struct:task_struct	file:
shutdown	sys_ni.c	/^COND_SYSCALL(shutdown);$/;"	v
shutdown_task	rcu/rcuperf.c	/^static struct task_struct *shutdown_task;$/;"	v	typeref:struct:task_struct	file:
shutdown_task	torture.c	/^static struct task_struct *shutdown_task;$/;"	v	typeref:struct:task_struct	file:
shutdown_time	torture.c	/^static ktime_t shutdown_time;		\/* time to system shutdown. *\/$/;"	v	file:
shutdown_wq	rcu/rcuperf.c	/^static wait_queue_head_t shutdown_wq;$/;"	v	file:
si_expansion	signal.c	/^static inline char __user *si_expansion(const siginfo_t __user *info)$/;"	f	file:
si_fromuser	signal.c	/^static inline bool si_fromuser(const struct kernel_siginfo *info)$/;"	f	file:
siblings	sched/sched.h	/^	struct list_head	siblings;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
sig	power/swap.c	/^	char	sig[10];$/;"	m	struct:swsusp_header	file:
sig	trace/bpf_trace.c	/^	u32 sig;$/;"	m	struct:send_signal_irq_work	file:
sig_enforce	module.c	/^static bool sig_enforce = IS_ENABLED(CONFIG_MODULE_SIG_FORCE);$/;"	v	file:
sig_handler	signal.c	/^static void __user *sig_handler(struct task_struct *t, int sig)$/;"	f	file:
sig_handler_ignored	signal.c	/^static inline bool sig_handler_ignored(void __user *handler, int sig)$/;"	f	file:
sig_ignored	signal.c	/^static bool sig_ignored(struct task_struct *t, int sig, bool force)$/;"	f	file:
sig_len	module_signing.c	/^	__be32	sig_len;	\/* Length of signature data *\/$/;"	m	struct:module_signature	file:
sig_ok	module-internal.h	/^	bool sig_ok;$/;"	m	struct:load_info
sig_sicodes	signal.c	/^} sig_sicodes[] = {$/;"	v	typeref:struct:__anon90	file:
sig_task_ignored	signal.c	/^static bool sig_task_ignored(struct task_struct *t, int sig, bool force)$/;"	f	file:
sigaction_compat_abi	signal.c	/^void __weak sigaction_compat_abi(struct k_sigaction *act,$/;"	f
sigev_signo	audit.h	/^			int			sigev_signo;$/;"	m	struct:audit_context::__anon53::__anon57
sighand_cachep	fork.c	/^struct kmem_cache *sighand_cachep;$/;"	v	typeref:struct:kmem_cache
sighand_ctor	fork.c	/^static void sighand_ctor(void *data)$/;"	f	file:
siginfo_buildtime_checks	signal.c	/^static inline void siginfo_buildtime_checks(void)$/;"	f	file:
siginfo_layout	signal.c	/^enum siginfo_layout siginfo_layout(unsigned sig, int si_code)$/;"	f
sigkill_pending	signal.c	/^static bool sigkill_pending(struct task_struct *tsk)$/;"	f	file:
signal_cachep	fork.c	/^static struct kmem_cache *signal_cachep;$/;"	v	typeref:struct:kmem_cache	file:
signal_delivered	signal.c	/^static void signal_delivered(struct ksignal *ksig, int stepping)$/;"	f	file:
signal_setup_done	signal.c	/^void signal_setup_done(int failed, struct ksignal *ksig, int stepping)$/;"	f
signal_wake_up_state	signal.c	/^void signal_wake_up_state(struct task_struct *t, unsigned int state)$/;"	f
signalfd	sys_ni.c	/^COND_SYSCALL(signalfd);$/;"	v
signalfd	sys_ni.c	/^COND_SYSCALL_COMPAT(signalfd);$/;"	v
signalfd4	sys_ni.c	/^COND_SYSCALL(signalfd4);$/;"	v
signalfd4	sys_ni.c	/^COND_SYSCALL_COMPAT(signalfd4);$/;"	v
signals_init	signal.c	/^void __init signals_init(void)$/;"	f
signed_add_overflows	bpf/verifier.c	/^static bool signed_add_overflows(s64 a, s64 b)$/;"	f	file:
signed_sub_overflows	bpf/verifier.c	/^static bool signed_sub_overflows(s64 a, s64 b)$/;"	f	file:
signer_len	module_signing.c	/^	u8	signer_len;	\/* Length of signer's name [0] *\/$/;"	m	struct:module_signature	file:
signo	debug/debug_core.h	/^	int			signo;$/;"	m	struct:kgdb_state
sigprocmask	signal.c	/^EXPORT_SYMBOL(sigprocmask);$/;"	v
sigprocmask	signal.c	/^int sigprocmask(int how, sigset_t *set, sigset_t *oldset)$/;"	f
sigqueue_alloc	signal.c	/^struct sigqueue *sigqueue_alloc(void)$/;"	f
sigqueue_cachep	signal.c	/^static struct kmem_cache *sigqueue_cachep;$/;"	v	typeref:struct:kmem_cache	file:
sigqueue_free	signal.c	/^void sigqueue_free(struct sigqueue *q)$/;"	f
sigsuspend	signal.c	/^static int sigsuspend(sigset_t *set)$/;"	f	file:
sim	irq/irq_sim.c	/^	struct irq_sim		*sim;$/;"	m	struct:irq_sim_devres	typeref:struct:irq_sim_devres::irq_sim	file:
simple_align_resource	resource.c	/^static resource_size_t simple_align_resource(void *data,$/;"	f	file:
simplify_symbols	module.c	/^static int simplify_symbols(struct module *mod, const struct load_info *info)$/;"	f	file:
single	cpu.c	/^		int		(*single)(unsigned int cpu);$/;"	m	union:cpuhp_step::__anon18	file:
single	cpu.c	/^		int		(*single)(unsigned int cpu);$/;"	m	union:cpuhp_step::__anon19	file:
single	cpu.c	/^	bool			single;$/;"	m	struct:cpuhp_cpu_state	file:
single_task_running	sched/core.c	/^EXPORT_SYMBOL(single_task_running);$/;"	v
single_task_running	sched/core.c	/^bool single_task_running(void)$/;"	f
six_hundred_forty_kb	sysctl.c	/^static int six_hundred_forty_kb = 640 * 1024;$/;"	v	file:
sixty	sysctl.c	/^static int sixty = 60;$/;"	v	file:
size	bpf/queue_stack_maps.c	/^	u32 size; \/* max_entries + 1 *\/$/;"	m	struct:bpf_queue_stack	file:
size	debug/kdb/kdb_support.c	/^	u32 size;$/;"	m	struct:debug_alloc_header	file:
size	dma/coherent.c	/^	int		size;$/;"	m	struct:dma_coherent_mem	file:
size	dma/debug.c	/^	u64              size;$/;"	m	struct:dma_debug_entry	file:
size	dma/mapping.c	/^	size_t		size;$/;"	m	struct:dma_devres	file:
size	gcov/clang.c	/^	size_t size;$/;"	m	struct:gcov_iterator	file:
size	gcov/gcc_4_7.c	/^	size_t size;$/;"	m	struct:gcov_iterator	file:
size	kcov.c	/^	unsigned		size;$/;"	m	struct:kcov	file:
size	power/power.h	/^	unsigned long		size;$/;"	m	struct:swsusp_info
size	sched/cpudeadline.h	/^	int			size;$/;"	m	struct:cpudl
size	stacktrace.c	/^	unsigned int	size;$/;"	m	struct:stacktrace_cookie	file:
size	trace/ftrace.c	/^	int			size;$/;"	m	struct:ftrace_page	file:
size	trace/ftrace.c	/^	unsigned int		size;$/;"	m	struct:ftrace_mod_func	file:
size	trace/ring_buffer.c	/^	int size;$/;"	m	struct:rb_item	file:
size	trace/trace.h	/^	int			size;$/;"	m	struct:ftrace_event_field
size	trace/trace.h	/^	unsigned	size;$/;"	m	struct:trace_parser
size	trace/trace_events_hist.c	/^	size_t size;$/;"	m	struct:synth_field	file:
size	trace/trace_events_hist.c	/^	unsigned int			size;$/;"	m	struct:hist_field	file:
size	trace/trace_probe.h	/^			unsigned int size;$/;"	m	struct:fetch_insn::__anon21::__anon22
size	trace/trace_probe.h	/^	size_t			size;		\/* Byte size of type *\/$/;"	m	struct:fetch_type
size	trace/trace_probe.h	/^	ssize_t				size;	\/* trace entry size *\/$/;"	m	struct:trace_probe
size_avail	debug/kdb/kdb_io.c	/^static int  size_avail;$/;"	v	file:
size_bits	trace/trace.h	/^	unsigned long		size_bits;$/;"	m	struct:ftrace_hash
size_bytes	dma/contiguous.c	/^static const phys_addr_t size_bytes = (phys_addr_t)CMA_SIZE_MBYTES * SZ_1M;$/;"	v	file:
size_cmdline	dma/contiguous.c	/^static phys_addr_t size_cmdline = -1;$/;"	v	file:
sk	audit.c	/^	struct sock *sk;$/;"	m	struct:audit_net	typeref:struct:audit_net::sock	file:
skb	audit.c	/^	struct sk_buff       *skb;	\/* formatted skb ready to send *\/$/;"	m	struct:audit_buffer	typeref:struct:audit_buffer::sk_buff	file:
skb	audit.c	/^	struct sk_buff *skb;$/;"	m	struct:audit_reply	typeref:struct:audit_reply::sk_buff	file:
skb_copy_bits	bpf/core.c	/^int __weak skb_copy_bits(const struct sk_buff *skb, int offset, void *to,$/;"	f
skew_tick	time/tick-sched.c	/^static int __init skew_tick(char *str)$/;"	f	file:
skip	sched/sched.h	/^	struct sched_entity	*skip;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
skip	stacktrace.c	/^	unsigned int	skip;$/;"	m	struct:stacktrace_cookie	file:
skip_blocked_update	sched/fair.c	/^static inline bool skip_blocked_update(struct sched_entity *se)$/;"	f	file:
skip_erasing	stackleak.c	46;"	d	file:
skip_erasing	stackleak.c	48;"	d	file:
skip_lockevent	locking/lock_events.c	/^static bool __init skip_lockevent(const char *name)$/;"	f	file:
skip_lockevent	locking/lock_events.c	/^static inline bool skip_lockevent(const char *name)$/;"	f	file:
skip_time_extend	trace/ring_buffer.c	141;"	d	file:
skipped_entries	trace/trace.h	/^	unsigned long		skipped_entries;$/;"	m	struct:trace_array_cpu
slack_started	sched/sched.h	/^	u8			slack_started;$/;"	m	struct:cfs_bandwidth
slack_timer	sched/sched.h	/^	struct hrtimer		slack_timer;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer
slaves_in_kgdb	debug/debug_core.c	/^static atomic_t			slaves_in_kgdb;$/;"	v	file:
sleep_state_supported	power/suspend.c	/^static bool sleep_state_supported(suspend_state_t state)$/;"	f	file:
sleep_time_bin	time/timekeeping_debug.c	/^static unsigned int sleep_time_bin[NUM_BINS] = {0};$/;"	v	file:
sleeping	workqueue_internal.h	/^	int			sleeping;	\/* None *\/$/;"	m	struct:worker
slot_count	events/uprobes.c	/^	atomic_t 			slot_count;	\/* number of in-use slots *\/$/;"	m	struct:xol_area	file:
slot_type_char	bpf/verifier.c	/^static char slot_type_char[] = {$/;"	v	file:
slot_used	kprobes.c	/^	char slot_used[];$/;"	m	struct:kprobe_insn_page	file:
slots_per_page	kprobes.c	/^static int slots_per_page(struct kprobe_insn_cache *c)$/;"	f	file:
slow_acct_process	acct.c	/^static void slow_acct_process(struct pid_namespace *ns)$/;"	f	file:
slow_gps	rcu/rcutorture.c	/^	int slow_gps;$/;"	m	struct:rcu_torture_ops	file:
smp_call_function	smp.c	/^EXPORT_SYMBOL(smp_call_function);$/;"	v
smp_call_function	smp.c	/^void smp_call_function(smp_call_func_t func, void *info, int wait)$/;"	f
smp_call_function_any	smp.c	/^EXPORT_SYMBOL_GPL(smp_call_function_any);$/;"	v
smp_call_function_any	smp.c	/^int smp_call_function_any(const struct cpumask *mask,$/;"	f
smp_call_function_many	smp.c	/^EXPORT_SYMBOL(smp_call_function_many);$/;"	v
smp_call_function_many	smp.c	/^void smp_call_function_many(const struct cpumask *mask,$/;"	f
smp_call_function_single	smp.c	/^EXPORT_SYMBOL(smp_call_function_single);$/;"	v
smp_call_function_single	smp.c	/^int smp_call_function_single(int cpu, smp_call_func_t func, void *info,$/;"	f
smp_call_function_single	up.c	/^EXPORT_SYMBOL(smp_call_function_single);$/;"	v
smp_call_function_single	up.c	/^int smp_call_function_single(int cpu, void (*func) (void *info), void *info,$/;"	f
smp_call_function_single_async	smp.c	/^EXPORT_SYMBOL_GPL(smp_call_function_single_async);$/;"	v
smp_call_function_single_async	smp.c	/^int smp_call_function_single_async(int cpu, call_single_data_t *csd)$/;"	f
smp_call_function_single_async	up.c	/^EXPORT_SYMBOL(smp_call_function_single_async);$/;"	v
smp_call_function_single_async	up.c	/^int smp_call_function_single_async(int cpu, call_single_data_t *csd)$/;"	f
smp_call_on_cpu	smp.c	/^EXPORT_SYMBOL_GPL(smp_call_on_cpu);$/;"	v
smp_call_on_cpu	smp.c	/^int smp_call_on_cpu(unsigned int cpu, int (*func)(void *), void *par, bool phys)$/;"	f
smp_call_on_cpu	up.c	/^EXPORT_SYMBOL_GPL(smp_call_on_cpu);$/;"	v
smp_call_on_cpu	up.c	/^int smp_call_on_cpu(unsigned int cpu, int (*func)(void *), void *par, bool phys)$/;"	f
smp_call_on_cpu_callback	smp.c	/^static void smp_call_on_cpu_callback(struct work_struct *work)$/;"	f	file:
smp_call_on_cpu_struct	smp.c	/^struct smp_call_on_cpu_struct {$/;"	s	file:
smp_init	smp.c	/^void __init smp_init(void)$/;"	f
smpboot_create_threads	smpboot.c	/^int smpboot_create_threads(unsigned int cpu)$/;"	f
smpboot_destroy_threads	smpboot.c	/^static void smpboot_destroy_threads(struct smp_hotplug_thread *ht)$/;"	f	file:
smpboot_park_thread	smpboot.c	/^static void smpboot_park_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
smpboot_park_threads	smpboot.c	/^int smpboot_park_threads(unsigned int cpu)$/;"	f
smpboot_register_percpu_thread	smpboot.c	/^EXPORT_SYMBOL_GPL(smpboot_register_percpu_thread);$/;"	v
smpboot_register_percpu_thread	smpboot.c	/^int smpboot_register_percpu_thread(struct smp_hotplug_thread *plug_thread)$/;"	f
smpboot_thread_data	smpboot.c	/^struct smpboot_thread_data {$/;"	s	file:
smpboot_thread_fn	smpboot.c	/^static int smpboot_thread_fn(void *data)$/;"	f	file:
smpboot_unpark_thread	smpboot.c	/^static void smpboot_unpark_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
smpboot_unpark_threads	smpboot.c	/^int smpboot_unpark_threads(unsigned int cpu)$/;"	f
smpboot_unregister_percpu_thread	smpboot.c	/^EXPORT_SYMBOL_GPL(smpboot_unregister_percpu_thread);$/;"	v
smpboot_unregister_percpu_thread	smpboot.c	/^void smpboot_unregister_percpu_thread(struct smp_hotplug_thread *plug_thread)$/;"	f
smpcfd_dead_cpu	smp.c	/^int smpcfd_dead_cpu(unsigned int cpu)$/;"	f
smpcfd_dying_cpu	smp.c	/^int smpcfd_dying_cpu(unsigned int cpu)$/;"	f
smpcfd_prepare_cpu	smp.c	/^int smpcfd_prepare_cpu(unsigned int cpu)$/;"	f
smt_cmdline_disable	cpu.c	/^static int __init smt_cmdline_disable(char *str)$/;"	f	file:
smt_states	cpu.c	/^static const char *smt_states[] = {$/;"	v	file:
snapshot_action	trace/trace_events_hist.c	/^static struct action_data *snapshot_action(struct hist_trigger_data *hist_data)$/;"	f	file:
snapshot_additional_pages	power/snapshot.c	/^unsigned int snapshot_additional_pages(struct zone *zone)$/;"	f
snapshot_compat_ioctl	power/user.c	/^snapshot_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
snapshot_context	trace/trace_events_hist.c	/^struct snapshot_context {$/;"	s	file:
snapshot_count_probe_ops	trace/trace.c	/^static struct ftrace_probe_ops snapshot_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
snapshot_count_trigger	trace/trace_events_trigger.c	/^snapshot_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
snapshot_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops snapshot_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
snapshot_data	power/user.c	/^static struct snapshot_data {$/;"	s	file:
snapshot_device	power/user.c	/^static struct miscdevice snapshot_device = {$/;"	v	typeref:struct:miscdevice	file:
snapshot_device_available	power/user.c	/^atomic_t snapshot_device_available = ATOMIC_INIT(1);$/;"	v
snapshot_device_init	power/user.c	/^device_initcall(snapshot_device_init);$/;"	v
snapshot_device_init	power/user.c	/^static int __init snapshot_device_init(void)$/;"	f	file:
snapshot_fops	power/user.c	/^static const struct file_operations snapshot_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_fops	trace/trace.c	/^static const struct file_operations snapshot_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_get_image_size	power/snapshot.c	/^unsigned long snapshot_get_image_size(void)$/;"	f
snapshot_get_trigger_ops	trace/trace_events_trigger.c	/^snapshot_get_trigger_ops(char *cmd, char *param)$/;"	f	file:
snapshot_handle	power/power.h	/^struct snapshot_handle {$/;"	s
snapshot_image_loaded	power/snapshot.c	/^int snapshot_image_loaded(struct snapshot_handle *handle)$/;"	f
snapshot_ioctl	power/user.c	/^static long snapshot_ioctl(struct file *filp, unsigned int cmd,$/;"	f	file:
snapshot_open	power/user.c	/^static int snapshot_open(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_probe_ops	trace/trace.c	/^static struct ftrace_probe_ops snapshot_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
snapshot_raw_fops	trace/trace.c	/^static const struct file_operations snapshot_raw_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_raw_open	trace/trace.c	/^static int snapshot_raw_open(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_read	power/user.c	/^static ssize_t snapshot_read(struct file *filp, char __user *buf,$/;"	f	file:
snapshot_read_next	power/snapshot.c	/^int snapshot_read_next(struct snapshot_handle *handle)$/;"	f
snapshot_release	power/user.c	/^static int snapshot_release(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_state	power/user.c	/^} snapshot_state;$/;"	v	typeref:struct:snapshot_data	file:
snapshot_trigger	trace/trace_events_trigger.c	/^snapshot_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
snapshot_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops snapshot_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
snapshot_trigger_print	trace/trace_events_trigger.c	/^snapshot_trigger_print(struct seq_file *m, struct event_trigger_ops *ops,$/;"	f	file:
snapshot_write	power/user.c	/^static ssize_t snapshot_write(struct file *filp, const char __user *buf,$/;"	f	file:
snapshot_write_finalize	power/snapshot.c	/^void snapshot_write_finalize(struct snapshot_handle *handle)$/;"	f
snapshot_write_next	power/snapshot.c	/^int snapshot_write_next(struct snapshot_handle *handle)$/;"	f
snprint_time	locking/lockdep_proc.c	/^static void snprint_time(char *buf, size_t bufsiz, s64 nr)$/;"	f	file:
sockaddr	audit.h	/^	struct sockaddr_storage *sockaddr;$/;"	m	struct:audit_context	typeref:struct:audit_context::sockaddr_storage
sockaddr_len	audit.h	/^	size_t sockaddr_len;$/;"	m	struct:audit_context
socket	sys_ni.c	/^COND_SYSCALL(socket);$/;"	v
socketcall	audit.h	/^		} socketcall;$/;"	m	union:audit_context::__anon53	typeref:struct:audit_context::__anon53::__anon54
socketcall	sys_ni.c	/^COND_SYSCALL(socketcall);$/;"	v
socketcall	sys_ni.c	/^COND_SYSCALL_COMPAT(socketcall);$/;"	v
socketpair	sys_ni.c	/^COND_SYSCALL(socketpair);$/;"	v
sockopt_alloc_buf	bpf/cgroup.c	/^static int sockopt_alloc_buf(struct bpf_sockopt_kern *ctx, int max_optlen)$/;"	f	file:
sockopt_free_buf	bpf/cgroup.c	/^static void sockopt_free_buf(struct bpf_sockopt_kern *ctx)$/;"	f	file:
soft_lockup_nmi_warn	watchdog.c	/^static unsigned long soft_lockup_nmi_warn;$/;"	v	file:
soft_watchdog_user_enabled	watchdog.c	/^int __read_mostly soft_watchdog_user_enabled = 1;$/;"	v
softirq_init	softirq.c	/^void __init softirq_init(void)$/;"	f
softirq_snap	rcu/tree.h	/^	unsigned int softirq_snap;	\/* Snapshot of softirq activity. *\/$/;"	m	struct:rcu_data
softirq_threads	softirq.c	/^static struct smp_hotplug_thread softirq_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
softirq_to_name	softirq.c	/^const char * const softirq_to_name[NR_SOFTIRQS] = {$/;"	v
softirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_off_events;$/;"	m	struct:lockdep_stats
softirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_on_events;$/;"	m	struct:lockdep_stats
softlockup_all_cpu_backtrace_setup	watchdog.c	/^static int __init softlockup_all_cpu_backtrace_setup(char *str)$/;"	f	file:
softlockup_fn	watchdog.c	/^static int softlockup_fn(void *data)$/;"	f	file:
softlockup_panic	watchdog.c	/^unsigned int __read_mostly softlockup_panic =$/;"	v
softlockup_panic_setup	watchdog.c	/^static int __init softlockup_panic_setup(char *str)$/;"	f	file:
softlockup_start_all	watchdog.c	/^static void softlockup_start_all(void)$/;"	f	file:
softlockup_start_fn	watchdog.c	/^static int softlockup_start_fn(void *data)$/;"	f	file:
softlockup_stop_all	watchdog.c	/^static void softlockup_stop_all(void)$/;"	f	file:
softlockup_stop_fn	watchdog.c	/^static int softlockup_stop_fn(void *data)$/;"	f	file:
software_resume	power/hibernate.c	/^late_initcall_sync(software_resume);$/;"	v
software_resume	power/hibernate.c	/^static int software_resume(void)$/;"	f	file:
sort_idmaps	user_namespace.c	/^static int sort_idmaps(struct uid_gid_map *map)$/;"	f	file:
sort_key	trace/tracing_map.h	/^	struct tracing_map_sort_key	sort_key;$/;"	m	struct:tracing_map	typeref:struct:tracing_map::tracing_map_sort_key
sort_key_str	trace/trace_events_hist.c	/^	char		*sort_key_str;$/;"	m	struct:hist_trigger_attrs	file:
sort_keys	trace/trace_events_hist.c	/^	struct tracing_map_sort_key	sort_keys[TRACING_MAP_SORT_KEYS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::tracing_map_sort_key	file:
sort_main_extable	extable.c	/^void __init sort_main_extable(void)$/;"	f
sort_range	range.c	/^void sort_range(struct range *range, int nr_range)$/;"	f
sort_secondary	trace/tracing_map.c	/^static void sort_secondary(struct tracing_map *map,$/;"	f	file:
span	sched/sched.h	/^	cpumask_var_t		span;$/;"	m	struct:root_domain
spare	trace/trace.c	/^	void			*spare;$/;"	m	struct:ftrace_buffer_info	file:
spare_cpu	trace/trace.c	/^	unsigned int		spare_cpu;$/;"	m	struct:ftrace_buffer_info	file:
spawn_ksoftirqd	softirq.c	/^early_initcall(spawn_ksoftirqd);$/;"	v
spawn_ksoftirqd	softirq.c	/^static __init int spawn_ksoftirqd(void)$/;"	f	file:
spin_bug	locking/spinlock_debug.c	/^static void spin_bug(raw_spinlock_t *lock, const char *msg)$/;"	f	file:
spin_dump	locking/spinlock_debug.c	/^static void spin_dump(raw_spinlock_t *lock, const char *msg)$/;"	f	file:
spin_lock_irq_ops	locking/locktorture.c	/^static struct lock_torture_ops spin_lock_irq_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
spin_lock_irq_rcu_node	rcu/srcutree.c	59;"	d	file:
spin_lock_irqsave_rcu_node	rcu/srcutree.c	68;"	d	file:
spin_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops spin_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
spin_lock_rcu_node	rcu/srcutree.c	51;"	d	file:
spin_msec	panic.c	/^static void spin_msec(int msecs)$/;"	f	file:
spin_unlock_irq_rcu_node	rcu/srcutree.c	65;"	d	file:
spin_unlock_irqrestore_rcu_node	rcu/srcutree.c	74;"	d	file:
spin_unlock_rcu_node	rcu/srcutree.c	57;"	d	file:
spinlock	dma/coherent.c	/^	spinlock_t	spinlock;$/;"	m	struct:dma_coherent_mem	file:
splice_read	trace/trace.h	/^	ssize_t			(*splice_read)(struct trace_iterator *iter,$/;"	m	struct:tracer
sprint_backtrace	kallsyms.c	/^int sprint_backtrace(char *buffer, unsigned long address)$/;"	f
sprint_symbol	kallsyms.c	/^EXPORT_SYMBOL_GPL(sprint_symbol);$/;"	v
sprint_symbol	kallsyms.c	/^int sprint_symbol(char *buffer, unsigned long address)$/;"	f
sprint_symbol_no_offset	kallsyms.c	/^EXPORT_SYMBOL_GPL(sprint_symbol_no_offset);$/;"	v
sprint_symbol_no_offset	kallsyms.c	/^int sprint_symbol_no_offset(char *buffer, unsigned long address)$/;"	f
spu_create	sys_ni.c	/^COND_SYSCALL(spu_create);$/;"	v
spu_run	sys_ni.c	/^COND_SYSCALL(spu_run);$/;"	v
src_cpu	sched/core.c	/^	int src_cpu, dst_cpu;$/;"	m	struct:migration_swap_arg	file:
src_cpu	sched/fair.c	/^	int			src_cpu;$/;"	m	struct:lb_env	file:
src_cpu	sched/fair.c	/^	int src_cpu, src_nid;$/;"	m	struct:task_numa_env	file:
src_csets	cgroup/cgroup-internal.h	/^	struct list_head	src_csets;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head
src_grp_type	sched/fair.c	/^	enum group_type		src_grp_type;$/;"	m	struct:lb_env	typeref:enum:lb_env::group_type	file:
src_nid	sched/fair.c	/^	int src_cpu, src_nid;$/;"	m	struct:task_numa_env	file:
src_rq	sched/fair.c	/^	struct rq		*src_rq;$/;"	m	struct:lb_env	typeref:struct:lb_env::rq	file:
src_stats	sched/fair.c	/^	struct numa_stats src_stats, dst_stats;$/;"	m	struct:task_numa_env	typeref:struct:task_numa_env::numa_stats	file:
src_task	sched/core.c	/^	struct task_struct *src_task, *dst_task;$/;"	m	struct:migration_swap_arg	typeref:struct:migration_swap_arg::task_struct	file:
srctree	gcov/fs.c	/^static const char srctree[] = SRCTREE;$/;"	v	file:
srcu_advance_state	rcu/srcutree.c	/^static void srcu_advance_state(struct srcu_struct *ssp)$/;"	f	file:
srcu_barrier	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(srcu_barrier);$/;"	v
srcu_barrier	rcu/srcutree.c	/^void srcu_barrier(struct srcu_struct *ssp)$/;"	f
srcu_barrier_cb	rcu/srcutree.c	/^static void srcu_barrier_cb(struct rcu_head *rhp)$/;"	f	file:
srcu_batches_completed	rcu/rcu.h	/^srcu_batches_completed(struct srcu_struct *sp) { return 0; }$/;"	f
srcu_batches_completed	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(srcu_batches_completed);$/;"	v
srcu_batches_completed	rcu/srcutree.c	/^unsigned long srcu_batches_completed(struct srcu_struct *ssp)$/;"	f
srcu_bootup_announce	rcu/srcutree.c	/^early_initcall(srcu_bootup_announce);$/;"	v
srcu_bootup_announce	rcu/srcutree.c	/^static int __init srcu_bootup_announce(void)$/;"	f	file:
srcu_call_rcu	rcu/rcuperf.c	/^static void srcu_call_rcu(struct rcu_head *head, rcu_callback_t func)$/;"	f	file:
srcu_ctl	rcu/rcutorture.c	/^DEFINE_STATIC_SRCU(srcu_ctl);$/;"	v
srcu_ctl_perf	rcu/rcuperf.c	/^DEFINE_STATIC_SRCU(srcu_ctl_perf);$/;"	v
srcu_ctld	rcu/rcutorture.c	/^static struct srcu_struct srcu_ctld;$/;"	v	typeref:struct:srcu_struct	file:
srcu_ctlp	rcu/rcuperf.c	/^static struct srcu_struct *srcu_ctlp = &srcu_ctl_perf;$/;"	v	typeref:struct:srcu_struct	file:
srcu_ctlp	rcu/rcutorture.c	/^static struct srcu_struct *srcu_ctlp = &srcu_ctl;$/;"	v	typeref:struct:srcu_struct	file:
srcu_delay_timer	rcu/srcutree.c	/^static void srcu_delay_timer(struct timer_list *t)$/;"	f	file:
srcu_drive_gp	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(srcu_drive_gp);$/;"	v
srcu_drive_gp	rcu/srcutiny.c	/^void srcu_drive_gp(struct work_struct *wp)$/;"	f
srcu_flip	rcu/srcutree.c	/^static void srcu_flip(struct srcu_struct *ssp)$/;"	f	file:
srcu_for_each_node_breadth_first	rcu/rcu.h	332;"	d
srcu_free_old_probes	tracepoint.c	/^static void srcu_free_old_probes(struct rcu_head *head)$/;"	f	file:
srcu_funnel_exp_start	rcu/srcutree.c	/^static void srcu_funnel_exp_start(struct srcu_struct *ssp, struct srcu_node *snp,$/;"	f	file:
srcu_funnel_gp_start	rcu/srcutree.c	/^static void srcu_funnel_gp_start(struct srcu_struct *ssp, struct srcu_data *sdp,$/;"	f	file:
srcu_get_delay	rcu/srcutree.c	/^static unsigned long srcu_get_delay(struct srcu_struct *ssp)$/;"	f	file:
srcu_gp_end	rcu/srcutree.c	/^static void srcu_gp_end(struct srcu_struct *ssp)$/;"	f	file:
srcu_gp_start	rcu/srcutree.c	/^static void srcu_gp_start(struct srcu_struct *ssp)$/;"	f	file:
srcu_init	rcu/rcu.h	/^static inline void srcu_init(void) { }$/;"	f
srcu_init	rcu/srcutiny.c	/^void __init srcu_init(void)$/;"	f
srcu_init	rcu/srcutree.c	/^void __init srcu_init(void)$/;"	f
srcu_init_done	rcu/srcutiny.c	/^static bool srcu_init_done;$/;"	v	file:
srcu_init_done	rcu/srcutree.c	/^static bool __read_mostly srcu_init_done;$/;"	v	file:
srcu_init_notifier_head	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_init_notifier_head);$/;"	v
srcu_init_notifier_head	notifier.c	/^void srcu_init_notifier_head(struct srcu_notifier_head *nh)$/;"	f
srcu_invoke_callbacks	rcu/srcutree.c	/^static void srcu_invoke_callbacks(struct work_struct *work)$/;"	f	file:
srcu_leak_callback	rcu/srcutree.c	/^static void srcu_leak_callback(struct rcu_head *rhp)$/;"	f	file:
srcu_might_be_idle	rcu/srcutree.c	/^static bool srcu_might_be_idle(struct srcu_struct *ssp)$/;"	f	file:
srcu_module_coming	rcu/srcutree.c	/^static int srcu_module_coming(struct module *mod)$/;"	f	file:
srcu_module_going	rcu/srcutree.c	/^static void srcu_module_going(struct module *mod)$/;"	f	file:
srcu_module_nb	rcu/srcutree.c	/^static struct notifier_block srcu_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
srcu_module_notify	rcu/srcutree.c	/^static int srcu_module_notify(struct notifier_block *self,$/;"	f	file:
srcu_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_call_chain);$/;"	v
srcu_notifier_call_chain	notifier.c	/^int srcu_notifier_call_chain(struct srcu_notifier_head *nh,$/;"	f
srcu_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_chain_register);$/;"	v
srcu_notifier_chain_register	notifier.c	/^int srcu_notifier_chain_register(struct srcu_notifier_head *nh,$/;"	f
srcu_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_chain_unregister);$/;"	v
srcu_notifier_chain_unregister	notifier.c	/^int srcu_notifier_chain_unregister(struct srcu_notifier_head *nh,$/;"	f
srcu_ops	rcu/rcuperf.c	/^static struct rcu_perf_ops srcu_ops = {$/;"	v	typeref:struct:rcu_perf_ops	file:
srcu_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops srcu_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_perf_completed	rcu/rcuperf.c	/^static unsigned long srcu_perf_completed(void)$/;"	f	file:
srcu_perf_synchronize	rcu/rcuperf.c	/^static void srcu_perf_synchronize(void)$/;"	f	file:
srcu_perf_synchronize_expedited	rcu/rcuperf.c	/^static void srcu_perf_synchronize_expedited(void)$/;"	f	file:
srcu_queue_delayed_work_on	rcu/srcutree.c	/^static void srcu_queue_delayed_work_on(struct srcu_data *sdp,$/;"	f	file:
srcu_rcu_barrier	rcu/rcuperf.c	/^static void srcu_rcu_barrier(void)$/;"	f	file:
srcu_read_delay	rcu/rcutorture.c	/^srcu_read_delay(struct torture_random_state *rrsp, struct rt_read_seg *rtrsp)$/;"	f	file:
srcu_readers_active	rcu/srcutree.c	/^static bool srcu_readers_active(struct srcu_struct *ssp)$/;"	f	file:
srcu_readers_active_idx_check	rcu/srcutree.c	/^static bool srcu_readers_active_idx_check(struct srcu_struct *ssp, int idx)$/;"	f	file:
srcu_readers_lock_idx	rcu/srcutree.c	/^static unsigned long srcu_readers_lock_idx(struct srcu_struct *ssp, int idx)$/;"	f	file:
srcu_readers_unlock_idx	rcu/srcutree.c	/^static unsigned long srcu_readers_unlock_idx(struct srcu_struct *ssp, int idx)$/;"	f	file:
srcu_reschedule	rcu/srcutree.c	/^static void srcu_reschedule(struct srcu_struct *ssp, unsigned long delay)$/;"	f	file:
srcu_schedule_cbs_sdp	rcu/srcutree.c	/^static void srcu_schedule_cbs_sdp(struct srcu_data *sdp, unsigned long delay)$/;"	f	file:
srcu_schedule_cbs_snp	rcu/srcutree.c	/^static void srcu_schedule_cbs_snp(struct srcu_struct *ssp, struct srcu_node *snp,$/;"	f	file:
srcu_sync_perf_cleanup	rcu/rcuperf.c	/^static void srcu_sync_perf_cleanup(void)$/;"	f	file:
srcu_sync_perf_init	rcu/rcuperf.c	/^static void srcu_sync_perf_init(void)$/;"	f	file:
srcu_torture_barrier	rcu/rcutorture.c	/^static void srcu_torture_barrier(void)$/;"	f	file:
srcu_torture_call	rcu/rcutorture.c	/^static void srcu_torture_call(struct rcu_head *head,$/;"	f	file:
srcu_torture_cleanup	rcu/rcutorture.c	/^static void srcu_torture_cleanup(void)$/;"	f	file:
srcu_torture_completed	rcu/rcutorture.c	/^static unsigned long srcu_torture_completed(void)$/;"	f	file:
srcu_torture_deferred_free	rcu/rcutorture.c	/^static void srcu_torture_deferred_free(struct rcu_torture *rp)$/;"	f	file:
srcu_torture_init	rcu/rcutorture.c	/^static void srcu_torture_init(void)$/;"	f	file:
srcu_torture_stats	rcu/rcutorture.c	/^static void srcu_torture_stats(void)$/;"	f	file:
srcu_torture_stats_print	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(srcu_torture_stats_print);$/;"	v
srcu_torture_stats_print	rcu/srcutree.c	/^void srcu_torture_stats_print(struct srcu_struct *ssp, char *tt, char *tf)$/;"	f
srcu_torture_synchronize	rcu/rcutorture.c	/^static void srcu_torture_synchronize(void)$/;"	f	file:
srcu_torture_synchronize_expedited	rcu/rcutorture.c	/^static void srcu_torture_synchronize_expedited(void)$/;"	f	file:
srcud	rcu/rcuperf.c	/^static struct srcu_struct srcud;$/;"	v	typeref:struct:srcu_struct	file:
srcud_ops	rcu/rcuperf.c	/^static struct rcu_perf_ops srcud_ops = {$/;"	v	typeref:struct:rcu_perf_ops	file:
srcud_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops srcud_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcutorture_get_gp_data	rcu/rcu.h	/^static inline void srcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	f
srcutorture_get_gp_data	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(srcutorture_get_gp_data);$/;"	v
srcutorture_get_gp_data	rcu/srcutree.c	/^void srcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	f
srcversion	module.c	/^MODINFO_ATTR(srcversion);$/;"	v
ss_mask	cgroup/cgroup-internal.h	/^	u16			ss_mask;$/;"	m	struct:cgroup_mgctx
ssetmask	sys_ni.c	/^COND_SYSCALL(ssetmask);$/;"	v
ssid	cgroup/cgroup-internal.h	/^	int			ssid;$/;"	m	struct:cgroup_taskset
st	bpf/verifier.c	/^	struct bpf_verifier_state st;$/;"	m	struct:bpf_verifier_stack_elem	typeref:struct:bpf_verifier_stack_elem::bpf_verifier_state	file:
st_l	torture.c	/^	struct list_head st_l;$/;"	m	struct:shuffle_task	typeref:struct:shuffle_task::list_head	file:
st_t	torture.c	/^	struct task_struct *st_t;$/;"	m	struct:shuffle_task	typeref:struct:shuffle_task::task_struct	file:
stack	bpf/btf.c	/^	struct resolve_vertex stack[MAX_RESOLVE_DEPTH];$/;"	m	struct:btf_verifier_env	typeref:struct:btf_verifier_env::resolve_vertex	file:
stack_dump_trace	trace/trace_stack.c	/^static unsigned long stack_dump_trace[STACK_TRACE_ENTRIES];$/;"	v	file:
stack_entries	dma/debug.c	/^	unsigned long	stack_entries[DMA_DEBUG_STACKTRACE_ENTRIES];$/;"	m	struct:dma_debug_entry	file:
stack_erasing_sysctl	stackleak.c	/^int stack_erasing_sysctl(struct ctl_table *table, int write,$/;"	f
stack_len	dma/debug.c	/^	unsigned int	stack_len;$/;"	m	struct:dma_debug_entry	file:
stack_map_alloc	bpf/stackmap.c	/^static struct bpf_map *stack_map_alloc(union bpf_attr *attr)$/;"	f	file:
stack_map_bucket	bpf/stackmap.c	/^struct stack_map_bucket {$/;"	s	file:
stack_map_data_size	bpf/stackmap.c	/^static inline int stack_map_data_size(struct bpf_map *map)$/;"	f	file:
stack_map_delete_elem	bpf/stackmap.c	/^static int stack_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
stack_map_free	bpf/stackmap.c	/^static void stack_map_free(struct bpf_map *map)$/;"	f	file:
stack_map_get_build_id	bpf/stackmap.c	/^static int stack_map_get_build_id(struct vm_area_struct *vma,$/;"	f	file:
stack_map_get_build_id_32	bpf/stackmap.c	/^static int stack_map_get_build_id_32(void *page_addr,$/;"	f	file:
stack_map_get_build_id_64	bpf/stackmap.c	/^static int stack_map_get_build_id_64(void *page_addr,$/;"	f	file:
stack_map_get_build_id_offset	bpf/stackmap.c	/^static void stack_map_get_build_id_offset(struct bpf_stack_build_id *id_offs,$/;"	f	file:
stack_map_get_next_key	bpf/stackmap.c	/^static int stack_map_get_next_key(struct bpf_map *map, void *key,$/;"	f	file:
stack_map_init	bpf/stackmap.c	/^static int __init stack_map_init(void)$/;"	f	file:
stack_map_init	bpf/stackmap.c	/^subsys_initcall(stack_map_init);$/;"	v
stack_map_irq_work	bpf/stackmap.c	/^struct stack_map_irq_work {$/;"	s	file:
stack_map_lookup_elem	bpf/stackmap.c	/^static void *stack_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
stack_map_ops	bpf/queue_stack_maps.c	/^const struct bpf_map_ops stack_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
stack_map_parse_build_id	bpf/stackmap.c	/^static inline int stack_map_parse_build_id(void *page_addr,$/;"	f	file:
stack_map_peek_elem	bpf/queue_stack_maps.c	/^static int stack_map_peek_elem(struct bpf_map *map, void *value)$/;"	f	file:
stack_map_pop_elem	bpf/queue_stack_maps.c	/^static int stack_map_pop_elem(struct bpf_map *map, void *value)$/;"	f	file:
stack_map_update_elem	bpf/stackmap.c	/^static int stack_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
stack_map_use_build_id	bpf/stackmap.c	/^static inline bool stack_map_use_build_id(struct bpf_map *map)$/;"	f	file:
stack_max_size_fops	trace/trace_stack.c	/^static const struct file_operations stack_max_size_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_max_size_read	trace/trace_stack.c	/^stack_max_size_read(struct file *filp, char __user *ubuf,$/;"	f	file:
stack_max_size_write	trace/trace_stack.c	/^stack_max_size_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
stack_trace	locking/lockdep.c	/^static unsigned long stack_trace[MAX_STACK_TRACE_ENTRIES];$/;"	v	file:
stack_trace_call	trace/trace_stack.c	/^stack_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
stack_trace_consume_entry	stacktrace.c	/^static bool stack_trace_consume_entry(void *cookie, unsigned long addr,$/;"	f	file:
stack_trace_consume_entry_nosched	stacktrace.c	/^static bool stack_trace_consume_entry_nosched(void *cookie, unsigned long addr,$/;"	f	file:
stack_trace_filter_fops	trace/trace_stack.c	/^static const struct file_operations stack_trace_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_trace_filter_open	trace/trace_stack.c	/^stack_trace_filter_open(struct inode *inode, struct file *file)$/;"	f	file:
stack_trace_fops	trace/trace_stack.c	/^static const struct file_operations stack_trace_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_trace_index	trace/trace_stack.c	/^static unsigned stack_trace_index[STACK_TRACE_ENTRIES];$/;"	v	file:
stack_trace_init	trace/trace_stack.c	/^device_initcall(stack_trace_init);$/;"	v
stack_trace_init	trace/trace_stack.c	/^static __init int stack_trace_init(void)$/;"	f	file:
stack_trace_map_ops	bpf/stackmap.c	/^const struct bpf_map_ops stack_trace_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
stack_trace_max_lock	trace/trace_stack.c	/^static arch_spinlock_t stack_trace_max_lock =$/;"	v	file:
stack_trace_max_size	trace/trace_stack.c	/^static unsigned long stack_trace_max_size;$/;"	v	file:
stack_trace_nr_entries	trace/trace_stack.c	/^static unsigned int stack_trace_nr_entries;$/;"	v	file:
stack_trace_open	trace/trace_stack.c	/^static int stack_trace_open(struct inode *inode, struct file *file)$/;"	f	file:
stack_trace_print	stacktrace.c	/^EXPORT_SYMBOL_GPL(stack_trace_print);$/;"	v
stack_trace_print	stacktrace.c	/^void stack_trace_print(unsigned long *entries, unsigned int nr_entries,$/;"	f
stack_trace_save	stacktrace.c	/^EXPORT_SYMBOL_GPL(stack_trace_save);$/;"	v
stack_trace_save	stacktrace.c	/^unsigned int stack_trace_save(unsigned long *store, unsigned int size,$/;"	f
stack_trace_save_regs	stacktrace.c	/^unsigned int stack_trace_save_regs(struct pt_regs *regs, unsigned long *store,$/;"	f
stack_trace_save_tsk	stacktrace.c	/^unsigned int stack_trace_save_tsk(struct task_struct *task,$/;"	f
stack_trace_save_tsk	stacktrace.c	/^unsigned int stack_trace_save_tsk(struct task_struct *tsk, unsigned long *store,$/;"	f
stack_trace_save_tsk_reliable	stacktrace.c	/^int stack_trace_save_tsk_reliable(struct task_struct *tsk, unsigned long *store,$/;"	f
stack_trace_save_user	stacktrace.c	/^unsigned int stack_trace_save_user(unsigned long *store, unsigned int size)$/;"	f
stack_trace_seq_ops	trace/trace_stack.c	/^static const struct seq_operations stack_trace_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
stack_trace_snprint	stacktrace.c	/^EXPORT_SYMBOL_GPL(stack_trace_snprint);$/;"	v
stack_trace_snprint	stacktrace.c	/^int stack_trace_snprint(char *buf, size_t size, unsigned long *entries,$/;"	f
stack_trace_sysctl	trace/trace_stack.c	/^stack_trace_sysctl(struct ctl_table *table, int write,$/;"	f
stack_tracer_enabled	trace/trace_stack.c	/^int stack_tracer_enabled;$/;"	v
stackleak_erase	stackleak.c	/^NOKPROBE_SYMBOL(stackleak_erase);$/;"	v
stackleak_erase	stackleak.c	/^asmlinkage void notrace stackleak_erase(void)$/;"	f
stackleak_track_stack	stackleak.c	/^EXPORT_SYMBOL(stackleak_track_stack);$/;"	v
stackleak_track_stack	stackleak.c	/^void __used notrace stackleak_track_stack(void)$/;"	f
stacks	trace/trace.c	/^	struct ftrace_stack	stacks[FTRACE_KSTACK_NESTING];$/;"	m	struct:ftrace_stacks	typeref:struct:ftrace_stacks::ftrace_stack	file:
stacksafe	bpf/verifier.c	/^static bool stacksafe(struct bpf_func_state *old,$/;"	f	file:
stacktrace_cookie	stacktrace.c	/^struct stacktrace_cookie {$/;"	s	file:
stacktrace_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops stacktrace_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
stacktrace_count_trigger	trace/trace_events_trigger.c	/^stacktrace_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
stacktrace_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops stacktrace_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
stacktrace_get_trigger_ops	trace/trace_events_trigger.c	/^stacktrace_get_trigger_ops(char *cmd, char *param)$/;"	f	file:
stacktrace_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops stacktrace_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
stacktrace_trigger	trace/trace_events_trigger.c	/^stacktrace_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
stacktrace_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops stacktrace_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
stacktrace_trigger_print	trace/trace_events_trigger.c	/^stacktrace_trigger_print(struct seq_file *m, struct event_trigger_ops *ops,$/;"	f	file:
stall_dur	rcu/rcutorture.c	/^	int (*stall_dur)(void);$/;"	m	struct:rcu_torture_ops	file:
stall_task	rcu/rcutorture.c	/^static struct task_struct *stall_task;$/;"	v	typeref:struct:task_struct	file:
stamp	gcov/gcc_3_4.c	/^	unsigned int			stamp;$/;"	m	struct:gcov_info	file:
stamp	gcov/gcc_4_7.c	/^	unsigned int stamp;$/;"	m	struct:gcov_info	file:
start	events/core.c	/^		u64				start;$/;"	m	struct:perf_mmap_event::__anon4	file:
start	power/snapshot.c	/^	unsigned long start;$/;"	m	struct:mem_extent	file:
start	power/swap.c	/^	unsigned long start;$/;"	m	struct:swsusp_extent	file:
start	resource.c	/^	resource_size_t start;$/;"	m	struct:region_devres	file:
start	trace/ftrace.c	/^	struct ftrace_profile_page	*start;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::ftrace_profile_page	file:
start	trace/trace.h	/^	void			(*start)(struct trace_array *tr);$/;"	m	struct:tracer
start_addr	trace/ftrace.c	/^	unsigned long		start_addr;$/;"	m	struct:ftrace_mod_map	file:
start_cfs_bandwidth	sched/fair.c	/^void start_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f
start_cfs_slack_bandwidth	sched/fair.c	/^static void start_cfs_slack_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f	file:
start_critical_timing	trace/trace_irqsoff.c	/^start_critical_timing(unsigned long ip, unsigned long parent_ip, int pc)$/;"	f	file:
start_critical_timings	trace/trace_irqsoff.c	/^EXPORT_SYMBOL_GPL(start_critical_timings);$/;"	v
start_critical_timings	trace/trace_irqsoff.c	/^NOKPROBE_SYMBOL(start_critical_timings);$/;"	v
start_critical_timings	trace/trace_irqsoff.c	/^void start_critical_timings(void)$/;"	f
start_dl_timer	sched/deadline.c	/^static int start_dl_timer(struct task_struct *p)$/;"	f	file:
start_flush_work	workqueue.c	/^static bool start_flush_work(struct work_struct *work, struct wq_barrier *barr,$/;"	f	file:
start_func_tracer	trace/trace_sched_wakeup.c	/^static int start_func_tracer(struct trace_array *tr, int graph)$/;"	f	file:
start_graph_tracing	trace/fgraph.c	/^static int start_graph_tracing(void)$/;"	f	file:
start_hrtick_dl	sched/deadline.c	/^static void start_hrtick_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
start_irqsoff_tracer	trace/trace_irqsoff.c	/^static int start_irqsoff_tracer(struct trace_array *tr, int graph)$/;"	f	file:
start_kthread	trace/trace_hwlat.c	/^static int start_kthread(struct trace_array *tr)$/;"	f	file:
start_lock	trace/trace.h	/^	raw_spinlock_t		start_lock;$/;"	m	struct:trace_array
start_nop_trace	trace/trace_nop.c	/^static void start_nop_trace(struct trace_array *tr)$/;"	f	file:
start_pfn	power/snapshot.c	/^	unsigned long start_pfn;	\/* Zone start page frame       *\/$/;"	m	struct:mem_zone_bm_rtree	file:
start_pfn	power/snapshot.c	/^	unsigned long start_pfn;$/;"	m	struct:nosave_region	file:
start_rt_bandwidth	sched/rt.c	/^static void start_rt_bandwidth(struct rt_bandwidth *rt_b)$/;"	f	file:
start_wakeup_tracer	trace/trace_sched_wakeup.c	/^static void start_wakeup_tracer(struct trace_array *tr)$/;"	f	file:
startup	cpu.c	/^	} startup;$/;"	m	struct:cpuhp_step	typeref:union:cpuhp_step::__anon18	file:
stat	trace/ftrace.c	/^	struct tracer_stat		stat;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::tracer_stat	file:
stat	trace/trace_stat.c	/^	void			*stat;$/;"	m	struct:stat_node	file:
stat_cmp	trace/trace_stat.h	/^	int			(*stat_cmp)(void *p1, void *p2);$/;"	m	struct:tracer_stat
stat_dir	trace/trace_stat.c	/^static struct dentry		*stat_dir;$/;"	v	typeref:struct:dentry	file:
stat_headers	trace/trace_stat.h	/^	int			(*stat_headers)(struct seq_file *s);$/;"	m	struct:tracer_stat
stat_mutex	trace/trace_stat.c	/^	struct mutex		stat_mutex;$/;"	m	struct:stat_session	typeref:struct:stat_session::mutex	file:
stat_next	trace/trace_stat.h	/^	void			*(*stat_next)(void *prev, int idx);$/;"	m	struct:tracer_stat
stat_node	trace/trace_stat.c	/^struct stat_node {$/;"	s	file:
stat_release	trace/trace_stat.h	/^	void			(*stat_release)(void *stat);$/;"	m	struct:tracer_stat
stat_root	trace/trace_stat.c	/^	struct rb_root		stat_root;$/;"	m	struct:stat_session	typeref:struct:stat_session::rb_root	file:
stat_seq_init	trace/trace_stat.c	/^static int stat_seq_init(struct stat_session *session)$/;"	f	file:
stat_seq_next	trace/trace_stat.c	/^static void *stat_seq_next(struct seq_file *s, void *p, loff_t *pos)$/;"	f	file:
stat_seq_show	trace/trace_stat.c	/^static int stat_seq_show(struct seq_file *s, void *v)$/;"	f	file:
stat_seq_start	trace/trace_stat.c	/^static void *stat_seq_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
stat_seq_stop	trace/trace_stat.c	/^static void stat_seq_stop(struct seq_file *s, void *p)$/;"	f	file:
stat_session	trace/trace_stat.c	/^struct stat_session {$/;"	s	file:
stat_show	trace/trace_stat.h	/^	int			(*stat_show)(struct seq_file *s, void *p);$/;"	m	struct:tracer_stat
stat_start	trace/trace_stat.h	/^	void			*(*stat_start)(struct tracer_stat *trace);$/;"	m	struct:tracer_stat
state	audit.h	/^	enum audit_state    state, current_state;$/;"	m	struct:audit_context	typeref:enum:audit_context::audit_state
state	cgroup/legacy_freezer.c	/^	unsigned int			state;$/;"	m	struct:freezer	file:
state	cpu.c	/^	enum cpuhp_state	state;$/;"	m	struct:cpuhp_cpu_state	typeref:enum:cpuhp_cpu_state::cpuhp_state	file:
state	locking/qspinlock_paravirt.h	/^	u8			state;$/;"	m	struct:pv_node
state	power/main.c	/^power_attr(state);$/;"	v
state	seccomp.c	/^	enum notify_state state;$/;"	m	struct:seccomp_knotif	typeref:enum:seccomp_knotif::notify_state	file:
state	stop_machine.c	/^	enum multi_stop_state	state;$/;"	m	struct:multi_stop_data	typeref:enum:multi_stop_data::multi_stop_state	file:
state_filter_match	sched/core.c	/^state_filter_match(unsigned long state_filter, struct task_struct *p)$/;"	f	file:
state_htab_size	bpf/verifier.c	/^static u32 state_htab_size(struct bpf_verifier_env *env)$/;"	f	file:
state_name	locking/lockdep.c	/^static inline const char *state_name(enum lock_usage_bit bit)$/;"	f	file:
state_names	locking/lockdep.c	/^static const char *state_names[] = {$/;"	v	file:
state_rnames	locking/lockdep.c	/^static const char *state_rnames[] = {$/;"	v	file:
state_show	power/main.c	/^static ssize_t state_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
state_store	power/main.c	/^static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
state_verbose	locking/lockdep.c	/^static inline int state_verbose(enum lock_usage_bit bit,$/;"	f	file:
state_verbose_f	locking/lockdep.c	/^static int (*state_verbose_f[])(struct lock_class *class) = {$/;"	v	file:
states_equal	bpf/verifier.c	/^static bool states_equal(struct bpf_verifier_env *env,$/;"	f	file:
states_maybe_looping	bpf/verifier.c	/^static bool states_maybe_looping(struct bpf_verifier_state *old,$/;"	f	file:
static_key_clear_linked	jump_label.c	/^static inline void static_key_clear_linked(struct static_key *key)$/;"	f	file:
static_key_count	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_count);$/;"	v
static_key_count	jump_label.c	/^int static_key_count(struct static_key *key)$/;"	f
static_key_disable	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_disable);$/;"	v
static_key_disable	jump_label.c	/^void static_key_disable(struct static_key *key)$/;"	f
static_key_disable_cpuslocked	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_disable_cpuslocked);$/;"	v
static_key_disable_cpuslocked	jump_label.c	/^void static_key_disable_cpuslocked(struct static_key *key)$/;"	f
static_key_enable	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_enable);$/;"	v
static_key_enable	jump_label.c	/^void static_key_enable(struct static_key *key)$/;"	f
static_key_enable_cpuslocked	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_enable_cpuslocked);$/;"	v
static_key_enable_cpuslocked	jump_label.c	/^void static_key_enable_cpuslocked(struct static_key *key)$/;"	f
static_key_entries	jump_label.c	/^static inline struct jump_entry *static_key_entries(struct static_key *key)$/;"	f	file:
static_key_linked	jump_label.c	/^static inline bool static_key_linked(struct static_key *key)$/;"	f	file:
static_key_mod	jump_label.c	/^static inline struct static_key_mod *static_key_mod(struct static_key *key)$/;"	f	file:
static_key_mod	jump_label.c	/^struct static_key_mod {$/;"	s	file:
static_key_set_entries	jump_label.c	/^static void static_key_set_entries(struct static_key *key,$/;"	f	file:
static_key_set_linked	jump_label.c	/^static inline void static_key_set_linked(struct static_key *key)$/;"	f	file:
static_key_set_mod	jump_label.c	/^static void static_key_set_mod(struct static_key *key,$/;"	f	file:
static_key_slow_dec	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_slow_dec);$/;"	v
static_key_slow_dec	jump_label.c	/^void static_key_slow_dec(struct static_key *key)$/;"	f
static_key_slow_dec_cpuslocked	jump_label.c	/^void static_key_slow_dec_cpuslocked(struct static_key *key)$/;"	f
static_key_slow_inc	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_slow_inc);$/;"	v
static_key_slow_inc	jump_label.c	/^void static_key_slow_inc(struct static_key *key)$/;"	f
static_key_slow_inc_cpuslocked	jump_label.c	/^void static_key_slow_inc_cpuslocked(struct static_key *key)$/;"	f
static_key_slow_try_dec	jump_label.c	/^static bool static_key_slow_try_dec(struct static_key *key)$/;"	f	file:
static_key_type	jump_label.c	/^static inline bool static_key_type(struct static_key *key)$/;"	f	file:
static_obj	locking/lockdep.c	/^static int static_obj(const void *obj)$/;"	f	file:
stats	locking/lockdep_proc.c	/^	struct lock_class_stats stats;$/;"	m	struct:lock_stat_data	typeref:struct:lock_stat_data::lock_class_stats	file:
stats	locking/lockdep_proc.c	/^	struct lock_stat_data stats[MAX_LOCKDEP_KEYS];$/;"	m	struct:lock_stat_seq	typeref:struct:lock_stat_seq::lock_stat_data	file:
stats	rcu/rcutorture.c	/^	void (*stats)(void);$/;"	m	struct:rcu_torture_ops	file:
stats_task	locking/locktorture.c	/^static struct task_struct *stats_task;$/;"	v	typeref:struct:task_struct	file:
stats_task	rcu/rcutorture.c	/^static struct task_struct *stats_task;$/;"	v	typeref:struct:task_struct	file:
status	exit.c	/^	int status;$/;"	m	struct:waitid_info	file:
status	smpboot.c	/^	unsigned int			status;$/;"	m	struct:smpboot_thread_data	file:
steal_account_process_time	sched/cputime.c	/^static __always_inline u64 steal_account_process_time(u64 maxtime)$/;"	f	file:
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:cmp_data	file:
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:crc_data	file:
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:dec_data	file:
stop	rcu/rcutorture.c	/^	int stop;$/;"	m	struct:fwd_cb_state	file:
stop	sched/sched.h	/^	struct task_struct	*stop;$/;"	m	struct:rq	typeref:struct:rq::task_struct
stop	trace/trace.h	/^	void			(*stop)(struct trace_array *tr);$/;"	m	struct:tracer
stop_count	trace/trace.h	/^	int			stop_count;$/;"	m	struct:trace_array
stop_cpus	stop_machine.c	/^int stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)$/;"	f
stop_cpus_in_progress	stop_machine.c	/^static bool stop_cpus_in_progress;$/;"	v	file:
stop_critical_timing	trace/trace_irqsoff.c	/^stop_critical_timing(unsigned long ip, unsigned long parent_ip, int pc)$/;"	f	file:
stop_critical_timings	trace/trace_irqsoff.c	/^EXPORT_SYMBOL_GPL(stop_critical_timings);$/;"	v
stop_critical_timings	trace/trace_irqsoff.c	/^NOKPROBE_SYMBOL(stop_critical_timings);$/;"	v
stop_critical_timings	trace/trace_irqsoff.c	/^void stop_critical_timings(void)$/;"	f
stop_event_data	events/core.c	/^struct stop_event_data {$/;"	s	file:
stop_func_tracer	trace/trace_sched_wakeup.c	/^static void stop_func_tracer(struct trace_array *tr, int graph)$/;"	f	file:
stop_irqsoff_tracer	trace/trace_irqsoff.c	/^static void stop_irqsoff_tracer(struct trace_array *tr, int graph)$/;"	f	file:
stop_kthread	trace/trace_hwlat.c	/^static void stop_kthread(void)$/;"	f	file:
stop_machine	stop_machine.c	/^EXPORT_SYMBOL_GPL(stop_machine);$/;"	v
stop_machine	stop_machine.c	/^int stop_machine(cpu_stop_fn_t fn, void *data, const struct cpumask *cpus)$/;"	f
stop_machine_cpuslocked	stop_machine.c	/^int stop_machine_cpuslocked(cpu_stop_fn_t fn, void *data,$/;"	f
stop_machine_from_inactive_cpu	stop_machine.c	/^int stop_machine_from_inactive_cpu(cpu_stop_fn_t fn, void *data,$/;"	f
stop_machine_initialized	stop_machine.c	/^static bool stop_machine_initialized = false;$/;"	v	file:
stop_machine_park	stop_machine.c	/^void stop_machine_park(int cpu)$/;"	f
stop_machine_unpark	stop_machine.c	/^void stop_machine_unpark(int cpu)$/;"	f
stop_machine_yield	stop_machine.c	/^void __weak stop_machine_yield(const struct cpumask *cpumask)$/;"	f
stop_nop_trace	trace/trace_nop.c	/^static void stop_nop_trace(struct trace_array *tr)$/;"	f	file:
stop_one_cpu	stop_machine.c	/^int stop_one_cpu(unsigned int cpu, cpu_stop_fn_t fn, void *arg)$/;"	f
stop_one_cpu_nowait	stop_machine.c	/^bool stop_one_cpu_nowait(unsigned int cpu, cpu_stop_fn_t fn, void *arg,$/;"	f
stop_process_timers	time/posix-cpu-timers.c	/^static inline void stop_process_timers(struct signal_struct *sig)$/;"	f	file:
stop_sched_class	sched/stop_task.c	/^const struct sched_class stop_sched_class = {$/;"	v	typeref:struct:sched_class
stop_trace_on_warning	trace/trace.c	/^static int __init stop_trace_on_warning(char *str)$/;"	f	file:
stop_two_cpus	stop_machine.c	/^int stop_two_cpus(unsigned int cpu1, unsigned int cpu2, cpu_stop_fn_t fn, void *arg)$/;"	f
stop_wakeup_tracer	trace/trace_sched_wakeup.c	/^static void stop_wakeup_tracer(struct trace_array *tr)$/;"	f	file:
stop_work	stop_machine.c	/^	struct cpu_stop_work	stop_work;	\/* for stop_cpus *\/$/;"	m	struct:cpu_stopper	typeref:struct:cpu_stopper::cpu_stop_work	file:
store	padata.c	/^	ssize_t (*store)(struct padata_instance *, struct attribute *,$/;"	m	struct:padata_sysfs_entry	file:
store	stacktrace.c	/^	unsigned long	*store;$/;"	m	struct:stacktrace_cookie	file:
store_cpumask	padata.c	/^static ssize_t store_cpumask(struct padata_instance *pinst,$/;"	f	file:
store_gcov_u32	gcov/clang.c	/^static size_t store_gcov_u32(void *buffer, size_t off, u32 v)$/;"	f	file:
store_gcov_u32	gcov/gcc_4_7.c	/^static size_t store_gcov_u32(void *buffer, size_t off, u32 v)$/;"	f	file:
store_gcov_u64	gcov/clang.c	/^static size_t store_gcov_u64(void *buffer, size_t off, u64 v)$/;"	f	file:
store_gcov_u64	gcov/gcc_4_7.c	/^static size_t store_gcov_u64(void *buffer, size_t off, u64 v)$/;"	f	file:
store_smt_control	cpu.c	/^store_smt_control(struct device *dev, struct device_attribute *attr,$/;"	f	file:
store_trace_args	trace/trace_probe_tmpl.h	/^store_trace_args(void *data, struct trace_probe *tp, struct pt_regs *regs,$/;"	f
store_uevent	module.c	/^static ssize_t store_uevent(struct module_attribute *mattr,$/;"	f	file:
str	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
str	trace/blktrace.c	/^	const char *str;$/;"	m	struct:__anon39	file:
str	trace/ring_buffer.c	/^	char str[];$/;"	m	struct:rb_item	file:
stress	locking/test-ww_mutex.c	/^static int stress(int nlocks, int nthreads, unsigned int flags)$/;"	f	file:
stress	locking/test-ww_mutex.c	/^struct stress {$/;"	s	file:
stress_inorder_work	locking/test-ww_mutex.c	/^static void stress_inorder_work(struct work_struct *work)$/;"	f	file:
stress_one_work	locking/test-ww_mutex.c	/^static void stress_one_work(struct work_struct *work)$/;"	f	file:
stress_reorder_work	locking/test-ww_mutex.c	/^static void stress_reorder_work(struct work_struct *work)$/;"	f	file:
strict_iomem	resource.c	/^static int __init strict_iomem(char *str)$/;"	f	file:
strict_iomem_checks	resource.c	/^static int strict_iomem_checks = 1;$/;"	v	file:
strict_iomem_checks	resource.c	/^static int strict_iomem_checks;$/;"	v	file:
string	trace/trace_probe.c	/^int PRINT_TYPE_FUNC_NAME(string)(struct trace_seq *s, void *data, void *ent)$/;"	f
string	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(string);$/;"	v
string	trace/trace_probe.h	/^typedef u32 string;$/;"	t
string_size	trace/trace_probe.h	/^typedef u32 string_size;$/;"	t
strings	bpf/btf.c	/^	const char *strings;$/;"	m	struct:btf	file:
stroffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	m	struct:load_info
strong_try_module_get	module.c	/^static inline int strong_try_module_get(struct module *mod)$/;"	f	file:
strtab	module-internal.h	/^	char *secstrings, *strtab;$/;"	m	struct:load_info
strtoul_lenient	sysctl.c	/^static int strtoul_lenient(const char *cp, char **endp, unsigned int base,$/;"	f	file:
struct_ops	bpf/btf.c	/^static struct btf_kind_operations struct_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
stub_timer	time/timer.c	/^static void stub_timer(struct timer_list *unused)$/;"	f	file:
stutter	torture.c	/^static int stutter;$/;"	v	file:
stutter_gap	torture.c	/^static int stutter_gap;$/;"	v	file:
stutter_pause_test	torture.c	/^static int stutter_pause_test;$/;"	v	file:
stutter_task	torture.c	/^static struct task_struct *stutter_task;$/;"	v	typeref:struct:task_struct	file:
stutter_wait	torture.c	/^EXPORT_SYMBOL_GPL(stutter_wait);$/;"	v
stutter_wait	torture.c	/^bool stutter_wait(const char *title)$/;"	f
sub_nr_running	sched/sched.h	/^static inline void sub_nr_running(struct rq *rq, unsigned count)$/;"	f
sub_positive	sched/fair.c	2811;"	d	file:
sub_rq_bw	sched/deadline.c	/^void sub_rq_bw(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
sub_running_bw	sched/deadline.c	/^void sub_running_bw(struct sched_dl_entity *dl_se, struct dl_rq *dl_rq)$/;"	f	file:
subbuf_splice_actor	relay.c	/^static ssize_t subbuf_splice_actor(struct file *in,$/;"	f	file:
subbuf_start_default_callback	relay.c	/^static int subbuf_start_default_callback (struct rchan_buf *buf,$/;"	f	file:
subpage_prot	sys_ni.c	/^COND_SYSCALL(subpage_prot);$/;"	v
subparts_cmd	cgroup/cpuset.c	/^enum subparts_cmd {$/;"	g	file:
subparts_cpus	cgroup/cpuset.c	/^	cpumask_var_t subparts_cpus;$/;"	m	struct:cpuset	file:
subsys_mask	cgroup/cgroup-internal.h	/^	u16		subsys_mask;		\/* Selected subsystems *\/$/;"	m	struct:cgroup_fs_context
subsystem	trace/trace.h	/^	struct event_subsystem		*subsystem;$/;"	m	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::event_subsystem
subsystem	trace/trace_probe.h	/^	const char	*subsystem;$/;"	m	struct:trace_probe_log
subsystem_filter_read	trace/trace_events.c	/^subsystem_filter_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
subsystem_filter_write	trace/trace_events.c	/^subsystem_filter_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
subsystem_open	trace/trace_events.c	/^static int subsystem_open(struct inode *inode, struct file *filp)$/;"	f	file:
subsystem_release	trace/trace_events.c	/^static int subsystem_release(struct inode *inode, struct file *file)$/;"	f	file:
subtract_range	range.c	/^void subtract_range(struct range *range, int az, u64 start, u64 end)$/;"	f
suffix_tbl	crash_core.c	/^static __initdata char *suffix_tbl[] = {$/;"	v	file:
sugov	sched/cpufreq_schedutil.c	/^ATTRIBUTE_GROUPS(sugov);$/;"	v
sugov_attrs	sched/cpufreq_schedutil.c	/^static struct attribute *sugov_attrs[] = {$/;"	v	typeref:struct:attribute	file:
sugov_cpu	sched/cpufreq_schedutil.c	/^struct sugov_cpu {$/;"	s	file:
sugov_cpu_is_busy	sched/cpufreq_schedutil.c	/^static bool sugov_cpu_is_busy(struct sugov_cpu *sg_cpu)$/;"	f	file:
sugov_cpu_is_busy	sched/cpufreq_schedutil.c	/^static inline bool sugov_cpu_is_busy(struct sugov_cpu *sg_cpu) { return false; }$/;"	f	file:
sugov_deferred_update	sched/cpufreq_schedutil.c	/^static void sugov_deferred_update(struct sugov_policy *sg_policy, u64 time,$/;"	f	file:
sugov_exit	sched/cpufreq_schedutil.c	/^static void sugov_exit(struct cpufreq_policy *policy)$/;"	f	file:
sugov_fast_switch	sched/cpufreq_schedutil.c	/^static void sugov_fast_switch(struct sugov_policy *sg_policy, u64 time,$/;"	f	file:
sugov_get_util	sched/cpufreq_schedutil.c	/^static unsigned long sugov_get_util(struct sugov_cpu *sg_cpu)$/;"	f	file:
sugov_init	sched/cpufreq_schedutil.c	/^static int sugov_init(struct cpufreq_policy *policy)$/;"	f	file:
sugov_iowait_apply	sched/cpufreq_schedutil.c	/^static unsigned long sugov_iowait_apply(struct sugov_cpu *sg_cpu, u64 time,$/;"	f	file:
sugov_iowait_boost	sched/cpufreq_schedutil.c	/^static void sugov_iowait_boost(struct sugov_cpu *sg_cpu, u64 time,$/;"	f	file:
sugov_iowait_reset	sched/cpufreq_schedutil.c	/^static bool sugov_iowait_reset(struct sugov_cpu *sg_cpu, u64 time,$/;"	f	file:
sugov_irq_work	sched/cpufreq_schedutil.c	/^static void sugov_irq_work(struct irq_work *irq_work)$/;"	f	file:
sugov_kthread_create	sched/cpufreq_schedutil.c	/^static int sugov_kthread_create(struct sugov_policy *sg_policy)$/;"	f	file:
sugov_kthread_stop	sched/cpufreq_schedutil.c	/^static void sugov_kthread_stop(struct sugov_policy *sg_policy)$/;"	f	file:
sugov_limits	sched/cpufreq_schedutil.c	/^static void sugov_limits(struct cpufreq_policy *policy)$/;"	f	file:
sugov_next_freq_shared	sched/cpufreq_schedutil.c	/^static unsigned int sugov_next_freq_shared(struct sugov_cpu *sg_cpu, u64 time)$/;"	f	file:
sugov_policy	sched/cpufreq_schedutil.c	/^struct sugov_policy {$/;"	s	file:
sugov_policy_alloc	sched/cpufreq_schedutil.c	/^static struct sugov_policy *sugov_policy_alloc(struct cpufreq_policy *policy)$/;"	f	file:
sugov_policy_free	sched/cpufreq_schedutil.c	/^static void sugov_policy_free(struct sugov_policy *sg_policy)$/;"	f	file:
sugov_register	sched/cpufreq_schedutil.c	/^fs_initcall(sugov_register);$/;"	v
sugov_register	sched/cpufreq_schedutil.c	/^static int __init sugov_register(void)$/;"	f	file:
sugov_should_update_freq	sched/cpufreq_schedutil.c	/^static bool sugov_should_update_freq(struct sugov_policy *sg_policy, u64 time)$/;"	f	file:
sugov_start	sched/cpufreq_schedutil.c	/^static int sugov_start(struct cpufreq_policy *policy)$/;"	f	file:
sugov_stop	sched/cpufreq_schedutil.c	/^static void sugov_stop(struct cpufreq_policy *policy)$/;"	f	file:
sugov_tunables	sched/cpufreq_schedutil.c	/^struct sugov_tunables {$/;"	s	file:
sugov_tunables_alloc	sched/cpufreq_schedutil.c	/^static struct sugov_tunables *sugov_tunables_alloc(struct sugov_policy *sg_policy)$/;"	f	file:
sugov_tunables_free	sched/cpufreq_schedutil.c	/^static void sugov_tunables_free(struct sugov_tunables *tunables)$/;"	f	file:
sugov_tunables_ktype	sched/cpufreq_schedutil.c	/^static struct kobj_type sugov_tunables_ktype = {$/;"	v	typeref:struct:kobj_type	file:
sugov_update_next_freq	sched/cpufreq_schedutil.c	/^static bool sugov_update_next_freq(struct sugov_policy *sg_policy, u64 time,$/;"	f	file:
sugov_update_shared	sched/cpufreq_schedutil.c	/^sugov_update_shared(struct update_util_data *hook, u64 time, unsigned int flags)$/;"	f	file:
sugov_update_single	sched/cpufreq_schedutil.c	/^static void sugov_update_single(struct update_util_data *hook, u64 time,$/;"	f	file:
sugov_work	sched/cpufreq_schedutil.c	/^static void sugov_work(struct kthread_work *work)$/;"	f	file:
suid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
sum	trace/tracing_map.h	/^		atomic64_t			sum;$/;"	m	union:tracing_map_field::__anon29
sum_nr_running	sched/fair.c	/^	unsigned int sum_nr_running; \/* Nr tasks running in the group *\/$/;"	m	struct:sg_lb_stats	file:
sum_offline	torture.c	/^static unsigned long sum_offline;$/;"	v	file:
sum_online	torture.c	/^static unsigned long sum_online;$/;"	v	file:
suppress_message_printing	printk/printk.c	/^static bool suppress_message_printing(int level) { return false; }$/;"	f	file:
suppress_message_printing	printk/printk.c	/^static bool suppress_message_printing(int level)$/;"	f	file:
suppress_printk	printk/printk.c	/^int __read_mostly suppress_printk;$/;"	v
suspend_clocksource	time/clocksource.c	/^static struct clocksource *suspend_clocksource;$/;"	v	typeref:struct:clocksource	file:
suspend_console	printk/printk.c	/^void suspend_console(void)$/;"	f
suspend_device_irq	irq/pm.c	/^static bool suspend_device_irq(struct irq_desc *desc)$/;"	f	file:
suspend_device_irqs	irq/pm.c	/^EXPORT_SYMBOL_GPL(suspend_device_irqs);$/;"	v
suspend_device_irqs	irq/pm.c	/^void suspend_device_irqs(void)$/;"	f
suspend_devices_and_enter	power/power.h	/^static inline int suspend_devices_and_enter(suspend_state_t state)$/;"	f
suspend_devices_and_enter	power/suspend.c	/^int suspend_devices_and_enter(suspend_state_t state)$/;"	f
suspend_enter	power/suspend.c	/^static int suspend_enter(suspend_state_t state, bool *wakeup)$/;"	f	file:
suspend_finish	power/suspend.c	/^static void suspend_finish(void)$/;"	f	file:
suspend_freeze_processes	power/power.h	/^static inline int suspend_freeze_processes(void)$/;"	f
suspend_grep	debug/kdb/kdb_io.c	/^static int  suspend_grep;$/;"	v	file:
suspend_ops	power/suspend.c	/^static const struct platform_suspend_ops *suspend_ops;$/;"	v	typeref:struct:platform_suspend_ops	file:
suspend_prepare	power/suspend.c	/^static int suspend_prepare(suspend_state_t state)$/;"	f	file:
suspend_resume	trace/power-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(suspend_resume);$/;"	v
suspend_set_ops	power/suspend.c	/^EXPORT_SYMBOL_GPL(suspend_set_ops);$/;"	v
suspend_set_ops	power/suspend.c	/^void suspend_set_ops(const struct platform_suspend_ops *ops)$/;"	f
suspend_start	time/clocksource.c	/^static u64 suspend_start;$/;"	v	file:
suspend_stats	power/main.c	/^DEFINE_SHOW_ATTRIBUTE(suspend_stats);$/;"	v
suspend_stats_show	power/main.c	/^static int suspend_stats_show(struct seq_file *s, void *unused)$/;"	f	file:
suspend_step_name	power/main.c	/^static char *suspend_step_name(enum suspend_stat_step step)$/;"	f	file:
suspend_test	power/suspend.c	/^static int suspend_test(int level)$/;"	f	file:
suspend_test_finish	power/power.h	/^static inline void suspend_test_finish(const char *label) {}$/;"	f
suspend_test_finish	power/suspend_test.c	/^void suspend_test_finish(const char *label)$/;"	f
suspend_test_start	power/power.h	/^static inline void suspend_test_start(void) {}$/;"	f
suspend_test_start	power/suspend_test.c	/^void suspend_test_start(void)$/;"	f
suspend_test_start_time	power/suspend_test.c	/^static unsigned long suspend_test_start_time;$/;"	v	file:
suspend_thaw_processes	power/power.h	/^static inline void suspend_thaw_processes(void)$/;"	f
suspend_timing_needed	time/timekeeping.c	/^static bool suspend_timing_needed;$/;"	v	file:
suspend_valid_only_mem	power/suspend.c	/^EXPORT_SYMBOL_GPL(suspend_valid_only_mem);$/;"	v
suspend_valid_only_mem	power/suspend.c	/^int suspend_valid_only_mem(suspend_state_t state)$/;"	f
suspended_sched_clock_read	time/sched_clock.c	/^static u64 notrace suspended_sched_clock_read(void)$/;"	f	file:
sw_perf_event_destroy	events/core.c	/^static void sw_perf_event_destroy(struct perf_event *event)$/;"	f	file:
swake_up_all	sched/swait.c	/^EXPORT_SYMBOL(swake_up_all);$/;"	v
swake_up_all	sched/swait.c	/^void swake_up_all(struct swait_queue_head *q)$/;"	f
swake_up_locked	sched/swait.c	/^EXPORT_SYMBOL(swake_up_locked);$/;"	v
swake_up_locked	sched/swait.c	/^void swake_up_locked(struct swait_queue_head *q)$/;"	f
swake_up_one	sched/swait.c	/^EXPORT_SYMBOL(swake_up_one);$/;"	v
swake_up_one	sched/swait.c	/^void swake_up_one(struct swait_queue_head *q)$/;"	f
swap	power/user.c	/^	int swap;$/;"	m	struct:snapshot_data	file:
swap_map_handle	power/swap.c	/^struct swap_map_handle {$/;"	s	file:
swap_map_page	power/swap.c	/^struct swap_map_page {$/;"	s	file:
swap_map_page_list	power/swap.c	/^struct swap_map_page_list {$/;"	s	file:
swap_read_page	power/swap.c	/^static int swap_read_page(struct swap_map_handle *handle, void *buf,$/;"	f	file:
swap_reader_finish	power/swap.c	/^static int swap_reader_finish(struct swap_map_handle *handle)$/;"	f	file:
swap_two_pages_data	power/snapshot.c	/^static inline void swap_two_pages_data(struct page *p1, struct page *p2,$/;"	f	file:
swap_write_page	power/swap.c	/^static int swap_write_page(struct swap_map_handle *handle, void *buf,$/;"	f	file:
swap_writer_finish	power/swap.c	/^static int swap_writer_finish(struct swap_map_handle *handle,$/;"	f	file:
swapoff	sys_ni.c	/^COND_SYSCALL(swapoff);$/;"	v
swapon	sys_ni.c	/^COND_SYSCALL(swapon);$/;"	v
swevent_hash	events/core.c	/^static inline u64 swevent_hash(u64 type, u32 event_id)$/;"	f	file:
swevent_hlist	events/core.c	/^	struct swevent_hlist		*swevent_hlist;$/;"	m	struct:swevent_htable	typeref:struct:swevent_htable::swevent_hlist	file:
swevent_hlist_deref	events/core.c	/^swevent_hlist_deref(struct swevent_htable *swhash)$/;"	f	file:
swevent_hlist_get	events/core.c	/^static int swevent_hlist_get(void)$/;"	f	file:
swevent_hlist_get_cpu	events/core.c	/^static int swevent_hlist_get_cpu(int cpu)$/;"	f	file:
swevent_hlist_put	events/core.c	/^static void swevent_hlist_put(void)$/;"	f	file:
swevent_hlist_put_cpu	events/core.c	/^static void swevent_hlist_put_cpu(int cpu)$/;"	f	file:
swevent_hlist_release	events/core.c	/^static void swevent_hlist_release(struct swevent_htable *swhash)$/;"	f	file:
swevent_htable	events/core.c	/^struct swevent_htable {$/;"	s	file:
swiotlb_bounce	dma/swiotlb.c	/^static void swiotlb_bounce(phys_addr_t orig_addr, phys_addr_t tlb_addr,$/;"	f	file:
swiotlb_cleanup	dma/swiotlb.c	/^static void swiotlb_cleanup(void)$/;"	f	file:
swiotlb_create_debugfs	dma/swiotlb.c	/^late_initcall(swiotlb_create_debugfs);$/;"	v
swiotlb_create_debugfs	dma/swiotlb.c	/^static int __init swiotlb_create_debugfs(void)$/;"	f	file:
swiotlb_exit	dma/swiotlb.c	/^void __init swiotlb_exit(void)$/;"	f
swiotlb_force	dma/swiotlb.c	/^enum swiotlb_force swiotlb_force;$/;"	v	typeref:enum:swiotlb_force
swiotlb_init	dma/swiotlb.c	/^swiotlb_init(int verbose)$/;"	f
swiotlb_init_with_tbl	dma/swiotlb.c	/^int __init swiotlb_init_with_tbl(char *tlb, unsigned long nslabs, int verbose)$/;"	f
swiotlb_late_init_with_default_size	dma/swiotlb.c	/^swiotlb_late_init_with_default_size(size_t default_size)$/;"	f
swiotlb_late_init_with_tbl	dma/swiotlb.c	/^swiotlb_late_init_with_tbl(char *tlb, unsigned long nslabs)$/;"	f
swiotlb_map	dma/swiotlb.c	/^bool swiotlb_map(struct device *dev, phys_addr_t *phys, dma_addr_t *dma_addr,$/;"	f
swiotlb_max_mapping_size	dma/swiotlb.c	/^size_t swiotlb_max_mapping_size(struct device *dev)$/;"	f
swiotlb_max_segment	dma/swiotlb.c	/^EXPORT_SYMBOL_GPL(swiotlb_max_segment);$/;"	v
swiotlb_max_segment	dma/swiotlb.c	/^unsigned int swiotlb_max_segment(void)$/;"	f
swiotlb_nr_tbl	dma/swiotlb.c	/^EXPORT_SYMBOL_GPL(swiotlb_nr_tbl);$/;"	v
swiotlb_nr_tbl	dma/swiotlb.c	/^unsigned long swiotlb_nr_tbl(void)$/;"	f
swiotlb_print_info	dma/swiotlb.c	/^void swiotlb_print_info(void)$/;"	f
swiotlb_set_max_segment	dma/swiotlb.c	/^void swiotlb_set_max_segment(unsigned int val)$/;"	f
swiotlb_size_or_default	dma/swiotlb.c	/^unsigned long swiotlb_size_or_default(void)$/;"	f
swiotlb_tbl_map_single	dma/swiotlb.c	/^phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,$/;"	f
swiotlb_tbl_sync_single	dma/swiotlb.c	/^void swiotlb_tbl_sync_single(struct device *hwdev, phys_addr_t tlb_addr,$/;"	f
swiotlb_tbl_unmap_single	dma/swiotlb.c	/^void swiotlb_tbl_unmap_single(struct device *hwdev, phys_addr_t tlb_addr,$/;"	f
swiotlb_update_mem_attributes	dma/swiotlb.c	/^void __init swiotlb_update_mem_attributes(void)$/;"	f
switch_hrtimer_base	time/hrtimer.c	/^switch_hrtimer_base(struct hrtimer *timer, struct hrtimer_clock_base *base,$/;"	f	file:
switch_hrtimer_base	time/hrtimer.c	277;"	d	file:
switch_task_namespaces	nsproxy.c	/^void switch_task_namespaces(struct task_struct *p, struct nsproxy *new)$/;"	f
switched_from	sched/sched.h	/^	void (*switched_from)(struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
switched_from_dl	sched/deadline.c	/^static void switched_from_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_from_fair	sched/fair.c	/^static void switched_from_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_from_rt	sched/rt.c	/^static void switched_from_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to	sched/sched.h	/^	void (*switched_to)  (struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
switched_to_dl	sched/deadline.c	/^static void switched_to_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_fair	sched/fair.c	/^static void switched_to_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_idle	sched/idle.c	/^static void switched_to_idle(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_rt	sched/rt.c	/^static void switched_to_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_stop	sched/stop_task.c	/^static void switched_to_stop(struct rq *rq, struct task_struct *p)$/;"	f	file:
swsusp_alloc	power/snapshot.c	/^static int swsusp_alloc(struct memory_bitmap *copy_bm,$/;"	f	file:
swsusp_check	power/swap.c	/^int swsusp_check(void)$/;"	f
swsusp_close	power/swap.c	/^void swsusp_close(fmode_t mode)$/;"	f
swsusp_extent	power/swap.c	/^struct swsusp_extent {$/;"	s	file:
swsusp_extents	power/swap.c	/^static struct rb_root swsusp_extents = RB_ROOT;$/;"	v	typeref:struct:rb_root	file:
swsusp_extents_insert	power/swap.c	/^static int swsusp_extents_insert(unsigned long swap_offset)$/;"	f	file:
swsusp_free	power/snapshot.c	/^void swsusp_free(void)$/;"	f
swsusp_header	power/swap.c	/^static struct swsusp_header *swsusp_header;$/;"	v	typeref:struct:swsusp_header	file:
swsusp_header	power/swap.c	/^struct swsusp_header {$/;"	s	file:
swsusp_header_init	power/swap.c	/^core_initcall(swsusp_header_init);$/;"	v
swsusp_header_init	power/swap.c	/^static int swsusp_header_init(void)$/;"	f	file:
swsusp_info	power/power.h	/^struct swsusp_info {$/;"	s
swsusp_page_is_forbidden	power/snapshot.c	/^int swsusp_page_is_forbidden(struct page *page)$/;"	f
swsusp_page_is_free	power/snapshot.c	/^static int swsusp_page_is_free(struct page *page)$/;"	f	file:
swsusp_read	power/swap.c	/^int swsusp_read(unsigned int *flags_p)$/;"	f
swsusp_resume_block	power/hibernate.c	/^sector_t swsusp_resume_block;$/;"	v
swsusp_resume_device	power/hibernate.c	/^dev_t swsusp_resume_device;$/;"	v
swsusp_save	power/snapshot.c	/^asmlinkage __visible int swsusp_save(void)$/;"	f
swsusp_set_page_forbidden	power/snapshot.c	/^static void swsusp_set_page_forbidden(struct page *page)$/;"	f	file:
swsusp_set_page_free	power/snapshot.c	/^void swsusp_set_page_free(struct page *page)$/;"	f
swsusp_show_speed	power/hibernate.c	/^void swsusp_show_speed(ktime_t start, ktime_t stop,$/;"	f
swsusp_swap_check	power/swap.c	/^static int swsusp_swap_check(void)$/;"	f	file:
swsusp_swap_in_use	power/swap.c	/^int swsusp_swap_in_use(void)$/;"	f
swsusp_unmark	power/swap.c	/^int swsusp_unmark(void)$/;"	f
swsusp_unset_page_forbidden	power/snapshot.c	/^static void swsusp_unset_page_forbidden(struct page *page)$/;"	f	file:
swsusp_unset_page_free	power/snapshot.c	/^void swsusp_unset_page_free(struct page *page)$/;"	f
swsusp_write	power/swap.c	/^int swsusp_write(unsigned int flags)$/;"	f
sym	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
sym	module.c	/^	const struct kernel_symbol *sym;$/;"	m	struct:find_symbol_arg	typeref:struct:find_symbol_arg::kernel_symbol	file:
sym	trace/trace_output.c	/^	char			sym;$/;"	m	struct:trace_mark	file:
sym_end	debug/kdb/kdb_private.h	/^		unsigned long sym_end;$/;"	m	struct:__ksymtab
sym_name	debug/kdb/kdb_private.h	/^		const char *sym_name;	\/* Full symbol name, including$/;"	m	struct:__ksymtab
sym_start	debug/kdb/kdb_private.h	/^		unsigned long sym_start;$/;"	m	struct:__ksymtab
symbol	trace/trace_kprobe.c	/^	const char		*symbol;	\/* symbol name *\/$/;"	m	struct:trace_kprobe	file:
symbol	trace/trace_probe.c	/^int PRINT_TYPE_FUNC_NAME(symbol)(struct trace_seq *s, void *data, void *ent)$/;"	f
symbol	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(symbol);$/;"	v
symbol_put_addr	module.c	/^EXPORT_SYMBOL_GPL(symbol_put_addr);$/;"	v
symbol_put_addr	module.c	/^void symbol_put_addr(void *addr)$/;"	f
symoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	m	struct:load_info
symversion	module.c	396;"	d	file:
symversion	module.c	398;"	d	file:
sync	rcu/rcuperf.c	/^	void (*sync)(void);$/;"	m	struct:rcu_perf_ops	file:
sync	rcu/rcutorture.c	/^	void (*sync)(void);$/;"	m	struct:rcu_torture_ops	file:
sync	sched/sched.h	/^	struct u64_stats_sync	sync;$/;"	m	struct:irqtime	typeref:struct:irqtime::u64_stats_sync
sync_child_event	events/core.c	/^static void sync_child_event(struct perf_event *child_event,$/;"	f	file:
sync_cmos_clock	time/ntp.c	/^static bool sync_cmos_clock(void)$/;"	f	file:
sync_entity_load_avg	sched/fair.c	/^static void sync_entity_load_avg(struct sched_entity *se)$/;"	f	file:
sync_exp_reset_tree	rcu/tree_exp.h	/^static void __maybe_unused sync_exp_reset_tree(void)$/;"	f
sync_exp_reset_tree_hotplug	rcu/tree_exp.h	/^static void sync_exp_reset_tree_hotplug(void)$/;"	f
sync_exp_work_done	rcu/tree_exp.h	/^static bool sync_exp_work_done(unsigned long s)$/;"	f
sync_hw_clock	time/ntp.c	/^static void sync_hw_clock(struct work_struct *work)$/;"	f	file:
sync_rcu_exp_select_cpus	rcu/tree_exp.h	/^static void sync_rcu_exp_select_cpus(void)$/;"	f
sync_rcu_exp_select_node_cpus	rcu/tree_exp.h	/^static void sync_rcu_exp_select_node_cpus(struct work_struct *wp)$/;"	f
sync_rcu_preempt_exp_done	rcu/tree_exp.h	/^static bool sync_rcu_preempt_exp_done(struct rcu_node *rnp)$/;"	f
sync_rcu_preempt_exp_done_unlocked	rcu/tree_exp.h	/^static bool sync_rcu_preempt_exp_done_unlocked(struct rcu_node *rnp)$/;"	f
sync_read	power/power.h	/^	int		sync_read;	\/* Set to one to notify the caller of$/;"	m	struct:snapshot_handle
sync_rtc_clock	time/ntp.c	/^static void sync_rtc_clock(void)$/;"	f	file:
sync_sched_exp_online_cleanup	rcu/tree_exp.h	/^static void sync_sched_exp_online_cleanup(int cpu)$/;"	f
sync_throttle	sched/fair.c	/^static inline void sync_throttle(struct task_group *tg, int cpu) {}$/;"	f	file:
sync_throttle	sched/fair.c	/^static void sync_throttle(struct task_group *tg, int cpu)$/;"	f	file:
synchronize_hardirq	irq/manage.c	/^EXPORT_SYMBOL(synchronize_hardirq);$/;"	v
synchronize_hardirq	irq/manage.c	/^bool synchronize_hardirq(unsigned int irq)$/;"	f
synchronize_irq	irq/manage.c	/^EXPORT_SYMBOL(synchronize_irq);$/;"	v
synchronize_irq	irq/manage.c	/^void synchronize_irq(unsigned int irq)$/;"	f
synchronize_rcu	rcu/tiny.c	/^EXPORT_SYMBOL_GPL(synchronize_rcu);$/;"	v
synchronize_rcu	rcu/tiny.c	/^void synchronize_rcu(void)$/;"	f
synchronize_rcu	rcu/tree.c	/^EXPORT_SYMBOL_GPL(synchronize_rcu);$/;"	v
synchronize_rcu	rcu/tree.c	/^void synchronize_rcu(void)$/;"	f
synchronize_rcu_busted	rcu/rcutorture.c	/^static void synchronize_rcu_busted(void)$/;"	f	file:
synchronize_rcu_expedited	rcu/tree_exp.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu_expedited);$/;"	v
synchronize_rcu_expedited	rcu/tree_exp.h	/^void synchronize_rcu_expedited(void)$/;"	f
synchronize_rcu_tasks	rcu/update.c	/^EXPORT_SYMBOL_GPL(synchronize_rcu_tasks);$/;"	v
synchronize_rcu_tasks	rcu/update.c	/^void synchronize_rcu_tasks(void)$/;"	f
synchronize_rcu_trivial	rcu/rcutorture.c	/^static void synchronize_rcu_trivial(void)$/;"	f	file:
synchronize_sched_expedited_wait	rcu/tree_exp.h	/^static void synchronize_sched_expedited_wait(void)$/;"	f
synchronize_srcu	rcu/srcutiny.c	/^EXPORT_SYMBOL_GPL(synchronize_srcu);$/;"	v
synchronize_srcu	rcu/srcutiny.c	/^void synchronize_srcu(struct srcu_struct *ssp)$/;"	f
synchronize_srcu	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(synchronize_srcu);$/;"	v
synchronize_srcu	rcu/srcutree.c	/^void synchronize_srcu(struct srcu_struct *ssp)$/;"	f
synchronize_srcu_expedited	rcu/srcutree.c	/^EXPORT_SYMBOL_GPL(synchronize_srcu_expedited);$/;"	v
synchronize_srcu_expedited	rcu/srcutree.c	/^void synchronize_srcu_expedited(struct srcu_struct *ssp)$/;"	f
synth_event	trace/trace_events_hist.c	/^	struct synth_event	*synth_event;$/;"	m	struct:action_data	typeref:struct:action_data::synth_event	file:
synth_event	trace/trace_events_hist.c	/^struct synth_event {$/;"	s	file:
synth_event_create	trace/trace_events_hist.c	/^static int synth_event_create(int argc, const char **argv)$/;"	f	file:
synth_event_define_fields	trace/trace_events_hist.c	/^static int synth_event_define_fields(struct trace_event_call *call)$/;"	f	file:
synth_event_funcs	trace/trace_events_hist.c	/^static struct trace_event_functions synth_event_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
synth_event_is_busy	trace/trace_events_hist.c	/^static bool synth_event_is_busy(struct dyn_event *ev)$/;"	f	file:
synth_event_match	trace/trace_events_hist.c	/^static bool synth_event_match(const char *system, const char *event,$/;"	f	file:
synth_event_name	trace/trace_events_hist.c	/^	char			*synth_event_name;$/;"	m	struct:action_data	file:
synth_event_ops	trace/trace_events_hist.c	/^static struct dyn_event_operations synth_event_ops = {$/;"	v	typeref:struct:dyn_event_operations	file:
synth_event_release	trace/trace_events_hist.c	/^static int synth_event_release(struct dyn_event *ev)$/;"	f	file:
synth_event_show	trace/trace_events_hist.c	/^static int synth_event_show(struct seq_file *m, struct dyn_event *ev)$/;"	f	file:
synth_events_fops	trace/trace_events_hist.c	/^static const struct file_operations synth_events_fops = {$/;"	v	typeref:struct:file_operations	file:
synth_events_open	trace/trace_events_hist.c	/^static int synth_events_open(struct inode *inode, struct file *file)$/;"	f	file:
synth_events_seq_op	trace/trace_events_hist.c	/^static const struct seq_operations synth_events_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
synth_events_seq_show	trace/trace_events_hist.c	/^static int synth_events_seq_show(struct seq_file *m, void *v)$/;"	f	file:
synth_events_write	trace/trace_events_hist.c	/^static ssize_t synth_events_write(struct file *file,$/;"	f	file:
synth_field	trace/trace_events_hist.c	/^struct synth_field {$/;"	s	file:
synth_field_fmt	trace/trace_events_hist.c	/^static const char *synth_field_fmt(char *type)$/;"	f	file:
synth_field_is_string	trace/trace_events_hist.c	/^static int synth_field_is_string(char *type)$/;"	f	file:
synth_field_signed	trace/trace_events_hist.c	/^static bool synth_field_signed(char *type)$/;"	f	file:
synth_field_size	trace/trace_events_hist.c	/^static int synth_field_size(char *type)$/;"	f	file:
synth_field_string_size	trace/trace_events_hist.c	/^static int synth_field_string_size(char *type)$/;"	f	file:
synth_probe_func_t	trace/trace_events_hist.c	/^typedef void (*synth_probe_func_t) (void *__data, u64 *var_ref_vals,$/;"	t	file:
synth_trace_event	trace/trace_events_hist.c	/^struct synth_trace_event {$/;"	s	file:
sys_ni_posix_timers	time/posix-stubs.c	/^asmlinkage long sys_ni_posix_timers(void)$/;"	f
sys_ni_syscall	sys_ni.c	/^asmlinkage long sys_ni_syscall(void)$/;"	f
sys_perf_refcount_enter	trace/trace_syscalls.c	/^static int sys_perf_refcount_enter;$/;"	v	file:
sys_perf_refcount_exit	trace/trace_syscalls.c	/^static int sys_perf_refcount_exit;$/;"	v	file:
sys_refcount_enter	trace/trace.h	/^	int			sys_refcount_enter;$/;"	m	struct:trace_array
sys_refcount_exit	trace/trace.h	/^	int			sys_refcount_exit;$/;"	m	struct:trace_array
sys_tracepoint_refcount	tracepoint.c	/^static int sys_tracepoint_refcount;$/;"	v	file:
sys_tz	time/time.c	/^EXPORT_SYMBOL(sys_tz);$/;"	v
sys_tz	time/time.c	/^struct timezone sys_tz;$/;"	v	typeref:struct:timezone
syscall_enter_define_fields	trace/trace_syscalls.c	/^static int __init syscall_enter_define_fields(struct trace_event_call *call)$/;"	f	file:
syscall_enter_register	trace/trace_syscalls.c	/^static int syscall_enter_register(struct trace_event_call *event,$/;"	f	file:
syscall_exit_define_fields	trace/trace_syscalls.c	/^static int __init syscall_exit_define_fields(struct trace_event_call *call)$/;"	f	file:
syscall_exit_register	trace/trace_syscalls.c	/^static int syscall_exit_register(struct trace_event_call *event,$/;"	f	file:
syscall_get_enter_fields	trace/trace_syscalls.c	/^syscall_get_enter_fields(struct trace_event_call *call)$/;"	f	file:
syscall_nr_to_meta	trace/trace_syscalls.c	/^static struct syscall_metadata *syscall_nr_to_meta(int nr)$/;"	f	file:
syscall_regfunc	tracepoint.c	/^int syscall_regfunc(void)$/;"	f
syscall_trace_enter	trace/trace.h	/^struct syscall_trace_enter {$/;"	s
syscall_trace_exit	trace/trace.h	/^struct syscall_trace_exit {$/;"	s
syscall_unregfunc	tracepoint.c	/^void syscall_unregfunc(void)$/;"	f
syscalls_metadata	trace/trace_syscalls.c	/^static struct syscall_metadata **syscalls_metadata;$/;"	v	typeref:struct:syscall_metadata	file:
sysctl	sys_ni.c	/^COND_SYSCALL_COMPAT(sysctl);$/;"	v
sysctl_base_table	sysctl.c	/^static struct ctl_table sysctl_base_table[] = {$/;"	v	typeref:struct:ctl_table	file:
sysctl_convert_ctx_access	bpf/cgroup.c	/^static u32 sysctl_convert_ctx_access(enum bpf_access_type type,$/;"	f	file:
sysctl_cpy_dir	bpf/cgroup.c	/^static ssize_t sysctl_cpy_dir(const struct ctl_dir *dir, char **bufp,$/;"	f	file:
sysctl_func_proto	bpf/cgroup.c	/^sysctl_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
sysctl_getname	sysctl_binary.c	/^static char *sysctl_getname(const int *name, int nlen, const struct bin_table **tablep)$/;"	f	file:
sysctl_hardlockup_all_cpu_backtrace	watchdog.c	/^int __read_mostly sysctl_hardlockup_all_cpu_backtrace;$/;"	v
sysctl_hung_task_check_count	hung_task.c	/^int __read_mostly sysctl_hung_task_check_count = PID_MAX_LIMIT;$/;"	v
sysctl_hung_task_check_interval_secs	hung_task.c	/^unsigned long __read_mostly sysctl_hung_task_check_interval_secs;$/;"	v
sysctl_hung_task_panic	hung_task.c	/^unsigned int __read_mostly sysctl_hung_task_panic =$/;"	v
sysctl_hung_task_timeout_secs	hung_task.c	/^unsigned long __read_mostly sysctl_hung_task_timeout_secs = CONFIG_DEFAULT_HUNG_TASK_TIMEOUT;$/;"	v
sysctl_hung_task_warnings	hung_task.c	/^int __read_mostly sysctl_hung_task_warnings = 10;$/;"	v
sysctl_init	sysctl.c	/^int __init sysctl_init(void)$/;"	f
sysctl_is_valid_access	bpf/cgroup.c	/^static bool sysctl_is_valid_access(int off, int size, enum bpf_access_type type,$/;"	f	file:
sysctl_kprobes_optimization	kprobes.c	/^int sysctl_kprobes_optimization;$/;"	v
sysctl_latencytop	latencytop.c	/^int sysctl_latencytop(struct ctl_table *table, int write,$/;"	f
sysctl_legacy_va_layout	sysctl.c	/^int sysctl_legacy_va_layout;$/;"	v
sysctl_max_threads	fork.c	/^int sysctl_max_threads(struct ctl_table *table, int write,$/;"	f
sysctl_numa_balancing	sched/core.c	/^int sysctl_numa_balancing(struct ctl_table *table, int write,$/;"	f
sysctl_numa_balancing_scan_delay	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_delay = 1000;$/;"	v
sysctl_numa_balancing_scan_period_max	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_period_max = 60000;$/;"	v
sysctl_numa_balancing_scan_period_min	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_period_min = 1000;$/;"	v
sysctl_numa_balancing_scan_size	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_size = 256;$/;"	v
sysctl_sched_autogroup_enabled	sched/autogroup.c	/^unsigned int __read_mostly sysctl_sched_autogroup_enabled = 1;$/;"	v
sysctl_sched_cfs_bandwidth_slice	sched/fair.c	/^unsigned int sysctl_sched_cfs_bandwidth_slice		= 5000UL;$/;"	v
sysctl_sched_energy_aware	sched/topology.c	/^unsigned int sysctl_sched_energy_aware = 1;$/;"	v
sysctl_sched_features	sched/core.c	/^const_debug unsigned int sysctl_sched_features =$/;"	v
sysctl_sched_features	sched/sched.h	/^static const_debug __maybe_unused unsigned int sysctl_sched_features =$/;"	v
sysctl_sched_latency	sched/fair.c	/^unsigned int sysctl_sched_latency			= 6000000ULL;$/;"	v
sysctl_sched_migration_cost	sched/fair.c	/^const_debug unsigned int sysctl_sched_migration_cost	= 500000UL;$/;"	v
sysctl_sched_min_granularity	sched/fair.c	/^unsigned int sysctl_sched_min_granularity			= 750000ULL;$/;"	v
sysctl_sched_nr_migrate	sched/core.c	/^const_debug unsigned int sysctl_sched_nr_migrate = 32;$/;"	v
sysctl_sched_rr_timeslice	sched/rt.c	/^int sysctl_sched_rr_timeslice = (MSEC_PER_SEC \/ HZ) * RR_TIMESLICE;$/;"	v
sysctl_sched_rt_period	sched/core.c	/^unsigned int sysctl_sched_rt_period = 1000000;$/;"	v
sysctl_sched_rt_runtime	sched/core.c	/^int sysctl_sched_rt_runtime = 950000;$/;"	v
sysctl_sched_tunable_scaling	sched/fair.c	/^enum sched_tunable_scaling sysctl_sched_tunable_scaling = SCHED_TUNABLESCALING_LOG;$/;"	v	typeref:enum:sched_tunable_scaling
sysctl_sched_uclamp_handler	sched/core.c	/^int sysctl_sched_uclamp_handler(struct ctl_table *table, int write,$/;"	f
sysctl_sched_uclamp_util_max	sched/core.c	/^unsigned int sysctl_sched_uclamp_util_max = SCHED_CAPACITY_SCALE;$/;"	v
sysctl_sched_uclamp_util_min	sched/core.c	/^unsigned int sysctl_sched_uclamp_util_min = SCHED_CAPACITY_SCALE;$/;"	v
sysctl_sched_wakeup_granularity	sched/fair.c	/^unsigned int sysctl_sched_wakeup_granularity			= 1000000UL;$/;"	v
sysctl_schedstats	sched/core.c	/^int sysctl_schedstats(struct ctl_table *table, int write,$/;"	f
sysctl_softlockup_all_cpu_backtrace	watchdog.c	/^int __read_mostly sysctl_softlockup_all_cpu_backtrace;$/;"	v
sysctl_timer_migration	time/timer.c	/^unsigned int sysctl_timer_migration = 1;$/;"	v
sysctl_writes_mode	sysctl.c	/^enum sysctl_writes_mode {$/;"	g	file:
sysctl_writes_strict	sysctl.c	/^static enum sysctl_writes_mode sysctl_writes_strict = SYSCTL_WRITES_STRICT;$/;"	v	typeref:enum:sysctl_writes_mode	file:
sysfs	sys_ni.c	/^COND_SYSCALL(sysfs);$/;"	v
sysfs_blk_trace_attr_show	trace/blktrace.c	/^static ssize_t sysfs_blk_trace_attr_show(struct device *dev,$/;"	f	file:
sysfs_blk_trace_attr_store	trace/blktrace.c	/^static ssize_t sysfs_blk_trace_attr_store(struct device *dev,$/;"	f	file:
sysfs_get_uname	time/clocksource.c	/^ssize_t sysfs_get_uname(const char *buf, char *dst, size_t cnt)$/;"	f
sysfs_show_current_tick_dev	time/clockevents.c	/^static ssize_t sysfs_show_current_tick_dev(struct device *dev,$/;"	f	file:
sysfs_unbind_tick_dev	time/clockevents.c	/^static ssize_t sysfs_unbind_tick_dev(struct device *dev,$/;"	f	file:
syslog	sys_ni.c	/^COND_SYSCALL(syslog);$/;"	v
syslog_action_restricted	printk/printk.c	/^static int syslog_action_restricted(int type)$/;"	f	file:
syslog_clear	printk/printk.c	/^static void syslog_clear(void)$/;"	f	file:
syslog_idx	printk/printk.c	/^static u32 syslog_idx;$/;"	v	file:
syslog_partial	printk/printk.c	/^static size_t syslog_partial;$/;"	v	file:
syslog_print	printk/printk.c	/^static int syslog_print(char __user *buf, int size)$/;"	f	file:
syslog_print_all	printk/printk.c	/^static int syslog_print_all(char __user *buf, int size, bool clear)$/;"	f	file:
syslog_seq	printk/printk.c	/^static u64 syslog_seq;$/;"	v	file:
syslog_time	printk/printk.c	/^static bool syslog_time;$/;"	v	file:
sysrq_dbg_op	debug/debug_core.c	/^static struct sysrq_key_op sysrq_dbg_op = {$/;"	v	typeref:struct:sysrq_key_op	file:
sysrq_handle_dbg	debug/debug_core.c	/^static void sysrq_handle_dbg(int key)$/;"	f	file:
sysrq_poweroff_op	power/poweroff.c	/^static struct sysrq_key_op	sysrq_poweroff_op = {$/;"	v	typeref:struct:sysrq_key_op	file:
sysrq_rcu	rcu/tree_stall.h	/^static bool sysrq_rcu;$/;"	v
sysrq_rcudump_op	rcu/tree_stall.h	/^static struct sysrq_key_op sysrq_rcudump_op = {$/;"	v	typeref:struct:sysrq_key_op
sysrq_sched_debug_show	sched/debug.c	/^void sysrq_sched_debug_show(void)$/;"	f
sysrq_show_rcu	rcu/tree_stall.h	/^static void sysrq_show_rcu(int key)$/;"	f
sysrq_sysctl_handler	sysctl.c	/^static int sysrq_sysctl_handler(struct ctl_table *table, int write,$/;"	f	file:
sysrq_timer_list_show	time/timer_list.c	/^void sysrq_timer_list_show(void)$/;"	f
system	trace/trace_events_hist.c	/^	char				*system;$/;"	m	struct:hist_field	file:
system_enable_read	trace/trace_events.c	/^system_enable_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
system_enable_write	trace/trace_events.c	/^system_enable_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
system_entering_hibernation	power/hibernate.c	/^EXPORT_SYMBOL(system_entering_hibernation);$/;"	v
system_entering_hibernation	power/hibernate.c	/^bool system_entering_hibernation(void)$/;"	f
system_freezable_power_efficient_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_freezable_power_efficient_wq);$/;"	v
system_freezable_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_freezable_wq);$/;"	v
system_freezing_cnt	freezer.c	/^EXPORT_SYMBOL(system_freezing_cnt);$/;"	v
system_freezing_cnt	freezer.c	/^atomic_t system_freezing_cnt = ATOMIC_INIT(0);$/;"	v
system_highpri_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_highpri_wq);$/;"	v
system_long_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_long_wq);$/;"	v
system_map	irq/matrix.c	/^	unsigned long		system_map[IRQ_MATRIX_SIZE];$/;"	m	struct:irq_matrix	file:
system_power_efficient_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_power_efficient_wq);$/;"	v
system_refcount	trace/trace_events.c	/^static inline int system_refcount(struct event_subsystem *system)$/;"	f	file:
system_refcount_dec	trace/trace_events.c	/^static int system_refcount_dec(struct event_subsystem *system)$/;"	f	file:
system_refcount_inc	trace/trace_events.c	/^static int system_refcount_inc(struct event_subsystem *system)$/;"	f	file:
system_tr_open	trace/trace_events.c	/^static int system_tr_open(struct inode *inode, struct file *filp)$/;"	f	file:
system_transition_mutex	reboot.c	/^DEFINE_MUTEX(system_transition_mutex);$/;"	v
system_unbound_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_unbound_wq);$/;"	v
system_wq	workqueue.c	/^EXPORT_SYMBOL(system_wq);$/;"	v
systembits_inalloc	irq/matrix.c	/^	unsigned int		systembits_inalloc;$/;"	m	struct:irq_matrix	file:
systems	trace/trace.h	/^	struct list_head	systems;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
t	bpf/btf.c	/^	const struct btf_type *t;$/;"	m	struct:resolve_vertex	typeref:struct:resolve_vertex::btf_type	file:
t	kcov.c	/^	struct task_struct	*t;$/;"	m	struct:kcov	typeref:struct:kcov::task_struct	file:
t_action	trace/blktrace.c	/^static inline u32 t_action(const struct trace_entry *ent)$/;"	f	file:
t_bytes	trace/blktrace.c	/^static inline u32 t_bytes(const struct trace_entry *ent)$/;"	f	file:
t_error	trace/blktrace.c	/^static inline __u16 t_error(const struct trace_entry *ent)$/;"	f	file:
t_func_next	trace/ftrace.c	/^t_func_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_mod_next	trace/ftrace.c	/^t_mod_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_mod_show	trace/ftrace.c	/^t_mod_show(struct seq_file *m, struct ftrace_iterator *iter)$/;"	f	file:
t_mod_start	trace/ftrace.c	/^static void *t_mod_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_next	trace/ftrace.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_events.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_printk.c	/^static void *t_next(struct seq_file *m, void * v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_stack.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_probe_next	trace/ftrace.c	/^t_probe_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_probe_show	trace/ftrace.c	/^t_probe_show(struct seq_file *m, struct ftrace_iterator *iter)$/;"	f	file:
t_probe_start	trace/ftrace.c	/^static void *t_probe_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_rcu_perf_writer_finished	rcu/rcuperf.c	/^static u64 t_rcu_perf_writer_finished;$/;"	v	file:
t_rcu_perf_writer_started	rcu/rcuperf.c	/^static u64 t_rcu_perf_writer_started;$/;"	v	file:
t_sec	trace/blktrace.c	/^static inline u32 t_sec(const struct trace_entry *ent)$/;"	f	file:
t_sector	trace/blktrace.c	/^static inline unsigned long long t_sector(const struct trace_entry *ent)$/;"	f	file:
t_show	trace/ftrace.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_events.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_printk.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_stack.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_start	trace/ftrace.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_events.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_printk.c	/^t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_stack.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_stop	trace/ftrace.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_events.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_printk.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_stack.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
tag	events/core.c	/^		u8				tag[BPF_TAG_SIZE];$/;"	m	struct:perf_bpf_event::__anon7	file:
tag_chunk	audit_tree.c	/^static int tag_chunk(struct inode *inode, struct audit_tree *tree)$/;"	f	file:
tag_mount	audit_tree.c	/^static int tag_mount(struct vfsmount *mnt, void *arg)$/;"	f	file:
tail	bpf/queue_stack_maps.c	/^	u32 head, tail;$/;"	m	struct:bpf_queue_stack	file:
tail	softirq.c	/^	struct tasklet_struct **tail;$/;"	m	struct:tasklet_head	typeref:struct:tasklet_head::tasklet_struct	file:
tail	trace/trace.c	/^	struct trace_eval_map_tail	tail;$/;"	m	union:trace_eval_map_item	typeref:struct:trace_eval_map_item::trace_eval_map_tail	file:
tail_page	trace/ring_buffer.c	/^	struct buffer_page		*tail_page;	\/* write to tail *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
tail_page	trace/ring_buffer.c	/^	struct buffer_page	*tail_page;$/;"	m	struct:rb_event_info	typeref:struct:rb_event_info::buffer_page	file:
taint_flags	panic.c	/^const struct taint_flag taint_flags[TAINT_FLAGS_COUNT] = {$/;"	v	typeref:struct:taint_flag
tainted_mask	panic.c	/^static unsigned long tainted_mask =$/;"	v	file:
take_cpu_down	cpu.c	/^static int take_cpu_down(void *_param)$/;"	f	file:
takedown_cpu	cpu.c	/^static int takedown_cpu(unsigned int cpu)$/;"	f	file:
takedown_cpu	cpu.c	1052;"	d	file:
takeover_tasklets	softirq.c	/^static int takeover_tasklets(unsigned int cpu)$/;"	f	file:
takeover_tasklets	softirq.c	670;"	d	file:
target	cpu.c	/^	enum cpuhp_state	target;$/;"	m	struct:cpuhp_cpu_state	typeref:enum:cpuhp_cpu_state::cpuhp_state	file:
target	test_kprobes.c	/^static u32 (*target)(u32 value);$/;"	v	file:
target	trace/trace_events_filter.c	/^	int			target;$/;"	m	struct:prog_entry	file:
target2	test_kprobes.c	/^static u32 (*target2)(u32 value);$/;"	v	file:
target_auid	audit.h	/^	kuid_t		    target_auid;$/;"	m	struct:audit_context
target_auid	auditsc.c	/^	kuid_t			target_auid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_comm	audit.h	/^	char		    target_comm[TASK_COMM_LEN];$/;"	m	struct:audit_context
target_comm	auditsc.c	/^	char 			target_comm[AUDIT_AUX_PIDS][TASK_COMM_LEN];$/;"	m	struct:audit_aux_data_pids	file:
target_pid	audit.h	/^	pid_t		    target_pid;$/;"	m	struct:audit_context
target_pid	auditsc.c	/^	pid_t			target_pid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_sessionid	audit.h	/^	unsigned int	    target_sessionid;$/;"	m	struct:audit_context
target_sessionid	auditsc.c	/^	unsigned int		target_sessionid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_sid	audit.h	/^	u32		    target_sid;$/;"	m	struct:audit_context
target_sid	auditsc.c	/^	u32			target_sid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_uid	audit.h	/^	kuid_t		    target_uid;$/;"	m	struct:audit_context
target_uid	auditsc.c	/^	kuid_t			target_uid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
task	debug/debug_core.h	/^	struct task_struct	*task;$/;"	m	struct:debuggerinfo_struct	typeref:struct:debuggerinfo_struct::task_struct
task	events/core.c	/^	struct task_struct		*task;$/;"	m	struct:perf_namespaces_event	typeref:struct:perf_namespaces_event::task_struct	file:
task	events/core.c	/^	struct task_struct		*task;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::task_struct	file:
task	events/core.c	/^	struct task_struct	*task;$/;"	m	struct:perf_comm_event	typeref:struct:perf_comm_event::task_struct	file:
task	events/core.c	/^	struct task_struct	*task;$/;"	m	struct:perf_switch_event	typeref:struct:perf_switch_event::task_struct	file:
task	futex.c	/^	struct task_struct *task;$/;"	m	struct:futex_q	typeref:struct:futex_q::task_struct	file:
task	locking/rtmutex_common.h	/^	struct task_struct	*task;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::task_struct
task	locking/rwsem.c	/^	struct task_struct *task;$/;"	m	struct:rwsem_waiter	typeref:struct:rwsem_waiter::task_struct	file:
task	locking/semaphore.c	/^	struct task_struct *task;$/;"	m	struct:semaphore_waiter	typeref:struct:semaphore_waiter::task_struct	file:
task	sched/core.c	/^	struct task_struct *task;$/;"	m	struct:migration_arg	typeref:struct:migration_arg::task_struct	file:
task	seccomp.c	/^	struct task_struct *task;$/;"	m	struct:seccomp_knotif	typeref:struct:seccomp_knotif::task_struct	file:
task	time/timer.c	/^	struct task_struct *task;$/;"	m	struct:process_timer	typeref:struct:process_timer::task_struct	file:
task	trace/bpf_trace.c	/^	struct task_struct *task;$/;"	m	struct:send_signal_irq_work	typeref:struct:send_signal_irq_work::task_struct	file:
task	workqueue.c	/^	struct task_struct	*task;	\/* purely informational *\/$/;"	m	struct:wq_barrier	typeref:struct:wq_barrier::task_struct	file:
task	workqueue_internal.h	/^	struct task_struct	*task;		\/* I: worker task *\/$/;"	m	struct:worker	typeref:struct:worker::task_struct
task_active_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(task_active_pid_ns);$/;"	v
task_active_pid_ns	pid.c	/^struct pid_namespace *task_active_pid_ns(struct task_struct *tsk)$/;"	f
task_blocked_on_lock	locking/rtmutex.c	/^static inline struct rt_mutex *task_blocked_on_lock(struct task_struct *p)$/;"	f	file:
task_blocks_on_rt_mutex	locking/rtmutex.c	/^static int task_blocks_on_rt_mutex(struct rt_mutex *lock,$/;"	f	file:
task_boost	locking/locktorture.c	/^	void (*task_boost)(struct torture_random_state *trsp);$/;"	m	struct:lock_torture_ops	file:
task_bp_pinned	events/hw_breakpoint.c	/^static int task_bp_pinned(int cpu, struct perf_event *bp, enum bp_type_idx type)$/;"	f	file:
task_ca	sched/cpuacct.c	/^static inline struct cpuacct *task_ca(struct task_struct *tsk)$/;"	f	file:
task_can_attach	sched/core.c	/^int task_can_attach(struct task_struct *p,$/;"	f
task_cfs_rq	sched/fair.c	/^static inline struct cfs_rq *task_cfs_rq(struct task_struct *p)$/;"	f	file:
task_cgroup_from_root	cgroup/cgroup.c	/^struct cgroup *task_cgroup_from_root(struct task_struct *task,$/;"	f
task_cgroup_path	cgroup/cgroup.c	/^EXPORT_SYMBOL_GPL(task_cgroup_path);$/;"	v
task_cgroup_path	cgroup/cgroup.c	/^int task_cgroup_path(struct task_struct *task, char *buf, size_t buflen)$/;"	f
task_change_group	sched/sched.h	/^	void (*task_change_group)(struct task_struct *p, int type);$/;"	m	struct:sched_class
task_change_group_fair	sched/fair.c	/^static void task_change_group_fair(struct task_struct *p, int type)$/;"	f	file:
task_clear_jobctl_pending	signal.c	/^void task_clear_jobctl_pending(struct task_struct *task, unsigned long mask)$/;"	f
task_clear_jobctl_trapping	signal.c	/^void task_clear_jobctl_trapping(struct task_struct *task)$/;"	f
task_clock_event_add	events/core.c	/^static int task_clock_event_add(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_del	events/core.c	/^static void task_clock_event_del(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_init	events/core.c	/^static int task_clock_event_init(struct perf_event *event)$/;"	f	file:
task_clock_event_read	events/core.c	/^static void task_clock_event_read(struct perf_event *event)$/;"	f	file:
task_clock_event_start	events/core.c	/^static void task_clock_event_start(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_stop	events/core.c	/^static void task_clock_event_stop(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_update	events/core.c	/^static void task_clock_event_update(struct perf_event *event, u64 now)$/;"	f	file:
task_contending	sched/deadline.c	/^static void task_contending(struct sched_dl_entity *dl_se, int flags)$/;"	f	file:
task_cputime	sched/cputime.c	/^void task_cputime(struct task_struct *t, u64 *utime, u64 *stime)$/;"	f
task_cputime_adjusted	sched/cputime.c	/^EXPORT_SYMBOL_GPL(task_cputime_adjusted);$/;"	v
task_cputime_adjusted	sched/cputime.c	/^void task_cputime_adjusted(struct task_struct *p, u64 *ut, u64 *st)$/;"	f
task_cputime_expired	time/posix-cpu-timers.c	/^static inline int task_cputime_expired(const struct task_cputime *sample,$/;"	f	file:
task_cputime_zero	time/posix-cpu-timers.c	/^static inline int task_cputime_zero(const struct task_cputime *cputime)$/;"	f	file:
task_cs	cgroup/cpuset.c	/^static inline struct cpuset *task_cs(struct task_struct *task)$/;"	f	file:
task_ctx	events/core.c	/^	struct perf_event_context	*task_ctx;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::perf_event_context	file:
task_ctx_sched_out	events/core.c	/^static void task_ctx_sched_out(struct perf_cpu_context *cpuctx,$/;"	f	file:
task_curr	sched/core.c	/^inline int task_curr(const struct task_struct *p)$/;"	f
task_current	sched/sched.h	/^static inline int task_current(struct rq *rq, struct task_struct *p)$/;"	f
task_dead	sched/sched.h	/^	void (*task_dead)(struct task_struct *p);$/;"	m	struct:sched_class
task_dead_fair	sched/fair.c	/^static void task_dead_fair(struct task_struct *p)$/;"	f	file:
task_faults	sched/fair.c	/^static inline unsigned long task_faults(struct task_struct *p, int nid)$/;"	f	file:
task_faults_idx	sched/fair.c	/^static inline int task_faults_idx(enum numa_faults_stats s, int nid, int priv)$/;"	f	file:
task_fits_capacity	sched/fair.c	/^static inline int task_fits_capacity(struct task_struct *p, long capacity)$/;"	f	file:
task_fork	sched/sched.h	/^	void (*task_fork)(struct task_struct *p);$/;"	m	struct:sched_class
task_fork_dl	sched/deadline.c	/^static void task_fork_dl(struct task_struct *p)$/;"	f	file:
task_fork_fair	sched/fair.c	/^static void task_fork_fair(struct task_struct *p)$/;"	f	file:
task_freezer	cgroup/legacy_freezer.c	/^static inline struct freezer *task_freezer(struct task_struct *task)$/;"	f	file:
task_function_call	events/core.c	/^task_function_call(struct task_struct *p, remote_function_f func, void *info)$/;"	f	file:
task_group	sched/sched.h	/^static inline struct task_group *task_group(struct task_struct *p)$/;"	f
task_group	sched/sched.h	/^struct task_group {$/;"	s
task_group_account_field	sched/cputime.c	/^static inline void task_group_account_field(struct task_struct *p, int index,$/;"	f	file:
task_group_is_autogroup	sched/autogroup.h	/^static inline bool task_group_is_autogroup(struct task_group *tg)$/;"	f
task_group_path	sched/debug.c	/^static char *task_group_path(struct task_group *tg)$/;"	f	file:
task_groups	sched/core.c	/^LIST_HEAD(task_groups);$/;"	v
task_gtime	sched/cputime.c	/^u64 task_gtime(struct task_struct *t)$/;"	f
task_h_load	sched/fair.c	/^static unsigned long task_h_load(struct task_struct *p)$/;"	f	file:
task_handoff_register	profile.c	/^EXPORT_SYMBOL_GPL(task_handoff_register);$/;"	v
task_handoff_register	profile.c	/^int task_handoff_register(struct notifier_block *n)$/;"	f
task_handoff_unregister	profile.c	/^EXPORT_SYMBOL_GPL(task_handoff_unregister);$/;"	v
task_handoff_unregister	profile.c	/^int task_handoff_unregister(struct notifier_block *n)$/;"	f
task_has_dl_policy	sched/sched.h	/^static inline int task_has_dl_policy(struct task_struct *p)$/;"	f
task_has_idle_policy	sched/sched.h	/^static inline int task_has_idle_policy(struct task_struct *p)$/;"	f
task_has_pi_waiters	locking/rtmutex_common.h	/^static inline int task_has_pi_waiters(struct task_struct *p)$/;"	f
task_has_rt_policy	sched/sched.h	/^static inline int task_has_rt_policy(struct task_struct *p)$/;"	f
task_hot	sched/fair.c	/^static int task_hot(struct task_struct *p, struct lb_env *env)$/;"	f	file:
task_irq_context	locking/lockdep.c	/^static inline unsigned int task_irq_context(struct task_struct *task)$/;"	f	file:
task_join_group_stop	signal.c	/^void task_join_group_stop(struct task_struct *task)$/;"	f
task_move_group_fair	sched/fair.c	/^static void task_move_group_fair(struct task_struct *p)$/;"	f	file:
task_non_contending	sched/deadline.c	/^static void task_non_contending(struct task_struct *p)$/;"	f	file:
task_nr_scan_windows	sched/fair.c	/^static unsigned int task_nr_scan_windows(struct task_struct *p)$/;"	f	file:
task_numa_assign	sched/fair.c	/^static void task_numa_assign(struct task_numa_env *env,$/;"	f	file:
task_numa_compare	sched/fair.c	/^static void task_numa_compare(struct task_numa_env *env,$/;"	f	file:
task_numa_env	sched/fair.c	/^struct task_numa_env {$/;"	s	file:
task_numa_fault	sched/fair.c	/^void task_numa_fault(int last_cpupid, int mem_node, int pages, int flags)$/;"	f
task_numa_find_cpu	sched/fair.c	/^static void task_numa_find_cpu(struct task_numa_env *env,$/;"	f	file:
task_numa_free	sched/fair.c	/^void task_numa_free(struct task_struct *p, bool final)$/;"	f
task_numa_group	sched/fair.c	/^static void task_numa_group(struct task_struct *p, int cpupid, int flags,$/;"	f	file:
task_numa_group_id	sched/fair.c	/^pid_t task_numa_group_id(struct task_struct *p)$/;"	f
task_numa_migrate	sched/fair.c	/^static int task_numa_migrate(struct task_struct *p)$/;"	f	file:
task_numa_placement	sched/fair.c	/^static void task_numa_placement(struct task_struct *p)$/;"	f	file:
task_numa_work	sched/fair.c	/^void task_numa_work(struct callback_head *work)$/;"	f
task_of	sched/fair.c	/^static inline struct task_struct *task_of(struct sched_entity *se)$/;"	f	file:
task_on_rq_migrating	sched/sched.h	/^static inline int task_on_rq_migrating(struct task_struct *p)$/;"	f
task_on_rq_queued	sched/sched.h	/^static inline int task_on_rq_queued(struct task_struct *p)$/;"	f
task_participate_group_stop	signal.c	/^static bool task_participate_group_stop(struct task_struct *task)$/;"	f	file:
task_pid_ptr	pid.c	/^static struct pid **task_pid_ptr(struct task_struct *task, enum pid_type type)$/;"	f	file:
task_prio	sched/core.c	/^int task_prio(const struct task_struct *p)$/;"	f
task_rcu_dereference	exit.c	/^struct task_struct *task_rcu_dereference(struct task_struct **ptask)$/;"	f
task_rq	sched/sched.h	1039;"	d
task_running	sched/sched.h	/^static inline int task_running(struct rq *rq, struct task_struct *p)$/;"	f
task_scan_max	sched/fair.c	/^static unsigned int task_scan_max(struct task_struct *p)$/;"	f	file:
task_scan_min	sched/fair.c	/^static unsigned int task_scan_min(struct task_struct *p)$/;"	f	file:
task_scan_start	sched/fair.c	/^static unsigned int task_scan_start(struct task_struct *p)$/;"	f	file:
task_sched_runtime	sched/core.c	/^unsigned long long task_sched_runtime(struct task_struct *p)$/;"	f
task_set_group_fair	sched/fair.c	/^static void task_set_group_fair(struct task_struct *p)$/;"	f	file:
task_set_jobctl_pending	signal.c	/^bool task_set_jobctl_pending(struct task_struct *task, unsigned long mask)$/;"	f
task_stopped_code	exit.c	/^static int *task_stopped_code(struct task_struct *p, bool ptrace)$/;"	f	file:
task_struct_cachep	fork.c	/^static struct kmem_cache *task_struct_cachep;$/;"	v	typeref:struct:kmem_cache	file:
task_struct_whitelist	fork.c	/^static void task_struct_whitelist(unsigned long *offset, unsigned long *size)$/;"	f	file:
task_tick	sched/sched.h	/^	void (*task_tick)(struct rq *rq, struct task_struct *p, int queued);$/;"	m	struct:sched_class
task_tick_dl	sched/deadline.c	/^static void task_tick_dl(struct rq *rq, struct task_struct *p, int queued)$/;"	f	file:
task_tick_fair	sched/fair.c	/^static void task_tick_fair(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_tick_idle	sched/idle.c	/^static void task_tick_idle(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_tick_numa	sched/fair.c	/^static void task_tick_numa(struct rq *rq, struct task_struct *curr)$/;"	f	file:
task_tick_rt	sched/rt.c	/^static void task_tick_rt(struct rq *rq, struct task_struct *p, int queued)$/;"	f	file:
task_tick_stop	sched/stop_task.c	/^static void task_tick_stop(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_to_waiter	locking/rtmutex.c	231;"	d	file:
task_top_pi_waiter	locking/rtmutex_common.h	/^task_top_pi_waiter(struct task_struct *p)$/;"	f
task_user_regset_view	ptrace.c	/^EXPORT_SYMBOL_GPL(task_user_regset_view);$/;"	v
task_util	sched/fair.c	/^static inline unsigned long task_util(struct task_struct *p)$/;"	f	file:
task_util_est	sched/fair.c	/^static inline unsigned long task_util_est(struct task_struct *p)$/;"	f	file:
task_wants_autogroup	sched/autogroup.c	/^bool task_wants_autogroup(struct task_struct *p, struct task_group *tg)$/;"	f
task_weight	sched/fair.c	/^static inline unsigned long task_weight(struct task_struct *p, int nid,$/;"	f	file:
task_woken	sched/sched.h	/^	void (*task_woken)(struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
task_woken_dl	sched/deadline.c	/^static void task_woken_dl(struct rq *rq, struct task_struct *p)$/;"	f	file:
task_woken_rt	sched/rt.c	/^static void task_woken_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
task_work_add	task_work.c	/^task_work_add(struct task_struct *task, struct callback_head *work, bool notify)$/;"	f
task_work_cancel	task_work.c	/^task_work_cancel(struct task_struct *task, task_work_func_t func)$/;"	f
task_work_run	task_work.c	/^void task_work_run(void)$/;"	f
tasklet_action	softirq.c	/^static __latent_entropy void tasklet_action(struct softirq_action *a)$/;"	f	file:
tasklet_action_common	softirq.c	/^static void tasklet_action_common(struct softirq_action *a,$/;"	f	file:
tasklet_head	softirq.c	/^struct tasklet_head {$/;"	s	file:
tasklet_hi_action	softirq.c	/^static __latent_entropy void tasklet_hi_action(struct softirq_action *a)$/;"	f	file:
tasklet_init	softirq.c	/^EXPORT_SYMBOL(tasklet_init);$/;"	v
tasklet_init	softirq.c	/^void tasklet_init(struct tasklet_struct *t,$/;"	f
tasklet_kill	softirq.c	/^EXPORT_SYMBOL(tasklet_kill);$/;"	v
tasklet_kill	softirq.c	/^void tasklet_kill(struct tasklet_struct *t)$/;"	f
tasklet_kill_immediate	softirq.c	/^void tasklet_kill_immediate(struct tasklet_struct *t, unsigned int cpu)$/;"	f
tasks	sched/fair.c	/^	struct list_head	tasks;$/;"	m	struct:lb_env	typeref:struct:lb_env::list_head	file:
tasks	sched/sched.h	/^	unsigned long tasks : BITS_PER_LONG - bits_per(SCHED_CAPACITY_SCALE);$/;"	m	struct:uclamp_bucket
tasks_ops	rcu/rcuperf.c	/^static struct rcu_perf_ops tasks_ops = {$/;"	v	typeref:struct:rcu_perf_ops	file:
tasks_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops tasks_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
tasks_perf_read_lock	rcu/rcuperf.c	/^static int tasks_perf_read_lock(void)$/;"	f	file:
tasks_perf_read_unlock	rcu/rcuperf.c	/^static void tasks_perf_read_unlock(int idx)$/;"	f	file:
tasks_rcu_exit_srcu	rcu/update.c	/^DEFINE_STATIC_SRCU(tasks_rcu_exit_srcu);$/;"	v
tasks_timeline	sched/sched.h	/^	struct rb_root_cached	tasks_timeline;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::rb_root_cached
tasks_torture_read_lock	rcu/rcutorture.c	/^static int tasks_torture_read_lock(void)$/;"	f	file:
tasks_torture_read_unlock	rcu/rcutorture.c	/^static void tasks_torture_read_unlock(int idx)$/;"	f	file:
taskstats_cache	taskstats.c	/^struct kmem_cache *taskstats_cache;$/;"	v	typeref:struct:kmem_cache
taskstats_cmd_get_policy	taskstats.c	/^static const struct nla_policy taskstats_cmd_get_policy[TASKSTATS_CMD_ATTR_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
taskstats_exit	taskstats.c	/^void taskstats_exit(struct task_struct *tsk, int group_dead)$/;"	f
taskstats_init	taskstats.c	/^late_initcall(taskstats_init);$/;"	v
taskstats_init	taskstats.c	/^static int __init taskstats_init(void)$/;"	f	file:
taskstats_init_early	taskstats.c	/^void __init taskstats_init_early(void)$/;"	f
taskstats_ops	taskstats.c	/^static const struct genl_ops taskstats_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
taskstats_packet_size	taskstats.c	/^static size_t taskstats_packet_size(void)$/;"	f	file:
taskstats_pre_doit	taskstats.c	/^static int taskstats_pre_doit(const struct genl_ops *ops, struct sk_buff *skb,$/;"	f	file:
taskstats_tgid_alloc	taskstats.c	/^static struct taskstats *taskstats_tgid_alloc(struct task_struct *tsk)$/;"	f	file:
taskstats_user_cmd	taskstats.c	/^static int taskstats_user_cmd(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
te_blk_io_trace	trace/blktrace.c	/^const struct blk_io_trace *te_blk_io_trace(const struct trace_entry *ent)$/;"	f	file:
teardown	cpu.c	/^	} teardown;$/;"	m	struct:cpuhp_step	typeref:union:cpuhp_step::__anon19	file:
teardown_percpu_nmi	irq/manage.c	/^void teardown_percpu_nmi(unsigned int irq)$/;"	f
tell_cpu_to_push	sched/rt.c	/^static void tell_cpu_to_push(struct rq *rq)$/;"	f	file:
temp_buffer	trace/trace.c	/^static struct ring_buffer *temp_buffer;$/;"	v	typeref:struct:ring_buffer	file:
ten_thousand	sysctl.c	/^static int ten_thousand = 10000;$/;"	v	file:
test_aa	locking/test-ww_mutex.c	/^static int test_aa(void)$/;"	f	file:
test_abba	locking/test-ww_mutex.c	/^static int test_abba(bool resolve)$/;"	f	file:
test_abba	locking/test-ww_mutex.c	/^struct test_abba {$/;"	s	file:
test_abba_work	locking/test-ww_mutex.c	/^static void test_abba_work(struct work_struct *work)$/;"	f	file:
test_callback	rcu/update.c	/^static void test_callback(struct rcu_head *r)$/;"	f	file:
test_cpu_buff_start	trace/trace.c	/^static void test_cpu_buff_start(struct trace_iterator *iter)$/;"	f	file:
test_cycle	locking/test-ww_mutex.c	/^static int test_cycle(unsigned int ncpus)$/;"	f	file:
test_cycle	locking/test-ww_mutex.c	/^struct test_cycle {$/;"	s	file:
test_cycle_work	locking/test-ww_mutex.c	/^static void test_cycle_work(struct work_struct *work)$/;"	f	file:
test_error	trace/ring_buffer_benchmark.c	/^static int test_error;$/;"	v	file:
test_filter_data	trace/trace_events_filter.c	/^} test_filter_data[] = {$/;"	v	typeref:struct:test_filter_data_t	file:
test_filter_data_t	trace/trace_events_filter.c	/^static struct test_filter_data_t {$/;"	s	file:
test_ftrace_alive	trace/trace.c	/^static void test_ftrace_alive(struct seq_file *m)$/;"	f	file:
test_idle_cores	sched/fair.c	/^static inline bool test_idle_cores(int cpu, bool def)$/;"	f	file:
test_kprobe	test_kprobes.c	/^static int test_kprobe(void)$/;"	f	file:
test_kprobes	test_kprobes.c	/^static int test_kprobes(void)$/;"	f	file:
test_kretprobe	test_kprobes.c	/^static int test_kretprobe(void)$/;"	f	file:
test_kretprobes	test_kprobes.c	/^static int test_kretprobes(void)$/;"	f	file:
test_mode	trace/preemptirq_delay_test.c	/^static char test_mode[10] = "irq";$/;"	v	file:
test_mutex	locking/test-ww_mutex.c	/^static int test_mutex(void)$/;"	f	file:
test_mutex	locking/test-ww_mutex.c	/^struct test_mutex {$/;"	s	file:
test_mutex_work	locking/test-ww_mutex.c	/^static void test_mutex_work(struct work_struct *work)$/;"	f	file:
test_pred_visited	trace/trace_events_filter.c	/^static int test_pred_visited;$/;"	v	file:
test_pred_visited_fn	trace/trace_events_filter.c	/^static int test_pred_visited_fn(struct filter_pred *pred, void *event)$/;"	f	file:
test_probe1	trace/trace_selftest.c	/^static struct ftrace_ops test_probe1 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_probe2	trace/trace_selftest.c	/^static struct ftrace_ops test_probe2 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_probe3	trace/trace_selftest.c	/^static struct ftrace_ops test_probe3 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_rec_ops_needs_regs	trace/ftrace.c	/^static bool test_rec_ops_needs_regs(struct dyn_ftrace *rec)$/;"	f	file:
test_rec_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_rec_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_recsafe_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_recsafe_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_regs_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_regs_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_repeat_count_current	power/suspend_test.c	/^static u32 test_repeat_count_current;$/;"	v	file:
test_repeat_count_max	power/suspend_test.c	/^static u32 test_repeat_count_max = 1;$/;"	v	file:
test_ringbuffer	trace/ring_buffer.c	/^late_initcall(test_ringbuffer);$/;"	v
test_ringbuffer	trace/ring_buffer.c	/^static __init int test_ringbuffer(void)$/;"	f	file:
test_state	sched/psi.c	/^static bool test_state(unsigned int *tasks, enum psi_states state)$/;"	f	file:
test_suspend	power/suspend_test.c	/^late_initcall(test_suspend);$/;"	v
test_suspend	power/suspend_test.c	/^static int __init test_suspend(void)$/;"	f	file:
test_taint	panic.c	/^EXPORT_SYMBOL(test_taint);$/;"	v
test_taint	panic.c	/^int test_taint(unsigned flag)$/;"	f
test_time_stamp	trace/ring_buffer.c	/^static inline int test_time_stamp(u64 delta)$/;"	f	file:
test_wakealarm	power/suspend_test.c	/^static void __init test_wakealarm(struct rtc_device *rtc, suspend_state_t state)$/;"	f	file:
test_work	trace/trace_events.c	/^static __init void test_work(struct work_struct *dummy)$/;"	f	file:
test_ww_mutex_exit	locking/test-ww_mutex.c	/^module_exit(test_ww_mutex_exit);$/;"	v
test_ww_mutex_exit	locking/test-ww_mutex.c	/^static void __exit test_ww_mutex_exit(void)$/;"	f	file:
test_ww_mutex_init	locking/test-ww_mutex.c	/^module_init(test_ww_mutex_init);$/;"	v
test_ww_mutex_init	locking/test-ww_mutex.c	/^static int __init test_ww_mutex_init(void)$/;"	f	file:
text_len	printk/printk.c	/^	u16 text_len;		\/* length of text buffer *\/$/;"	m	struct:printk_log	file:
text_mutex	extable.c	/^DEFINE_MUTEX(text_mutex);$/;"	v
tg	sched/autogroup.h	/^	struct task_group	*tg;$/;"	m	struct:autogroup	typeref:struct:autogroup::task_group
tg	sched/core.c	/^	struct task_group *tg;$/;"	m	struct:cfs_schedulable_data	typeref:struct:cfs_schedulable_data::task_group	file:
tg	sched/rt.c	/^	struct task_group *tg;$/;"	m	struct:rt_schedulable_data	typeref:struct:rt_schedulable_data::task_group	file:
tg	sched/sched.h	/^	struct task_group	*tg;	\/* group that "owns" this runqueue *\/$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::task_group
tg	sched/sched.h	/^	struct task_group	*tg;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::task_group
tg_cfs_bandwidth	sched/fair.c	/^static inline struct cfs_bandwidth *tg_cfs_bandwidth(struct task_group *tg)$/;"	f	file:
tg_cfs_schedulable_down	sched/core.c	/^static int tg_cfs_schedulable_down(struct task_group *tg, void *data)$/;"	f	file:
tg_get_cfs_period	sched/core.c	/^static long tg_get_cfs_period(struct task_group *tg)$/;"	f	file:
tg_get_cfs_quota	sched/core.c	/^static long tg_get_cfs_quota(struct task_group *tg)$/;"	f	file:
tg_has_rt_tasks	sched/rt.c	/^static inline int tg_has_rt_tasks(struct task_group *tg)$/;"	f	file:
tg_load_avg_contrib	sched/sched.h	/^	unsigned long		tg_load_avg_contrib;$/;"	m	struct:cfs_rq
tg_nop	sched/core.c	/^int tg_nop(struct task_group *tg, void *data)$/;"	f
tg_rt_schedulable	sched/rt.c	/^static int tg_rt_schedulable(struct task_group *tg, void *data)$/;"	f	file:
tg_set_cfs_bandwidth	sched/core.c	/^static int tg_set_cfs_bandwidth(struct task_group *tg, u64 period, u64 quota)$/;"	f	file:
tg_set_cfs_period	sched/core.c	/^static int tg_set_cfs_period(struct task_group *tg, long cfs_period_us)$/;"	f	file:
tg_set_cfs_quota	sched/core.c	/^static int tg_set_cfs_quota(struct task_group *tg, long cfs_quota_us)$/;"	f	file:
tg_set_rt_bandwidth	sched/rt.c	/^static int tg_set_rt_bandwidth(struct task_group *tg,$/;"	f	file:
tg_throttle_down	sched/fair.c	/^static int tg_throttle_down(struct task_group *tg, void *data)$/;"	f	file:
tg_unthrottle_up	sched/fair.c	/^static int tg_unthrottle_up(struct task_group *tg, void *data)$/;"	f	file:
tg_visitor	sched/sched.h	/^typedef int (*tg_visitor)(struct task_group *, void *);$/;"	t
tgid_map	trace/trace.c	/^static int *tgid_map;$/;"	v	file:
thaw_kernel_threads	power/process.c	/^void thaw_kernel_threads(void)$/;"	f
thaw_processes	power/process.c	/^void thaw_processes(void)$/;"	f
thaw_workqueues	workqueue.c	/^void thaw_workqueues(void)$/;"	f
this_bw	sched/sched.h	/^	u64			this_bw;$/;"	m	struct:dl_rq
this_rq	sched/sched.h	1038;"	d
this_scd	sched/clock.c	/^static inline struct sched_clock_data *this_scd(void)$/;"	f	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:cmp_data	typeref:struct:cmp_data::task_struct	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:crc_data	typeref:struct:crc_data::task_struct	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:dec_data	typeref:struct:dec_data::task_struct	file:
thr_query	debug/debug_core.h	/^	unsigned long		thr_query;$/;"	m	struct:kgdb_state
thread	cpu.c	/^	struct task_struct	*thread;$/;"	m	struct:cpuhp_cpu_state	typeref:struct:cpuhp_cpu_state::task_struct	file:
thread	sched/cpufreq_schedutil.c	/^	struct task_struct	*thread;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::task_struct	file:
thread	stop_machine.c	/^	struct task_struct	*thread;$/;"	m	struct:cpu_stopper	typeref:struct:cpu_stopper::task_struct	file:
thread_ack	stop_machine.c	/^	atomic_t		thread_ack;$/;"	m	struct:multi_stop_data	file:
thread_cpu_clock_get	time/posix-cpu-timers.c	/^static int thread_cpu_clock_get(const clockid_t which_clock,$/;"	f	file:
thread_cpu_clock_getres	time/posix-cpu-timers.c	/^static int thread_cpu_clock_getres(const clockid_t which_clock,$/;"	f	file:
thread_cpu_timer_create	time/posix-cpu-timers.c	/^static int thread_cpu_timer_create(struct k_itimer *timer)$/;"	f	file:
thread_group_cputime	sched/cputime.c	/^void thread_group_cputime(struct task_struct *tsk, struct task_cputime *times)$/;"	f
thread_group_cputime_adjusted	sched/cputime.c	/^void thread_group_cputime_adjusted(struct task_struct *p, u64 *ut, u64 *st)$/;"	f
thread_group_cputimer	time/posix-cpu-timers.c	/^void thread_group_cputimer(struct task_struct *tsk, struct task_cputime *times)$/;"	f
thread_stack_cache	fork.c	/^static struct kmem_cache *thread_stack_cache;$/;"	v	typeref:struct:kmem_cache	file:
thread_stack_cache_init	fork.c	/^void thread_stack_cache_init(void)$/;"	f
threadfn	kthread.c	/^	int (*threadfn)(void *data);$/;"	m	struct:kthread_create_info	file:
threadid	debug/debug_core.h	/^	unsigned long		threadid;$/;"	m	struct:kgdb_state
throttle_cfs_rq	sched/fair.c	/^static void throttle_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
throttle_count	sched/sched.h	/^	int			throttle_count;$/;"	m	struct:cfs_rq
throttled	sched/sched.h	/^	int			throttled;$/;"	m	struct:cfs_rq
throttled_cfs_rq	sched/sched.h	/^	struct list_head	throttled_cfs_rq;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::list_head
throttled_clock	sched/sched.h	/^	u64			throttled_clock;$/;"	m	struct:cfs_rq
throttled_clock_task	sched/sched.h	/^	u64			throttled_clock_task;$/;"	m	struct:cfs_rq
throttled_clock_task_time	sched/sched.h	/^	u64			throttled_clock_task_time;$/;"	m	struct:cfs_rq
throttled_hierarchy	sched/fair.c	/^static inline int throttled_hierarchy(struct cfs_rq *cfs_rq)$/;"	f	file:
throttled_lb_pair	sched/fair.c	/^static inline int throttled_lb_pair(struct task_group *tg,$/;"	f	file:
throttled_list	sched/sched.h	/^	struct list_head	throttled_list;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::list_head
throttled_time	sched/sched.h	/^	u64			throttled_time;$/;"	m	struct:cfs_bandwidth
tick_bc_dev	time/clockevents.c	/^static struct device tick_bc_dev = {$/;"	v	typeref:struct:device	file:
tick_broadcast_clear_oneshot	time/tick-broadcast.c	/^static inline void tick_broadcast_clear_oneshot(int cpu) { }$/;"	f	file:
tick_broadcast_clear_oneshot	time/tick-broadcast.c	/^static void tick_broadcast_clear_oneshot(int cpu)$/;"	f	file:
tick_broadcast_control	time/tick-broadcast.c	/^EXPORT_SYMBOL_GPL(tick_broadcast_control);$/;"	v
tick_broadcast_control	time/tick-broadcast.c	/^void tick_broadcast_control(enum tick_broadcast_mode mode)$/;"	f
tick_broadcast_device	time/tick-broadcast.c	/^static struct tick_device tick_broadcast_device;$/;"	v	typeref:struct:tick_device	file:
tick_broadcast_forced	time/tick-broadcast.c	/^static int tick_broadcast_forced;$/;"	v	file:
tick_broadcast_init	time/tick-broadcast.c	/^void __init tick_broadcast_init(void)$/;"	f
tick_broadcast_init	time/tick-internal.h	/^static inline void tick_broadcast_init(void) { }$/;"	f
tick_broadcast_init_next_event	time/tick-broadcast.c	/^static void tick_broadcast_init_next_event(struct cpumask *mask,$/;"	f	file:
tick_broadcast_init_sysfs	time/clockevents.c	/^static __init int tick_broadcast_init_sysfs(void)$/;"	f	file:
tick_broadcast_init_sysfs	time/clockevents.c	/^static inline int tick_broadcast_init_sysfs(void) { return 0; }$/;"	f	file:
tick_broadcast_offline	time/tick-broadcast.c	/^void tick_broadcast_offline(unsigned int cpu)$/;"	f
tick_broadcast_offline	time/tick-internal.h	/^static inline void tick_broadcast_offline(unsigned int cpu) { }$/;"	f
tick_broadcast_oneshot_active	time/tick-broadcast.c	/^int tick_broadcast_oneshot_active(void)$/;"	f
tick_broadcast_oneshot_active	time/tick-internal.h	/^static inline int tick_broadcast_oneshot_active(void) { return 0; }$/;"	f
tick_broadcast_oneshot_available	time/tick-broadcast.c	/^bool tick_broadcast_oneshot_available(void)$/;"	f
tick_broadcast_oneshot_available	time/tick-internal.h	/^static inline bool tick_broadcast_oneshot_available(void) { return tick_oneshot_possible(); }$/;"	f
tick_broadcast_oneshot_control	time/tick-common.c	/^EXPORT_SYMBOL_GPL(tick_broadcast_oneshot_control);$/;"	v
tick_broadcast_oneshot_control	time/tick-common.c	/^int tick_broadcast_oneshot_control(enum tick_broadcast_state state)$/;"	f
tick_broadcast_oneshot_offline	time/tick-broadcast.c	/^static inline void tick_broadcast_oneshot_offline(unsigned int cpu) { }$/;"	f	file:
tick_broadcast_oneshot_offline	time/tick-broadcast.c	/^static void tick_broadcast_oneshot_offline(unsigned int cpu)$/;"	f	file:
tick_broadcast_set_affinity	time/tick-broadcast.c	/^static void tick_broadcast_set_affinity(struct clock_event_device *bc,$/;"	f	file:
tick_broadcast_set_event	time/tick-broadcast.c	/^static void tick_broadcast_set_event(struct clock_event_device *bc, int cpu,$/;"	f	file:
tick_broadcast_setup_oneshot	time/tick-broadcast.c	/^static inline void tick_broadcast_setup_oneshot(struct clock_event_device *bc) { BUG(); }$/;"	f	file:
tick_broadcast_setup_oneshot	time/tick-broadcast.c	/^static void tick_broadcast_setup_oneshot(struct clock_event_device *bc)$/;"	f	file:
tick_broadcast_start_periodic	time/tick-broadcast.c	/^static void tick_broadcast_start_periodic(struct clock_event_device *bc)$/;"	f	file:
tick_broadcast_switch_to_oneshot	time/tick-broadcast.c	/^void tick_broadcast_switch_to_oneshot(void)$/;"	f
tick_broadcast_switch_to_oneshot	time/tick-internal.h	/^static inline void tick_broadcast_switch_to_oneshot(void) { }$/;"	f
tick_broadcast_update_freq	time/tick-broadcast.c	/^int tick_broadcast_update_freq(struct clock_event_device *dev, u32 freq)$/;"	f
tick_broadcast_update_freq	time/tick-internal.h	/^static inline int tick_broadcast_update_freq(struct clock_event_device *dev, u32 freq) { return -ENODEV; }$/;"	f
tick_cancel_sched_timer	time/tick-sched.c	/^void tick_cancel_sched_timer(int cpu)$/;"	f
tick_cancel_sched_timer	time/tick-sched.h	/^static inline void tick_cancel_sched_timer(int cpu) { }$/;"	f
tick_check_broadcast_device	time/tick-broadcast.c	/^static bool tick_check_broadcast_device(struct clock_event_device *curdev,$/;"	f	file:
tick_check_broadcast_expired	time/tick-broadcast.c	/^int tick_check_broadcast_expired(void)$/;"	f
tick_check_new_device	time/tick-common.c	/^void tick_check_new_device(struct clock_event_device *newdev)$/;"	f
tick_check_oneshot_broadcast_this_cpu	time/tick-broadcast.c	/^void tick_check_oneshot_broadcast_this_cpu(void)$/;"	f
tick_check_oneshot_broadcast_this_cpu	time/tick-internal.h	/^static inline void tick_check_oneshot_broadcast_this_cpu(void) { }$/;"	f
tick_check_oneshot_change	time/tick-internal.h	/^static inline int tick_check_oneshot_change(int allow_nohz) { return 0; }$/;"	f
tick_check_oneshot_change	time/tick-sched.c	/^int tick_check_oneshot_change(int allow_nohz)$/;"	f
tick_check_percpu	time/tick-common.c	/^static bool tick_check_percpu(struct clock_event_device *curdev,$/;"	f	file:
tick_check_preferred	time/tick-common.c	/^static bool tick_check_preferred(struct clock_event_device *curdev,$/;"	f	file:
tick_check_replacement	time/tick-common.c	/^bool tick_check_replacement(struct clock_event_device *curdev,$/;"	f
tick_cleanup_dead_cpu	time/clockevents.c	/^void tick_cleanup_dead_cpu(int cpu)$/;"	f
tick_clock_notify	time/tick-internal.h	/^static inline void tick_clock_notify(void) { }$/;"	f
tick_clock_notify	time/tick-sched.c	/^void tick_clock_notify(void)$/;"	f
tick_delta	sched/sched.h	/^	u64			tick_delta;$/;"	m	struct:irqtime
tick_dep_mask	time/tick-sched.c	/^static atomic_t tick_dep_mask;$/;"	v	file:
tick_dep_mask	time/tick-sched.h	/^	atomic_t			tick_dep_mask;$/;"	m	struct:tick_sched
tick_device	time/tick-sched.h	/^struct tick_device {$/;"	s
tick_device_is_functional	time/tick-internal.h	/^static inline int tick_device_is_functional(struct clock_event_device *dev)$/;"	f
tick_device_mode	time/tick-sched.h	/^enum tick_device_mode {$/;"	g
tick_device_setup_broadcast_func	time/tick-broadcast.c	/^static void tick_device_setup_broadcast_func(struct clock_event_device *dev)$/;"	f	file:
tick_device_uses_broadcast	time/tick-broadcast.c	/^int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu)$/;"	f
tick_device_uses_broadcast	time/tick-internal.h	/^static inline int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu) { return 0; }$/;"	f
tick_do_broadcast	time/tick-broadcast.c	/^static bool tick_do_broadcast(struct cpumask *mask)$/;"	f	file:
tick_do_periodic_broadcast	time/tick-broadcast.c	/^static bool tick_do_periodic_broadcast(void)$/;"	f	file:
tick_do_periodic_broadcast	time/tick-internal.h	/^static inline void tick_do_periodic_broadcast(struct clock_event_device *d) { }$/;"	f
tick_do_update_jiffies64	time/tick-sched.c	/^static void tick_do_update_jiffies64(ktime_t now)$/;"	f	file:
tick_freeze	time/tick-common.c	/^void tick_freeze(void)$/;"	f
tick_freeze_depth	time/tick-common.c	/^static unsigned int tick_freeze_depth;$/;"	v	file:
tick_get_broadcast_device	time/tick-broadcast.c	/^struct tick_device *tick_get_broadcast_device(void)$/;"	f
tick_get_broadcast_mask	time/tick-broadcast.c	/^struct cpumask *tick_get_broadcast_mask(void)$/;"	f
tick_get_broadcast_oneshot_mask	time/tick-broadcast.c	/^struct cpumask *tick_get_broadcast_oneshot_mask(void)$/;"	f
tick_get_device	time/tick-common.c	/^struct tick_device *tick_get_device(int cpu)$/;"	f
tick_get_tick_dev	time/clockevents.c	/^static struct tick_device *tick_get_tick_dev(struct device *dev)$/;"	f	file:
tick_get_tick_sched	time/tick-sched.c	/^struct tick_sched *tick_get_tick_sched(int cpu)$/;"	f
tick_gtod	sched/clock.c	/^	u64			tick_gtod;$/;"	m	struct:sched_clock_data	file:
tick_handle_oneshot_broadcast	time/tick-broadcast.c	/^static void tick_handle_oneshot_broadcast(struct clock_event_device *dev)$/;"	f	file:
tick_handle_periodic	time/tick-common.c	/^void tick_handle_periodic(struct clock_event_device *dev)$/;"	f
tick_handle_periodic_broadcast	time/tick-broadcast.c	/^static void tick_handle_periodic_broadcast(struct clock_event_device *dev)$/;"	f	file:
tick_handover_do_timer	time/tick-common.c	/^void tick_handover_do_timer(void)$/;"	f
tick_init	time/tick-common.c	/^void __init tick_init(void)$/;"	f
tick_init_highres	time/tick-oneshot.c	/^int tick_init_highres(void)$/;"	f
tick_init_jiffy_update	time/tick-sched.c	/^static ktime_t tick_init_jiffy_update(void)$/;"	f	file:
tick_init_sysfs	time/clockevents.c	/^static int __init tick_init_sysfs(void)$/;"	f	file:
tick_install_broadcast_device	time/tick-broadcast.c	/^void tick_install_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_install_broadcast_device	time/tick-internal.h	/^static inline void tick_install_broadcast_device(struct clock_event_device *dev) { }$/;"	f
tick_install_replacement	time/tick-common.c	/^void tick_install_replacement(struct clock_event_device *newdev)$/;"	f
tick_irq_enter	time/tick-sched.c	/^void tick_irq_enter(void)$/;"	f
tick_irq_exit	softirq.c	/^static inline void tick_irq_exit(void)$/;"	f	file:
tick_is_broadcast_device	time/tick-broadcast.c	/^int tick_is_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_is_broadcast_device	time/tick-internal.h	/^static inline int tick_is_broadcast_device(struct clock_event_device *dev) { return 0; }$/;"	f
tick_is_oneshot_available	time/tick-common.c	/^int tick_is_oneshot_available(void)$/;"	f
tick_length	time/ntp.c	/^static u64			tick_length;$/;"	v	file:
tick_length_base	time/ntp.c	/^static u64			tick_length_base;$/;"	v	file:
tick_next_period	time/tick-common.c	/^ktime_t tick_next_period;$/;"	v
tick_nohz_account_idle_ticks	time/tick-sched.c	/^static void tick_nohz_account_idle_ticks(struct tick_sched *ts)$/;"	f	file:
tick_nohz_activate	time/tick-sched.c	/^static inline void tick_nohz_activate(struct tick_sched *ts, int mode) { }$/;"	f	file:
tick_nohz_activate	time/tick-sched.c	/^static inline void tick_nohz_activate(struct tick_sched *ts, int mode)$/;"	f	file:
tick_nohz_active	time/tick-internal.h	161;"	d
tick_nohz_cpu_down	time/tick-sched.c	/^static int tick_nohz_cpu_down(unsigned int cpu)$/;"	f	file:
tick_nohz_dep_clear	time/tick-sched.c	/^void tick_nohz_dep_clear(enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_clear_cpu	time/tick-sched.c	/^void tick_nohz_dep_clear_cpu(int cpu, enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_clear_signal	time/tick-sched.c	/^void tick_nohz_dep_clear_signal(struct signal_struct *sig, enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_clear_task	time/tick-sched.c	/^void tick_nohz_dep_clear_task(struct task_struct *tsk, enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_set	time/tick-sched.c	/^void tick_nohz_dep_set(enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_set_all	time/tick-sched.c	/^static void tick_nohz_dep_set_all(atomic_t *dep,$/;"	f	file:
tick_nohz_dep_set_cpu	time/tick-sched.c	/^void tick_nohz_dep_set_cpu(int cpu, enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_set_signal	time/tick-sched.c	/^void tick_nohz_dep_set_signal(struct signal_struct *sig, enum tick_dep_bits bit)$/;"	f
tick_nohz_dep_set_task	time/tick-sched.c	/^void tick_nohz_dep_set_task(struct task_struct *tsk, enum tick_dep_bits bit)$/;"	f
tick_nohz_enabled_snap	rcu/tree.h	/^	int tick_nohz_enabled_snap;	\/* Previously seen value from sysfs. *\/$/;"	m	struct:rcu_data
tick_nohz_full_kick	time/tick-sched.c	/^static void tick_nohz_full_kick(void)$/;"	f	file:
tick_nohz_full_kick_all	time/tick-sched.c	/^static void tick_nohz_full_kick_all(void)$/;"	f	file:
tick_nohz_full_kick_cpu	time/tick-sched.c	/^void tick_nohz_full_kick_cpu(int cpu)$/;"	f
tick_nohz_full_mask	time/tick-sched.c	/^cpumask_var_t tick_nohz_full_mask;$/;"	v
tick_nohz_full_running	time/tick-sched.c	/^bool tick_nohz_full_running;$/;"	v
tick_nohz_full_setup	time/tick-sched.c	/^void __init tick_nohz_full_setup(cpumask_var_t cpumask)$/;"	f
tick_nohz_full_update_tick	time/tick-sched.c	/^static void tick_nohz_full_update_tick(struct tick_sched *ts)$/;"	f	file:
tick_nohz_get_idle_calls	time/tick-sched.c	/^unsigned long tick_nohz_get_idle_calls(void)$/;"	f
tick_nohz_get_idle_calls_cpu	time/tick-sched.c	/^unsigned long tick_nohz_get_idle_calls_cpu(int cpu)$/;"	f
tick_nohz_get_next_hrtimer	time/tick-sched.c	/^ktime_t tick_nohz_get_next_hrtimer(void)$/;"	f
tick_nohz_get_sleep_length	time/tick-sched.c	/^ktime_t tick_nohz_get_sleep_length(ktime_t *delta_next)$/;"	f
tick_nohz_handler	time/tick-sched.c	/^static void tick_nohz_handler(struct clock_event_device *dev)$/;"	f	file:
tick_nohz_idle_enter	time/tick-sched.c	/^void tick_nohz_idle_enter(void)$/;"	f
tick_nohz_idle_exit	time/tick-sched.c	/^void tick_nohz_idle_exit(void)$/;"	f
tick_nohz_idle_got_tick	time/tick-sched.c	/^bool tick_nohz_idle_got_tick(void)$/;"	f
tick_nohz_idle_restart_tick	time/tick-sched.c	/^void tick_nohz_idle_restart_tick(void)$/;"	f
tick_nohz_idle_retain_tick	time/tick-sched.c	/^void tick_nohz_idle_retain_tick(void)$/;"	f
tick_nohz_idle_stop_tick	time/tick-sched.c	/^void tick_nohz_idle_stop_tick(void)$/;"	f
tick_nohz_init	time/tick-internal.h	/^static inline void tick_nohz_init(void) { }$/;"	f
tick_nohz_init	time/tick-sched.c	/^void __init tick_nohz_init(void)$/;"	f
tick_nohz_irq_enter	time/tick-sched.c	/^static inline void tick_nohz_irq_enter(void) { }$/;"	f	file:
tick_nohz_irq_enter	time/tick-sched.c	/^static inline void tick_nohz_irq_enter(void)$/;"	f	file:
tick_nohz_irq_exit	time/tick-sched.c	/^void tick_nohz_irq_exit(void)$/;"	f
tick_nohz_mode	time/tick-sched.h	/^enum tick_nohz_mode {$/;"	g
tick_nohz_next_event	time/tick-sched.c	/^static ktime_t tick_nohz_next_event(struct tick_sched *ts, int cpu)$/;"	f	file:
tick_nohz_restart	time/tick-sched.c	/^static void tick_nohz_restart(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_restart_sched_tick	time/tick-sched.c	/^static void tick_nohz_restart_sched_tick(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_retain_tick	time/tick-sched.c	/^static void tick_nohz_retain_tick(struct tick_sched *ts)$/;"	f	file:
tick_nohz_start_idle	time/tick-sched.c	/^static void tick_nohz_start_idle(struct tick_sched *ts)$/;"	f	file:
tick_nohz_stop_idle	time/tick-sched.c	/^static void tick_nohz_stop_idle(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_stop_sched_tick	time/tick-sched.c	/^static void tick_nohz_stop_sched_tick(struct tick_sched *ts, int cpu)$/;"	f	file:
tick_nohz_stop_tick	time/tick-sched.c	/^static void tick_nohz_stop_tick(struct tick_sched *ts, int cpu)$/;"	f	file:
tick_nohz_switch_to_nohz	time/tick-sched.c	/^static inline void tick_nohz_switch_to_nohz(void) { }$/;"	f	file:
tick_nohz_switch_to_nohz	time/tick-sched.c	/^static void tick_nohz_switch_to_nohz(void)$/;"	f	file:
tick_nohz_tick_stopped	time/tick-sched.c	/^bool tick_nohz_tick_stopped(void)$/;"	f
tick_nohz_tick_stopped_cpu	time/tick-sched.c	/^bool tick_nohz_tick_stopped_cpu(int cpu)$/;"	f
tick_nohz_update_jiffies	time/tick-sched.c	/^static void tick_nohz_update_jiffies(ktime_t now)$/;"	f	file:
tick_nsec	time/ntp.c	/^unsigned long			tick_nsec;$/;"	v
tick_offline_cpu	time/clockevents.c	/^void tick_offline_cpu(unsigned int cpu)$/;"	f
tick_oneshot_mode_active	time/tick-internal.h	/^static inline int tick_oneshot_mode_active(void) { return 0; }$/;"	f
tick_oneshot_mode_active	time/tick-oneshot.c	/^int tick_oneshot_mode_active(void)$/;"	f
tick_oneshot_notify	time/tick-internal.h	/^static inline void tick_oneshot_notify(void) { }$/;"	f
tick_oneshot_notify	time/tick-sched.c	/^void tick_oneshot_notify(void)$/;"	f
tick_oneshot_possible	time/tick-internal.h	/^static inline bool tick_oneshot_possible(void) { return false; }$/;"	f
tick_oneshot_possible	time/tick-internal.h	/^static inline bool tick_oneshot_possible(void) { return true; }$/;"	f
tick_period	time/tick-common.c	/^ktime_t tick_period;$/;"	v
tick_periodic	time/tick-common.c	/^static void tick_periodic(int cpu)$/;"	f	file:
tick_program_event	time/tick-internal.h	/^static inline int tick_program_event(ktime_t expires, int force) { return 0; }$/;"	f
tick_program_event	time/tick-oneshot.c	/^int tick_program_event(ktime_t expires, int force)$/;"	f
tick_raw	sched/clock.c	/^	u64			tick_raw;$/;"	m	struct:sched_clock_data	file:
tick_receive_broadcast	time/tick-broadcast.c	/^int tick_receive_broadcast(void)$/;"	f
tick_resume	time/tick-common.c	/^void tick_resume(void)$/;"	f
tick_resume	time/tick-internal.h	/^static inline void tick_resume(void) { }$/;"	f
tick_resume_broadcast	time/tick-broadcast.c	/^void tick_resume_broadcast(void)$/;"	f
tick_resume_broadcast	time/tick-internal.h	/^static inline void tick_resume_broadcast(void) { }$/;"	f
tick_resume_broadcast_oneshot	time/tick-broadcast.c	/^static inline void tick_resume_broadcast_oneshot(struct clock_event_device *bc) { }$/;"	f	file:
tick_resume_broadcast_oneshot	time/tick-broadcast.c	/^static void tick_resume_broadcast_oneshot(struct clock_event_device *bc)$/;"	f	file:
tick_resume_check_broadcast	time/tick-broadcast.c	/^bool tick_resume_check_broadcast(void)$/;"	f
tick_resume_check_broadcast	time/tick-internal.h	/^static inline bool tick_resume_check_broadcast(void) { return false; }$/;"	f
tick_resume_local	time/tick-common.c	/^void tick_resume_local(void)$/;"	f
tick_resume_oneshot	time/tick-internal.h	/^static inline void tick_resume_oneshot(void) { BUG(); }$/;"	f
tick_resume_oneshot	time/tick-oneshot.c	/^void tick_resume_oneshot(void)$/;"	f
tick_sched	time/tick-sched.h	/^struct tick_sched {$/;"	s
tick_sched_do_timer	time/tick-sched.c	/^static void tick_sched_do_timer(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_sched_handle	time/tick-sched.c	/^static void tick_sched_handle(struct tick_sched *ts, struct pt_regs *regs)$/;"	f	file:
tick_sched_timer	time/tick-sched.c	/^static enum hrtimer_restart tick_sched_timer(struct hrtimer *timer)$/;"	f	file:
tick_set_periodic_handler	time/tick-broadcast.c	/^void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast)$/;"	f
tick_set_periodic_handler	time/tick-internal.h	/^static inline void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast)$/;"	f
tick_setup_device	time/tick-common.c	/^static void tick_setup_device(struct tick_device *td,$/;"	f	file:
tick_setup_hrtimer_broadcast	time/tick-broadcast-hrtimer.c	/^void tick_setup_hrtimer_broadcast(void)$/;"	f
tick_setup_oneshot	time/tick-internal.h	/^void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	f
tick_setup_oneshot	time/tick-oneshot.c	/^void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	f
tick_setup_periodic	time/tick-common.c	/^void tick_setup_periodic(struct clock_event_device *dev, int broadcast)$/;"	f
tick_setup_sched_timer	time/tick-sched.c	/^void tick_setup_sched_timer(void)$/;"	f
tick_shutdown	time/tick-common.c	/^void tick_shutdown(unsigned int cpu)$/;"	f
tick_shutdown_broadcast	time/tick-broadcast.c	/^static void tick_shutdown_broadcast(void)$/;"	f	file:
tick_stopped	time/tick-sched.h	/^	unsigned int			tick_stopped	: 1;$/;"	m	struct:tick_sched
tick_suspend	time/tick-common.c	/^void tick_suspend(void)$/;"	f
tick_suspend	time/tick-internal.h	/^static inline void tick_suspend(void) { }$/;"	f
tick_suspend_broadcast	time/tick-broadcast.c	/^void tick_suspend_broadcast(void)$/;"	f
tick_suspend_broadcast	time/tick-internal.h	/^static inline void tick_suspend_broadcast(void) { }$/;"	f
tick_suspend_local	time/tick-common.c	/^void tick_suspend_local(void)$/;"	f
tick_switch_to_oneshot	time/tick-oneshot.c	/^int tick_switch_to_oneshot(void (*handler)(struct clock_event_device *))$/;"	f
tick_take_do_timer_from_boot	time/tick-common.c	/^static void tick_take_do_timer_from_boot(void)$/;"	f	file:
tick_unfreeze	time/tick-common.c	/^void tick_unfreeze(void)$/;"	f
tick_usec	time/ntp.c	/^unsigned long			tick_usec = USER_TICK_USEC;$/;"	v
tick_work	sched/core.c	/^struct tick_work {$/;"	s	file:
tick_work_cpu	sched/core.c	/^static struct tick_work __percpu *tick_work_cpu;$/;"	v	typeref:struct:__percpu	file:
ticks_this_gp	rcu/tree.h	/^	unsigned long	ticks_this_gp;	\/* The number of scheduling-clock *\/$/;"	m	struct:rcu_data
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_comm_event::__anon2	file:
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_mmap_event::__anon4	file:
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_namespaces_event::__anon3	file:
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_task_event::__anon1	file:
tid	events/core.c	/^	u32				tid;$/;"	m	struct:perf_read_event	file:
time	cgroup/cpuset.c	/^	time64_t time;		\/* clock (secs) when val computed *\/$/;"	m	struct:fmeter	file:
time	events/core.c	/^		u64				time;$/;"	m	struct:perf_task_event::__anon1	file:
time	trace/ftrace.c	/^	unsigned long long		time;$/;"	m	struct:ftrace_profile	file:
time64_to_tm	time/timeconv.c	/^EXPORT_SYMBOL(time64_to_tm);$/;"	v
time64_to_tm	time/timeconv.c	/^void time64_to_tm(time64_t totalsecs, int offset, struct tm *result)$/;"	f
time_adjust	time/ntp.c	/^static long			time_adjust;$/;"	v	file:
time_constant	time/ntp.c	/^static long			time_constant = 2;$/;"	v	file:
time_esterror	time/ntp.c	/^static long			time_esterror = NTP_PHASE_LIMIT;$/;"	v	file:
time_freq	time/ntp.c	/^static s64			time_freq;$/;"	v	file:
time_get	trace/trace_hwlat.c	134;"	d	file:
time_maxerror	time/ntp.c	/^static long			time_maxerror = NTP_PHASE_LIMIT;$/;"	v	file:
time_offset	time/ntp.c	/^static s64			time_offset;$/;"	v	file:
time_reftime	time/ntp.c	/^static time64_t		time_reftime;$/;"	v	file:
time_squared	trace/ftrace.c	/^	unsigned long long		time_squared;$/;"	m	struct:ftrace_profile	file:
time_stamp	trace/ring_buffer.c	/^	u64		 time_stamp;	\/* page time stamp *\/$/;"	m	struct:buffer_data_page	file:
time_stamp_abs	trace/ring_buffer.c	/^	bool				time_stamp_abs;$/;"	m	struct:ring_buffer	file:
time_stamp_abs_ref	trace/trace.h	/^	int			time_stamp_abs_ref;$/;"	m	struct:trace_array
time_start	trace/trace.h	/^	u64				time_start;$/;"	m	struct:trace_buffer
time_state	time/ntp.c	/^static int			time_state = TIME_OK;$/;"	v	file:
time_status	time/ntp.c	/^static int			time_status = STA_UNSYNC;$/;"	v	file:
time_sub	trace/trace_hwlat.c	136;"	d	file:
time_to_us	trace/trace_hwlat.c	135;"	d	file:
time_type	trace/trace_hwlat.c	133;"	d	file:
time_u64	trace/trace_hwlat.c	138;"	d	file:
timecounter_cyc2time	time/timecounter.c	/^EXPORT_SYMBOL_GPL(timecounter_cyc2time);$/;"	v
timecounter_cyc2time	time/timecounter.c	/^u64 timecounter_cyc2time(struct timecounter *tc,$/;"	f
timecounter_init	time/timecounter.c	/^EXPORT_SYMBOL_GPL(timecounter_init);$/;"	v
timecounter_init	time/timecounter.c	/^void timecounter_init(struct timecounter *tc,$/;"	f
timecounter_read	time/timecounter.c	/^EXPORT_SYMBOL_GPL(timecounter_read);$/;"	v
timecounter_read	time/timecounter.c	/^u64 timecounter_read(struct timecounter *tc)$/;"	f
timecounter_read_delta	time/timecounter.c	/^static u64 timecounter_read_delta(struct timecounter *tc)$/;"	f	file:
timekeeper	time/timekeeping.c	/^	struct timekeeper	timekeeper;$/;"	m	struct:__anon49	typeref:struct:__anon49::timekeeper	file:
timekeeping_adjust	time/timekeeping.c	/^static void timekeeping_adjust(struct timekeeper *tk, s64 offset)$/;"	f	file:
timekeeping_adv_mode	time/timekeeping.c	/^enum timekeeping_adv_mode {$/;"	g	file:
timekeeping_advance	time/timekeeping.c	/^static void timekeeping_advance(enum timekeeping_adv_mode mode)$/;"	f	file:
timekeeping_apply_adjustment	time/timekeeping.c	/^static __always_inline void timekeeping_apply_adjustment(struct timekeeper *tk,$/;"	f	file:
timekeeping_check_update	time/timekeeping.c	/^static inline void timekeeping_check_update(struct timekeeper *tk, u64 offset)$/;"	f	file:
timekeeping_check_update	time/timekeeping.c	/^static void timekeeping_check_update(struct timekeeper *tk, u64 offset)$/;"	f	file:
timekeeping_cycles_to_ns	time/timekeeping.c	/^static inline u64 timekeeping_cycles_to_ns(const struct tk_read_base *tkr, u64 cycles)$/;"	f	file:
timekeeping_delta_to_ns	time/timekeeping.c	/^static inline u64 timekeeping_delta_to_ns(const struct tk_read_base *tkr, u64 delta)$/;"	f	file:
timekeeping_forward_now	time/timekeeping.c	/^static void timekeeping_forward_now(struct timekeeper *tk)$/;"	f	file:
timekeeping_get_delta	time/timekeeping.c	/^static inline u64 timekeeping_get_delta(const struct tk_read_base *tkr)$/;"	f	file:
timekeeping_get_ns	time/timekeeping.c	/^static inline u64 timekeeping_get_ns(const struct tk_read_base *tkr)$/;"	f	file:
timekeeping_init	time/timekeeping.c	/^void __init timekeeping_init(void)$/;"	f
timekeeping_init_ops	time/timekeeping.c	/^device_initcall(timekeeping_init_ops);$/;"	v
timekeeping_init_ops	time/timekeeping.c	/^static int __init timekeeping_init_ops(void)$/;"	f	file:
timekeeping_inject_offset	time/timekeeping.c	/^static int timekeeping_inject_offset(const struct timespec64 *ts)$/;"	f	file:
timekeeping_inject_sleeptime64	time/timekeeping.c	/^void timekeeping_inject_sleeptime64(const struct timespec64 *delta)$/;"	f
timekeeping_max_deferment	time/timekeeping.c	/^u64 timekeeping_max_deferment(void)$/;"	f
timekeeping_notify	time/timekeeping.c	/^int timekeeping_notify(struct clocksource *clock)$/;"	f
timekeeping_resume	time/timekeeping.c	/^void timekeeping_resume(void)$/;"	f
timekeeping_rtc_skipresume	time/timekeeping.c	/^bool timekeeping_rtc_skipresume(void)$/;"	f
timekeeping_rtc_skipsuspend	time/timekeeping.c	/^bool timekeeping_rtc_skipsuspend(void)$/;"	f
timekeeping_suspend	time/timekeeping.c	/^int timekeeping_suspend(void)$/;"	f
timekeeping_suspend_time	time/timekeeping.c	/^static struct timespec64 timekeeping_suspend_time;$/;"	v	typeref:struct:timespec64	file:
timekeeping_suspended	time/timekeeping.c	/^int __read_mostly timekeeping_suspended;$/;"	v
timekeeping_syscore_ops	time/timekeeping.c	/^static struct syscore_ops timekeeping_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
timekeeping_update	time/timekeeping.c	/^static void timekeeping_update(struct timekeeper *tk, unsigned int action)$/;"	f	file:
timekeeping_valid_for_hres	time/timekeeping.c	/^int timekeeping_valid_for_hres(void)$/;"	f
timekeeping_validate_timex	time/timekeeping.c	/^static int timekeeping_validate_timex(const struct __kernel_timex *txc)$/;"	f	file:
timekeeping_warp_clock	time/timekeeping.c	/^void timekeeping_warp_clock(void)$/;"	f
timeout	locking/rwsem.c	/^	unsigned long timeout;$/;"	m	struct:rwsem_waiter	file:
timeout	locking/test-ww_mutex.c	/^	unsigned long timeout;$/;"	m	struct:stress	file:
timer	sched/idle.c	/^	struct hrtimer timer;$/;"	m	struct:idle_timer	typeref:struct:idle_timer::hrtimer	file:
timer	time/timer.c	/^	struct timer_list timer;$/;"	m	struct:process_timer	typeref:struct:process_timer::timer_list	file:
timer_arm	time/posix-timers.h	/^	void	(*timer_arm)(struct k_itimer *timr, ktime_t expires,$/;"	m	struct:k_clock
timer_base	time/timer.c	/^struct timer_base {$/;"	s	file:
timer_clear_idle	time/timer.c	/^void timer_clear_idle(void)$/;"	f
timer_create	time/posix-stubs.c	/^COMPAT_SYS_NI(timer_create);$/;"	v
timer_create	time/posix-stubs.c	/^SYS_NI(timer_create);$/;"	v
timer_create	time/posix-timers.h	/^	int	(*timer_create)(struct k_itimer *timer);$/;"	m	struct:k_clock
timer_debug_descr	time/timer.c	/^static struct debug_obj_descr timer_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
timer_debug_descr	time/timer.c	/^static struct debug_obj_descr timer_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
timer_debug_hint	time/timer.c	/^static void *timer_debug_hint(void *addr)$/;"	f	file:
timer_del	time/posix-timers.h	/^	int	(*timer_del)(struct k_itimer *timr);$/;"	m	struct:k_clock
timer_delete	time/posix-stubs.c	/^SYS_NI(timer_delete);$/;"	v
timer_delete_hook	time/posix-timers.c	/^static inline int timer_delete_hook(struct k_itimer *timer)$/;"	f	file:
timer_expires	time/tick-sched.h	/^	u64				timer_expires;$/;"	m	struct:tick_sched
timer_expires_base	time/tick-sched.h	/^	u64				timer_expires_base;$/;"	m	struct:tick_sched
timer_fixup_activate	time/timer.c	/^static bool timer_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_assert_init	time/timer.c	/^static bool timer_fixup_assert_init(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_free	time/timer.c	/^static bool timer_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_init	time/timer.c	/^static bool timer_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_forward	time/posix-timers.h	/^	s64	(*timer_forward)(struct k_itimer *timr, ktime_t now);$/;"	m	struct:k_clock
timer_get	time/posix-timers.h	/^	void	(*timer_get)(struct k_itimer *timr,$/;"	m	struct:k_clock
timer_get_idx	time/timer.c	/^static inline unsigned int timer_get_idx(struct timer_list *timer)$/;"	f	file:
timer_getoverrun	time/posix-stubs.c	/^SYS_NI(timer_getoverrun);$/;"	v
timer_gettime	time/posix-stubs.c	/^SYS_NI(timer_gettime);$/;"	v
timer_gettime32	time/posix-stubs.c	/^SYS_NI(timer_gettime32);$/;"	v
timer_is_static_object	time/timer.c	/^static bool timer_is_static_object(void *addr)$/;"	f	file:
timer_list_header	time/timer_list.c	/^static inline void timer_list_header(struct seq_file *m, u64 now)$/;"	f	file:
timer_list_iter	time/timer_list.c	/^struct timer_list_iter {$/;"	s	file:
timer_list_next	time/timer_list.c	/^static void *timer_list_next(struct seq_file *file, void *v, loff_t *offset)$/;"	f	file:
timer_list_show	time/timer_list.c	/^static int timer_list_show(struct seq_file *m, void *v)$/;"	f	file:
timer_list_show_tickdevices_header	time/timer_list.c	/^static void timer_list_show_tickdevices_header(struct seq_file *m)$/;"	f	file:
timer_list_sops	time/timer_list.c	/^static const struct seq_operations timer_list_sops = {$/;"	v	typeref:struct:seq_operations	file:
timer_list_start	time/timer_list.c	/^static void *timer_list_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
timer_list_stop	time/timer_list.c	/^static void timer_list_stop(struct seq_file *seq, void *v)$/;"	f	file:
timer_migration_handler	time/timer.c	/^int timer_migration_handler(struct ctl_table *table, int write,$/;"	f
timer_overrun_to_int	time/posix-timers.c	/^static inline int timer_overrun_to_int(struct k_itimer *timr, int baseval)$/;"	f	file:
timer_rearm	time/posix-timers.h	/^	void	(*timer_rearm)(struct k_itimer *timr);$/;"	m	struct:k_clock
timer_reduce	time/timer.c	/^EXPORT_SYMBOL(timer_reduce);$/;"	v
timer_reduce	time/timer.c	/^int timer_reduce(struct timer_list *timer, unsigned long expires)$/;"	f
timer_remaining	time/posix-timers.h	/^	ktime_t	(*timer_remaining)(struct k_itimer *timr, ktime_t now);$/;"	m	struct:k_clock
timer_set	time/posix-timers.h	/^	int	(*timer_set)(struct k_itimer *timr, int flags,$/;"	m	struct:k_clock
timer_set_idx	time/timer.c	/^static inline void timer_set_idx(struct timer_list *timer, unsigned int idx)$/;"	f	file:
timer_settime	time/posix-stubs.c	/^SYS_NI(timer_settime);$/;"	v
timer_settime32	time/posix-stubs.c	/^SYS_NI(timer_settime32);$/;"	v
timer_try_to_cancel	time/posix-timers.h	/^	int	(*timer_try_to_cancel)(struct k_itimer *timr);$/;"	m	struct:k_clock
timer_update_keys	time/timer.c	/^static void timer_update_keys(struct work_struct *work)$/;"	f	file:
timerfd_create	sys_ni.c	/^COND_SYSCALL(timerfd_create);$/;"	v
timerfd_gettime	sys_ni.c	/^COND_SYSCALL(timerfd_gettime);$/;"	v
timerfd_gettime32	sys_ni.c	/^COND_SYSCALL(timerfd_gettime32);$/;"	v
timerfd_settime	sys_ni.c	/^COND_SYSCALL(timerfd_settime);$/;"	v
timerfd_settime32	sys_ni.c	/^COND_SYSCALL(timerfd_settime32);$/;"	v
timerqueue	time/alarmtimer.c	/^	struct timerqueue_head	timerqueue;$/;"	m	struct:alarm_base	typeref:struct:alarm_base::timerqueue_head	file:
timers_dead_cpu	time/timer.c	/^int timers_dead_cpu(unsigned int cpu)$/;"	f
timers_migration_enabled	time/timer.c	/^DEFINE_STATIC_KEY_FALSE(timers_migration_enabled);$/;"	v
timers_prepare_cpu	time/timer.c	/^int timers_prepare_cpu(unsigned int cpu)$/;"	f
timers_update_migration	time/timer.c	/^static inline void timers_update_migration(void) { }$/;"	f	file:
timers_update_migration	time/timer.c	/^static void timers_update_migration(void)$/;"	f	file:
timers_update_nohz	time/tick-internal.h	/^static inline void timers_update_nohz(void) { }$/;"	f
timers_update_nohz	time/timer.c	/^void timers_update_nohz(void)$/;"	f
timespec64_add_safe	time/time.c	/^struct timespec64 timespec64_add_safe(const struct timespec64 lhs,$/;"	f
timespec64_to_jiffies	time/time.c	/^EXPORT_SYMBOL(timespec64_to_jiffies);$/;"	v
timespec64_to_jiffies	time/time.c	/^timespec64_to_jiffies(const struct timespec64 *value)$/;"	f
timestamp	trace/trace_hwlat.c	/^	struct timespec64	timestamp;	\/* wall time *\/$/;"	m	struct:hwlat_sample	typeref:struct:hwlat_sample::timespec64	file:
timeval_to_jiffies	time/time.c	/^EXPORT_SYMBOL(timeval_to_jiffies);$/;"	v
timeval_to_jiffies	time/time.c	/^timeval_to_jiffies(const struct timeval *value)$/;"	f
timeval_valid	time/itimer.c	187;"	d	file:
timings	irq/timings.c	/^	int	timings[IRQ_TIMINGS_SIZE];$/;"	m	struct:irqt_stat	file:
timings_intervals	irq/timings.c	/^struct timings_intervals {$/;"	s	file:
tk_clock_read	time/timekeeping.c	/^static inline u64 tk_clock_read(const struct tk_read_base *tkr)$/;"	f	file:
tk_debug_account_sleep_time	time/timekeeping_debug.c	/^void tk_debug_account_sleep_time(const struct timespec64 *t)$/;"	f
tk_debug_account_sleep_time	time/timekeeping_internal.h	13;"	d
tk_debug_sleep_time	time/timekeeping_debug.c	/^DEFINE_SHOW_ATTRIBUTE(tk_debug_sleep_time);$/;"	v
tk_debug_sleep_time_init	time/timekeeping_debug.c	/^late_initcall(tk_debug_sleep_time_init);$/;"	v
tk_debug_sleep_time_init	time/timekeeping_debug.c	/^static int __init tk_debug_sleep_time_init(void)$/;"	f	file:
tk_debug_sleep_time_show	time/timekeeping_debug.c	/^static int tk_debug_sleep_time_show(struct seq_file *s, void *data)$/;"	f	file:
tk_fast	time/timekeeping.c	/^struct tk_fast {$/;"	s	file:
tk_normalize_xtime	time/timekeeping.c	/^static inline void tk_normalize_xtime(struct timekeeper *tk)$/;"	f	file:
tk_set_wall_to_mono	time/timekeeping.c	/^static void tk_set_wall_to_mono(struct timekeeper *tk, struct timespec64 wtm)$/;"	f	file:
tk_set_xtime	time/timekeeping.c	/^static void tk_set_xtime(struct timekeeper *tk, const struct timespec64 *ts)$/;"	f	file:
tk_setup_internals	time/timekeeping.c	/^static void tk_setup_internals(struct timekeeper *tk, struct clocksource *clock)$/;"	f	file:
tk_update_ktime_data	time/timekeeping.c	/^static inline void tk_update_ktime_data(struct timekeeper *tk)$/;"	f	file:
tk_update_leap_state	time/timekeeping.c	/^static inline void tk_update_leap_state(struct timekeeper *tk)$/;"	f	file:
tk_update_sleep_time	time/timekeeping.c	/^static inline void tk_update_sleep_time(struct timekeeper *tk, ktime_t delta)$/;"	f	file:
tk_xtime	time/timekeeping.c	/^static inline struct timespec64 tk_xtime(const struct timekeeper *tk)$/;"	f	file:
tk_xtime_add	time/timekeeping.c	/^static void tk_xtime_add(struct timekeeper *tk, const struct timespec64 *ts)$/;"	f	file:
tmp_alone_branch	sched/sched.h	/^	struct list_head	*tmp_alone_branch;$/;"	m	struct:rq	typeref:struct:rq::list_head
tmpmasks	cgroup/cpuset.c	/^struct tmpmasks {$/;"	s	file:
tnum_add	bpf/tnum.c	/^struct tnum tnum_add(struct tnum a, struct tnum b)$/;"	f
tnum_and	bpf/tnum.c	/^struct tnum tnum_and(struct tnum a, struct tnum b)$/;"	f
tnum_arshift	bpf/tnum.c	/^struct tnum tnum_arshift(struct tnum a, u8 min_shift)$/;"	f
tnum_cast	bpf/tnum.c	/^struct tnum tnum_cast(struct tnum a, u8 size)$/;"	f
tnum_const	bpf/tnum.c	/^struct tnum tnum_const(u64 value)$/;"	f
tnum_in	bpf/tnum.c	/^bool tnum_in(struct tnum a, struct tnum b)$/;"	f
tnum_intersect	bpf/tnum.c	/^struct tnum tnum_intersect(struct tnum a, struct tnum b)$/;"	f
tnum_is_aligned	bpf/tnum.c	/^bool tnum_is_aligned(struct tnum a, u64 size)$/;"	f
tnum_lshift	bpf/tnum.c	/^struct tnum tnum_lshift(struct tnum a, u8 shift)$/;"	f
tnum_mul	bpf/tnum.c	/^struct tnum tnum_mul(struct tnum a, struct tnum b)$/;"	f
tnum_or	bpf/tnum.c	/^struct tnum tnum_or(struct tnum a, struct tnum b)$/;"	f
tnum_range	bpf/tnum.c	/^struct tnum tnum_range(u64 min, u64 max)$/;"	f
tnum_rshift	bpf/tnum.c	/^struct tnum tnum_rshift(struct tnum a, u8 shift)$/;"	f
tnum_sbin	bpf/tnum.c	/^int tnum_sbin(char *str, size_t size, struct tnum a)$/;"	f
tnum_strn	bpf/tnum.c	/^EXPORT_SYMBOL_GPL(tnum_strn);$/;"	v
tnum_strn	bpf/tnum.c	/^int tnum_strn(char *str, size_t size, struct tnum a)$/;"	f
tnum_sub	bpf/tnum.c	/^struct tnum tnum_sub(struct tnum a, struct tnum b)$/;"	f
tnum_unknown	bpf/tnum.c	/^const struct tnum tnum_unknown = { .value = 0, .mask = -1 };$/;"	v	typeref:struct:tnum
tnum_xor	bpf/tnum.c	/^struct tnum tnum_xor(struct tnum a, struct tnum b)$/;"	f
to	cgroup/cpuset.c	/^	nodemask_t		to;$/;"	m	struct:cpuset_migrate_mm_work	file:
to_acct	acct.c	/^static inline struct bsd_acct_struct *to_acct(struct fs_pin *p)$/;"	f	file:
to_cacheline_number	dma/debug.c	/^static phys_addr_t to_cacheline_number(struct dma_debug_entry *entry)$/;"	f	file:
to_cg_ns	cgroup/namespace.c	/^static inline struct cgroup_namespace *to_cg_ns(struct ns_common *ns)$/;"	f	file:
to_kthread	kthread.c	/^static inline struct kthread *to_kthread(struct task_struct *k)$/;"	f	file:
to_module_attr	params.c	510;"	d	file:
to_module_kobject	params.c	511;"	d	file:
to_param_attr	params.c	527;"	d	file:
to_pid_ns	pid_namespace.c	/^static inline struct pid_namespace *to_pid_ns(struct ns_common *ns)$/;"	f	file:
to_ratio	sched/core.c	/^unsigned long to_ratio(u64 period, u64 runtime)$/;"	f
to_sugov_tunables	sched/cpufreq_schedutil.c	/^static inline struct sugov_tunables *to_sugov_tunables(struct gov_attr_set *attr_set)$/;"	f	file:
to_synth_event	trace/trace_events_hist.c	/^static struct synth_event *to_synth_event(struct dyn_event *ev)$/;"	f	file:
to_trace_kprobe	trace/trace_kprobe.c	/^static struct trace_kprobe *to_trace_kprobe(struct dyn_event *ev)$/;"	f	file:
to_trace_uprobe	trace/trace_uprobe.c	/^static struct trace_uprobe *to_trace_uprobe(struct dyn_event *ev)$/;"	f	file:
to_user_ns	user_namespace.c	/^static inline struct user_namespace *to_user_ns(struct ns_common *ns)$/;"	f	file:
to_uts_ns	utsname.c	/^static inline struct uts_namespace *to_uts_ns(struct ns_common *ns)$/;"	f	file:
toggle_bp_slot	events/hw_breakpoint.c	/^toggle_bp_slot(struct perf_event *bp, bool enable, enum bp_type_idx type,$/;"	f	file:
toggle_bp_task_slot	events/hw_breakpoint.c	/^static void toggle_bp_task_slot(struct perf_event *bp, int cpu,$/;"	f	file:
too_many_workers	workqueue.c	/^static bool too_many_workers(struct worker_pool *pool)$/;"	f	file:
top_cpuset	cgroup/cpuset.c	/^static struct cpuset top_cpuset = {$/;"	v	typeref:struct:cpuset	file:
top_stack	bpf/btf.c	/^	u32 top_stack;$/;"	m	struct:btf_verifier_env	file:
top_trace_array	trace/trace.h	/^static inline struct trace_array *top_trace_array(void)$/;"	f
topts	trace/trace.h	/^	struct trace_option_dentry	*topts;$/;"	m	struct:trace_options	typeref:struct:trace_options::trace_option_dentry
topts	trace/trace.h	/^	struct trace_options	*topts;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_options
torture_boost_dummy	locking/locktorture.c	/^static void torture_boost_dummy(struct torture_random_state *trsp)$/;"	f	file:
torture_cleanup_begin	torture.c	/^EXPORT_SYMBOL_GPL(torture_cleanup_begin);$/;"	v
torture_cleanup_begin	torture.c	/^bool torture_cleanup_begin(void)$/;"	f
torture_cleanup_end	torture.c	/^EXPORT_SYMBOL_GPL(torture_cleanup_end);$/;"	v
torture_cleanup_end	torture.c	/^void torture_cleanup_end(void)$/;"	f
torture_init_begin	torture.c	/^EXPORT_SYMBOL_GPL(torture_init_begin);$/;"	v
torture_init_begin	torture.c	/^bool torture_init_begin(char *ttype, int v)$/;"	f
torture_init_end	torture.c	/^EXPORT_SYMBOL_GPL(torture_init_end);$/;"	v
torture_init_end	torture.c	/^void torture_init_end(void)$/;"	f
torture_kthread_stopping	torture.c	/^EXPORT_SYMBOL_GPL(torture_kthread_stopping);$/;"	v
torture_kthread_stopping	torture.c	/^void torture_kthread_stopping(char *title)$/;"	f
torture_lock_busted_write_delay	locking/locktorture.c	/^static void torture_lock_busted_write_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_lock_busted_write_lock	locking/locktorture.c	/^static int torture_lock_busted_write_lock(void)$/;"	f	file:
torture_lock_busted_write_unlock	locking/locktorture.c	/^static void torture_lock_busted_write_unlock(void)$/;"	f	file:
torture_must_stop	torture.c	/^EXPORT_SYMBOL_GPL(torture_must_stop);$/;"	v
torture_must_stop	torture.c	/^bool torture_must_stop(void)$/;"	f
torture_must_stop_irq	torture.c	/^EXPORT_SYMBOL_GPL(torture_must_stop_irq);$/;"	v
torture_must_stop_irq	torture.c	/^bool torture_must_stop_irq(void)$/;"	f
torture_mutex_delay	locking/locktorture.c	/^static void torture_mutex_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_offline	torture.c	/^EXPORT_SYMBOL_GPL(torture_offline);$/;"	v
torture_offline	torture.c	/^bool torture_offline(int cpu, long *n_offl_attempts, long *n_offl_successes,$/;"	f
torture_online	torture.c	/^EXPORT_SYMBOL_GPL(torture_online);$/;"	v
torture_online	torture.c	/^bool torture_online(int cpu, long *n_onl_attempts, long *n_onl_successes,$/;"	f
torture_onoff	torture.c	/^torture_onoff(void *arg)$/;"	f	file:
torture_onoff_cleanup	torture.c	/^EXPORT_SYMBOL_GPL(torture_onoff_cleanup);$/;"	v
torture_onoff_cleanup	torture.c	/^static void torture_onoff_cleanup(void)$/;"	f	file:
torture_onoff_failures	torture.c	/^EXPORT_SYMBOL_GPL(torture_onoff_failures);$/;"	v
torture_onoff_failures	torture.c	/^bool torture_onoff_failures(void)$/;"	f
torture_onoff_init	torture.c	/^EXPORT_SYMBOL_GPL(torture_onoff_init);$/;"	v
torture_onoff_init	torture.c	/^int torture_onoff_init(long ooholdoff, long oointerval, torture_ofl_func *f)$/;"	f
torture_onoff_stats	torture.c	/^EXPORT_SYMBOL_GPL(torture_onoff_stats);$/;"	v
torture_onoff_stats	torture.c	/^void torture_onoff_stats(void)$/;"	f
torture_percpu_rwsem_init	locking/locktorture.c	/^void torture_percpu_rwsem_init(void)$/;"	f
torture_random	torture.c	/^EXPORT_SYMBOL_GPL(torture_random);$/;"	v
torture_random	torture.c	/^torture_random(struct torture_random_state *trsp)$/;"	f
torture_rtmutex_boost	locking/locktorture.c	/^static void torture_rtmutex_boost(struct torture_random_state *trsp)$/;"	f	file:
torture_rtmutex_delay	locking/locktorture.c	/^static void torture_rtmutex_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_rwlock_read_delay	locking/locktorture.c	/^static void torture_rwlock_read_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_rwlock_write_delay	locking/locktorture.c	/^static void torture_rwlock_write_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_rwsem_read_delay	locking/locktorture.c	/^static void torture_rwsem_read_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_rwsem_write_delay	locking/locktorture.c	/^static void torture_rwsem_write_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_shuffle	torture.c	/^static int torture_shuffle(void *arg)$/;"	f	file:
torture_shuffle_cleanup	torture.c	/^EXPORT_SYMBOL_GPL(torture_shuffle_cleanup);$/;"	v
torture_shuffle_cleanup	torture.c	/^static void torture_shuffle_cleanup(void)$/;"	f	file:
torture_shuffle_init	torture.c	/^EXPORT_SYMBOL_GPL(torture_shuffle_init);$/;"	v
torture_shuffle_init	torture.c	/^int torture_shuffle_init(long shuffint)$/;"	f
torture_shuffle_task_register	torture.c	/^EXPORT_SYMBOL_GPL(torture_shuffle_task_register);$/;"	v
torture_shuffle_task_register	torture.c	/^void torture_shuffle_task_register(struct task_struct *tp)$/;"	f
torture_shuffle_task_unregister_all	torture.c	/^static void torture_shuffle_task_unregister_all(void)$/;"	f	file:
torture_shuffle_tasks	torture.c	/^static void torture_shuffle_tasks(void)$/;"	f	file:
torture_shutdown	torture.c	/^static int torture_shutdown(void *arg)$/;"	f	file:
torture_shutdown_absorb	torture.c	/^EXPORT_SYMBOL_GPL(torture_shutdown_absorb);$/;"	v
torture_shutdown_absorb	torture.c	/^void torture_shutdown_absorb(const char *title)$/;"	f
torture_shutdown_cleanup	torture.c	/^static void torture_shutdown_cleanup(void)$/;"	f	file:
torture_shutdown_hook	torture.c	/^static void (*torture_shutdown_hook)(void);$/;"	v	file:
torture_shutdown_init	torture.c	/^EXPORT_SYMBOL_GPL(torture_shutdown_init);$/;"	v
torture_shutdown_init	torture.c	/^int torture_shutdown_init(int ssecs, void (*cleanup)(void))$/;"	f
torture_shutdown_nb	torture.c	/^static struct notifier_block torture_shutdown_nb = {$/;"	v	typeref:struct:notifier_block	file:
torture_shutdown_notify	torture.c	/^static int torture_shutdown_notify(struct notifier_block *unused1,$/;"	f	file:
torture_spin_lock_write_delay	locking/locktorture.c	/^static void torture_spin_lock_write_delay(struct torture_random_state *trsp)$/;"	f	file:
torture_stutter	torture.c	/^static int torture_stutter(void *arg)$/;"	f	file:
torture_stutter_cleanup	torture.c	/^static void torture_stutter_cleanup(void)$/;"	f	file:
torture_stutter_init	torture.c	/^EXPORT_SYMBOL_GPL(torture_stutter_init);$/;"	v
torture_stutter_init	torture.c	/^int torture_stutter_init(const int s, const int sgap)$/;"	f
torture_type	locking/locktorture.c	/^static char *torture_type = "spin_lock";$/;"	v	file:
torture_type	rcu/rcutorture.c	/^static char *torture_type = "rcu";$/;"	v	file:
torture_type	torture.c	/^static char *torture_type;$/;"	v	file:
torturing_tasks	rcu/rcutorture.c	/^static bool __maybe_unused torturing_tasks(void)$/;"	f	file:
total	sched/sched.h	/^	u64			total;$/;"	m	struct:irqtime
total_allocated	irq/matrix.c	/^	unsigned int		total_allocated;$/;"	m	struct:irq_matrix	file:
total_bw	sched/sched.h	/^	u64			total_bw;$/;"	m	struct:dl_bw
total_capacity	sched/fair.c	/^	unsigned long total_capacity;	\/* Total capacity of all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
total_faults	sched/fair.c	/^	unsigned long total_faults;$/;"	m	struct:numa_group	file:
total_forks	fork.c	/^unsigned long total_forks;	\/* Handle normal Linux uptimes. *\/$/;"	v
total_load	sched/fair.c	/^	unsigned long total_load;	\/* Total load of all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
total_ref_count	trace/trace_event_perf.c	/^static int	total_ref_count;$/;"	v	file:
total_running	sched/fair.c	/^	unsigned long total_running;$/;"	m	struct:sd_lb_stats	file:
totalhigh	sys.c	/^	u32 totalhigh;$/;"	m	struct:compat_sysinfo	file:
totalram	sys.c	/^	u32 totalram;$/;"	m	struct:compat_sysinfo	file:
totalswap	sys.c	/^	u32 totalswap;$/;"	m	struct:compat_sysinfo	file:
touch_all_softlockup_watchdogs	watchdog.c	/^void touch_all_softlockup_watchdogs(void)$/;"	f
touch_softlockup_watchdog	watchdog.c	/^EXPORT_SYMBOL(touch_softlockup_watchdog);$/;"	v
touch_softlockup_watchdog	watchdog.c	/^notrace void touch_softlockup_watchdog(void)$/;"	f
touch_softlockup_watchdog_sched	watchdog.c	/^notrace void touch_softlockup_watchdog_sched(void)$/;"	f
touch_softlockup_watchdog_sync	watchdog.c	/^void touch_softlockup_watchdog_sync(void)$/;"	f
tp	trace/trace_events_hist.c	/^	struct tracepoint			*tp;$/;"	m	struct:synth_event	typeref:struct:synth_event::tracepoint	file:
tp	trace/trace_kprobe.c	/^	struct trace_probe	tp;$/;"	m	struct:trace_kprobe	typeref:struct:trace_kprobe::trace_probe	file:
tp	trace/trace_uprobe.c	/^	struct trace_probe		tp;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::trace_probe	file:
tp_module_going_check_quiescent	tracepoint.c	/^static void tp_module_going_check_quiescent(struct tracepoint *tp, void *priv)$/;"	f	file:
tp_perf_event_destroy	events/core.c	/^static void tp_perf_event_destroy(struct perf_event *event)$/;"	f	file:
tp_probes	tracepoint.c	/^struct tp_probes {$/;"	s	file:
tp_prog_func_proto	trace/bpf_trace.c	/^tp_prog_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
tp_prog_is_valid_access	trace/bpf_trace.c	/^static bool tp_prog_is_valid_access(int off, int size, enum bpf_access_type type,$/;"	f	file:
tr	trace/ftrace.c	/^	struct trace_array		*tr;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::trace_array	file:
tr	trace/ftrace.c	/^	struct trace_array	*tr;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::trace_array	file:
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::trace_array
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::trace_array
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	m	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::trace_array
trace	trace/trace.h	/^	struct tracer		*trace;$/;"	m	struct:tracer_flags	typeref:struct:tracer_flags::tracer
trace_access_lock	trace/trace.c	/^static inline void trace_access_lock(int cpu)$/;"	f	file:
trace_access_lock_init	trace/trace.c	/^static inline void trace_access_lock_init(void)$/;"	f	file:
trace_access_unlock	trace/trace.c	/^static inline void trace_access_unlock(int cpu)$/;"	f	file:
trace_action_create	trace/trace_events_hist.c	/^static int trace_action_create(struct hist_trigger_data *hist_data,$/;"	f	file:
trace_action_create_field_var	trace/trace_events_hist.c	/^trace_action_create_field_var(struct hist_trigger_data *hist_data,$/;"	f	file:
trace_action_find_var	trace/trace_events_hist.c	/^trace_action_find_var(struct hist_trigger_data *hist_data,$/;"	f	file:
trace_add_event_call	trace/trace_events.c	/^int trace_add_event_call(struct trace_event_call *call)$/;"	f
trace_array	trace/trace.h	/^struct trace_array {$/;"	s
trace_array_cpu	trace/trace.h	/^struct trace_array_cpu {$/;"	s
trace_array_create	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_array_create);$/;"	v
trace_array_create	trace/trace.c	/^struct trace_array *trace_array_create(const char *name)$/;"	f
trace_array_destroy	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_array_destroy);$/;"	v
trace_array_destroy	trace/trace.c	/^int trace_array_destroy(struct trace_array *tr)$/;"	f
trace_array_get	trace/trace.c	/^int trace_array_get(struct trace_array *this_tr)$/;"	f
trace_array_printk	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_array_printk);$/;"	v
trace_array_printk	trace/trace.c	/^int trace_array_printk(struct trace_array *tr,$/;"	f
trace_array_printk_buf	trace/trace.c	/^int trace_array_printk_buf(struct ring_buffer *buffer,$/;"	f
trace_array_put	trace/trace.c	/^void trace_array_put(struct trace_array *this_tr)$/;"	f
trace_array_vprintk	trace/trace.c	/^int trace_array_vprintk(struct trace_array *tr,$/;"	f
trace_assign_type	trace/trace.h	391;"	d
trace_automount	trace/trace.c	/^static struct vfsmount *trace_automount(struct dentry *mntpt, void *ingore)$/;"	f	file:
trace_benchmark_reg	trace/trace_benchmark.c	/^int trace_benchmark_reg(void)$/;"	f
trace_benchmark_unreg	trace/trace_benchmark.c	/^void trace_benchmark_unreg(void)$/;"	f
trace_blk_event	trace/blktrace.c	/^static struct trace_event trace_blk_event = {$/;"	v	typeref:struct:trace_event	file:
trace_blk_event_funcs	trace/blktrace.c	/^static struct trace_event_functions trace_blk_event_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bprint_event	trace/trace_output.c	/^static struct trace_event trace_bprint_event = {$/;"	v	typeref:struct:trace_event	file:
trace_bprint_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_bprint_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bprint_print	trace/trace_output.c	/^trace_bprint_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bprint_raw	trace/trace_output.c	/^trace_bprint_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bprintk_fmt	trace/trace_printk.c	/^struct trace_bprintk_fmt {$/;"	s	file:
trace_bputs_event	trace/trace_output.c	/^static struct trace_event trace_bputs_event = {$/;"	v	typeref:struct:trace_event	file:
trace_bputs_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_bputs_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bputs_print	trace/trace_output.c	/^trace_bputs_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bputs_raw	trace/trace_output.c	/^trace_bputs_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_branch_disable	trace/trace.h	/^static inline void trace_branch_disable(void)$/;"	f
trace_branch_enable	trace/trace.h	/^static inline int trace_branch_enable(struct trace_array *tr)$/;"	f
trace_branch_event	trace/trace_branch.c	/^static struct trace_event trace_branch_event = {$/;"	v	typeref:struct:trace_event	file:
trace_branch_funcs	trace/trace_branch.c	/^static struct trace_event_functions trace_branch_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_branch_print	trace/trace_branch.c	/^static enum print_line_t trace_branch_print(struct trace_iterator *iter,$/;"	f	file:
trace_buf_size	trace/trace.c	/^static unsigned long		trace_buf_size = TRACE_BUF_SIZE_DEFAULT;$/;"	v	file:
trace_buffer	trace/trace.h	/^	struct trace_buffer	trace_buffer;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_buffer
trace_buffer	trace/trace.h	/^struct trace_buffer {$/;"	s
trace_buffer_iter	trace/trace.h	/^trace_buffer_iter(struct trace_iterator *iter, int cpu)$/;"	f
trace_buffer_lock_reserve	trace/trace.c	/^trace_buffer_lock_reserve(struct ring_buffer *buffer,$/;"	f
trace_buffer_struct	trace/trace.c	/^struct trace_buffer_struct {$/;"	s	file:
trace_buffer_unlock_commit	trace/trace.h	/^static inline void trace_buffer_unlock_commit(struct trace_array *tr,$/;"	f
trace_buffer_unlock_commit_nostack	trace/trace.c	/^trace_buffer_unlock_commit_nostack(struct ring_buffer *buffer,$/;"	f
trace_buffer_unlock_commit_regs	trace/trace.c	/^void trace_buffer_unlock_commit_regs(struct trace_array *tr,$/;"	f
trace_buffered_event_disable	trace/trace.c	/^void trace_buffered_event_disable(void)$/;"	f
trace_buffered_event_enable	trace/trace.c	/^void trace_buffered_event_enable(void)$/;"	f
trace_buffered_event_ref	trace/trace.c	/^static int trace_buffered_event_ref;$/;"	v	file:
trace_call_bpf	trace/bpf_trace.c	/^EXPORT_SYMBOL_GPL(trace_call_bpf);$/;"	v
trace_call_bpf	trace/bpf_trace.c	/^unsigned int trace_call_bpf(struct trace_event_call *call, void *ctx)$/;"	f
trace_cgroup_path	cgroup/cgroup.c	/^char trace_cgroup_path[TRACE_CGROUP_PATH_LEN];$/;"	v
trace_cgroup_path_lock	cgroup/cgroup.c	/^DEFINE_SPINLOCK(trace_cgroup_path_lock);$/;"	v
trace_clear_recursion	trace/trace.h	/^static __always_inline void trace_clear_recursion(int bit)$/;"	f
trace_clock	trace/trace_clock.c	/^EXPORT_SYMBOL_GPL(trace_clock);$/;"	v
trace_clock	trace/trace_clock.c	/^u64 notrace trace_clock(void)$/;"	f
trace_clock_counter	trace/trace_clock.c	/^u64 notrace trace_clock_counter(void)$/;"	f
trace_clock_fops	trace/trace.c	/^static const struct file_operations trace_clock_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_clock_global	trace/trace_clock.c	/^EXPORT_SYMBOL_GPL(trace_clock_global);$/;"	v
trace_clock_global	trace/trace_clock.c	/^u64 notrace trace_clock_global(void)$/;"	f
trace_clock_in_ns	trace/trace.c	/^bool trace_clock_in_ns(struct trace_array *tr)$/;"	f
trace_clock_jiffies	trace/trace_clock.c	/^EXPORT_SYMBOL_GPL(trace_clock_jiffies);$/;"	v
trace_clock_jiffies	trace/trace_clock.c	/^u64 notrace trace_clock_jiffies(void)$/;"	f
trace_clock_local	trace/trace_clock.c	/^EXPORT_SYMBOL_GPL(trace_clock_local);$/;"	v
trace_clock_local	trace/trace_clock.c	/^u64 notrace trace_clock_local(void)$/;"	f
trace_clocks	trace/trace.c	/^} trace_clocks[] = {$/;"	v	typeref:struct:__anon40	file:
trace_cmdline_lock	trace/trace.c	/^static arch_spinlock_t trace_cmdline_lock = __ARCH_SPIN_LOCK_UNLOCKED;$/;"	v	file:
trace_consume	trace/trace.c	/^static void trace_consume(struct trace_iterator *iter)$/;"	f	file:
trace_counter	trace/trace_clock.c	/^static atomic64_t trace_counter;$/;"	v	file:
trace_create_cpu_file	trace/trace.c	/^trace_create_cpu_file(const char *name, umode_t mode, struct dentry *parent,$/;"	f	file:
trace_create_eval_file	trace/trace.c	/^static inline void trace_create_eval_file(struct dentry *d_tracer) { }$/;"	f	file:
trace_create_eval_file	trace/trace.c	/^static void trace_create_eval_file(struct dentry *d_tracer)$/;"	f	file:
trace_create_file	trace/trace.c	/^struct dentry *trace_create_file(const char *name,$/;"	f
trace_create_new_event	trace/trace_events.c	/^trace_create_new_event(struct trace_event_call *call,$/;"	f	file:
trace_create_savedcmd	trace/trace.c	/^static int trace_create_savedcmd(void)$/;"	f	file:
trace_ctx_event	trace/trace_output.c	/^static struct trace_event trace_ctx_event = {$/;"	v	typeref:struct:trace_event	file:
trace_ctx_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_ctx_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_ctx_hex	trace/trace_output.c	/^static enum print_line_t trace_ctx_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctx_print	trace/trace_output.c	/^static enum print_line_t trace_ctx_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctx_raw	trace/trace_output.c	/^static enum print_line_t trace_ctx_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctxwake_bin	trace/trace_output.c	/^static enum print_line_t trace_ctxwake_bin(struct trace_iterator *iter,$/;"	f	file:
trace_ctxwake_hex	trace/trace_output.c	/^static int trace_ctxwake_hex(struct trace_iterator *iter, char S)$/;"	f	file:
trace_ctxwake_print	trace/trace_output.c	/^static enum print_line_t trace_ctxwake_print(struct trace_iterator *iter,$/;"	f	file:
trace_ctxwake_raw	trace/trace_output.c	/^static int trace_ctxwake_raw(struct trace_iterator *iter, char S)$/;"	f	file:
trace_default_header	trace/trace.c	/^void trace_default_header(struct seq_file *m)$/;"	f
trace_define_common_fields	trace/trace_events.c	/^static int trace_define_common_fields(void)$/;"	f	file:
trace_define_field	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_define_field);$/;"	v
trace_define_field	trace/trace_events.c	/^int trace_define_field(struct trace_event_call *call, const char *type,$/;"	f
trace_define_generic_fields	trace/trace_events.c	/^static int trace_define_generic_fields(void)$/;"	f	file:
trace_destroy_fields	trace/trace_events.c	/^static void trace_destroy_fields(struct trace_event_call *call)$/;"	f	file:
trace_die_handler	trace/trace.c	/^static int trace_die_handler(struct notifier_block *self,$/;"	f	file:
trace_die_notifier	trace/trace.c	/^static struct notifier_block trace_die_notifier = {$/;"	v	typeref:struct:notifier_block	file:
trace_do_benchmark	trace/trace_benchmark.c	/^static void trace_do_benchmark(void)$/;"	f	file:
trace_dump_stack	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_dump_stack);$/;"	v
trace_dump_stack	trace/trace.c	/^void trace_dump_stack(int skip)$/;"	f
trace_empty	trace/trace.c	/^int trace_empty(struct trace_iterator *iter)$/;"	f
trace_eval_init	trace/trace.c	/^static void __init trace_eval_init(void)$/;"	f	file:
trace_eval_jmp_to_tail	trace/trace.c	/^trace_eval_jmp_to_tail(union trace_eval_map_item *ptr)$/;"	f	file:
trace_eval_map_head	trace/trace.c	/^struct trace_eval_map_head {$/;"	s	file:
trace_eval_map_item	trace/trace.c	/^union trace_eval_map_item {$/;"	u	file:
trace_eval_map_tail	trace/trace.c	/^struct trace_eval_map_tail {$/;"	s	file:
trace_eval_maps	trace/trace.c	/^static union trace_eval_map_item *trace_eval_maps;$/;"	v	typeref:union:trace_eval_map_item	file:
trace_event_buffer_commit	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_event_buffer_commit);$/;"	v
trace_event_buffer_commit	trace/trace.c	/^void trace_event_buffer_commit(struct trace_event_buffer *fbuffer)$/;"	f
trace_event_buffer_lock_reserve	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_event_buffer_lock_reserve);$/;"	v
trace_event_buffer_lock_reserve	trace/trace.c	/^trace_event_buffer_lock_reserve(struct ring_buffer **current_rb,$/;"	f
trace_event_buffer_reserve	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_event_buffer_reserve);$/;"	v
trace_event_buffer_reserve	trace/trace_events.c	/^void *trace_event_buffer_reserve(struct trace_event_buffer *fbuffer,$/;"	f
trace_event_enable_cmd_record	trace/trace_events.c	/^void trace_event_enable_cmd_record(bool enable)$/;"	f
trace_event_enable_disable	trace/trace_events.c	/^int trace_event_enable_disable(struct trace_event_file *file,$/;"	f
trace_event_enable_tgid_record	trace/trace_events.c	/^void trace_event_enable_tgid_record(bool enable)$/;"	f
trace_event_eval_update	trace/trace.h	/^static inline void trace_event_eval_update(struct trace_eval_map **map, int len) { }$/;"	f
trace_event_eval_update	trace/trace_events.c	/^void trace_event_eval_update(struct trace_eval_map **map, int len)$/;"	f
trace_event_follow_fork	trace/trace_events.c	/^void trace_event_follow_fork(struct trace_array *tr, bool enable)$/;"	f
trace_event_get_offsets	trace/trace_events.c	/^int trace_event_get_offsets(struct trace_event_call *call)$/;"	f
trace_event_ignore_this_pid	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_event_ignore_this_pid);$/;"	v
trace_event_ignore_this_pid	trace/trace_events.c	/^bool trace_event_ignore_this_pid(struct trace_event_file *trace_file)$/;"	f
trace_event_init	trace/trace.h	/^static inline void __init trace_event_init(void) { }$/;"	f
trace_event_init	trace/trace_events.c	/^void __init trace_event_init(void)$/;"	f
trace_event_raw_event_synth	trace/trace_events_hist.c	/^static notrace void trace_event_raw_event_synth(void *__data,$/;"	f	file:
trace_event_raw_init	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_event_raw_init);$/;"	v
trace_event_raw_init	trace/trace_events.c	/^int trace_event_raw_init(struct trace_event_call *call)$/;"	f
trace_event_read_lock	trace/trace_output.c	/^void trace_event_read_lock(void)$/;"	f
trace_event_read_unlock	trace/trace_output.c	/^void trace_event_read_unlock(void)$/;"	f
trace_event_reg	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_event_reg);$/;"	v
trace_event_reg	trace/trace_events.c	/^int trace_event_reg(struct trace_event_call *call,$/;"	f
trace_event_sem	trace/trace_output.c	/^DECLARE_RWSEM(trace_event_sem);$/;"	v
trace_event_setup	trace/trace.c	/^trace_event_setup(struct ring_buffer_event *event,$/;"	f	file:
trace_event_trigger_enable_disable	trace/trace_events_trigger.c	/^int trace_event_trigger_enable_disable(struct trace_event_file *file,$/;"	f
trace_events_hist_init	trace/trace_events_hist.c	/^fs_initcall(trace_events_hist_init);$/;"	v
trace_events_hist_init	trace/trace_events_hist.c	/^static __init int trace_events_hist_init(void)$/;"	f	file:
trace_filter_add_remove_task	trace/trace.c	/^void trace_filter_add_remove_task(struct trace_pid_list *pid_list,$/;"	f
trace_find_cmdline	trace/trace.c	/^void trace_find_cmdline(int pid, char comm[])$/;"	f
trace_find_event_field	trace/trace_events.c	/^trace_find_event_field(struct trace_event_call *call, char *name)$/;"	f
trace_find_filtered_pid	trace/trace.c	/^trace_find_filtered_pid(struct trace_pid_list *filtered_pids, pid_t search_pid)$/;"	f
trace_find_mark	trace/trace_output.c	/^char trace_find_mark(unsigned long long d)$/;"	f
trace_find_next_entry	trace/trace.c	/^struct trace_entry *trace_find_next_entry(struct trace_iterator *iter,$/;"	f
trace_find_next_entry_inc	trace/trace.c	/^void *trace_find_next_entry_inc(struct trace_iterator *iter)$/;"	f
trace_find_tgid	trace/trace.c	/^int trace_find_tgid(int pid)$/;"	f
trace_flag_type	trace/trace.h	/^enum trace_flag_type {$/;"	g
trace_flags	trace/trace.h	/^	unsigned int		trace_flags;$/;"	m	struct:trace_array
trace_flags_index	trace/trace.h	/^	unsigned char		trace_flags_index[TRACE_FLAGS_MAX_SIZE];$/;"	m	struct:trace_array
trace_fn_bin	trace/trace_output.c	/^static enum print_line_t trace_fn_bin(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_event	trace/trace_output.c	/^static struct trace_event trace_fn_event = {$/;"	v	typeref:struct:trace_event	file:
trace_fn_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_fn_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_fn_hex	trace/trace_output.c	/^static enum print_line_t trace_fn_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_raw	trace/trace_output.c	/^static enum print_line_t trace_fn_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_trace	trace/trace_output.c	/^static enum print_line_t trace_fn_trace(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_format_open	trace/trace_events.c	/^static int trace_format_open(struct inode *inode, struct file *file)$/;"	f	file:
trace_format_seq_ops	trace/trace_events.c	/^static const struct seq_operations trace_format_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
trace_free_pid_list	trace/trace.c	/^void trace_free_pid_list(struct trace_pid_list *pid_list)$/;"	f
trace_function	trace/trace.c	/^trace_function(struct trace_array *tr,$/;"	f
trace_get_context_bit	trace/trace.h	/^static __always_inline int trace_get_context_bit(void)$/;"	f
trace_get_syscall_nr	trace/trace_syscalls.c	/^trace_get_syscall_nr(struct task_struct *task, struct pt_regs *regs)$/;"	f	file:
trace_get_user	trace/trace.c	/^int trace_get_user(struct trace_parser *parser, const char __user *ubuf,$/;"	f
trace_graph_entry	trace/trace_functions_graph.c	/^int trace_graph_entry(struct ftrace_graph_ent *trace)$/;"	f
trace_graph_entry_watchdog	trace/trace_selftest.c	/^static int trace_graph_entry_watchdog(struct ftrace_graph_ent *trace)$/;"	f	file:
trace_graph_function	trace/trace_functions_graph.c	/^trace_graph_function(struct trace_array *tr,$/;"	f
trace_graph_return	trace/trace_functions_graph.c	/^void trace_graph_return(struct ftrace_graph_ret *trace)$/;"	f
trace_graph_thresh_return	trace/trace_functions_graph.c	/^static void trace_graph_thresh_return(struct ftrace_graph_ret *trace)$/;"	f	file:
trace_handle_return	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_handle_return);$/;"	v
trace_handle_return	trace/trace.c	/^enum print_line_t trace_handle_return(struct trace_seq *s)$/;"	f
trace_hardirqs_off	trace/trace_preemptirq.c	/^EXPORT_SYMBOL(trace_hardirqs_off);$/;"	v
trace_hardirqs_off	trace/trace_preemptirq.c	/^NOKPROBE_SYMBOL(trace_hardirqs_off);$/;"	v
trace_hardirqs_off	trace/trace_preemptirq.c	/^void trace_hardirqs_off(void)$/;"	f
trace_hardirqs_off_caller	trace/trace_preemptirq.c	/^EXPORT_SYMBOL(trace_hardirqs_off_caller);$/;"	v
trace_hardirqs_off_caller	trace/trace_preemptirq.c	/^NOKPROBE_SYMBOL(trace_hardirqs_off_caller);$/;"	v
trace_hardirqs_off_caller	trace/trace_preemptirq.c	/^__visible void trace_hardirqs_off_caller(unsigned long caller_addr)$/;"	f
trace_hardirqs_on	trace/trace_preemptirq.c	/^EXPORT_SYMBOL(trace_hardirqs_on);$/;"	v
trace_hardirqs_on	trace/trace_preemptirq.c	/^NOKPROBE_SYMBOL(trace_hardirqs_on);$/;"	v
trace_hardirqs_on	trace/trace_preemptirq.c	/^void trace_hardirqs_on(void)$/;"	f
trace_hardirqs_on_caller	trace/trace_preemptirq.c	/^EXPORT_SYMBOL(trace_hardirqs_on_caller);$/;"	v
trace_hardirqs_on_caller	trace/trace_preemptirq.c	/^NOKPROBE_SYMBOL(trace_hardirqs_on_caller);$/;"	v
trace_hardirqs_on_caller	trace/trace_preemptirq.c	/^__visible void trace_hardirqs_on_caller(unsigned long caller_addr)$/;"	f
trace_hwlat_callback	trace/trace_hwlat.c	/^void trace_hwlat_callback(bool enter)$/;"	f
trace_hwlat_callback_enabled	trace/trace_hwlat.c	/^bool trace_hwlat_callback_enabled;$/;"	v
trace_hwlat_event	trace/trace_output.c	/^static struct trace_event trace_hwlat_event = {$/;"	v	typeref:struct:trace_event	file:
trace_hwlat_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_hwlat_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_hwlat_print	trace/trace_output.c	/^trace_hwlat_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_hwlat_raw	trace/trace_output.c	/^trace_hwlat_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_hwlat_sample	trace/trace_hwlat.c	/^static void trace_hwlat_sample(struct hwlat_sample *sample)$/;"	f	file:
trace_ignore_this_task	trace/trace.c	/^trace_ignore_this_task(struct trace_pid_list *filtered_pids, struct task_struct *task)$/;"	f
trace_init	trace/trace.c	/^void __init trace_init(void)$/;"	f
trace_init_global_iter	trace/trace.c	/^void trace_init_global_iter(struct trace_iterator *iter)$/;"	f
trace_insert_eval_map	trace/trace.c	/^static void trace_insert_eval_map(struct module *mod,$/;"	f	file:
trace_insert_eval_map_file	trace/trace.c	/^static inline void trace_insert_eval_map_file(struct module *mod,$/;"	f	file:
trace_insert_eval_map_file	trace/trace.c	/^trace_insert_eval_map_file(struct module *mod, struct trace_eval_map **start,$/;"	f	file:
trace_instance_dir	trace/trace.c	/^static struct dentry *trace_instance_dir;$/;"	v	typeref:struct:dentry	file:
trace_iterator_bits	trace/trace.h	/^enum trace_iterator_bits {$/;"	g
trace_iterator_flags	trace/trace.h	/^enum trace_iterator_flags { TRACE_FLAGS };$/;"	g
trace_iterator_increment	trace/trace.c	/^static void trace_iterator_increment(struct trace_iterator *iter)$/;"	f	file:
trace_iterator_reset	trace/trace.h	/^static __always_inline void trace_iterator_reset(struct trace_iterator *iter)$/;"	f
trace_keep_overwrite	trace/trace.c	/^int trace_keep_overwrite(struct tracer *tracer, u32 mask, int set)$/;"	f
trace_kprobe	trace/trace_kprobe.c	/^struct trace_kprobe {$/;"	s	file:
trace_kprobe_address	trace/trace_kprobe.c	/^unsigned long trace_kprobe_address(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_create	trace/trace_kprobe.c	/^static int trace_kprobe_create(int argc, const char *argv[])$/;"	f	file:
trace_kprobe_error_injectable	trace/trace_kprobe.c	/^bool trace_kprobe_error_injectable(struct trace_event_call *call)$/;"	f
trace_kprobe_error_injectable	trace/trace_probe.h	/^static inline bool trace_kprobe_error_injectable(struct trace_event_call *call)$/;"	f
trace_kprobe_has_gone	trace/trace_kprobe.c	/^static nokprobe_inline bool trace_kprobe_has_gone(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_is_busy	trace/trace_kprobe.c	/^static bool trace_kprobe_is_busy(struct dyn_event *ev)$/;"	f	file:
trace_kprobe_is_registered	trace/trace_kprobe.c	/^static nokprobe_inline bool trace_kprobe_is_registered(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_is_return	trace/trace_kprobe.c	/^static nokprobe_inline bool trace_kprobe_is_return(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_match	trace/trace_kprobe.c	/^static bool trace_kprobe_match(const char *system, const char *event,$/;"	f	file:
trace_kprobe_module_callback	trace/trace_kprobe.c	/^static int trace_kprobe_module_callback(struct notifier_block *nb,$/;"	f	file:
trace_kprobe_module_exist	trace/trace_kprobe.c	/^static nokprobe_inline bool trace_kprobe_module_exist(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_module_nb	trace/trace_kprobe.c	/^static struct notifier_block trace_kprobe_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
trace_kprobe_nhit	trace/trace_kprobe.c	/^static nokprobe_inline unsigned long trace_kprobe_nhit(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_offset	trace/trace_kprobe.c	/^static nokprobe_inline unsigned long trace_kprobe_offset(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_on_func_entry	trace/trace_kprobe.c	/^bool trace_kprobe_on_func_entry(struct trace_event_call *call)$/;"	f
trace_kprobe_on_func_entry	trace/trace_probe.h	/^static inline bool trace_kprobe_on_func_entry(struct trace_event_call *call)$/;"	f
trace_kprobe_ops	trace/trace_kprobe.c	/^static struct dyn_event_operations trace_kprobe_ops = {$/;"	v	typeref:struct:dyn_event_operations	file:
trace_kprobe_release	trace/trace_kprobe.c	/^static int trace_kprobe_release(struct dyn_event *ev)$/;"	f	file:
trace_kprobe_show	trace/trace_kprobe.c	/^static int trace_kprobe_show(struct seq_file *m, struct dyn_event *ev)$/;"	f	file:
trace_kprobe_symbol	trace/trace_kprobe.c	/^static nokprobe_inline const char *trace_kprobe_symbol(struct trace_kprobe *tk)$/;"	f	file:
trace_kprobe_within_module	trace/trace_kprobe.c	/^static nokprobe_inline bool trace_kprobe_within_module(struct trace_kprobe *tk,$/;"	f	file:
trace_latency_header	trace/trace.c	/^void trace_latency_header(struct seq_file *m)$/;"	f
trace_likely_condition	trace/trace_branch.c	/^void trace_likely_condition(struct ftrace_likely_data *f, int val, int expect)$/;"	f	file:
trace_lookup_stack	trace/trace_stack.c	/^static void trace_lookup_stack(struct seq_file *m, long i)$/;"	f	file:
trace_mark	trace/trace_output.c	/^static const struct trace_mark {$/;"	s	file:
trace_marker_file	trace/trace.h	/^	struct trace_event_file *trace_marker_file;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_event_file
trace_module_add_evals	trace/trace.c	/^static void trace_module_add_evals(struct module *mod)$/;"	f	file:
trace_module_add_events	trace/trace_events.c	/^static void trace_module_add_events(struct module *mod)$/;"	f	file:
trace_module_has_bad_taint	tracepoint.c	/^bool trace_module_has_bad_taint(struct module *mod)$/;"	f
trace_module_nb	trace/trace.c	/^static struct notifier_block trace_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
trace_module_nb	trace/trace_events.c	/^static struct notifier_block trace_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
trace_module_notify	trace/trace.c	/^static int trace_module_notify(struct notifier_block *self,$/;"	f	file:
trace_module_notify	trace/trace_events.c	/^static int trace_module_notify(struct notifier_block *self,$/;"	f	file:
trace_module_remove_evals	trace/trace.c	/^static inline void trace_module_remove_evals(struct module *mod) { }$/;"	f	file:
trace_module_remove_evals	trace/trace.c	/^static void trace_module_remove_evals(struct module *mod)$/;"	f	file:
trace_module_remove_events	trace/trace_events.c	/^static void trace_module_remove_events(struct module *mod)$/;"	f	file:
trace_nop_print	trace/trace_output.c	/^enum print_line_t trace_nop_print(struct trace_iterator *iter, int flags,$/;"	f
trace_note	trace/blktrace.c	/^static void trace_note(struct blk_trace *bt, pid_t pid, int action,$/;"	f	file:
trace_note_time	trace/blktrace.c	/^static void trace_note_time(struct blk_trace *bt)$/;"	f	file:
trace_note_tsk	trace/blktrace.c	/^static void trace_note_tsk(struct task_struct *tsk)$/;"	f	file:
trace_ok_for_array	trace/trace.c	/^trace_ok_for_array(struct tracer *t, struct trace_array *tr)$/;"	f	file:
trace_option_dentry	trace/trace.h	/^struct trace_option_dentry {$/;"	s
trace_options	trace/trace.c	/^static const char *trace_options[] = {$/;"	v	file:
trace_options	trace/trace.h	/^struct trace_options {$/;"	s
trace_options_core_fops	trace/trace.c	/^static const struct file_operations trace_options_core_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_options_core_read	trace/trace.c	/^trace_options_core_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_core_write	trace/trace.c	/^trace_options_core_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_fops	trace/trace.c	/^static const struct file_operations trace_options_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_options_init_dentry	trace/trace.c	/^static struct dentry *trace_options_init_dentry(struct trace_array *tr)$/;"	f	file:
trace_options_read	trace/trace.c	/^trace_options_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_write	trace/trace.c	/^trace_options_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
trace_opts	trace/trace_functions_graph.c	/^static struct tracer_opt trace_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
trace_output_call	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(trace_output_call);$/;"	v
trace_output_call	trace/trace_output.c	/^int trace_output_call(struct trace_iterator *iter, char *name, char *fmt, ...)$/;"	f
trace_output_raw	trace/trace_output.c	/^static int trace_output_raw(struct trace_iterator *iter, char *name,$/;"	f	file:
trace_panic_handler	trace/trace.c	/^static int trace_panic_handler(struct notifier_block *this,$/;"	f	file:
trace_panic_notifier	trace/trace.c	/^static struct notifier_block trace_panic_notifier = {$/;"	v	typeref:struct:notifier_block	file:
trace_parse_run_command	trace/trace.c	/^ssize_t trace_parse_run_command(struct file *file, const char __user *buffer,$/;"	f
trace_parser	trace/trace.h	/^struct trace_parser {$/;"	s
trace_parser_clear	trace/trace.h	/^static inline void trace_parser_clear(struct trace_parser *parser)$/;"	f
trace_parser_cont	trace/trace.h	/^static inline bool trace_parser_cont(struct trace_parser *parser)$/;"	f
trace_parser_get_init	trace/trace.c	/^int trace_parser_get_init(struct trace_parser *parser, int size)$/;"	f
trace_parser_loaded	trace/trace.h	/^static inline bool trace_parser_loaded(struct trace_parser *parser)$/;"	f
trace_parser_put	trace/trace.c	/^void trace_parser_put(struct trace_parser *parser)$/;"	f
trace_percpu_buffer	trace/trace.c	/^static struct trace_buffer_struct *trace_percpu_buffer;$/;"	v	typeref:struct:trace_buffer_struct	file:
trace_pid_list	trace/trace.h	/^struct trace_pid_list {$/;"	s
trace_pid_next	trace/trace.c	/^void *trace_pid_next(struct trace_pid_list *pid_list, void *v, loff_t *pos)$/;"	f
trace_pid_show	trace/trace.c	/^int trace_pid_show(struct seq_file *m, void *v)$/;"	f
trace_pid_start	trace/trace.c	/^void *trace_pid_start(struct trace_pid_list *pid_list, loff_t *pos)$/;"	f
trace_pid_write	trace/trace.c	/^int trace_pid_write(struct trace_pid_list *filtered_pids,$/;"	f
trace_poll	trace/trace.c	/^trace_poll(struct trace_iterator *iter, struct file *filp, poll_table *poll_table)$/;"	f	file:
trace_preempt_off	trace/trace_preemptirq.c	/^void trace_preempt_off(unsigned long a0, unsigned long a1)$/;"	f
trace_preempt_on	trace/trace_preemptirq.c	/^void trace_preempt_on(unsigned long a0, unsigned long a1)$/;"	f
trace_print_array_seq	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_array_seq);$/;"	v
trace_print_array_seq	trace/trace_output.c	/^trace_print_array_seq(struct trace_seq *p, const void *buf, int count,$/;"	f
trace_print_bitmask_seq	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(trace_print_bitmask_seq);$/;"	v
trace_print_bitmask_seq	trace/trace_output.c	/^trace_print_bitmask_seq(struct trace_seq *p, void *bitmask_ptr,$/;"	f
trace_print_bprintk_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_bprintk_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_bputs_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_bputs_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_context	trace/trace_output.c	/^int trace_print_context(struct trace_iterator *iter)$/;"	f
trace_print_event	trace/trace_output.c	/^static struct trace_event trace_print_event = {$/;"	v	typeref:struct:trace_event	file:
trace_print_flags_seq	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_flags_seq);$/;"	v
trace_print_flags_seq	trace/trace_output.c	/^trace_print_flags_seq(struct trace_seq *p, const char *delim,$/;"	f
trace_print_flags_seq_u64	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_flags_seq_u64);$/;"	v
trace_print_flags_seq_u64	trace/trace_output.c	/^trace_print_flags_seq_u64(struct trace_seq *p, const char *delim,$/;"	f
trace_print_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_print_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_print_graph_duration	trace/trace_functions_graph.c	/^trace_print_graph_duration(unsigned long long duration, struct trace_seq *s)$/;"	f
trace_print_hex_seq	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_hex_seq);$/;"	v
trace_print_hex_seq	trace/trace_output.c	/^trace_print_hex_seq(struct trace_seq *p, const unsigned char *buf, int buf_len,$/;"	f
trace_print_lat_context	trace/trace_output.c	/^int trace_print_lat_context(struct trace_iterator *iter)$/;"	f
trace_print_lat_fmt	trace/trace_output.c	/^int trace_print_lat_fmt(struct trace_seq *s, struct trace_entry *entry)$/;"	f
trace_print_print	trace/trace_output.c	/^static enum print_line_t trace_print_print(struct trace_iterator *iter,$/;"	f	file:
trace_print_printk_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_printk_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_raw	trace/trace_output.c	/^static enum print_line_t trace_print_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_print_seq	trace/trace_seq.c	/^int trace_print_seq(struct seq_file *m, struct trace_seq *s)$/;"	f
trace_print_symbols_seq	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_symbols_seq);$/;"	v
trace_print_symbols_seq	trace/trace_output.c	/^trace_print_symbols_seq(struct trace_seq *p, unsigned long val,$/;"	f
trace_print_symbols_seq_u64	trace/trace_output.c	/^EXPORT_SYMBOL(trace_print_symbols_seq_u64);$/;"	v
trace_print_symbols_seq_u64	trace/trace_output.c	/^trace_print_symbols_seq_u64(struct trace_seq *p, unsigned long long val,$/;"	f
trace_printk_control	trace/trace_printk.c	/^void trace_printk_control(bool enabled)$/;"	f
trace_printk_enabled	trace/trace_printk.c	/^static bool __read_mostly trace_printk_enabled = true;$/;"	v	file:
trace_printk_init_buffers	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_printk_init_buffers);$/;"	v
trace_printk_init_buffers	trace/trace.c	/^void trace_printk_init_buffers(void)$/;"	f
trace_printk_seq	trace/trace.c	/^trace_printk_seq(struct trace_seq *s)$/;"	f
trace_printk_start_comm	trace/trace.c	/^void trace_printk_start_comm(void)$/;"	f
trace_printk_start_stop_comm	trace/trace.c	/^static void trace_printk_start_stop_comm(int enabled)$/;"	f	file:
trace_probe	trace/trace_probe.h	/^struct trace_probe {$/;"	s
trace_probe_add_file	trace/trace_probe.c	/^int trace_probe_add_file(struct trace_probe *tp, struct trace_event_file *file)$/;"	f
trace_probe_cleanup	trace/trace_probe.c	/^void trace_probe_cleanup(struct trace_probe *tp)$/;"	f
trace_probe_clear_flag	trace/trace_probe.h	/^static inline void trace_probe_clear_flag(struct trace_probe *tp,$/;"	f
trace_probe_err_text	trace/trace_probe.c	/^static const char *trace_probe_err_text[] = { ERRORS };$/;"	v	file:
trace_probe_event_call	trace/trace_probe.h	/^	trace_probe_event_call(struct trace_probe *tp)$/;"	f
trace_probe_for_each_link	trace/trace_probe.h	300;"	d
trace_probe_for_each_link_rcu	trace/trace_probe.h	302;"	d
trace_probe_get_file_link	trace/trace_probe.c	/^struct event_file_link *trace_probe_get_file_link(struct trace_probe *tp,$/;"	f
trace_probe_group_name	trace/trace_probe.h	/^static inline const char *trace_probe_group_name(struct trace_probe *tp)$/;"	f
trace_probe_has_single_file	trace/trace_probe.h	/^static inline bool trace_probe_has_single_file(struct trace_probe *tp)$/;"	f
trace_probe_init	trace/trace_probe.c	/^int trace_probe_init(struct trace_probe *tp, const char *event,$/;"	f
trace_probe_is_enabled	trace/trace_probe.h	/^static inline bool trace_probe_is_enabled(struct trace_probe *tp)$/;"	f
trace_probe_log	trace/trace_probe.c	/^static struct trace_probe_log trace_probe_log;$/;"	v	typeref:struct:trace_probe_log	file:
trace_probe_log	trace/trace_probe.h	/^struct trace_probe_log {$/;"	s
trace_probe_log_clear	trace/trace_probe.c	/^void trace_probe_log_clear(void)$/;"	f
trace_probe_log_err	trace/trace_probe.h	418;"	d
trace_probe_log_init	trace/trace_probe.c	/^void trace_probe_log_init(const char *subsystem, int argc, const char **argv)$/;"	f
trace_probe_log_set_index	trace/trace_probe.c	/^void trace_probe_log_set_index(int index)$/;"	f
trace_probe_name	trace/trace_probe.h	/^static inline const char *trace_probe_name(struct trace_probe *tp)$/;"	f
trace_probe_register_event_call	trace/trace_probe.c	/^int trace_probe_register_event_call(struct trace_probe *tp)$/;"	f
trace_probe_remove_file	trace/trace_probe.c	/^int trace_probe_remove_file(struct trace_probe *tp,$/;"	f
trace_probe_set_flag	trace/trace_probe.h	/^static inline void trace_probe_set_flag(struct trace_probe *tp,$/;"	f
trace_probe_test_flag	trace/trace_probe.h	/^static inline bool trace_probe_test_flag(struct trace_probe *tp,$/;"	f
trace_probe_unregister_event_call	trace/trace_probe.h	/^static inline int trace_probe_unregister_event_call(struct trace_probe *tp)$/;"	f
trace_process_export	trace/trace.c	/^trace_process_export(struct trace_export *export,$/;"	f	file:
trace_raw_data	trace/trace_output.c	/^static enum print_line_t trace_raw_data(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_raw_data_event	trace/trace_output.c	/^static struct trace_event trace_raw_data_event = {$/;"	v	typeref:struct:trace_event	file:
trace_raw_data_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_raw_data_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_raw_output_prep	trace/trace_output.c	/^EXPORT_SYMBOL(trace_raw_output_prep);$/;"	v
trace_raw_output_prep	trace/trace_output.c	/^int trace_raw_output_prep(struct trace_iterator *iter,$/;"	f
trace_rb_cpu_prepare	trace/ring_buffer.c	/^int trace_rb_cpu_prepare(unsigned int cpu, struct hlist_node *node)$/;"	f
trace_rcu_this_gp	rcu/tree.c	/^static void trace_rcu_this_gp(struct rcu_node *rnp, struct rcu_data *rdp,$/;"	f	file:
trace_recursion_clear	trace/trace.h	597;"	d
trace_recursion_depth	trace/trace.h	600;"	d
trace_recursion_set	trace/trace.h	596;"	d
trace_recursion_set_depth	trace/trace.h	602;"	d
trace_recursion_test	trace/trace.h	598;"	d
trace_recursive_lock	trace/ring_buffer.c	/^trace_recursive_lock(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
trace_recursive_unlock	trace/ring_buffer.c	/^trace_recursive_unlock(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
trace_remove_event_call	trace/trace_events.c	/^int trace_remove_event_call(struct trace_event_call *call)$/;"	f
trace_run_command	trace/trace.c	/^int trace_run_command(const char *buf, int (*createfn)(int, char **))$/;"	f
trace_save_cmdline	trace/trace.c	/^static int trace_save_cmdline(struct task_struct *tsk)$/;"	f	file:
trace_save_tgid	trace/trace.c	/^static int trace_save_tgid(struct task_struct *tsk)$/;"	f	file:
trace_search_list	trace/trace_output.c	/^static int trace_search_list(struct list_head **list)$/;"	f	file:
trace_selftest_function_recursion	trace/trace_selftest.c	/^trace_selftest_function_recursion(void)$/;"	f	file:
trace_selftest_function_recursion	trace/trace_selftest.c	537;"	d	file:
trace_selftest_function_regs	trace/trace_selftest.c	/^trace_selftest_function_regs(void)$/;"	f	file:
trace_selftest_ops	trace/trace_selftest.c	/^static int trace_selftest_ops(struct trace_array *tr, int cnt)$/;"	f	file:
trace_selftest_recursion_cnt	trace/trace_selftest.c	/^static int trace_selftest_recursion_cnt;$/;"	v	file:
trace_selftest_regs_stat	trace/trace_selftest.c	/^} trace_selftest_regs_stat;$/;"	v	typeref:enum:__anon33	file:
trace_selftest_startup_branch	trace/trace_selftest.c	/^trace_selftest_startup_branch(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_dynamic_tracing	trace/trace_selftest.c	/^static int trace_selftest_startup_dynamic_tracing(struct tracer *trace,$/;"	f	file:
trace_selftest_startup_dynamic_tracing	trace/trace_selftest.c	536;"	d	file:
trace_selftest_startup_function	trace/trace_selftest.c	/^trace_selftest_startup_function(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_function_graph	trace/trace_selftest.c	/^trace_selftest_startup_function_graph(struct tracer *trace,$/;"	f
trace_selftest_startup_irqsoff	trace/trace_selftest.c	/^trace_selftest_startup_irqsoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_nop	trace/trace_selftest.c	/^trace_selftest_startup_nop(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_preemptirqsoff	trace/trace_selftest.c	/^trace_selftest_startup_preemptirqsoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_preemptoff	trace/trace_selftest.c	/^trace_selftest_startup_preemptoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_wakeup	trace/trace_selftest.c	/^trace_selftest_startup_wakeup(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_test_dyn_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_dyn_cnt;$/;"	v	file:
trace_selftest_test_dyn_func	trace/trace_selftest.c	/^static void trace_selftest_test_dyn_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_global_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_global_cnt;$/;"	v	file:
trace_selftest_test_global_func	trace/trace_selftest.c	/^static void trace_selftest_test_global_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe1_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe1_cnt;$/;"	v	file:
trace_selftest_test_probe1_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe1_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe2_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe2_cnt;$/;"	v	file:
trace_selftest_test_probe2_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe2_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe3_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe3_cnt;$/;"	v	file:
trace_selftest_test_probe3_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe3_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_recursion_func	trace/trace_selftest.c	/^static void trace_selftest_test_recursion_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_recursion_safe_func	trace/trace_selftest.c	/^static void trace_selftest_test_recursion_safe_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_regs_func	trace/trace_selftest.c	/^static void trace_selftest_test_regs_func(unsigned long ip,$/;"	f	file:
trace_selftests	trace/trace.c	/^struct trace_selftests {$/;"	s	file:
trace_seq_bitmask	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_bitmask);$/;"	v
trace_seq_bitmask	trace/trace_seq.c	/^void trace_seq_bitmask(struct trace_seq *s, const unsigned long *maskp,$/;"	f
trace_seq_bprintf	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_bprintf);$/;"	v
trace_seq_bprintf	trace/trace_seq.c	/^void trace_seq_bprintf(struct trace_seq *s, const char *fmt, const u32 *binary)$/;"	f
trace_seq_path	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_path);$/;"	v
trace_seq_path	trace/trace_seq.c	/^int trace_seq_path(struct trace_seq *s, const struct path *path)$/;"	f
trace_seq_printf	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_printf);$/;"	v
trace_seq_printf	trace/trace_seq.c	/^void trace_seq_printf(struct trace_seq *s, const char *fmt, ...)$/;"	f
trace_seq_putc	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_putc);$/;"	v
trace_seq_putc	trace/trace_seq.c	/^void trace_seq_putc(struct trace_seq *s, unsigned char c)$/;"	f
trace_seq_putmem	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_putmem);$/;"	v
trace_seq_putmem	trace/trace_seq.c	/^void trace_seq_putmem(struct trace_seq *s, const void *mem, unsigned int len)$/;"	f
trace_seq_putmem_hex	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_putmem_hex);$/;"	v
trace_seq_putmem_hex	trace/trace_seq.c	/^void trace_seq_putmem_hex(struct trace_seq *s, const void *mem,$/;"	f
trace_seq_puts	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_puts);$/;"	v
trace_seq_puts	trace/trace_seq.c	/^void trace_seq_puts(struct trace_seq *s, const char *str)$/;"	f
trace_seq_to_buffer	trace/trace.c	/^static ssize_t trace_seq_to_buffer(struct trace_seq *s, void *buf, size_t cnt)$/;"	f	file:
trace_seq_to_user	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_to_user);$/;"	v
trace_seq_to_user	trace/trace_seq.c	/^int trace_seq_to_user(struct trace_seq *s, char __user *ubuf, int cnt)$/;"	f
trace_seq_vprintf	trace/trace_seq.c	/^EXPORT_SYMBOL_GPL(trace_seq_vprintf);$/;"	v
trace_seq_vprintf	trace/trace_seq.c	/^void trace_seq_vprintf(struct trace_seq *s, const char *fmt, va_list args)$/;"	f
trace_set_clr_event	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_set_clr_event);$/;"	v
trace_set_clr_event	trace/trace_events.c	/^int trace_set_clr_event(const char *system, const char *event, int set)$/;"	f
trace_set_options	trace/trace.c	/^static int trace_set_options(struct trace_array *tr, char *option)$/;"	f	file:
trace_softirqs_off	locking/lockdep.c	/^void trace_softirqs_off(unsigned long ip)$/;"	f
trace_softirqs_on	locking/lockdep.c	/^void trace_softirqs_on(unsigned long ip)$/;"	f
trace_stack	trace/trace_functions.c	/^static __always_inline void trace_stack(struct trace_array *tr)$/;"	f	file:
trace_stack_event	trace/trace_output.c	/^static struct trace_event trace_stack_event = {$/;"	v	typeref:struct:trace_event	file:
trace_stack_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_stack_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_stack_print	trace/trace_output.c	/^static enum print_line_t trace_stack_print(struct trace_iterator *iter,$/;"	f	file:
trace_stat_seq_ops	trace/trace_stat.c	/^static const struct seq_operations trace_stat_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
trace_subsystem_dir	trace/trace.h	/^struct trace_subsystem_dir {$/;"	s
trace_synth	trace/trace_events_hist.c	/^static inline void trace_synth(struct synth_event *event, u64 *var_ref_vals,$/;"	f	file:
trace_test_and_set_recursion	trace/trace.h	/^static __always_inline int trace_test_and_set_recursion(int start, int max)$/;"	f
trace_test_buffer	trace/trace_selftest.c	/^static int __maybe_unused trace_test_buffer(struct trace_buffer *buf, unsigned long *count)$/;"	f	file:
trace_test_buffer_cpu	trace/trace_selftest.c	/^static int trace_test_buffer_cpu(struct trace_buffer *buf, int cpu)$/;"	f	file:
trace_time_stamp_mode_fops	trace/trace.c	/^static const struct file_operations trace_time_stamp_mode_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_total_entries	trace/trace.c	/^unsigned long trace_total_entries(struct trace_array *tr)$/;"	f
trace_total_entries_cpu	trace/trace.c	/^unsigned long trace_total_entries_cpu(struct trace_array *tr, int cpu)$/;"	f
trace_type	trace/trace.h	/^enum trace_type {$/;"	g
trace_types_lock	trace/trace.c	/^DEFINE_MUTEX(trace_types_lock);$/;"	v
trace_uprobe	trace/trace_uprobe.c	/^struct trace_uprobe {$/;"	s	file:
trace_uprobe_create	trace/trace_uprobe.c	/^static int trace_uprobe_create(int argc, const char **argv)$/;"	f	file:
trace_uprobe_filter	trace/trace_uprobe.c	/^struct trace_uprobe_filter {$/;"	s	file:
trace_uprobe_is_busy	trace/trace_uprobe.c	/^static bool trace_uprobe_is_busy(struct dyn_event *ev)$/;"	f	file:
trace_uprobe_match	trace/trace_uprobe.c	/^static bool trace_uprobe_match(const char *system, const char *event,$/;"	f	file:
trace_uprobe_ops	trace/trace_uprobe.c	/^static struct dyn_event_operations trace_uprobe_ops = {$/;"	v	typeref:struct:dyn_event_operations	file:
trace_uprobe_register	trace/trace_uprobe.c	/^trace_uprobe_register(struct trace_event_call *event, enum trace_reg type,$/;"	f	file:
trace_uprobe_release	trace/trace_uprobe.c	/^static int trace_uprobe_release(struct dyn_event *ev)$/;"	f	file:
trace_uprobe_show	trace/trace_uprobe.c	/^static int trace_uprobe_show(struct seq_file *m, struct dyn_event *ev)$/;"	f	file:
trace_user_stack_event	trace/trace_output.c	/^static struct trace_event trace_user_stack_event = {$/;"	v	typeref:struct:trace_event	file:
trace_user_stack_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_user_stack_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_user_stack_print	trace/trace_output.c	/^static enum print_line_t trace_user_stack_print(struct trace_iterator *iter,$/;"	f	file:
trace_valid_entry	trace/trace_selftest.c	/^static inline int trace_valid_entry(struct trace_entry *entry)$/;"	f	file:
trace_vbprintk	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_vbprintk);$/;"	v
trace_vbprintk	trace/trace.c	/^int trace_vbprintk(unsigned long ip, const char *fmt, va_list args)$/;"	f
trace_vprintk	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_vprintk);$/;"	v
trace_vprintk	trace/trace.c	/^int trace_vprintk(unsigned long ip, const char *fmt, va_list args)$/;"	f
trace_wake_event	trace/trace_output.c	/^static struct trace_event trace_wake_event = {$/;"	v	typeref:struct:trace_event	file:
trace_wake_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_wake_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_wake_hex	trace/trace_output.c	/^static enum print_line_t trace_wake_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_wake_print	trace/trace_output.c	/^static enum print_line_t trace_wake_print(struct trace_iterator *iter,$/;"	f	file:
trace_wake_raw	trace/trace_output.c	/^static enum print_line_t trace_wake_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_wakeup_test_thread	trace/trace_selftest.c	/^static int trace_wakeup_test_thread(void *data)$/;"	f	file:
traceoff_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceoff_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceoff_count_trigger	trace/trace_events_trigger.c	/^traceoff_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
traceoff_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops traceoff_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
traceoff_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceoff_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceoff_trigger	trace/trace_events_trigger.c	/^traceoff_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
traceoff_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops traceoff_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
traceoff_trigger_print	trace/trace_events_trigger.c	/^traceoff_trigger_print(struct seq_file *m, struct event_trigger_ops *ops,$/;"	f	file:
traceon_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceon_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceon_count_trigger	trace/trace_events_trigger.c	/^traceon_count_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
traceon_count_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops traceon_count_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
traceon_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceon_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceon_trigger	trace/trace_events_trigger.c	/^traceon_trigger(struct event_trigger_data *data, void *rec,$/;"	f	file:
traceon_trigger_ops	trace/trace_events_trigger.c	/^static struct event_trigger_ops traceon_trigger_ops = {$/;"	v	typeref:struct:event_trigger_ops	file:
traceon_trigger_print	trace/trace_events_trigger.c	/^traceon_trigger_print(struct seq_file *m, struct event_trigger_ops *ops,$/;"	f	file:
tracepoint_add_func	tracepoint.c	/^static int tracepoint_add_func(struct tracepoint *tp,$/;"	f	file:
tracepoint_debug	tracepoint.c	/^static const int tracepoint_debug;$/;"	v	file:
tracepoint_module_coming	tracepoint.c	/^static int tracepoint_module_coming(struct module *mod)$/;"	f	file:
tracepoint_module_going	tracepoint.c	/^static void tracepoint_module_going(struct module *mod)$/;"	f	file:
tracepoint_module_nb	tracepoint.c	/^static struct notifier_block tracepoint_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
tracepoint_module_notify	tracepoint.c	/^static int tracepoint_module_notify(struct notifier_block *self,$/;"	f	file:
tracepoint_print_iter	trace/trace.c	/^struct trace_iterator *tracepoint_print_iter;$/;"	v	typeref:struct:trace_iterator
tracepoint_printk	trace/trace.c	/^int tracepoint_printk;$/;"	v
tracepoint_printk_sysctl	trace/trace.c	/^int tracepoint_printk_sysctl(struct ctl_table *table, int write,$/;"	f
tracepoint_probe_register	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_register);$/;"	v
tracepoint_probe_register	tracepoint.c	/^int tracepoint_probe_register(struct tracepoint *tp, void *probe, void *data)$/;"	f
tracepoint_probe_register_prio	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_register_prio);$/;"	v
tracepoint_probe_register_prio	tracepoint.c	/^int tracepoint_probe_register_prio(struct tracepoint *tp, void *probe,$/;"	f
tracepoint_probe_unregister	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_unregister);$/;"	v
tracepoint_probe_unregister	tracepoint.c	/^int tracepoint_probe_unregister(struct tracepoint *tp, void *probe, void *data)$/;"	f
tracepoint_prog_ops	trace/bpf_trace.c	/^const struct bpf_prog_ops tracepoint_prog_ops = {$/;"	v	typeref:struct:bpf_prog_ops
tracepoint_remove_func	tracepoint.c	/^static int tracepoint_remove_func(struct tracepoint *tp,$/;"	f	file:
tracepoint_srcu	tracepoint.c	/^DEFINE_SRCU(tracepoint_srcu);$/;"	v
tracepoint_srcu	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_srcu);$/;"	v
tracepoint_verifier_ops	trace/bpf_trace.c	/^const struct bpf_verifier_ops tracepoint_verifier_ops = {$/;"	v	typeref:struct:bpf_verifier_ops
traceprobe_conflict_field_name	trace/trace_probe.c	/^static int traceprobe_conflict_field_name(const char *name,$/;"	f	file:
traceprobe_define_arg_fields	trace/trace_probe.c	/^int traceprobe_define_arg_fields(struct trace_event_call *event_call,$/;"	f
traceprobe_free_probe_arg	trace/trace_probe.c	/^void traceprobe_free_probe_arg(struct probe_arg *arg)$/;"	f
traceprobe_parse_event_name	trace/trace_probe.c	/^int traceprobe_parse_event_name(const char **pevent, const char **pgroup,$/;"	f
traceprobe_parse_probe_arg	trace/trace_probe.c	/^int traceprobe_parse_probe_arg(struct trace_probe *tp, int i, char *arg,$/;"	f
traceprobe_parse_probe_arg_body	trace/trace_probe.c	/^static int traceprobe_parse_probe_arg_body(char *arg, ssize_t *size,$/;"	f	file:
traceprobe_set_print_fmt	trace/trace_probe.c	/^int traceprobe_set_print_fmt(struct trace_probe *tp, bool is_return)$/;"	f
traceprobe_split_symbol_offset	trace/trace_probe.c	/^int traceprobe_split_symbol_offset(char *symbol, long *offset)$/;"	f
traceprobe_update_arg	trace/trace_probe.c	/^int traceprobe_update_arg(struct probe_arg *arg)$/;"	f
tracer	trace/trace.h	/^	struct tracer			*tracer;$/;"	m	struct:trace_options	typeref:struct:trace_options::tracer
tracer	trace/trace.h	/^struct tracer {$/;"	s
tracer_alloc_buffers	trace/trace.c	/^__init static int tracer_alloc_buffers(void)$/;"	f	file:
tracer_enabled	trace/trace_sched_wakeup.c	/^static int __read_mostly	tracer_enabled;$/;"	v	file:
tracer_flags	trace/trace.h	/^struct tracer_flags {$/;"	s
tracer_flags	trace/trace_functions_graph.c	/^static struct tracer_flags tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
tracer_hardirqs_off	trace/trace.h	/^static inline void tracer_hardirqs_off(unsigned long a0, unsigned long a1) { }$/;"	f
tracer_hardirqs_off	trace/trace_irqsoff.c	/^NOKPROBE_SYMBOL(tracer_hardirqs_off);$/;"	v
tracer_hardirqs_off	trace/trace_irqsoff.c	/^void tracer_hardirqs_off(unsigned long a0, unsigned long a1)$/;"	f
tracer_hardirqs_on	trace/trace.h	/^static inline void tracer_hardirqs_on(unsigned long a0, unsigned long a1) { }$/;"	f
tracer_hardirqs_on	trace/trace_irqsoff.c	/^NOKPROBE_SYMBOL(tracer_hardirqs_on);$/;"	v
tracer_hardirqs_on	trace/trace_irqsoff.c	/^void tracer_hardirqs_on(unsigned long a0, unsigned long a1)$/;"	f
tracer_init	trace/trace.c	/^int tracer_init(struct tracer *t, struct trace_array *tr)$/;"	f
tracer_init_tracefs	trace/trace.c	/^fs_initcall(tracer_init_tracefs);$/;"	v
tracer_init_tracefs	trace/trace.c	/^static __init int tracer_init_tracefs(void)$/;"	f	file:
tracer_opt	trace/trace.h	/^struct tracer_opt {$/;"	s
tracer_preempt_off	trace/trace.h	/^static inline void tracer_preempt_off(unsigned long a0, unsigned long a1) { }$/;"	f
tracer_preempt_off	trace/trace_irqsoff.c	/^void tracer_preempt_off(unsigned long a0, unsigned long a1)$/;"	f
tracer_preempt_on	trace/trace.h	/^static inline void tracer_preempt_on(unsigned long a0, unsigned long a1) { }$/;"	f
tracer_preempt_on	trace/trace_irqsoff.c	/^void tracer_preempt_on(unsigned long a0, unsigned long a1)$/;"	f
tracer_seq_ops	trace/trace.c	/^static const struct seq_operations tracer_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracer_stat	trace/trace_stat.h	/^struct tracer_stat {$/;"	s
tracer_tracing_is_on	trace/trace.c	/^bool tracer_tracing_is_on(struct trace_array *tr)$/;"	f
tracer_tracing_off	trace/trace.c	/^void tracer_tracing_off(struct trace_array *tr)$/;"	f
tracer_tracing_on	trace/trace.c	/^void tracer_tracing_on(struct trace_array *tr)$/;"	f
tracing_alloc_snapshot	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_alloc_snapshot);$/;"	v
tracing_alloc_snapshot	trace/trace.c	/^int tracing_alloc_snapshot(void)$/;"	f
tracing_alloc_snapshot_instance	trace/trace.c	/^int tracing_alloc_snapshot_instance(struct trace_array *tr)$/;"	f
tracing_alloc_snapshot_instance	trace/trace.h	/^static inline int tracing_alloc_snapshot_instance(struct trace_array *tr)$/;"	f
tracing_buffer_mask	trace/trace.c	/^cpumask_var_t __read_mostly	tracing_buffer_mask;$/;"	v
tracing_buffers_fops	trace/trace.c	/^static const struct file_operations tracing_buffers_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_buffers_open	trace/trace.c	/^static int tracing_buffers_open(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_buffers_poll	trace/trace.c	/^tracing_buffers_poll(struct file *filp, poll_table *poll_table)$/;"	f	file:
tracing_buffers_read	trace/trace.c	/^tracing_buffers_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_buffers_release	trace/trace.c	/^static int tracing_buffers_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_buffers_splice_read	trace/trace.c	/^tracing_buffers_splice_read(struct file *file, loff_t *ppos,$/;"	f	file:
tracing_clock_open	trace/trace.c	/^static int tracing_clock_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_clock_show	trace/trace.c	/^static int tracing_clock_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_clock_write	trace/trace.c	/^static ssize_t tracing_clock_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_cond_snapshot_data	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_cond_snapshot_data);$/;"	v
tracing_cond_snapshot_data	trace/trace.c	/^void *tracing_cond_snapshot_data(struct trace_array *tr)$/;"	f
tracing_cpumask	trace/trace.h	/^	cpumask_var_t		tracing_cpumask; \/* only trace on set CPUs *\/$/;"	m	struct:trace_array
tracing_cpumask_fops	trace/trace.c	/^static const struct file_operations tracing_cpumask_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_cpumask_read	trace/trace.c	/^tracing_cpumask_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_cpumask_write	trace/trace.c	/^tracing_cpumask_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_dentry_percpu	trace/trace.c	/^static struct dentry *tracing_dentry_percpu(struct trace_array *tr, int cpu)$/;"	f	file:
tracing_disabled	trace/trace.c	/^static int tracing_disabled = 1;$/;"	v	file:
tracing_dl	trace/trace_sched_wakeup.c	/^static int			tracing_dl = 0;$/;"	v	file:
tracing_dyn_info_fops	trace/trace.c	/^static const struct file_operations tracing_dyn_info_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_entries_fops	trace/trace.c	/^static const struct file_operations tracing_entries_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_entries_read	trace/trace.c	/^tracing_entries_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_entries_write	trace/trace.c	/^tracing_entries_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_err_log_fops	trace/trace.c	/^static const struct file_operations tracing_err_log_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_err_log_open	trace/trace.c	/^static int tracing_err_log_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_err_log_release	trace/trace.c	/^static int tracing_err_log_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_err_log_seq_next	trace/trace.c	/^static void *tracing_err_log_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
tracing_err_log_seq_ops	trace/trace.c	/^static const struct seq_operations tracing_err_log_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracing_err_log_seq_show	trace/trace.c	/^static int tracing_err_log_seq_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_err_log_seq_start	trace/trace.c	/^static void *tracing_err_log_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
tracing_err_log_seq_stop	trace/trace.c	/^static void tracing_err_log_seq_stop(struct seq_file *m, void *v)$/;"	f	file:
tracing_err_log_show_pos	trace/trace.c	/^static void tracing_err_log_show_pos(struct seq_file *m, u8 pos)$/;"	f	file:
tracing_err_log_write	trace/trace.c	/^static ssize_t tracing_err_log_write(struct file *file,$/;"	f	file:
tracing_eval_map_fops	trace/trace.c	/^static const struct file_operations tracing_eval_map_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_eval_map_open	trace/trace.c	/^static int tracing_eval_map_open(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_eval_map_seq_ops	trace/trace.c	/^static const struct seq_operations tracing_eval_map_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracing_fill_pipe_page	trace/trace.c	/^tracing_fill_pipe_page(size_t rem, struct trace_iterator *iter)$/;"	f	file:
tracing_fops	trace/trace.c	/^static const struct file_operations tracing_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_free_buffer_fops	trace/trace.c	/^static const struct file_operations tracing_free_buffer_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_free_buffer_release	trace/trace.c	/^tracing_free_buffer_release(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_free_buffer_write	trace/trace.c	/^tracing_free_buffer_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_func_proto	trace/bpf_trace.c	/^tracing_func_proto(enum bpf_func_id func_id, const struct bpf_prog *prog)$/;"	f	file:
tracing_generic_entry_update	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_generic_entry_update);$/;"	v
tracing_generic_entry_update	trace/trace.c	/^tracing_generic_entry_update(struct trace_entry *entry, unsigned short type,$/;"	f
tracing_get_cpu	trace/trace.c	/^static inline int tracing_get_cpu(struct inode *inode)$/;"	f	file:
tracing_get_dentry	trace/trace.c	/^static struct dentry *tracing_get_dentry(struct trace_array *tr)$/;"	f	file:
tracing_init_dentry	trace/trace.c	/^struct dentry *tracing_init_dentry(void)$/;"	f
tracing_init_tracefs_percpu	trace/trace.c	/^tracing_init_tracefs_percpu(struct trace_array *tr, long cpu)$/;"	f	file:
tracing_is_disabled	trace/trace.c	/^bool tracing_is_disabled(void)$/;"	f
tracing_is_enabled	trace/trace.c	/^int tracing_is_enabled(void)$/;"	f
tracing_is_on	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_is_on);$/;"	v
tracing_is_on	trace/trace.c	/^int tracing_is_on(void)$/;"	f
tracing_iter_fops	trace/trace.c	/^static const struct file_operations tracing_iter_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_iter_reset	trace/trace.c	/^void tracing_iter_reset(struct trace_iterator *iter, int cpu)$/;"	f
tracing_log_err	trace/trace.c	/^struct tracing_log_err {$/;"	s	file:
tracing_log_err	trace/trace.c	/^void tracing_log_err(struct trace_array *tr,$/;"	f
tracing_lseek	trace/trace.c	/^loff_t tracing_lseek(struct file *file, loff_t offset, int whence)$/;"	f
tracing_map	trace/tracing_map.h	/^struct tracing_map {$/;"	s
tracing_map_add_field	trace/tracing_map.c	/^static int tracing_map_add_field(struct tracing_map *map,$/;"	f	file:
tracing_map_add_key_field	trace/tracing_map.c	/^int tracing_map_add_key_field(struct tracing_map *map,$/;"	f
tracing_map_add_sum_field	trace/tracing_map.c	/^int tracing_map_add_sum_field(struct tracing_map *map)$/;"	f
tracing_map_add_var	trace/tracing_map.c	/^int tracing_map_add_var(struct tracing_map *map)$/;"	f
tracing_map_alloc_elts	trace/tracing_map.c	/^static int tracing_map_alloc_elts(struct tracing_map *map)$/;"	f	file:
tracing_map_array	trace/tracing_map.h	/^struct tracing_map_array {$/;"	s
tracing_map_array_alloc	trace/tracing_map.c	/^struct tracing_map_array *tracing_map_array_alloc(unsigned int n_elts,$/;"	f
tracing_map_array_clear	trace/tracing_map.c	/^void tracing_map_array_clear(struct tracing_map_array *a)$/;"	f
tracing_map_array_free	trace/tracing_map.c	/^void tracing_map_array_free(struct tracing_map_array *a)$/;"	f
tracing_map_clear	trace/tracing_map.c	/^void tracing_map_clear(struct tracing_map *map)$/;"	f
tracing_map_cmp_atomic64	trace/tracing_map.c	/^static int tracing_map_cmp_atomic64(void *val_a, void *val_b)$/;"	f	file:
tracing_map_cmp_fn_t	trace/tracing_map.h	/^typedef int (*tracing_map_cmp_fn_t) (void *val_a, void *val_b);$/;"	t
tracing_map_cmp_none	trace/tracing_map.c	/^int tracing_map_cmp_none(void *val_a, void *val_b)$/;"	f
tracing_map_cmp_num	trace/tracing_map.c	/^tracing_map_cmp_fn_t tracing_map_cmp_num(int field_size,$/;"	f
tracing_map_cmp_string	trace/tracing_map.c	/^int tracing_map_cmp_string(void *val_a, void *val_b)$/;"	f
tracing_map_create	trace/tracing_map.c	/^struct tracing_map *tracing_map_create(unsigned int map_bits,$/;"	f
tracing_map_destroy	trace/tracing_map.c	/^void tracing_map_destroy(struct tracing_map *map)$/;"	f
tracing_map_destroy_sort_entries	trace/tracing_map.c	/^void tracing_map_destroy_sort_entries(struct tracing_map_sort_entry **entries,$/;"	f
tracing_map_elt	trace/tracing_map.h	/^struct tracing_map_elt {$/;"	s
tracing_map_elt_alloc	trace/tracing_map.c	/^static struct tracing_map_elt *tracing_map_elt_alloc(struct tracing_map *map)$/;"	f	file:
tracing_map_elt_clear	trace/tracing_map.c	/^static void tracing_map_elt_clear(struct tracing_map_elt *elt)$/;"	f	file:
tracing_map_elt_free	trace/tracing_map.c	/^static void tracing_map_elt_free(struct tracing_map_elt *elt)$/;"	f	file:
tracing_map_elt_init_fields	trace/tracing_map.c	/^static void tracing_map_elt_init_fields(struct tracing_map_elt *elt)$/;"	f	file:
tracing_map_entry	trace/tracing_map.h	/^struct tracing_map_entry {$/;"	s
tracing_map_field	trace/tracing_map.h	/^struct tracing_map_field {$/;"	s
tracing_map_free_elts	trace/tracing_map.c	/^static void tracing_map_free_elts(struct tracing_map *map)$/;"	f	file:
tracing_map_init	trace/tracing_map.c	/^int tracing_map_init(struct tracing_map *map)$/;"	f
tracing_map_insert	trace/tracing_map.c	/^struct tracing_map_elt *tracing_map_insert(struct tracing_map *map, void *key)$/;"	f
tracing_map_lookup	trace/tracing_map.c	/^struct tracing_map_elt *tracing_map_lookup(struct tracing_map *map, void *key)$/;"	f
tracing_map_ops	trace/tracing_map.h	/^struct tracing_map_ops {$/;"	s
tracing_map_read_sum	trace/tracing_map.c	/^u64 tracing_map_read_sum(struct tracing_map_elt *elt, unsigned int i)$/;"	f
tracing_map_read_var	trace/tracing_map.c	/^u64 tracing_map_read_var(struct tracing_map_elt *elt, unsigned int i)$/;"	f
tracing_map_read_var_once	trace/tracing_map.c	/^u64 tracing_map_read_var_once(struct tracing_map_elt *elt, unsigned int i)$/;"	f
tracing_map_set_var	trace/tracing_map.c	/^void tracing_map_set_var(struct tracing_map_elt *elt, unsigned int i, u64 n)$/;"	f
tracing_map_sort_entries	trace/tracing_map.c	/^int tracing_map_sort_entries(struct tracing_map *map,$/;"	f
tracing_map_sort_entry	trace/tracing_map.h	/^struct tracing_map_sort_entry {$/;"	s
tracing_map_sort_key	trace/tracing_map.h	/^struct tracing_map_sort_key {$/;"	s
tracing_map_update_sum	trace/tracing_map.c	/^void tracing_map_update_sum(struct tracing_map_elt *elt, unsigned int i, u64 n)$/;"	f
tracing_map_var_set	trace/tracing_map.c	/^bool tracing_map_var_set(struct tracing_map_elt *elt, unsigned int i)$/;"	f
tracing_mark_fops	trace/trace.c	/^static const struct file_operations tracing_mark_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_mark_raw_fops	trace/trace.c	/^static const struct file_operations tracing_mark_raw_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_mark_raw_write	trace/trace.c	/^tracing_mark_raw_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_mark_write	trace/trace.c	/^tracing_mark_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_max_lat_fops	trace/trace.c	/^static const struct file_operations tracing_max_lat_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_max_lat_read	trace/trace.c	/^tracing_max_lat_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_max_lat_write	trace/trace.c	/^tracing_max_lat_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_nsecs_read	trace/trace.c	/^tracing_nsecs_read(unsigned long *ptr, char __user *ubuf,$/;"	f	file:
tracing_nsecs_write	trace/trace.c	/^tracing_nsecs_write(unsigned long *ptr, const char __user *ubuf,$/;"	f	file:
tracing_off	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_off);$/;"	v
tracing_off	trace/trace.c	/^void tracing_off(void)$/;"	f
tracing_on	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_on);$/;"	v
tracing_on	trace/trace.c	/^void tracing_on(void)$/;"	f
tracing_open	trace/trace.c	/^static int tracing_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_open_generic	trace/trace.c	/^int tracing_open_generic(struct inode *inode, struct file *filp)$/;"	f
tracing_open_generic_tr	trace/trace.c	/^static int tracing_open_generic_tr(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_open_pipe	trace/trace.c	/^static int tracing_open_pipe(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_pipe_buf_ops	trace/trace.c	/^static const struct pipe_buf_operations tracing_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
tracing_pipe_fops	trace/trace.c	/^static const struct file_operations tracing_pipe_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_poll_pipe	trace/trace.c	/^tracing_poll_pipe(struct file *filp, poll_table *poll_table)$/;"	f	file:
tracing_read_dyn_info	trace/trace.c	/^tracing_read_dyn_info(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_read_pipe	trace/trace.c	/^tracing_read_pipe(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_readme_fops	trace/trace.c	/^static const struct file_operations tracing_readme_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_readme_read	trace/trace.c	/^tracing_readme_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_record_cmdline	trace/trace.c	/^void tracing_record_cmdline(struct task_struct *task)$/;"	f
tracing_record_taskinfo	trace/trace.c	/^void tracing_record_taskinfo(struct task_struct *task, int flags)$/;"	f
tracing_record_taskinfo_sched_switch	trace/trace.c	/^void tracing_record_taskinfo_sched_switch(struct task_struct *prev,$/;"	f
tracing_record_taskinfo_skip	trace/trace.c	/^static bool tracing_record_taskinfo_skip(int flags)$/;"	f	file:
tracing_record_tgid	trace/trace.c	/^void tracing_record_tgid(struct task_struct *task)$/;"	f
tracing_release	trace/trace.c	/^static int tracing_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_release_generic_tr	trace/trace.c	/^static int tracing_release_generic_tr(struct inode *inode, struct file *file)$/;"	f	file:
tracing_release_pipe	trace/trace.c	/^static int tracing_release_pipe(struct inode *inode, struct file *file)$/;"	f	file:
tracing_reset	trace/trace.c	/^void tracing_reset(struct trace_buffer *buf, int cpu)$/;"	f
tracing_reset_all_online_cpus	trace/trace.c	/^void tracing_reset_all_online_cpus(void)$/;"	f
tracing_reset_online_cpus	trace/trace.c	/^void tracing_reset_online_cpus(struct trace_buffer *buf)$/;"	f
tracing_resize_ring_buffer	trace/trace.c	/^static ssize_t tracing_resize_ring_buffer(struct trace_array *tr,$/;"	f	file:
tracing_resize_saved_cmdlines	trace/trace.c	/^static int tracing_resize_saved_cmdlines(unsigned int val)$/;"	f	file:
tracing_saved_cmdlines_fops	trace/trace.c	/^static const struct file_operations tracing_saved_cmdlines_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_saved_cmdlines_open	trace/trace.c	/^static int tracing_saved_cmdlines_open(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_saved_cmdlines_seq_ops	trace/trace.c	/^static const struct seq_operations tracing_saved_cmdlines_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracing_saved_cmdlines_size_fops	trace/trace.c	/^static const struct file_operations tracing_saved_cmdlines_size_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_saved_cmdlines_size_read	trace/trace.c	/^tracing_saved_cmdlines_size_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_saved_cmdlines_size_write	trace/trace.c	/^tracing_saved_cmdlines_size_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_saved_tgids_fops	trace/trace.c	/^static const struct file_operations tracing_saved_tgids_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_saved_tgids_open	trace/trace.c	/^static int tracing_saved_tgids_open(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_saved_tgids_seq_ops	trace/trace.c	/^static const struct seq_operations tracing_saved_tgids_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracing_sched_register	trace/trace_sched_switch.c	/^static int tracing_sched_register(void)$/;"	f	file:
tracing_sched_switch_trace	trace/trace_sched_wakeup.c	/^tracing_sched_switch_trace(struct trace_array *tr,$/;"	f	file:
tracing_sched_unregister	trace/trace_sched_switch.c	/^static void tracing_sched_unregister(void)$/;"	f	file:
tracing_sched_wakeup_trace	trace/trace_sched_wakeup.c	/^tracing_sched_wakeup_trace(struct trace_array *tr,$/;"	f	file:
tracing_selftest_disabled	trace/trace.c	/^bool __read_mostly tracing_selftest_disabled;$/;"	v
tracing_selftest_running	trace/trace.c	/^static bool __read_mostly tracing_selftest_running;$/;"	v	file:
tracing_set_clock	trace/trace.c	/^int tracing_set_clock(struct trace_array *tr, const char *clockstr)$/;"	f
tracing_set_default_clock	trace/trace.c	/^__init static int tracing_set_default_clock(void)$/;"	f	file:
tracing_set_default_clock	trace/trace.c	/^late_initcall_sync(tracing_set_default_clock);$/;"	v
tracing_set_nop	trace/trace.c	/^static void tracing_set_nop(struct trace_array *tr)$/;"	f	file:
tracing_set_time_stamp_abs	trace/trace.c	/^int tracing_set_time_stamp_abs(struct trace_array *tr, bool abs)$/;"	f
tracing_set_trace_read	trace/trace.c	/^tracing_set_trace_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_set_trace_write	trace/trace.c	/^tracing_set_trace_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_set_tracer	trace/trace.c	/^static int tracing_set_tracer(struct trace_array *tr, const char *buf)$/;"	f	file:
tracing_single_release_tr	trace/trace.c	/^static int tracing_single_release_tr(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot);$/;"	v
tracing_snapshot	trace/trace.c	/^void tracing_snapshot(void)$/;"	f
tracing_snapshot_alloc	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot_alloc);$/;"	v
tracing_snapshot_alloc	trace/trace.c	/^void tracing_snapshot_alloc(void)$/;"	f
tracing_snapshot_cond	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot_cond);$/;"	v
tracing_snapshot_cond	trace/trace.c	/^void tracing_snapshot_cond(struct trace_array *tr, void *cond_data)$/;"	f
tracing_snapshot_cond_disable	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot_cond_disable);$/;"	v
tracing_snapshot_cond_disable	trace/trace.c	/^int tracing_snapshot_cond_disable(struct trace_array *tr)$/;"	f
tracing_snapshot_cond_enable	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot_cond_enable);$/;"	v
tracing_snapshot_cond_enable	trace/trace.c	/^int tracing_snapshot_cond_enable(struct trace_array *tr, void *cond_data, cond_update_fn_t update)$/;"	f
tracing_snapshot_cond_enable	trace/trace.c	/^int tracing_snapshot_cond_enable(struct trace_array *tr, void *cond_data,$/;"	f
tracing_snapshot_instance	trace/trace.c	/^void tracing_snapshot_instance(struct trace_array *tr)$/;"	f
tracing_snapshot_instance	trace/trace.h	/^static inline void tracing_snapshot_instance(struct trace_array *tr) { }$/;"	f
tracing_snapshot_instance_cond	trace/trace.c	/^void tracing_snapshot_instance_cond(struct trace_array *tr, void *cond_data)$/;"	f
tracing_snapshot_open	trace/trace.c	/^static int tracing_snapshot_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot_release	trace/trace.c	/^static int tracing_snapshot_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot_write	trace/trace.c	/^tracing_snapshot_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
tracing_spd_release_pipe	trace/trace.c	/^static void tracing_spd_release_pipe(struct splice_pipe_desc *spd,$/;"	f	file:
tracing_splice_read_pipe	trace/trace.c	/^static ssize_t tracing_splice_read_pipe(struct file *filp,$/;"	f	file:
tracing_start	trace/trace.c	/^void tracing_start(void)$/;"	f
tracing_start_cmdline_record	trace/trace_sched_switch.c	/^void tracing_start_cmdline_record(void)$/;"	f
tracing_start_function_trace	trace/trace_functions.c	/^static void tracing_start_function_trace(struct trace_array *tr)$/;"	f	file:
tracing_start_sched_switch	trace/trace_sched_switch.c	/^static void tracing_start_sched_switch(int ops)$/;"	f	file:
tracing_start_tgid_record	trace/trace_sched_switch.c	/^void tracing_start_tgid_record(void)$/;"	f
tracing_start_tr	trace/trace.c	/^static void tracing_start_tr(struct trace_array *tr)$/;"	f	file:
tracing_stat_fops	trace/trace_stat.c	/^static const struct file_operations tracing_stat_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_stat_init	trace/trace_stat.c	/^static int tracing_stat_init(void)$/;"	f	file:
tracing_stat_open	trace/trace_stat.c	/^static int tracing_stat_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_stat_release	trace/trace_stat.c	/^static int tracing_stat_release(struct inode *i, struct file *f)$/;"	f	file:
tracing_stats_fops	trace/trace.c	/^static const struct file_operations tracing_stats_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_stats_read	trace/trace.c	/^tracing_stats_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_stop	trace/trace.c	/^void tracing_stop(void)$/;"	f
tracing_stop_cmdline_record	trace/trace_sched_switch.c	/^void tracing_stop_cmdline_record(void)$/;"	f
tracing_stop_function_trace	trace/trace_functions.c	/^static void tracing_stop_function_trace(struct trace_array *tr)$/;"	f	file:
tracing_stop_sched_switch	trace/trace_sched_switch.c	/^static void tracing_stop_sched_switch(int ops)$/;"	f	file:
tracing_stop_tgid_record	trace/trace_sched_switch.c	/^void tracing_stop_tgid_record(void)$/;"	f
tracing_stop_tr	trace/trace.c	/^static void tracing_stop_tr(struct trace_array *tr)$/;"	f	file:
tracing_thresh	trace/trace.c	/^unsigned long __read_mostly	tracing_thresh;$/;"	v
tracing_thresh_fops	trace/trace.c	/^static const struct file_operations tracing_thresh_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_thresh_read	trace/trace.c	/^tracing_thresh_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_thresh_write	trace/trace.c	/^tracing_thresh_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_time_stamp_mode_open	trace/trace.c	/^static int tracing_time_stamp_mode_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_time_stamp_mode_show	trace/trace.c	/^static int tracing_time_stamp_mode_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_total_entries_fops	trace/trace.c	/^static const struct file_operations tracing_total_entries_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_total_entries_read	trace/trace.c	/^tracing_total_entries_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_trace_options_open	trace/trace.c	/^static int tracing_trace_options_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_trace_options_show	trace/trace.c	/^static int tracing_trace_options_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_trace_options_write	trace/trace.c	/^tracing_trace_options_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_update_buffers	trace/trace.c	/^int tracing_update_buffers(void)$/;"	f
tracing_wait_pipe	trace/trace.c	/^static int tracing_wait_pipe(struct file *filp)$/;"	f	file:
tracing_write_stub	trace/trace.c	/^tracing_write_stub(struct file *filp, const char __user *ubuf,$/;"	f	file:
track_data	trace/trace_events_hist.c	/^		} track_data;$/;"	m	union:action_data::__anon46	typeref:struct:action_data::__anon46::__anon48	file:
track_data	trace/trace_events_hist.c	/^struct track_data {$/;"	s	file:
track_data_alloc	trace/trace_events_hist.c	/^static struct track_data *track_data_alloc(unsigned int key_len,$/;"	f	file:
track_data_create	trace/trace_events_hist.c	/^static int track_data_create(struct hist_trigger_data *hist_data,$/;"	f	file:
track_data_destroy	trace/trace_events_hist.c	/^static void track_data_destroy(struct hist_trigger_data *hist_data,$/;"	f	file:
track_data_free	trace/trace_events_hist.c	/^static void track_data_free(struct track_data *track_data)$/;"	f	file:
track_data_parse	trace/trace_events_hist.c	/^static struct action_data *track_data_parse(struct hist_trigger_data *hist_data,$/;"	f	file:
track_data_print	trace/trace_events_hist.c	/^static void track_data_print(struct seq_file *m,$/;"	f	file:
track_data_snapshot_print	trace/trace_events_hist.c	/^static void track_data_snapshot_print(struct seq_file *m,$/;"	f	file:
track_val	trace/trace_events_hist.c	/^	u64				track_val;$/;"	m	struct:track_data	file:
track_var	trace/trace_events_hist.c	/^			struct hist_field	*track_var;$/;"	m	struct:action_data::__anon46::__anon48	typeref:struct:action_data::__anon46::__anon48::hist_field	file:
transfer_pid	pid.c	/^void transfer_pid(struct task_struct *old, struct task_struct *new,$/;"	f
transfer_reference_state	bpf/verifier.c	/^static int transfer_reference_state(struct bpf_func_state *dst,$/;"	f	file:
transition_kobj_attr	livepatch/core.c	/^static struct kobj_attribute transition_kobj_attr = __ATTR_RO(transition);$/;"	v	typeref:struct:kobj_attribute	file:
transition_show	livepatch/core.c	/^static ssize_t transition_show(struct kobject *kobj,$/;"	f	file:
translate_user_vaddr	trace/trace_uprobe.c	/^static unsigned long translate_user_vaddr(unsigned long file_offset)$/;"	f	file:
tree_count	audit.h	/^	int tree_count;$/;"	m	struct:audit_context
tree_entry	locking/rtmutex_common.h	/^	struct rb_node          tree_entry;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node
trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_tree_refs
trees	audit_tree.c	/^	struct list_head trees;		\/* with root here *\/$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::list_head	file:
trie_alloc	bpf/lpm_trie.c	/^static struct bpf_map *trie_alloc(union bpf_attr *attr)$/;"	f	file:
trie_check_btf	bpf/lpm_trie.c	/^static int trie_check_btf(const struct bpf_map *map,$/;"	f	file:
trie_delete_elem	bpf/lpm_trie.c	/^static int trie_delete_elem(struct bpf_map *map, void *_key)$/;"	f	file:
trie_free	bpf/lpm_trie.c	/^static void trie_free(struct bpf_map *map)$/;"	f	file:
trie_get_next_key	bpf/lpm_trie.c	/^static int trie_get_next_key(struct bpf_map *map, void *_key, void *_next_key)$/;"	f	file:
trie_lookup_elem	bpf/lpm_trie.c	/^static void *trie_lookup_elem(struct bpf_map *map, void *_key)$/;"	f	file:
trie_map_ops	bpf/lpm_trie.c	/^const struct bpf_map_ops trie_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
trie_update_elem	bpf/lpm_trie.c	/^static int trie_update_elem(struct bpf_map *map,$/;"	f	file:
trigger_data_free	trace/trace_events_trigger.c	/^void trigger_data_free(struct event_trigger_data *data)$/;"	f
trigger_disable_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_disable_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_dyntick_cpu	time/timer.c	/^trigger_dyntick_cpu(struct timer_base *base, struct timer_list *timer)$/;"	f	file:
trigger_enable_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_enable_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_hist_cmd	trace/trace_events_hist.c	/^static struct event_command trigger_hist_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_hist_cmd	trace/trace_events_hist.c	/^static struct event_command trigger_hist_cmd;$/;"	v	typeref:struct:event_command	file:
trigger_hist_disable_cmd	trace/trace_events_hist.c	/^static struct event_command trigger_hist_disable_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_hist_enable_cmd	trace/trace_events_hist.c	/^static struct event_command trigger_hist_enable_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_load_balance	sched/fair.c	/^void trigger_load_balance(struct rq *rq)$/;"	f
trigger_next	trace/trace_events_trigger.c	/^static void *trigger_next(struct seq_file *m, void *t, loff_t *pos)$/;"	f	file:
trigger_process_regex	trace/trace_events_trigger.c	/^static int trigger_process_regex(struct trace_event_file *file, char *buff)$/;"	f	file:
trigger_show	trace/trace_events_trigger.c	/^static int trigger_show(struct seq_file *m, void *v)$/;"	f	file:
trigger_snapshot_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_snapshot_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_stacktrace_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_stacktrace_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_start	trace/trace_events_trigger.c	/^static void *trigger_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
trigger_stop	trace/trace_events_trigger.c	/^static void trigger_stop(struct seq_file *m, void *t)$/;"	f	file:
trigger_traceoff_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_traceoff_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_traceon_cmd	trace/trace_events_trigger.c	/^static struct event_command trigger_traceon_cmd = {$/;"	v	typeref:struct:event_command	file:
trigger_type	trace/trace.h	/^	enum event_trigger_type	trigger_type;$/;"	m	struct:event_command	typeref:enum:event_command::event_trigger_type
trim_marked	audit_tree.c	/^static void trim_marked(struct audit_tree *tree)$/;"	f	file:
trivial_ops	rcu/rcutorture.c	/^static struct rcu_torture_ops trivial_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
trunc_msg	printk/printk.c	/^static const char trunc_msg[] = "<truncated>";$/;"	v	file:
truncate_msg	printk/printk.c	/^static u32 truncate_msg(u16 *text_len, u16 *trunc_msg_len,$/;"	f	file:
try_check_zero	rcu/srcutree.c	/^static bool try_check_zero(struct srcu_struct *ssp, int idx, int trycount)$/;"	f	file:
try_force_unload	module.c	/^static inline int try_force_unload(unsigned int flags)$/;"	f	file:
try_match_pkt_pointers	bpf/verifier.c	/^static bool try_match_pkt_pointers(const struct bpf_insn *insn,$/;"	f	file:
try_misrouted_irq	irq/spurious.c	/^try_misrouted_irq(unsigned int irq, struct irq_desc *desc,$/;"	f	file:
try_module_get	module.c	/^EXPORT_SYMBOL(try_module_get);$/;"	v
try_module_get	module.c	/^bool try_module_get(struct module *module)$/;"	f
try_one_irq	irq/spurious.c	/^static int try_one_irq(struct irq_desc *desc, bool force)$/;"	f	file:
try_ram_remap	iomem.c	/^static void *try_ram_remap(resource_size_t offset, size_t size,$/;"	f	file:
try_release_module_ref	module.c	/^static int try_release_module_ref(struct module *mod)$/;"	f	file:
try_stop_cpus	stop_machine.c	/^int try_stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)$/;"	f
try_stop_module	module.c	/^static int try_stop_module(struct module *mod, int flags, int *forced)$/;"	f	file:
try_to_del_timer_sync	time/timer.c	/^EXPORT_SYMBOL(try_to_del_timer_sync);$/;"	v
try_to_del_timer_sync	time/timer.c	/^int try_to_del_timer_sync(struct timer_list *timer)$/;"	f
try_to_force_load	module.c	/^static int try_to_force_load(struct module *mod, const char *reason)$/;"	f	file:
try_to_freeze_tasks	power/process.c	/^static int try_to_freeze_tasks(bool user_only)$/;"	f	file:
try_to_grab_pending	workqueue.c	/^static int try_to_grab_pending(struct work_struct *work, bool is_dwork,$/;"	f	file:
try_to_optimize_kprobe	kprobes.c	/^static void try_to_optimize_kprobe(struct kprobe *p)$/;"	f	file:
try_to_optimize_kprobe	kprobes.c	932;"	d	file:
try_to_suspend	power/autosleep.c	/^static void try_to_suspend(struct work_struct *work)$/;"	f	file:
try_to_take_rt_mutex	locking/rtmutex.c	/^static int try_to_take_rt_mutex(struct rt_mutex *lock, struct task_struct *task,$/;"	f	file:
try_to_wake_up	sched/core.c	/^try_to_wake_up(struct task_struct *p, unsigned int state, int wake_flags)$/;"	f	file:
try_wait_for_completion	sched/completion.c	/^EXPORT_SYMBOL(try_wait_for_completion);$/;"	v
try_wait_for_completion	sched/completion.c	/^bool try_wait_for_completion(struct completion *x)$/;"	f
trylock_clear_pending	locking/qspinlock_paravirt.h	/^static __always_inline int trylock_clear_pending(struct qspinlock *lock)$/;"	f
ts	trace/ring_buffer.c	/^	u64			ts;$/;"	m	struct:rb_event_info	file:
ts	trace/ring_buffer_benchmark.c	/^	u64		ts;$/;"	m	struct:rb_page	file:
ts	trace/trace.c	/^	u64		ts;$/;"	m	struct:err_info	file:
ts	trace/trace_stat.c	/^	struct tracer_stat	*ts;$/;"	m	struct:stat_session	typeref:struct:stat_session::tracer_stat	file:
ts_in_usecs	trace/trace_events_hist.c	/^	bool		ts_in_usecs;$/;"	m	struct:hist_trigger_attrs	file:
ts_nsec	printk/printk.c	/^	u64 ts_nsec;			\/* time of first print *\/$/;"	m	struct:cont	file:
ts_nsec	printk/printk.c	/^	u64 ts_nsec;		\/* timestamp in nanoseconds *\/$/;"	m	struct:printk_log	file:
tset	cgroup/cgroup-internal.h	/^	struct cgroup_taskset	tset;$/;"	m	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::cgroup_taskset
tsk_fork_get_node	kthread.c	/^int tsk_fork_get_node(struct task_struct *tsk)$/;"	f
tsk_pinned	events/hw_breakpoint.c	/^	unsigned int	*tsk_pinned;$/;"	m	struct:bp_cpuinfo	file:
ttwu_count	sched/sched.h	/^	unsigned int		ttwu_count;$/;"	m	struct:rq
ttwu_do_activate	sched/core.c	/^ttwu_do_activate(struct rq *rq, struct task_struct *p, int wake_flags,$/;"	f	file:
ttwu_do_wakeup	sched/core.c	/^static void ttwu_do_wakeup(struct rq *rq, struct task_struct *p, int wake_flags,$/;"	f	file:
ttwu_local	sched/sched.h	/^	unsigned int		ttwu_local;$/;"	m	struct:rq
ttwu_queue	sched/core.c	/^static void ttwu_queue(struct task_struct *p, int cpu, int wake_flags)$/;"	f	file:
ttwu_queue_remote	sched/core.c	/^static void ttwu_queue_remote(struct task_struct *p, int cpu, int wake_flags)$/;"	f	file:
ttwu_remote	sched/core.c	/^static int ttwu_remote(struct task_struct *p, int wake_flags)$/;"	f	file:
ttwu_stat	sched/core.c	/^ttwu_stat(struct task_struct *p, int cpu, int wake_flags)$/;"	f	file:
ttype	rcu/rcutorture.c	/^	int ttype;$/;"	m	struct:rcu_torture_ops	file:
tu	trace/trace_uprobe.c	/^	struct trace_uprobe	*tu;$/;"	m	struct:uprobe_dispatch_data	typeref:struct:uprobe_dispatch_data::trace_uprobe	file:
tunables	sched/cpufreq_schedutil.c	/^	struct sugov_tunables	*tunables;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::sugov_tunables	file:
tunables_hook	sched/cpufreq_schedutil.c	/^	struct list_head	tunables_hook;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::list_head	file:
two	sysctl.c	/^static int __maybe_unused two = 2;$/;"	v	file:
type	audit.h	/^	int type;$/;"	m	struct:audit_context
type	audit.h	/^	unsigned char		type;		\/* record type *\/$/;"	m	struct:audit_names
type	auditsc.c	/^	int			type;$/;"	m	struct:audit_aux_data	file:
type	bpf/bpf_lru_list.h	/^	u8 type;$/;"	m	struct:bpf_lru_node
type	cgroup/cgroup-v1.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist::__anon12	typeref:enum:cgroup_pidlist::__anon12::cgroup_filetype	file:
type	dma/debug.c	/^	int              type;$/;"	m	struct:dma_debug_entry	file:
type	events/core.c	/^		u16				type;$/;"	m	struct:perf_bpf_event::__anon7	file:
type	gcov/gcc_3_4.c	/^	unsigned int type;$/;"	m	struct:gcov_iterator	file:
type	irq/irqdesc.c	/^IRQ_ATTR_RO(type);$/;"	v
type	irq/irqdomain.c	/^	unsigned int		type;$/;"	m	struct:irqchip_fwid	file:
type	kallsyms.c	/^	char type;$/;"	m	struct:kallsym_iter	file:
type	locking/rwsem.c	/^	enum rwsem_waiter_type type;$/;"	m	struct:rwsem_waiter	typeref:enum:rwsem_waiter::rwsem_waiter_type	file:
type	trace/ftrace.c	/^	enum graph_filter_type		type;$/;"	m	struct:ftrace_graph_data	typeref:enum:ftrace_graph_data::graph_filter_type	file:
type	trace/ftrace.c	/^	int type;$/;"	m	struct:ftrace_glob	file:
type	trace/trace.c	/^	struct tracer			*type;$/;"	m	struct:trace_selftests	typeref:struct:trace_selftests::tracer	file:
type	trace/trace.c	/^	u8		type;	\/* index into errs -> specific err string *\/$/;"	m	struct:err_info	file:
type	trace/trace.h	/^	const char		*type;$/;"	m	struct:ftrace_event_field
type	trace/trace_events_hist.c	/^	char *type;$/;"	m	struct:synth_field	file:
type	trace/trace_events_hist.c	/^	const char			*type;$/;"	m	struct:hist_field	file:
type	trace/trace_probe.h	/^	const struct fetch_type	*type;	\/* Type of this argument *\/$/;"	m	struct:probe_arg	typeref:struct:probe_arg::fetch_type
type2name	dma/debug.c	/^static const char *type2name[5] = { "single", "page",$/;"	v	file:
type_id	bpf/btf.c	/^	u32 type_id;$/;"	m	struct:resolve_vertex	file:
type_info	gcov/gcc_3_4.c	/^	struct type_info type_info[0];$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::type_info	file:
type_info	gcov/gcc_3_4.c	/^struct type_info {$/;"	s	file:
type_is_pkt_pointer	bpf/verifier.c	/^static bool type_is_pkt_pointer(enum bpf_reg_type type)$/;"	f	file:
type_is_sk_pointer	bpf/verifier.c	/^static bool type_is_sk_pointer(enum bpf_reg_type type)$/;"	f	file:
type_show	events/core.c	/^type_show(struct device *dev, struct device_attribute *attr, char *page)$/;"	f	file:
type_show	irq/irqdesc.c	/^static ssize_t type_show(struct kobject *kobj,$/;"	f	file:
types	bpf/btf.c	/^	struct btf_type **types;$/;"	m	struct:btf	typeref:struct:btf::btf_type	file:
types_size	bpf/btf.c	/^	u32 types_size;$/;"	m	struct:btf	file:
u16	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u16);$/;"	v
u16	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(u16);$/;"	v
u16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u16);$/;"	v
u16	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(u16);$/;"	v
u32	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u32);$/;"	v
u32	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(u32);$/;"	v
u32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u32);$/;"	v
u32	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(u32);$/;"	v
u64	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u64);$/;"	v
u64	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(u64);$/;"	v
u64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u64);$/;"	v
u64	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(u64);$/;"	v
u8	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u8);$/;"	v
u8	trace/trace_events_hist.c	/^DEFINE_HIST_FIELD_FN(u8);$/;"	v
u8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u8);$/;"	v
u8	trace/tracing_map.c	/^DEFINE_TRACING_MAP_CMP_FN(u8);$/;"	v
uclamp_bucket	sched/sched.h	/^struct uclamp_bucket {$/;"	s
uclamp_bucket_base_value	sched/core.c	/^static inline unsigned int uclamp_bucket_base_value(unsigned int clamp_value)$/;"	f	file:
uclamp_bucket_id	sched/core.c	/^static inline unsigned int uclamp_bucket_id(unsigned int clamp_value)$/;"	f	file:
uclamp_default	sched/core.c	/^static struct uclamp_se uclamp_default[UCLAMP_CNT];$/;"	v	typeref:struct:uclamp_se	file:
uclamp_eff_get	sched/core.c	/^uclamp_eff_get(struct task_struct *p, unsigned int clamp_id)$/;"	f	file:
uclamp_eff_value	sched/core.c	/^unsigned int uclamp_eff_value(struct task_struct *p, unsigned int clamp_id)$/;"	f
uclamp_enabled	sched/sched.h	/^	int uclamp_enabled;$/;"	m	struct:sched_class
uclamp_flags	sched/sched.h	/^	unsigned int		uclamp_flags;$/;"	m	struct:rq
uclamp_fork	sched/core.c	/^static inline void uclamp_fork(struct task_struct *p) { }$/;"	f	file:
uclamp_fork	sched/core.c	/^static void uclamp_fork(struct task_struct *p)$/;"	f	file:
uclamp_idle_reset	sched/core.c	/^static inline void uclamp_idle_reset(struct rq *rq, unsigned int clamp_id,$/;"	f	file:
uclamp_idle_value	sched/core.c	/^uclamp_idle_value(struct rq *rq, unsigned int clamp_id,$/;"	f	file:
uclamp_none	sched/core.c	/^static inline unsigned int uclamp_none(int clamp_id)$/;"	f	file:
uclamp_rq	sched/sched.h	/^struct uclamp_rq {$/;"	s
uclamp_rq_dec	sched/core.c	/^static inline void uclamp_rq_dec(struct rq *rq, struct task_struct *p) { }$/;"	f	file:
uclamp_rq_dec	sched/core.c	/^static inline void uclamp_rq_dec(struct rq *rq, struct task_struct *p)$/;"	f	file:
uclamp_rq_dec_id	sched/core.c	/^static inline void uclamp_rq_dec_id(struct rq *rq, struct task_struct *p,$/;"	f	file:
uclamp_rq_inc	sched/core.c	/^static inline void uclamp_rq_inc(struct rq *rq, struct task_struct *p) { }$/;"	f	file:
uclamp_rq_inc	sched/core.c	/^static inline void uclamp_rq_inc(struct rq *rq, struct task_struct *p)$/;"	f	file:
uclamp_rq_inc_id	sched/core.c	/^static inline void uclamp_rq_inc_id(struct rq *rq, struct task_struct *p,$/;"	f	file:
uclamp_rq_max_value	sched/core.c	/^unsigned int uclamp_rq_max_value(struct rq *rq, unsigned int clamp_id,$/;"	f	file:
uclamp_se_set	sched/core.c	/^static inline void uclamp_se_set(struct uclamp_se *uc_se,$/;"	f	file:
uclamp_util	sched/sched.h	/^static inline unsigned int uclamp_util(struct rq *rq, unsigned int util)$/;"	f
uclamp_util_with	sched/sched.h	/^static inline unsigned int uclamp_util_with(struct rq *rq, unsigned int util,$/;"	f
uclamp_util_with	sched/sched.h	/^unsigned int uclamp_util_with(struct rq *rq, unsigned int util,$/;"	f
uclamp_validate	sched/core.c	/^static inline int uclamp_validate(struct task_struct *p,$/;"	f	file:
uclamp_validate	sched/core.c	/^static int uclamp_validate(struct task_struct *p,$/;"	f	file:
ucounts_hashentry	ucount.c	18;"	d	file:
ucounts_hashfn	ucount.c	15;"	d	file:
ucounts_hashtable	ucount.c	/^static struct hlist_head ucounts_hashtable[(1 << UCOUNTS_HASHTABLE_BITS)];$/;"	v	typeref:struct:hlist_head	file:
udelay_test_debugfs_file	time/test_udelay.c	/^static struct dentry *udelay_test_debugfs_file;$/;"	v	typeref:struct:dentry	file:
udelay_test_debugfs_ops	time/test_udelay.c	/^static const struct file_operations udelay_test_debugfs_ops = {$/;"	v	typeref:struct:file_operations	file:
udelay_test_exit	time/test_udelay.c	/^module_exit(udelay_test_exit);$/;"	v
udelay_test_exit	time/test_udelay.c	/^static void __exit udelay_test_exit(void)$/;"	f	file:
udelay_test_init	time/test_udelay.c	/^module_init(udelay_test_init);$/;"	v
udelay_test_init	time/test_udelay.c	/^static int __init udelay_test_init(void)$/;"	f	file:
udelay_test_iterations	time/test_udelay.c	/^static int udelay_test_iterations = DEFAULT_ITERATIONS;$/;"	v	file:
udelay_test_open	time/test_udelay.c	/^static int udelay_test_open(struct inode *inode, struct file *file)$/;"	f	file:
udelay_test_show	time/test_udelay.c	/^static int udelay_test_show(struct seq_file *s, void *v)$/;"	f	file:
udelay_test_single	time/test_udelay.c	/^static int udelay_test_single(struct seq_file *s, int usecs, uint32_t iters)$/;"	f	file:
udelay_test_usecs	time/test_udelay.c	/^static int udelay_test_usecs;$/;"	v	file:
udelay_test_write	time/test_udelay.c	/^static ssize_t udelay_test_write(struct file *file, const char __user *buf,$/;"	f	file:
uevent_filter	params.c	/^static int uevent_filter(struct kset *kset, struct kobject *kobj)$/;"	f	file:
uevent_helper	ksysfs.c	/^KERNEL_ATTR_RW(uevent_helper);$/;"	v
uevent_helper_show	ksysfs.c	/^static ssize_t uevent_helper_show(struct kobject *kobj,$/;"	f	file:
uevent_helper_store	ksysfs.c	/^static ssize_t uevent_helper_store(struct kobject *kobj,$/;"	f	file:
uevent_seqnum	ksysfs.c	/^KERNEL_ATTR_RO(uevent_seqnum);$/;"	v
uevent_seqnum_show	ksysfs.c	/^static ssize_t uevent_seqnum_show(struct kobject *kobj,$/;"	f	file:
uid	audit.h	/^			kuid_t			uid;$/;"	m	struct:audit_context::__anon53::__anon55
uid	audit.h	/^	kuid_t			uid;$/;"	m	struct:audit_names
uid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
uid	exit.c	/^	uid_t uid;$/;"	m	struct:waitid_info	file:
uid	trace/trace.h	/^	kuid_t			uid;$/;"	m	struct:trace_array_cpu
uid_cache_init	user.c	/^static int __init uid_cache_init(void)$/;"	f	file:
uid_cache_init	user.c	/^subsys_initcall(uid_cache_init);$/;"	v
uid_cachep	user.c	/^static struct kmem_cache *uid_cachep;$/;"	v	typeref:struct:kmem_cache	file:
uid_hash_find	user.c	/^static struct user_struct *uid_hash_find(kuid_t uid, struct hlist_head *hashent)$/;"	f	file:
uid_hash_insert	user.c	/^static void uid_hash_insert(struct user_struct *up, struct hlist_head *hashent)$/;"	f	file:
uid_hash_remove	user.c	/^static void uid_hash_remove(struct user_struct *up)$/;"	f	file:
uid_m_show	user_namespace.c	/^static int uid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
uid_m_start	user_namespace.c	/^static void *uid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
uidhash_table	user.c	/^struct hlist_head uidhash_table[UIDHASH_SZ];$/;"	v	typeref:struct:hlist_head
uidhashentry	user.c	82;"	d	file:
umh_clean_and_save_pid	umh.c	/^static void umh_clean_and_save_pid(struct subprocess_info *info)$/;"	f	file:
umh_complete	umh.c	/^static void umh_complete(struct subprocess_info *sub_info)$/;"	f	file:
umh_pipe_setup	umh.c	/^static int umh_pipe_setup(struct subprocess_info *info, struct cred *new)$/;"	f	file:
unaccount_event	events/core.c	/^static void unaccount_event(struct perf_event *event)$/;"	f	file:
unaccount_event_cpu	events/core.c	/^static void unaccount_event_cpu(struct perf_event *event, int cpu)$/;"	f	file:
unaccount_freq_event	events/core.c	/^static void unaccount_freq_event(void)$/;"	f	file:
unaccount_freq_event_nohz	events/core.c	/^static void unaccount_freq_event_nohz(void)$/;"	f	file:
unaccount_pmu_sb_event	events/core.c	/^static void unaccount_pmu_sb_event(struct perf_event *event)$/;"	f	file:
unapply_uprobe	events/uprobes.c	/^static int unapply_uprobe(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
unbind_clocksource_store	time/clocksource.c	/^static ssize_t unbind_clocksource_store(struct device *dev,$/;"	f	file:
unbind_workers	workqueue.c	/^static void unbind_workers(int cpu)$/;"	f	file:
unbound_attrs	workqueue.c	/^	struct workqueue_attrs	*unbound_attrs;	\/* PW: only for unbound wqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::workqueue_attrs	file:
unbound_pwq_by_node	workqueue.c	/^static struct pool_workqueue *unbound_pwq_by_node(struct workqueue_struct *wq,$/;"	f	file:
unbound_release_work	workqueue.c	/^	struct work_struct	unbound_release_work;$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::work_struct	file:
unbound_std_wq_attrs	workqueue.c	/^static struct workqueue_attrs *unbound_std_wq_attrs[NR_STD_WORKER_POOLS];$/;"	v	typeref:struct:workqueue_attrs	file:
unc	power/swap.c	/^	unsigned char *unc[LZO_THREADS];          \/* uncompressed data *\/$/;"	m	struct:crc_data	file:
unc	power/swap.c	/^	unsigned char unc[LZO_UNC_SIZE];          \/* uncompressed buffer *\/$/;"	m	struct:cmp_data	file:
unc	power/swap.c	/^	unsigned char unc[LZO_UNC_SIZE];          \/* uncompressed buffer *\/$/;"	m	struct:dec_data	file:
unc_len	power/swap.c	/^	size_t *unc_len[LZO_THREADS];             \/* uncompressed lengths *\/$/;"	m	struct:crc_data	file:
unc_len	power/swap.c	/^	size_t unc_len;                           \/* uncompressed length *\/$/;"	m	struct:cmp_data	file:
unc_len	power/swap.c	/^	size_t unc_len;                           \/* uncompressed length *\/$/;"	m	struct:dec_data	file:
uncharge_cg_locked	cgroup/rdma.c	/^uncharge_cg_locked(struct rdma_cgroup *cg,$/;"	f	file:
unclone_ctx	events/core.c	/^unclone_ctx(struct perf_event_context *ctx)$/;"	f	file:
undo_cpu_down	cpu.c	/^static void undo_cpu_down(unsigned int cpu, struct cpuhp_cpu_state *st)$/;"	f	file:
undo_cpu_up	cpu.c	/^static void undo_cpu_up(unsigned int cpu, struct cpuhp_cpu_state *st)$/;"	f	file:
unfreeze_cgroup	cgroup/legacy_freezer.c	/^static void unfreeze_cgroup(struct freezer *freezer)$/;"	f	file:
unhandled_signal	signal.c	/^bool unhandled_signal(struct task_struct *tsk, int sig)$/;"	f
unknown_module_param_cb	module.c	/^static int unknown_module_param_cb(char *param, char *val, const char *modname,$/;"	f	file:
unloaded_info	gcov/fs.c	/^	struct gcov_info *unloaded_info;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_info	file:
unlock_hrtimer_base	time/hrtimer.c	/^void unlock_hrtimer_base(const struct hrtimer *timer, unsigned long *flags)$/;"	f	file:
unlock_system_sleep	power/main.c	/^EXPORT_SYMBOL_GPL(unlock_system_sleep);$/;"	v
unlock_system_sleep	power/main.c	/^void unlock_system_sleep(void)$/;"	f
unlock_timer	time/posix-timers.c	/^static inline void unlock_timer(struct k_itimer *timr, unsigned long flags)$/;"	f	file:
unmask_irq	irq/chip.c	/^void unmask_irq(struct irq_desc *desc)$/;"	f
unmask_threaded_irq	irq/chip.c	/^void unmask_threaded_irq(struct irq_desc *desc)$/;"	f
unoptimize_all_kprobes	kprobes.c	/^static void unoptimize_all_kprobes(void)$/;"	f	file:
unoptimize_kprobe	kprobes.c	/^static void unoptimize_kprobe(struct kprobe *p, bool force)$/;"	f	file:
unoptimize_kprobe	kprobes.c	929;"	d	file:
unpack_orig_pfns	power/snapshot.c	/^static int unpack_orig_pfns(unsigned long *buf, struct memory_bitmap *bm)$/;"	f	file:
unpause_named_trigger	trace/trace_events_trigger.c	/^void unpause_named_trigger(struct event_trigger_data *data)$/;"	f
unqueue_me	futex.c	/^static int unqueue_me(struct futex_q *q)$/;"	f	file:
unreg	trace/trace.h	/^	void			(*unreg)(char *glob,$/;"	m	struct:event_command
unreg_all	trace/trace.h	/^	void			(*unreg_all)(struct trace_event_file *file);$/;"	m	struct:event_command
unreg_event_syscall_enter	trace/trace_syscalls.c	/^static void unreg_event_syscall_enter(struct trace_event_file *file,$/;"	f	file:
unreg_event_syscall_exit	trace/trace_syscalls.c	/^static void unreg_event_syscall_exit(struct trace_event_file *file,$/;"	f	file:
unregister_console	printk/printk.c	/^EXPORT_SYMBOL(unregister_console);$/;"	v
unregister_console	printk/printk.c	/^int unregister_console(struct console *console)$/;"	f
unregister_die_notifier	notifier.c	/^EXPORT_SYMBOL_GPL(unregister_die_notifier);$/;"	v
unregister_die_notifier	notifier.c	/^int unregister_die_notifier(struct notifier_block *nb)$/;"	f
unregister_event_command	trace/trace_events_trigger.c	/^__init int unregister_event_command(struct event_command *cmd)$/;"	f
unregister_fair_sched_group	sched/fair.c	/^void unregister_fair_sched_group(struct task_group *tg) { }$/;"	f
unregister_fair_sched_group	sched/fair.c	/^void unregister_fair_sched_group(struct task_group *tg)$/;"	f
unregister_field_var_hists	trace/trace_events_hist.c	/^static void unregister_field_var_hists(struct hist_trigger_data *hist_data)$/;"	f	file:
unregister_ftrace_command	trace/ftrace.c	/^__init int unregister_ftrace_command(struct ftrace_func_command *cmd)$/;"	f
unregister_ftrace_command	trace/trace.h	/^static inline __init int unregister_ftrace_command(char *cmd_name)$/;"	f
unregister_ftrace_export	trace/trace.c	/^EXPORT_SYMBOL_GPL(unregister_ftrace_export);$/;"	v
unregister_ftrace_export	trace/trace.c	/^int unregister_ftrace_export(struct trace_export *export)$/;"	f
unregister_ftrace_function	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(unregister_ftrace_function);$/;"	v
unregister_ftrace_function	trace/ftrace.c	/^int unregister_ftrace_function(struct ftrace_ops *ops)$/;"	f
unregister_ftrace_function_probe_func	trace/ftrace.c	/^unregister_ftrace_function_probe_func(char *glob, struct trace_array *tr,$/;"	f
unregister_ftrace_graph	trace/fgraph.c	/^void unregister_ftrace_graph(struct fgraph_ops *gops)$/;"	f
unregister_ftrace_profiler	trace/ftrace.c	/^static void unregister_ftrace_profiler(void)$/;"	f	file:
unregister_handler_proc	irq/internals.h	/^static inline void unregister_handler_proc(unsigned int irq,$/;"	f
unregister_handler_proc	irq/proc.c	/^void unregister_handler_proc(unsigned int irq, struct irqaction *action)$/;"	f
unregister_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(unregister_hw_breakpoint);$/;"	v
unregister_hw_breakpoint	events/hw_breakpoint.c	/^void unregister_hw_breakpoint(struct perf_event *bp)$/;"	f
unregister_irq_proc	irq/internals.h	/^static inline void unregister_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	f
unregister_irq_proc	irq/proc.c	/^void unregister_irq_proc(unsigned int irq, struct irq_desc *desc)$/;"	f
unregister_irqsoff_function	trace/trace_irqsoff.c	/^static void unregister_irqsoff_function(struct trace_array *tr, int graph) { }$/;"	f	file:
unregister_irqsoff_function	trace/trace_irqsoff.c	/^static void unregister_irqsoff_function(struct trace_array *tr, int graph)$/;"	f	file:
unregister_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kprobe);$/;"	v
unregister_kprobe	kprobes.c	/^void unregister_kprobe(struct kprobe *p)$/;"	f
unregister_kprobe_event	trace/trace_kprobe.c	/^static int unregister_kprobe_event(struct trace_kprobe *tk)$/;"	f	file:
unregister_kprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kprobes);$/;"	v
unregister_kprobes	kprobes.c	/^void unregister_kprobes(struct kprobe **kps, int num)$/;"	f
unregister_kretprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kretprobe);$/;"	v
unregister_kretprobe	kprobes.c	/^void unregister_kretprobe(struct kretprobe *rp)$/;"	f
unregister_kretprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kretprobes);$/;"	v
unregister_kretprobes	kprobes.c	/^void unregister_kretprobes(struct kretprobe **rps, int num)$/;"	f
unregister_module_notifier	module.c	/^EXPORT_SYMBOL(unregister_module_notifier);$/;"	v
unregister_module_notifier	module.c	/^int unregister_module_notifier(struct notifier_block *nb)$/;"	f
unregister_pm_notifier	power/main.c	/^EXPORT_SYMBOL_GPL(unregister_pm_notifier);$/;"	v
unregister_pm_notifier	power/main.c	/^int unregister_pm_notifier(struct notifier_block *nb)$/;"	f
unregister_reboot_notifier	reboot.c	/^EXPORT_SYMBOL(unregister_reboot_notifier);$/;"	v
unregister_reboot_notifier	reboot.c	/^int unregister_reboot_notifier(struct notifier_block *nb)$/;"	f
unregister_restart_handler	reboot.c	/^EXPORT_SYMBOL(unregister_restart_handler);$/;"	v
unregister_restart_handler	reboot.c	/^int unregister_restart_handler(struct notifier_block *nb)$/;"	f
unregister_sched_domain_sysctl	sched/debug.c	/^void unregister_sched_domain_sysctl(void)$/;"	f
unregister_sched_domain_sysctl	sched/sched.h	/^static inline void unregister_sched_domain_sysctl(void)$/;"	f
unregister_stat_tracer	trace/trace_stat.c	/^void unregister_stat_tracer(struct tracer_stat *trace)$/;"	f
unregister_synth_event	trace/trace_events_hist.c	/^static int unregister_synth_event(struct synth_event *event)$/;"	f	file:
unregister_trace_event	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(unregister_trace_event);$/;"	v
unregister_trace_event	trace/trace_output.c	/^int unregister_trace_event(struct trace_event *event)$/;"	f
unregister_trace_kprobe	trace/trace_kprobe.c	/^static int unregister_trace_kprobe(struct trace_kprobe *tk)$/;"	f	file:
unregister_trace_uprobe	trace/trace_uprobe.c	/^static int unregister_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
unregister_tracepoint_module_notifier	tracepoint.c	/^EXPORT_SYMBOL_GPL(unregister_tracepoint_module_notifier);$/;"	v
unregister_tracepoint_module_notifier	tracepoint.c	/^int unregister_tracepoint_module_notifier(struct notifier_block *nb)$/;"	f
unregister_trigger	trace/trace_events_trigger.c	/^static void unregister_trigger(char *glob, struct event_trigger_ops *ops,$/;"	f	file:
unregister_trigger_enable_disable_cmds	trace/trace_events_trigger.c	/^static __init void unregister_trigger_enable_disable_cmds(void)$/;"	f	file:
unregister_trigger_hist_enable_disable_cmds	trace/trace_events_hist.c	/^static __init void unregister_trigger_hist_enable_disable_cmds(void)$/;"	f	file:
unregister_trigger_traceon_traceoff_cmds	trace/trace_events_trigger.c	/^static __init void unregister_trigger_traceon_traceoff_cmds(void)$/;"	f	file:
unregister_uprobe_event	trace/trace_uprobe.c	/^static int unregister_uprobe_event(struct trace_uprobe *tu)$/;"	f	file:
unregister_wakeup_function	trace/trace_sched_wakeup.c	/^static void unregister_wakeup_function(struct trace_array *tr, int graph) { }$/;"	f	file:
unregister_wakeup_function	trace/trace_sched_wakeup.c	/^static void unregister_wakeup_function(struct trace_array *tr, int graph)$/;"	f	file:
unregister_wide_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(unregister_wide_hw_breakpoint);$/;"	v
unregister_wide_hw_breakpoint	events/hw_breakpoint.c	/^void unregister_wide_hw_breakpoint(struct perf_event * __percpu *cpu_events)$/;"	f
unroll_tree_refs	auditsc.c	/^static void unroll_tree_refs(struct audit_context *ctx,$/;"	f	file:
unshare_fd	fork.c	/^static int unshare_fd(unsigned long unshare_flags, struct files_struct **new_fdp)$/;"	f	file:
unshare_files	fork.c	/^int unshare_files(struct files_struct **displaced)$/;"	f
unshare_fs	fork.c	/^static int unshare_fs(unsigned long unshare_flags, struct fs_struct **new_fsp)$/;"	f	file:
unshare_nsproxy_namespaces	nsproxy.c	/^int unshare_nsproxy_namespaces(unsigned long unshare_flags,$/;"	f
unshare_userns	user_namespace.c	/^int unshare_userns(unsigned long unshare_flags, struct cred **new_cred)$/;"	f
untag_chunk	audit_tree.c	/^static void untag_chunk(struct audit_chunk *chunk, struct fsnotify_mark *mark)$/;"	f	file:
unthrottle_cfs_rq	sched/fair.c	/^void unthrottle_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f
unthrottle_offline_cfs_rqs	sched/fair.c	/^static inline void unthrottle_offline_cfs_rqs(struct rq *rq) {}$/;"	f	file:
unthrottle_offline_cfs_rqs	sched/fair.c	/^static void __maybe_unused unthrottle_offline_cfs_rqs(struct rq *rq)$/;"	f	file:
up	locking/semaphore.c	/^	bool up;$/;"	m	struct:semaphore_waiter	file:
up	locking/semaphore.c	/^EXPORT_SYMBOL(up);$/;"	v
up	locking/semaphore.c	/^void up(struct semaphore *sem)$/;"	f
up_console_sem	printk/printk.c	247;"	d	file:
up_read	locking/rwsem.c	/^EXPORT_SYMBOL(up_read);$/;"	v
up_read	locking/rwsem.c	/^void up_read(struct rw_semaphore *sem)$/;"	f
up_read_non_owner	locking/rwsem.c	/^EXPORT_SYMBOL(up_read_non_owner);$/;"	v
up_read_non_owner	locking/rwsem.c	/^void up_read_non_owner(struct rw_semaphore *sem)$/;"	f
up_write	locking/rwsem.c	/^EXPORT_SYMBOL(up_write);$/;"	v
up_write	locking/rwsem.c	/^void up_write(struct rw_semaphore *sem)$/;"	f
update	trace/trace.h	/^	cond_update_fn_t		update;$/;"	m	struct:cond_snapshot
update_all_ops	trace/ftrace.c	/^static bool update_all_ops;$/;"	v	file:
update_alu_sanitation_state	bpf/verifier.c	/^static int update_alu_sanitation_state(struct bpf_insn_aux_data *aux,$/;"	f	file:
update_averages	sched/psi.c	/^static u64 update_averages(struct psi_group *group, u64 now)$/;"	f	file:
update_avg	sched/core.c	/^static void update_avg(u64 *avg, u64 sample)$/;"	f	file:
update_blocked_averages	sched/fair.c	/^static inline void update_blocked_averages(int cpu)$/;"	f	file:
update_blocked_averages	sched/fair.c	/^static void update_blocked_averages(int cpu)$/;"	f	file:
update_blocked_load_status	sched/fair.c	/^static inline void update_blocked_load_status(struct rq *rq, bool has_blocked) {}$/;"	f	file:
update_blocked_load_status	sched/fair.c	/^static inline void update_blocked_load_status(struct rq *rq, bool has_blocked)$/;"	f	file:
update_branch_counts	bpf/verifier.c	/^static void update_branch_counts(struct bpf_verifier_env *env, struct bpf_verifier_state *st)$/;"	f	file:
update_cfs_group	sched/fair.c	/^static inline void update_cfs_group(struct sched_entity *se)$/;"	f	file:
update_cfs_group	sched/fair.c	/^static void update_cfs_group(struct sched_entity *se)$/;"	f	file:
update_cfs_rq_h_load	sched/fair.c	/^static void update_cfs_rq_h_load(struct cfs_rq *cfs_rq)$/;"	f	file:
update_cfs_rq_load_avg	sched/fair.c	/^update_cfs_rq_load_avg(u64 now, struct cfs_rq *cfs_rq)$/;"	f	file:
update_cfs_rq_load_avg	sched/pelt.h	/^update_cfs_rq_load_avg(u64 now, struct cfs_rq *cfs_rq)$/;"	f
update_cgrp_time_from_cpuctx	events/core.c	/^static inline void update_cgrp_time_from_cpuctx(struct perf_cpu_context *cpuctx)$/;"	f	file:
update_cgrp_time_from_event	events/core.c	/^static inline void update_cgrp_time_from_event(struct perf_event *event)$/;"	f	file:
update_clock_read_data	time/sched_clock.c	/^static void update_clock_read_data(struct clock_read_data *rd)$/;"	f	file:
update_cond_flag	trace/trace_events_trigger.c	/^void update_cond_flag(struct trace_event_file *file)$/;"	f
update_context_time	events/core.c	/^static void update_context_time(struct perf_event_context *ctx)$/;"	f	file:
update_count	trace/trace_functions.c	/^static int update_count(struct ftrace_probe_ops *ops, unsigned long ip,$/;"	f	file:
update_cpu_capacity	sched/fair.c	/^static void update_cpu_capacity(struct sched_domain *sd, int cpu)$/;"	f	file:
update_cpumask	cgroup/cpuset.c	/^static int update_cpumask(struct cpuset *cs, struct cpuset *trialcs,$/;"	f	file:
update_cpumasks_hier	cgroup/cpuset.c	/^static void update_cpumasks_hier(struct cpuset *cs, struct tmpmasks *tmp)$/;"	f	file:
update_curr	sched/fair.c	/^static void update_curr(struct cfs_rq *cfs_rq)$/;"	f	file:
update_curr	sched/sched.h	/^	void (*update_curr)(struct rq *rq);$/;"	m	struct:sched_class
update_curr_dl	sched/deadline.c	/^static void update_curr_dl(struct rq *rq)$/;"	f	file:
update_curr_fair	sched/fair.c	/^static void update_curr_fair(struct rq *rq)$/;"	f	file:
update_curr_idle	sched/idle.c	/^static void update_curr_idle(struct rq *rq)$/;"	f	file:
update_curr_rt	sched/rt.c	/^static void update_curr_rt(struct rq *rq)$/;"	f	file:
update_curr_stop	sched/stop_task.c	/^static void update_curr_stop(struct rq *rq)$/;"	f	file:
update_data_loc	trace/trace_probe.h	/^static nokprobe_inline u32 update_data_loc(u32 loc, int consumed)$/;"	f
update_dl_entity	sched/deadline.c	/^static void update_dl_entity(struct sched_dl_entity *dl_se,$/;"	f	file:
update_dl_migration	sched/deadline.c	/^static void update_dl_migration(struct dl_rq *dl_rq)$/;"	f	file:
update_dl_revised_wakeup	sched/deadline.c	/^update_dl_revised_wakeup(struct sched_dl_entity *dl_se, struct rq *rq)$/;"	f	file:
update_dl_rq_load_avg	sched/pelt.c	/^int update_dl_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	f
update_dl_rq_load_avg	sched/pelt.h	/^update_dl_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	f
update_domain_attr	cgroup/cpuset.c	/^update_domain_attr(struct sched_domain_attr *dattr, struct cpuset *c)$/;"	f	file:
update_domain_attr_tree	cgroup/cpuset.c	/^static void update_domain_attr_tree(struct sched_domain_attr *dattr,$/;"	f	file:
update_done	trace/ring_buffer.c	/^	struct completion		update_done;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::completion	file:
update_effective_progs	bpf/cgroup.c	/^static int update_effective_progs(struct cgroup *cgrp,$/;"	f	file:
update_eval_map	trace/trace.c	/^update_eval_map(union trace_eval_map_item *ptr)$/;"	f	file:
update_event_printk	trace/trace_events.c	/^static void update_event_printk(struct trace_event_call *call,$/;"	f	file:
update_event_probe	trace/trace_events.c	/^static void update_event_probe(struct event_probe_data *data)$/;"	f	file:
update_fast_timekeeper	time/timekeeping.c	/^static void update_fast_timekeeper(const struct tk_read_base *tkr,$/;"	f	file:
update_field_vars	trace/trace_events_hist.c	/^static void update_field_vars(struct hist_trigger_data *hist_data,$/;"	f	file:
update_flag	cgroup/cpuset.c	/^static int update_flag(cpuset_flagbits_t bit, struct cpuset *cs,$/;"	f	file:
update_ftrace_function	trace/ftrace.c	/^static void update_ftrace_function(void)$/;"	f	file:
update_function_graph_func	trace/fgraph.c	/^void update_function_graph_func(void)$/;"	f
update_function_graph_func	trace/ftrace_internal.h	/^static inline void update_function_graph_func(void) { }$/;"	f
update_group_capacity	sched/fair.c	/^void update_group_capacity(struct sched_domain *sd, int cpu)$/;"	f
update_gt_cputime	time/posix-cpu-timers.c	/^static void update_gt_cputime(struct task_cputime_atomic *cputime_atomic, struct task_cputime *sum)$/;"	f	file:
update_idle_core	sched/sched.h	/^static inline void update_idle_core(struct rq *rq) { }$/;"	f
update_idle_core	sched/sched.h	/^static inline void update_idle_core(struct rq *rq)$/;"	f
update_idle_rq_clock_pelt	sched/pelt.h	/^static inline void update_idle_rq_clock_pelt(struct rq *rq)$/;"	f
update_idle_rq_clock_pelt	sched/pelt.h	/^update_idle_rq_clock_pelt(struct rq *rq) { }$/;"	f
update_if_frozen	cgroup/legacy_freezer.c	/^static void update_if_frozen(struct cgroup_subsys_state *css)$/;"	f	file:
update_irq_load_avg	sched/pelt.c	/^int update_irq_load_avg(struct rq *rq, u64 running)$/;"	f
update_irq_load_avg	sched/pelt.h	/^update_irq_load_avg(struct rq *rq, u64 running)$/;"	f
update_iter	kallsyms.c	/^static int update_iter(struct kallsym_iter *iter, loff_t pos)$/;"	f	file:
update_iter_mod	kallsyms.c	/^static int update_iter_mod(struct kallsym_iter *iter, loff_t pos)$/;"	f	file:
update_load_add	sched/fair.c	/^static inline void update_load_add(struct load_weight *lw, unsigned long inc)$/;"	f	file:
update_load_avg	sched/fair.c	/^static inline void update_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
update_load_avg	sched/fair.c	/^static inline void update_load_avg(struct cfs_rq *cfs_rq, struct sched_entity *se, int not_used1)$/;"	f	file:
update_load_set	sched/fair.c	/^static inline void update_load_set(struct load_weight *lw, unsigned long w)$/;"	f	file:
update_load_sub	sched/fair.c	/^static inline void update_load_sub(struct load_weight *lw, unsigned long dec)$/;"	f	file:
update_lock	sched/cpufreq_schedutil.c	/^	raw_spinlock_t		update_lock;	\/* For shared policies *\/$/;"	m	struct:sugov_policy	file:
update_lsm_rule	auditfilter.c	/^static int update_lsm_rule(struct audit_krule *r)$/;"	f	file:
update_max_interval	sched/fair.c	/^void update_max_interval(void)$/;"	f
update_max_tr	trace/trace.c	/^update_max_tr(struct trace_array *tr, struct task_struct *tsk, int cpu,$/;"	f
update_max_tr_single	trace/trace.c	/^update_max_tr_single(struct trace_array *tr, struct task_struct *tsk, int cpu)$/;"	f
update_min_vruntime	sched/fair.c	/^static void update_min_vruntime(struct cfs_rq *cfs_rq)$/;"	f	file:
update_misfit_status	sched/fair.c	/^static inline void update_misfit_status(struct task_struct *p, struct rq *rq) {}$/;"	f	file:
update_misfit_status	sched/fair.c	/^static inline void update_misfit_status(struct task_struct *p, struct rq *rq)$/;"	f	file:
update_next_balance	sched/fair.c	/^update_next_balance(struct sched_domain *sd, unsigned long *next_balance)$/;"	f	file:
update_nodemask	cgroup/cpuset.c	/^static int update_nodemask(struct cpuset *cs, struct cpuset *trialcs,$/;"	f	file:
update_nodemasks_hier	cgroup/cpuset.c	/^static void update_nodemasks_hier(struct cpuset *cs, nodemask_t *new_mems)$/;"	f	file:
update_nohz_stats	sched/fair.c	/^static bool update_nohz_stats(struct rq *rq, bool force)$/;"	f	file:
update_numa_stats	sched/fair.c	/^static void update_numa_stats(struct numa_stats *ns, int nid)$/;"	f	file:
update_overutilized_status	sched/fair.c	/^static inline void update_overutilized_status(struct rq *rq) { }$/;"	f	file:
update_overutilized_status	sched/fair.c	/^static inline void update_overutilized_status(struct rq *rq)$/;"	f	file:
update_pages_handler	trace/ring_buffer.c	/^static void update_pages_handler(struct work_struct *work)$/;"	f	file:
update_pages_work	trace/ring_buffer.c	/^	struct work_struct		update_pages_work;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::work_struct	file:
update_parent_subparts_cpumask	cgroup/cpuset.c	/^static int update_parent_subparts_cpumask(struct cpuset *cpuset, int cmd,$/;"	f	file:
update_perf_cpu_limits	events/core.c	/^static void update_perf_cpu_limits(void)$/;"	f	file:
update_persistent_clock64	time/ntp.c	/^int __weak update_persistent_clock64(struct timespec64 now64)$/;"	f
update_pred_fn	trace/trace_events_filter.c	/^static void update_pred_fn(struct event_filter *filter, char *fields)$/;"	f	file:
update_preds	trace/trace_events_filter.c	/^static void update_preds(struct prog_entry *prog, int N, int invert)$/;"	f	file:
update_process_times	time/timer.c	/^void update_process_times(int user_tick)$/;"	f
update_prstate	cgroup/cpuset.c	/^static int update_prstate(struct cpuset *cs, int val)$/;"	f	file:
update_pvclock_gtod	time/timekeeping.c	/^static void update_pvclock_gtod(struct timekeeper *tk, bool was_set)$/;"	f	file:
update_ref_ctr	events/uprobes.c	/^static int update_ref_ctr(struct uprobe *uprobe, struct mm_struct *mm,$/;"	f	file:
update_ref_ctr_warn	events/uprobes.c	/^static void update_ref_ctr_warn(struct uprobe *uprobe,$/;"	f	file:
update_relax_domain_level	cgroup/cpuset.c	/^static int update_relax_domain_level(struct cpuset *cs, s64 val)$/;"	f	file:
update_rlimit_cpu	time/posix-cpu-timers.c	/^void update_rlimit_cpu(struct task_struct *task, unsigned long rlim_new)$/;"	f
update_rq_clock	sched/core.c	/^void update_rq_clock(struct rq *rq)$/;"	f
update_rq_clock_pelt	sched/pelt.h	/^static inline void update_rq_clock_pelt(struct rq *rq, s64 delta)$/;"	f
update_rq_clock_pelt	sched/pelt.h	/^update_rq_clock_pelt(struct rq *rq, s64 delta) { }$/;"	f
update_rq_clock_task	sched/core.c	/^static void update_rq_clock_task(struct rq *rq, s64 delta)$/;"	f	file:
update_rt_migration	sched/rt.c	/^static void update_rt_migration(struct rt_rq *rt_rq)$/;"	f	file:
update_rt_rq_load_avg	sched/pelt.c	/^int update_rt_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	f
update_rt_rq_load_avg	sched/pelt.h	/^update_rt_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	f
update_runtime_enabled	sched/fair.c	/^static inline void update_runtime_enabled(struct rq *rq) {}$/;"	f	file:
update_runtime_enabled	sched/fair.c	/^static void __maybe_unused update_runtime_enabled(struct rq *rq)$/;"	f	file:
update_scan_period	sched/fair.c	/^static inline void update_scan_period(struct task_struct *p, int new_cpu)$/;"	f	file:
update_scan_period	sched/fair.c	/^static void update_scan_period(struct task_struct *p, int new_cpu)$/;"	f	file:
update_sched_clock	time/sched_clock.c	/^static void update_sched_clock(void)$/;"	f	file:
update_sd_lb_stats	sched/fair.c	/^static inline void update_sd_lb_stats(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
update_sd_pick_busiest	sched/fair.c	/^static bool update_sd_pick_busiest(struct lb_env *env,$/;"	f	file:
update_sg_lb_stats	sched/fair.c	/^static inline void update_sg_lb_stats(struct lb_env *env,$/;"	f	file:
update_sibling_cpumasks	cgroup/cpuset.c	/^static void update_sibling_cpumasks(struct cpuset *parent, struct cpuset *cs,$/;"	f	file:
update_stack_depth	bpf/verifier.c	/^static int update_stack_depth(struct bpf_verifier_env *env,$/;"	f	file:
update_stats_curr_start	sched/fair.c	/^update_stats_curr_start(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_dequeue	sched/fair.c	/^update_stats_dequeue(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
update_stats_enqueue	sched/fair.c	/^update_stats_enqueue(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
update_stats_enqueue_sleeper	sched/fair.c	/^update_stats_enqueue_sleeper(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_wait_end	sched/fair.c	/^update_stats_wait_end(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_wait_start	sched/fair.c	/^update_stats_wait_start(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_sysctl	sched/fair.c	/^static void update_sysctl(void)$/;"	f	file:
update_task_scan_period	sched/fair.c	/^static void update_task_scan_period(struct task_struct *p,$/;"	f	file:
update_tasks_cpumask	cgroup/cpuset.c	/^static void update_tasks_cpumask(struct cpuset *cs)$/;"	f	file:
update_tasks_flags	cgroup/cpuset.c	/^static void update_tasks_flags(struct cpuset *cs)$/;"	f	file:
update_tasks_nodemask	cgroup/cpuset.c	/^static void update_tasks_nodemask(struct cpuset *cs)$/;"	f	file:
update_tg_cfs_runnable	sched/fair.c	/^update_tg_cfs_runnable(struct cfs_rq *cfs_rq, struct sched_entity *se, struct cfs_rq *gcfs_rq)$/;"	f	file:
update_tg_cfs_util	sched/fair.c	/^update_tg_cfs_util(struct cfs_rq *cfs_rq, struct sched_entity *se, struct cfs_rq *gcfs_rq)$/;"	f	file:
update_tg_load_avg	sched/fair.c	/^static inline void update_tg_load_avg(struct cfs_rq *cfs_rq, int force) {}$/;"	f	file:
update_tg_load_avg	sched/fair.c	/^static inline void update_tg_load_avg(struct cfs_rq *cfs_rq, int force)$/;"	f	file:
update_tg_load_avg	sched/fair.c	/^static void update_tg_load_avg(struct cfs_rq *cfs_rq, int force)$/;"	f	file:
update_thresh	trace/trace.h	/^	int			(*update_thresh)(struct trace_array *tr);$/;"	m	struct:tracer
update_top_cache_domain	sched/topology.c	/^static void update_top_cache_domain(int cpu)$/;"	f	file:
update_traceon_count	trace/trace_functions.c	/^static void update_traceon_count(struct ftrace_probe_ops *ops,$/;"	f	file:
update_tracer_options	trace/trace.c	/^static void update_tracer_options(struct trace_array *tr)$/;"	f	file:
update_triggers	sched/psi.c	/^static u64 update_triggers(struct psi_group *group, u64 now)$/;"	f	file:
update_ts_time_stats	time/tick-sched.c	/^update_ts_time_stats(int cpu, struct tick_sched *ts, ktime_t now, u64 *last_update_time)$/;"	f	file:
update_util	sched/cpufreq_schedutil.c	/^	struct update_util_data	update_util;$/;"	m	struct:sugov_cpu	typeref:struct:sugov_cpu::update_util_data	file:
update_vdso_data	time/vsyscall.c	/^static inline void update_vdso_data(struct vdso_data *vdata,$/;"	f	file:
update_vmcoreinfo_note	crash_core.c	/^static void update_vmcoreinfo_note(void)$/;"	f	file:
update_vsyscall	time/vsyscall.c	/^void update_vsyscall(struct timekeeper *tk)$/;"	f
update_vsyscall_tz	time/vsyscall.c	/^void update_vsyscall_tz(void)$/;"	f
update_wall_time	time/timekeeping.c	/^void update_wall_time(void)$/;"	f
updated	trace/trace_events_hist.c	/^	bool				updated;$/;"	m	struct:track_data	file:
uprobe	events/uprobes.c	/^	struct uprobe *uprobe;$/;"	m	struct:delayed_uprobe	typeref:struct:delayed_uprobe::uprobe	file:
uprobe	events/uprobes.c	/^struct uprobe {$/;"	s	file:
uprobe_apply	events/uprobes.c	/^int uprobe_apply(struct inode *inode, loff_t offset,$/;"	f
uprobe_attr_groups	events/core.c	/^static const struct attribute_group *uprobe_attr_groups[] = {$/;"	v	typeref:struct:attribute_group	file:
uprobe_attrs	events/core.c	/^static struct attribute *uprobe_attrs[] = {$/;"	v	typeref:struct:attribute	file:
uprobe_buffer_disable	trace/trace_uprobe.c	/^static void uprobe_buffer_disable(void)$/;"	f	file:
uprobe_buffer_enable	trace/trace_uprobe.c	/^static int uprobe_buffer_enable(void)$/;"	f	file:
uprobe_buffer_get	trace/trace_uprobe.c	/^static struct uprobe_cpu_buffer *uprobe_buffer_get(void)$/;"	f	file:
uprobe_buffer_init	trace/trace_uprobe.c	/^static int uprobe_buffer_init(void)$/;"	f	file:
uprobe_buffer_put	trace/trace_uprobe.c	/^static void uprobe_buffer_put(struct uprobe_cpu_buffer *ucb)$/;"	f	file:
uprobe_buffer_refcnt	trace/trace_uprobe.c	/^static int uprobe_buffer_refcnt;$/;"	v	file:
uprobe_clear_state	events/uprobes.c	/^void uprobe_clear_state(struct mm_struct *mm)$/;"	f
uprobe_copy_process	events/uprobes.c	/^void uprobe_copy_process(struct task_struct *t, unsigned long flags)$/;"	f
uprobe_cpu_buffer	trace/trace_uprobe.c	/^static struct uprobe_cpu_buffer __percpu *uprobe_cpu_buffer;$/;"	v	typeref:struct:__percpu	file:
uprobe_cpu_buffer	trace/trace_uprobe.c	/^struct uprobe_cpu_buffer {$/;"	s	file:
uprobe_deny_signal	events/uprobes.c	/^bool uprobe_deny_signal(void)$/;"	f
uprobe_dispatch_data	trace/trace_uprobe.c	/^struct uprobe_dispatch_data {$/;"	s	file:
uprobe_dispatcher	trace/trace_uprobe.c	/^static int uprobe_dispatcher(struct uprobe_consumer *con, struct pt_regs *regs)$/;"	f	file:
uprobe_dup_mmap	events/uprobes.c	/^void uprobe_dup_mmap(struct mm_struct *oldmm, struct mm_struct *newmm)$/;"	f
uprobe_end_dup_mmap	events/uprobes.c	/^void uprobe_end_dup_mmap(void)$/;"	f
uprobe_event_define_fields	trace/trace_uprobe.c	/^static int uprobe_event_define_fields(struct trace_event_call *event_call)$/;"	f	file:
uprobe_events_ops	trace/trace_uprobe.c	/^static const struct file_operations uprobe_events_ops = {$/;"	v	typeref:struct:file_operations	file:
uprobe_exception_nb	events/uprobes.c	/^static struct notifier_block uprobe_exception_nb = {$/;"	v	typeref:struct:notifier_block	file:
uprobe_filter_event	trace/trace_uprobe.c	/^uprobe_filter_event(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_filter_is_empty	trace/trace_uprobe.c	/^static inline bool uprobe_filter_is_empty(struct trace_uprobe_filter *filter)$/;"	f	file:
uprobe_format_group	events/core.c	/^static struct attribute_group uprobe_format_group = {$/;"	v	typeref:struct:attribute_group	file:
uprobe_free_utask	events/uprobes.c	/^void uprobe_free_utask(struct task_struct *t)$/;"	f
uprobe_funcs	trace/trace_uprobe.c	/^static struct trace_event_functions uprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
uprobe_get_swbp_addr	events/uprobes.c	/^unsigned long __weak uprobe_get_swbp_addr(struct pt_regs *regs)$/;"	f
uprobe_get_trap_addr	events/uprobes.c	/^unsigned long uprobe_get_trap_addr(struct pt_regs *regs)$/;"	f
uprobe_is_active	events/uprobes.c	/^static inline bool uprobe_is_active(struct uprobe *uprobe)$/;"	f	file:
uprobe_mmap	events/uprobes.c	/^int uprobe_mmap(struct vm_area_struct *vma)$/;"	f
uprobe_munmap	events/uprobes.c	/^void uprobe_munmap(struct vm_area_struct *vma, unsigned long start, unsigned long end)$/;"	f
uprobe_notify_resume	events/uprobes.c	/^void uprobe_notify_resume(struct pt_regs *regs)$/;"	f
uprobe_perf_close	trace/trace_uprobe.c	/^static int uprobe_perf_close(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_perf_filter	trace/trace_uprobe.c	/^static bool uprobe_perf_filter(struct uprobe_consumer *uc,$/;"	f	file:
uprobe_perf_func	trace/trace_uprobe.c	/^static int uprobe_perf_func(struct trace_uprobe *tu, struct pt_regs *regs,$/;"	f	file:
uprobe_perf_open	trace/trace_uprobe.c	/^static int uprobe_perf_open(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_post_sstep_notifier	events/uprobes.c	/^int uprobe_post_sstep_notifier(struct pt_regs *regs)$/;"	f
uprobe_pre_sstep_notifier	events/uprobes.c	/^int uprobe_pre_sstep_notifier(struct pt_regs *regs)$/;"	f
uprobe_profile_ops	trace/trace_uprobe.c	/^static const struct file_operations uprobe_profile_ops = {$/;"	v	typeref:struct:file_operations	file:
uprobe_register	events/uprobes.c	/^EXPORT_SYMBOL_GPL(uprobe_register);$/;"	v
uprobe_register	events/uprobes.c	/^int uprobe_register(struct inode *inode, loff_t offset,$/;"	f
uprobe_register_refctr	events/uprobes.c	/^EXPORT_SYMBOL_GPL(uprobe_register_refctr);$/;"	v
uprobe_register_refctr	events/uprobes.c	/^int uprobe_register_refctr(struct inode *inode, loff_t offset,$/;"	f
uprobe_start_dup_mmap	events/uprobes.c	/^void uprobe_start_dup_mmap(void)$/;"	f
uprobe_trace_entry_head	trace/trace_uprobe.c	/^struct uprobe_trace_entry_head {$/;"	s	file:
uprobe_trace_func	trace/trace_uprobe.c	/^static int uprobe_trace_func(struct trace_uprobe *tu, struct pt_regs *regs,$/;"	f	file:
uprobe_unregister	events/uprobes.c	/^EXPORT_SYMBOL_GPL(uprobe_unregister);$/;"	v
uprobe_unregister	events/uprobes.c	/^void uprobe_unregister(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)$/;"	f
uprobe_warn	events/uprobes.c	/^static void uprobe_warn(struct task_struct *t, const char *msg)$/;"	f	file:
uprobe_write_opcode	events/uprobes.c	/^int uprobe_write_opcode(struct arch_uprobe *auprobe, struct mm_struct *mm,$/;"	f
uprobes_init	events/uprobes.c	/^void __init uprobes_init(void)$/;"	f
uprobes_mmap_hash	events/uprobes.c	47;"	d	file:
uprobes_mmap_mutex	events/uprobes.c	/^static struct mutex uprobes_mmap_mutex[UPROBES_HASH_SZ];$/;"	v	typeref:struct:mutex	file:
uprobes_tree	events/uprobes.c	/^static struct rb_root uprobes_tree = RB_ROOT;$/;"	v	typeref:struct:rb_root	file:
uptime	sys.c	/^	s32 uptime;$/;"	m	struct:compat_sysinfo	file:
uretprobe_dispatcher	trace/trace_uprobe.c	/^static int uretprobe_dispatcher(struct uprobe_consumer *con,$/;"	f	file:
uretprobe_perf_func	trace/trace_uprobe.c	/^static void uretprobe_perf_func(struct trace_uprobe *tu, unsigned long func,$/;"	f	file:
uretprobe_trace_func	trace/trace_uprobe.c	/^static void uretprobe_trace_func(struct trace_uprobe *tu, unsigned long func,$/;"	f	file:
usable	debug/kdb/kdb_main.c	/^	bool usable;$/;"	m	struct:defcmd_set	file:
usage	cgroup/rdma.c	/^	int usage;$/;"	m	struct:rdmacg_resource	file:
usage	debug/kdb/kdb_main.c	/^	char *usage;$/;"	m	struct:defcmd_set	file:
usage	seccomp.c	/^	refcount_t usage;$/;"	m	struct:seccomp_filter	file:
usage_accumulate	locking/lockdep.c	/^static inline int usage_accumulate(struct lock_list *entry, void *mask)$/;"	f	file:
usage_match	locking/lockdep.c	/^static inline int usage_match(struct lock_list *entry, void *mask)$/;"	f	file:
usage_str	locking/lockdep.c	/^static const char *usage_str[] =$/;"	v	file:
usage_sum	cgroup/rdma.c	/^	u64			usage_sum;$/;"	m	struct:rdmacg_resource_pool	file:
usages	sched/cpuacct.c	/^	u64	usages[CPUACCT_STAT_NSTATS];$/;"	m	struct:cpuacct_usage	file:
use_dev_dma_pfn_offset	dma/coherent.c	/^	bool		use_dev_dma_pfn_offset;$/;"	m	struct:dma_coherent_mem	file:
use_extra_checksum	gcov/clang.c	/^	u8 use_extra_checksum;$/;"	m	struct:gcov_fn_info	file:
use_max_tr	trace/trace.h	/^	bool			use_max_tr;$/;"	m	struct:tracer
use_parent_ecpus	cgroup/cpuset.c	/^	int use_parent_ecpus;$/;"	m	struct:cpuset	file:
use_softirq	rcu/tree.c	/^static bool use_softirq = 1;$/;"	v	file:
use_trace_keyword	trace/trace_events_hist.c	/^	bool			use_trace_keyword;$/;"	m	struct:action_data	file:
used_space	power/snapshot.c	/^	unsigned int used_space;	\/* total size of objects allocated out$/;"	m	struct:chain_allocator	file:
uselib	sys_ni.c	/^COND_SYSCALL(uselib);$/;"	v
user_namespace_sysctl_init	ucount.c	/^static __init int user_namespace_sysctl_init(void)$/;"	f	file:
user_namespace_sysctl_init	ucount.c	/^subsys_initcall(user_namespace_sysctl_init);$/;"	v
user_namespaces_init	user_namespace.c	/^static __init int user_namespaces_init(void)$/;"	f	file:
user_namespaces_init	user_namespace.c	/^subsys_initcall(user_namespaces_init);$/;"	v
user_page	events/internal.h	/^	struct perf_event_mmap_page	*user_page;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::perf_event_mmap_page
user_return_notifier_register	user-return-notifier.c	/^EXPORT_SYMBOL_GPL(user_return_notifier_register);$/;"	v
user_return_notifier_register	user-return-notifier.c	/^void user_return_notifier_register(struct user_return_notifier *urn)$/;"	f
user_return_notifier_unregister	user-return-notifier.c	/^EXPORT_SYMBOL_GPL(user_return_notifier_unregister);$/;"	v
user_return_notifier_unregister	user-return-notifier.c	/^void user_return_notifier_unregister(struct user_return_notifier *urn)$/;"	f
user_table	ucount.c	/^static struct ctl_table user_table[] = {$/;"	v	typeref:struct:ctl_table	file:
userfaultfd	sys_ni.c	/^COND_SYSCALL(userfaultfd);$/;"	v
usermodehelper_bset	umh.c	/^static kernel_cap_t usermodehelper_bset = CAP_FULL_SET;$/;"	v	file:
usermodehelper_disabled	umh.c	/^static enum umh_disable_depth usermodehelper_disabled = UMH_DISABLED;$/;"	v	typeref:enum:umh_disable_depth	file:
usermodehelper_inheritable	umh.c	/^static kernel_cap_t usermodehelper_inheritable = CAP_FULL_SET;$/;"	v	file:
usermodehelper_read_lock_wait	umh.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_lock_wait);$/;"	v
usermodehelper_read_lock_wait	umh.c	/^long usermodehelper_read_lock_wait(long timeout)$/;"	f
usermodehelper_read_trylock	umh.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_trylock);$/;"	v
usermodehelper_read_trylock	umh.c	/^int usermodehelper_read_trylock(void)$/;"	f
usermodehelper_read_unlock	umh.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_unlock);$/;"	v
usermodehelper_read_unlock	umh.c	/^void usermodehelper_read_unlock(void)$/;"	f
usermodehelper_table	umh.c	/^struct ctl_table usermodehelper_table[] = {$/;"	v	typeref:struct:ctl_table
userns_get	user_namespace.c	/^static struct ns_common *userns_get(struct task_struct *task)$/;"	f	file:
userns_install	user_namespace.c	/^static int userns_install(struct nsproxy *nsproxy, struct ns_common *ns)$/;"	f	file:
userns_may_setgroups	user_namespace.c	/^bool userns_may_setgroups(const struct user_namespace *ns)$/;"	f
userns_operations	user_namespace.c	/^const struct proc_ns_operations userns_operations = {$/;"	v	typeref:struct:proc_ns_operations
userns_owner	user_namespace.c	/^static struct user_namespace *userns_owner(struct ns_common *ns)$/;"	f	file:
userns_put	user_namespace.c	/^static void userns_put(struct ns_common *ns)$/;"	f	file:
usleep_range	time/timer.c	/^EXPORT_SYMBOL(usleep_range);$/;"	v
usleep_range	time/timer.c	/^void __sched usleep_range(unsigned long min, unsigned long max)$/;"	f
util_avg	sched/sched.h	/^		unsigned long	util_avg;$/;"	m	struct:cfs_rq::__anon83
util_est_dequeue	sched/fair.c	/^util_est_dequeue(struct cfs_rq *cfs_rq, struct task_struct *p, bool task_sleep)$/;"	f	file:
util_est_dequeue	sched/fair.c	/^util_est_dequeue(struct cfs_rq *cfs_rq, struct task_struct *p,$/;"	f	file:
util_est_enqueue	sched/fair.c	/^static inline void util_est_enqueue(struct cfs_rq *cfs_rq,$/;"	f	file:
util_est_enqueue	sched/fair.c	/^util_est_enqueue(struct cfs_rq *cfs_rq, struct task_struct *p) {}$/;"	f	file:
uts	power/power.h	/^	struct new_utsname	uts;$/;"	m	struct:swsusp_info	typeref:struct:swsusp_info::new_utsname
uts_kern_table	utsname_sysctl.c	/^static struct ctl_table uts_kern_table[] = {$/;"	v	typeref:struct:ctl_table	file:
uts_ns_init	utsname.c	/^void __init uts_ns_init(void)$/;"	f
uts_proc_notify	utsname_sysctl.c	/^void uts_proc_notify(enum uts_proc proc)$/;"	f
uts_root_table	utsname_sysctl.c	/^static struct ctl_table uts_root_table[] = {$/;"	v	typeref:struct:ctl_table	file:
uts_sem	sys.c	/^DECLARE_RWSEM(uts_sem);$/;"	v
utsname_sysctl_init	utsname_sysctl.c	/^device_initcall(utsname_sysctl_init);$/;"	v
utsname_sysctl_init	utsname_sysctl.c	/^static int __init utsname_sysctl_init(void)$/;"	f	file:
utsns_get	utsname.c	/^static struct ns_common *utsns_get(struct task_struct *task)$/;"	f	file:
utsns_install	utsname.c	/^static int utsns_install(struct nsproxy *nsproxy, struct ns_common *new)$/;"	f	file:
utsns_operations	utsname.c	/^const struct proc_ns_operations utsns_operations = {$/;"	v	typeref:struct:proc_ns_operations
utsns_owner	utsname.c	/^static struct user_namespace *utsns_owner(struct ns_common *ns)$/;"	f	file:
utsns_put	utsname.c	/^static void utsns_put(struct ns_common *ns)$/;"	f	file:
vaddr	dma/mapping.c	/^	void		*vaddr;$/;"	m	struct:dma_devres	file:
vaddr	events/uprobes.c	/^	unsigned long 			vaddr;		\/* Page(s) of instruction slots *\/$/;"	m	struct:xol_area	file:
vaddr	events/uprobes.c	/^	unsigned long vaddr;$/;"	m	struct:map_info	file:
vaddr	trace/trace_uprobe.c	/^	unsigned long		vaddr[];$/;"	m	struct:uprobe_trace_entry_head	file:
vaddr_to_offset	events/uprobes.c	/^static loff_t vaddr_to_offset(struct vm_area_struct *vma, unsigned long vaddr)$/;"	f	file:
val	cgroup/cpuset.c	/^	int val;		\/* most recent output value *\/$/;"	m	struct:fmeter	file:
val	params.c	/^	char val[];$/;"	m	struct:kmalloced_param	file:
val	seccomp.c	/^	long val;$/;"	m	struct:seccomp_knotif	file:
val	trace/trace.h	/^	u32			val;$/;"	m	struct:tracer_flags
val	trace/trace.h	/^	u64 			val;$/;"	m	struct:filter_pred
val	trace/trace_events_hist.c	/^	struct hist_field	*val;$/;"	m	struct:field_var	typeref:struct:field_var::hist_field	file:
val	trace/trace_output.c	/^	unsigned long long	val; \/* unit: nsec *\/$/;"	m	struct:trace_mark	file:
val	trace/tracing_map.h	/^	struct tracing_map_elt		*val;$/;"	m	struct:tracing_map_entry	typeref:struct:tracing_map_entry::tracing_map_elt
valid	taskstats.c	/^	char valid;$/;"	m	struct:listener	file:
valid_policy	sched/sched.h	/^static inline bool valid_policy(int policy)$/;"	f
valid_ref_ctr_vma	events/uprobes.c	/^static bool valid_ref_ctr_vma(struct uprobe *uprobe,$/;"	f	file:
valid_state	locking/lockdep.c	/^valid_state(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
valid_state	power/suspend.c	/^static bool valid_state(suspend_state_t state)$/;"	f	file:
valid_vma	events/uprobes.c	/^static bool valid_vma(struct vm_area_struct *vma, bool is_register)$/;"	f	file:
validate_chain	locking/lockdep.c	/^static inline int validate_chain(struct task_struct *curr,$/;"	f	file:
validate_chain	locking/lockdep.c	/^static int validate_chain(struct task_struct *curr,$/;"	f	file:
validate_change	cgroup/cpuset.c	/^static int validate_change(struct cpuset *cur, struct cpuset *trial)$/;"	f	file:
validate_coredump_safety	sysctl.c	/^static void validate_coredump_safety(void)$/;"	f	file:
validate_creds_for_do_exit	cred.c	/^void validate_creds_for_do_exit(struct task_struct *tsk)$/;"	f
validate_prctl_map_addr	sys.c	/^static int validate_prctl_map_addr(struct prctl_mm_map *prctl_map)$/;"	f	file:
vals_str	trace/trace_events_hist.c	/^	char		*vals_str;$/;"	m	struct:hist_trigger_attrs	file:
value	audit.h	/^	char	*value;	\/* the cmdline field *\/$/;"	m	struct:audit_proctitle
value	debug/kdb/kdb_private.h	/^		unsigned long value;	\/* Address of symbol *\/$/;"	m	struct:__ksymtab
value	kallsyms.c	/^	unsigned long value;$/;"	m	struct:kallsym_iter	file:
value	sched/sched.h	/^	unsigned int value;$/;"	m	struct:uclamp_rq
value	sched/sched.h	/^	unsigned long value : bits_per(SCHED_CAPACITY_SCALE);$/;"	m	struct:uclamp_bucket
values	gcov/gcc_3_4.c	/^	gcov_type	*values;$/;"	m	struct:gcov_ctr_info	file:
values	gcov/gcc_4_7.c	/^	gcov_type *values;$/;"	m	struct:gcov_ctr_info	file:
values	irq/internals.h	/^	u64	values[IRQ_TIMINGS_SIZE];$/;"	m	struct:irq_timings
var	trace/trace_events_hist.c	/^	struct hist_field	*var;$/;"	m	struct:field_var	typeref:struct:field_var::hist_field	file:
var	trace/trace_events_hist.c	/^	struct hist_var			var;$/;"	m	struct:hist_field	typeref:struct:hist_field::hist_var	file:
var_defs	trace/trace_events_hist.c	/^	struct var_defs	var_defs;$/;"	m	struct:hist_trigger_attrs	typeref:struct:hist_trigger_attrs::var_defs	file:
var_defs	trace/trace_events_hist.c	/^struct var_defs {$/;"	s	file:
var_ops	bpf/btf.c	/^static const struct btf_kind_operations var_ops = {$/;"	v	typeref:struct:btf_kind_operations	file:
var_ref	trace/trace_events_hist.c	/^			struct hist_field	*var_ref;$/;"	m	struct:action_data::__anon46::__anon48	typeref:struct:action_data::__anon46::__anon48::hist_field	file:
var_ref_idx	trace/trace_events_hist.c	/^	unsigned int			var_ref_idx;$/;"	m	struct:hist_field	file:
var_ref_idx	trace/trace_events_hist.c	/^	unsigned int		var_ref_idx;$/;"	m	struct:action_data	file:
var_ref_vals	trace/trace_events_hist.c	/^	u64 *var_ref_vals;$/;"	m	struct:hist_elt_data	file:
var_refs	trace/trace_events_hist.c	/^	struct hist_field               *var_refs[TRACING_MAP_VARS_MAX];$/;"	m	struct:hist_trigger_data	typeref:struct:hist_trigger_data::hist_field	file:
var_set	trace/tracing_map.h	/^	bool				*var_set;$/;"	m	struct:tracing_map_elt
var_str	trace/trace_events_hist.c	/^			char			*var_str;$/;"	m	struct:action_data::__anon46::__anon48	file:
var_wake_function	sched/wait_bit.c	/^var_wake_function(struct wait_queue_entry *wq_entry, unsigned int mode,$/;"	f	file:
vars	trace/tracing_map.h	/^	atomic64_t			*vars;$/;"	m	struct:tracing_map_elt
vcpu_halted	locking/qspinlock_paravirt.h	/^	vcpu_halted,		\/* Used only in pv_wait_node *\/$/;"	e	enum:vcpu_state
vcpu_hashed	locking/qspinlock_paravirt.h	/^	vcpu_hashed,		\/* = pv_hash'ed + vcpu_halted *\/$/;"	e	enum:vcpu_state
vcpu_running	locking/qspinlock_paravirt.h	/^	vcpu_running = 0,$/;"	e	enum:vcpu_state
vcpu_state	locking/qspinlock_paravirt.h	/^enum vcpu_state {$/;"	g
vectors	time/timer.c	/^	struct hlist_head	vectors[WHEEL_SIZE];$/;"	m	struct:timer_base	typeref:struct:timer_base::hlist_head	file:
verbose	bpf/verifier.c	/^__printf(2, 3) static void verbose(void *private_data, const char *fmt, ...)$/;"	f	file:
verbose	locking/lockdep.c	/^static int verbose(struct lock_class *class)$/;"	f	file:
verbose	torture.c	/^static int verbose;$/;"	v	file:
verbose_linfo	bpf/verifier.c	/^__printf(3, 4) static void verbose_linfo(struct bpf_verifier_env *env,$/;"	f	file:
verif_pid	trace/trace_functions_graph.c	/^verif_pid(struct trace_seq *s, pid_t pid, int cpu, struct fgraph_data *data)$/;"	f	file:
verifier_phase	bpf/btf.c	/^enum verifier_phase {$/;"	g	file:
verifier_remove_insns	bpf/verifier.c	/^static int verifier_remove_insns(struct bpf_verifier_env *env, u32 off, u32 cnt)$/;"	f	file:
verify_exported_symbols	module.c	/^static int verify_exported_symbols(struct module *mod)$/;"	f	file:
verify_opcode	events/uprobes.c	/^static int verify_opcode(struct page *page, unsigned long vaddr, uprobe_opcode_t *new_opcode)$/;"	f	file:
vermagic	module.c	/^static const char vermagic[] = VERMAGIC_STRING;$/;"	v	file:
vers	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon15
version	gcov/clang.c	/^	unsigned int version;$/;"	m	struct:gcov_info	file:
version	gcov/gcc_3_4.c	/^	unsigned int			version;$/;"	m	struct:gcov_info	file:
version	gcov/gcc_4_7.c	/^	unsigned int version;$/;"	m	struct:gcov_info	file:
version	module.c	/^MODINFO_ATTR(version);$/;"	v
version_code	power/power.h	/^	u32			version_code;$/;"	m	struct:swsusp_info
version_sysfs_builtin	params.c	/^static void __init version_sysfs_builtin(void)$/;"	f	file:
very_verbose	locking/lockdep.c	/^static int very_verbose(struct lock_class *class)$/;"	f	file:
virt_base	dma/coherent.c	/^	void		*virt_base;$/;"	m	struct:dma_coherent_mem	file:
virt_ticks	time/posix-cpu-timers.c	/^static inline u64 virt_ticks(struct task_struct *p)$/;"	f	file:
visit_groups_merge	events/core.c	/^static int visit_groups_merge(struct perf_event_groups *groups, int cpu,$/;"	f	file:
visit_state	bpf/btf.c	/^enum visit_state {$/;"	g	file:
visit_states	bpf/btf.c	/^	u8 *visit_states;$/;"	m	struct:btf_verifier_env	file:
vkdb_printf	debug/kdb/kdb_io.c	/^int vkdb_printf(enum kdb_msgsrc src, const char *fmt, va_list ap)$/;"	f
vm86	sys_ni.c	/^COND_SYSCALL(vm86);$/;"	v
vm86old	sys_ni.c	/^COND_SYSCALL(vm86old);$/;"	v
vm_area_alloc	fork.c	/^struct vm_area_struct *vm_area_alloc(struct mm_struct *mm)$/;"	f
vm_area_cachep	fork.c	/^static struct kmem_cache *vm_area_cachep;$/;"	v	typeref:struct:kmem_cache	file:
vm_area_dup	fork.c	/^struct vm_area_struct *vm_area_dup(struct vm_area_struct *orig)$/;"	f
vm_area_free	fork.c	/^void vm_area_free(struct vm_area_struct *vma)$/;"	f
vm_table	sysctl.c	/^static struct ctl_table vm_table[] = {$/;"	v	typeref:struct:ctl_table	file:
vm_table	sysctl.c	/^static struct ctl_table vm_table[];$/;"	v	typeref:struct:ctl_table	file:
vma	events/core.c	/^	struct vm_area_struct	*vma;$/;"	m	struct:perf_mmap_event	typeref:struct:perf_mmap_event::vm_area_struct	file:
vma_has_uprobes	events/uprobes.c	/^vma_has_uprobes(struct vm_area_struct *vma, unsigned long start, unsigned long end)$/;"	f	file:
vmcoreinfo	ksysfs.c	/^KERNEL_ATTR_RO(vmcoreinfo);$/;"	v
vmcoreinfo_append_str	crash_core.c	/^void vmcoreinfo_append_str(const char *fmt, ...)$/;"	f
vmcoreinfo_data	crash_core.c	/^unsigned char *vmcoreinfo_data;$/;"	v
vmcoreinfo_data_safecopy	crash_core.c	/^static unsigned char *vmcoreinfo_data_safecopy;$/;"	v	file:
vmcoreinfo_note	crash_core.c	/^u32 *vmcoreinfo_note;$/;"	v
vmcoreinfo_show	ksysfs.c	/^static ssize_t vmcoreinfo_show(struct kobject *kobj,$/;"	f	file:
vmcoreinfo_size	crash_core.c	/^size_t vmcoreinfo_size;$/;"	v
voluntary_active_balance	sched/fair.c	/^voluntary_active_balance(struct lb_env *env)$/;"	f	file:
vprintk	printk/printk.c	/^EXPORT_SYMBOL(vprintk);$/;"	v
vprintk	printk/printk.c	/^asmlinkage int vprintk(const char *fmt, va_list args)$/;"	f
vprintk_default	printk/printk.c	/^EXPORT_SYMBOL_GPL(vprintk_default);$/;"	v
vprintk_default	printk/printk.c	/^int vprintk_default(const char *fmt, va_list args)$/;"	f
vprintk_deferred	printk/printk.c	/^int vprintk_deferred(const char *fmt, va_list args)$/;"	f
vprintk_emit	printk/printk.c	/^EXPORT_SYMBOL(vprintk_emit);$/;"	v
vprintk_emit	printk/printk.c	/^asmlinkage int vprintk_emit(int facility, int level,$/;"	f
vprintk_func	printk/internal.h	/^__printf(1, 0) int vprintk_func(const char *fmt, va_list args) { return 0; }$/;"	f
vprintk_func	printk/printk_safe.c	/^__printf(1, 0) int vprintk_func(const char *fmt, va_list args)$/;"	f
vprintk_nmi	printk/printk_safe.c	/^static __printf(1, 0) int vprintk_nmi(const char *fmt, va_list args)$/;"	f
vprintk_safe	printk/printk_safe.c	/^static __printf(1, 0) int vprintk_safe(const char *fmt, va_list args)$/;"	f
vprintk_store	printk/printk.c	/^int vprintk_store(int facility, int level,$/;"	f
vruntime_normalized	sched/fair.c	/^static inline bool vruntime_normalized(struct task_struct *p)$/;"	f	file:
vtime_account_guest	sched/cputime.c	/^static void vtime_account_guest(struct task_struct *tsk,$/;"	f	file:
vtime_account_idle	sched/cputime.c	/^void vtime_account_idle(struct task_struct *tsk)$/;"	f
vtime_account_irq_enter	sched/cputime.c	/^EXPORT_SYMBOL_GPL(vtime_account_irq_enter);$/;"	v
vtime_account_irq_enter	sched/cputime.c	/^void vtime_account_irq_enter(struct task_struct *tsk)$/;"	f
vtime_account_system	sched/cputime.c	/^void vtime_account_system(struct task_struct *tsk)$/;"	f
vtime_common_task_switch	sched/cputime.c	/^void vtime_common_task_switch(struct task_struct *prev)$/;"	f
vtime_delta	sched/cputime.c	/^static u64 vtime_delta(struct vtime *vtime)$/;"	f	file:
vtime_guest_enter	sched/cputime.c	/^EXPORT_SYMBOL_GPL(vtime_guest_enter);$/;"	v
vtime_guest_enter	sched/cputime.c	/^void vtime_guest_enter(struct task_struct *tsk)$/;"	f
vtime_guest_exit	sched/cputime.c	/^EXPORT_SYMBOL_GPL(vtime_guest_exit);$/;"	v
vtime_guest_exit	sched/cputime.c	/^void vtime_guest_exit(struct task_struct *tsk)$/;"	f
vtime_init_idle	sched/cputime.c	/^void vtime_init_idle(struct task_struct *t, int cpu)$/;"	f
vtime_user_enter	sched/cputime.c	/^void vtime_user_enter(struct task_struct *tsk)$/;"	f
vtime_user_exit	sched/cputime.c	/^void vtime_user_exit(struct task_struct *tsk)$/;"	f
wait	power/swap.c	/^	wait_queue_head_t	wait;$/;"	m	struct:hib_bio_batch	file:
wait	workqueue.c	/^	wait_queue_entry_t		wait;$/;"	m	struct:cwt_wait	file:
wait_bit_init	sched/wait_bit.c	/^void __init wait_bit_init(void)$/;"	f
wait_blkd_tasks	rcu/tree.h	/^	bool	wait_blkd_tasks;\/* Necessary to wait for blocked tasks to *\/$/;"	m	struct:rcu_node
wait_consider_task	exit.c	/^static int wait_consider_task(struct wait_opts *wo, int ptrace,$/;"	f	file:
wait_for_ap_thread	cpu.c	/^static inline void wait_for_ap_thread(struct cpuhp_cpu_state *st, bool bringup)$/;"	f	file:
wait_for_common	sched/completion.c	/^wait_for_common(struct completion *x, long timeout, int state)$/;"	f	file:
wait_for_common_io	sched/completion.c	/^wait_for_common_io(struct completion *x, long timeout, int state)$/;"	f	file:
wait_for_completion	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion);$/;"	v
wait_for_completion	sched/completion.c	/^void __sched wait_for_completion(struct completion *x)$/;"	f
wait_for_completion_interruptible	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_interruptible);$/;"	v
wait_for_completion_interruptible	sched/completion.c	/^int __sched wait_for_completion_interruptible(struct completion *x)$/;"	f
wait_for_completion_interruptible_timeout	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);$/;"	v
wait_for_completion_interruptible_timeout	sched/completion.c	/^wait_for_completion_interruptible_timeout(struct completion *x,$/;"	f
wait_for_completion_io	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_io);$/;"	v
wait_for_completion_io	sched/completion.c	/^void __sched wait_for_completion_io(struct completion *x)$/;"	f
wait_for_completion_io_timeout	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_io_timeout);$/;"	v
wait_for_completion_io_timeout	sched/completion.c	/^wait_for_completion_io_timeout(struct completion *x, unsigned long timeout)$/;"	f
wait_for_completion_killable	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_killable);$/;"	v
wait_for_completion_killable	sched/completion.c	/^int __sched wait_for_completion_killable(struct completion *x)$/;"	f
wait_for_completion_killable_timeout	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_killable_timeout);$/;"	v
wait_for_completion_killable_timeout	sched/completion.c	/^wait_for_completion_killable_timeout(struct completion *x,$/;"	f
wait_for_completion_timeout	sched/completion.c	/^EXPORT_SYMBOL(wait_for_completion_timeout);$/;"	v
wait_for_completion_timeout	sched/completion.c	/^wait_for_completion_timeout(struct completion *x, unsigned long timeout)$/;"	f
wait_for_kprobe_optimizer	kprobes.c	/^void wait_for_kprobe_optimizer(void)$/;"	f
wait_for_kprobe_optimizer	kprobes.c	936;"	d	file:
wait_for_vfork_done	fork.c	/^static int wait_for_vfork_done(struct task_struct *child,$/;"	f	file:
wait_on_pipe	trace/trace.c	/^static int wait_on_pipe(struct trace_iterator *iter, int full)$/;"	f	file:
wait_opts	exit.c	/^struct wait_opts {$/;"	s	file:
wait_rcu_exp_gp	rcu/tree_exp.h	/^static void wait_rcu_exp_gp(struct work_struct *wp)$/;"	f
wait_task_continued	exit.c	/^static int wait_task_continued(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
wait_task_inactive	sched/core.c	/^unsigned long wait_task_inactive(struct task_struct *p, long match_state)$/;"	f
wait_task_stopped	exit.c	/^static int wait_task_stopped(struct wait_opts *wo,$/;"	f	file:
wait_task_zombie	exit.c	/^static int wait_task_zombie(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
wait_to_die	trace/ring_buffer_benchmark.c	/^static void wait_to_die(void)$/;"	f	file:
wait_woken	sched/wait.c	/^EXPORT_SYMBOL(wait_woken);$/;"	v
wait_woken	sched/wait.c	/^long wait_woken(struct wait_queue_entry *wq_entry, unsigned mode, long timeout)$/;"	f
waiters	futex.c	/^	atomic_t waiters;$/;"	m	struct:futex_hash_bucket	file:
waiters	trace/ring_buffer.c	/^	wait_queue_head_t		waiters;$/;"	m	struct:rb_irq_work	file:
waiters_pending	trace/ring_buffer.c	/^	bool				waiters_pending;$/;"	m	struct:rb_irq_work	file:
waitid_info	exit.c	/^struct waitid_info {$/;"	s	file:
wake_affine	sched/fair.c	/^static int wake_affine(struct sched_domain *sd, struct task_struct *p,$/;"	f	file:
wake_affine_idle	sched/fair.c	/^wake_affine_idle(int this_cpu, int prev_cpu, int sync)$/;"	f	file:
wake_affine_weight	sched/fair.c	/^wake_affine_weight(struct sched_domain *sd, struct task_struct *p,$/;"	f	file:
wake_bit_function	sched/wait_bit.c	/^EXPORT_SYMBOL(wake_bit_function);$/;"	v
wake_bit_function	sched/wait_bit.c	/^int wake_bit_function(struct wait_queue_entry *wq_entry, unsigned mode, int sync, void *arg)$/;"	f
wake_cap	sched/fair.c	/^static int wake_cap(struct task_struct *p, int cpu, int prev_cpu)$/;"	f	file:
wake_futex_pi	futex.c	/^static int wake_futex_pi(u32 __user *uaddr, u32 uval, struct futex_pi_state *pi_state)$/;"	f	file:
wake_list	sched/sched.h	/^	struct llist_head	wake_list;$/;"	m	struct:rq	typeref:struct:rq::llist_head
wake_lock	power/main.c	/^power_attr(wake_lock);$/;"	v
wake_lock_show	power/main.c	/^static ssize_t wake_lock_show(struct kobject *kobj,$/;"	f	file:
wake_lock_store	power/main.c	/^static ssize_t wake_lock_store(struct kobject *kobj,$/;"	f	file:
wake_nocb_leader	rcu/tree_plugin.h	/^static void wake_nocb_leader(struct rcu_data *rdp, bool force)$/;"	f
wake_nocb_leader_defer	rcu/tree_plugin.h	/^static void wake_nocb_leader_defer(struct rcu_data *rdp, int waketype,$/;"	f
wake_q_add	sched/core.c	/^void wake_q_add(struct wake_q_head *head, struct task_struct *task)$/;"	f
wake_q_add_safe	sched/core.c	/^void wake_q_add_safe(struct wake_q_head *head, struct task_struct *task)$/;"	f
wake_threads_waitq	irq/manage.c	/^static void wake_threads_waitq(struct irq_desc *desc)$/;"	f	file:
wake_unlock	power/main.c	/^power_attr(wake_unlock);$/;"	v
wake_unlock_show	power/main.c	/^static ssize_t wake_unlock_show(struct kobject *kobj,$/;"	f	file:
wake_unlock_store	power/main.c	/^static ssize_t wake_unlock_store(struct kobject *kobj,$/;"	f	file:
wake_up_all_idle_cpus	smp.c	/^EXPORT_SYMBOL_GPL(wake_up_all_idle_cpus);$/;"	v
wake_up_all_idle_cpus	smp.c	/^void wake_up_all_idle_cpus(void)$/;"	f
wake_up_bit	sched/wait_bit.c	/^EXPORT_SYMBOL(wake_up_bit);$/;"	v
wake_up_bit	sched/wait_bit.c	/^void wake_up_bit(void *word, int bit)$/;"	f
wake_up_full_nohz_cpu	sched/core.c	/^static bool wake_up_full_nohz_cpu(int cpu)$/;"	f	file:
wake_up_idle_cpu	sched/core.c	/^static void wake_up_idle_cpu(int cpu)$/;"	f	file:
wake_up_if_idle	sched/core.c	/^void wake_up_if_idle(int cpu)$/;"	f
wake_up_klogd	printk/printk.c	/^void wake_up_klogd(void)$/;"	f
wake_up_klogd_work_func	printk/printk.c	/^static void wake_up_klogd_work_func(struct irq_work *irq_work)$/;"	f	file:
wake_up_new_task	sched/core.c	/^void wake_up_new_task(struct task_struct *p)$/;"	f
wake_up_nohz_cpu	sched/core.c	/^void wake_up_nohz_cpu(int cpu)$/;"	f
wake_up_process	sched/core.c	/^EXPORT_SYMBOL(wake_up_process);$/;"	v
wake_up_process	sched/core.c	/^int wake_up_process(struct task_struct *p)$/;"	f
wake_up_q	sched/core.c	/^void wake_up_q(struct wake_q_head *head)$/;"	f
wake_up_state	sched/core.c	/^int wake_up_state(struct task_struct *p, unsigned int state)$/;"	f
wake_up_var	sched/wait_bit.c	/^EXPORT_SYMBOL(wake_up_var);$/;"	v
wake_up_var	sched/wait_bit.c	/^void wake_up_var(void *var)$/;"	f
wake_up_worker	workqueue.c	/^static void wake_up_worker(struct worker_pool *pool)$/;"	f	file:
wake_wide	sched/fair.c	/^static int wake_wide(struct task_struct *p)$/;"	f	file:
wakelock	power/wakelock.c	/^struct wakelock {$/;"	s	file:
wakelock_lookup_add	power/wakelock.c	/^static struct wakelock *wakelock_lookup_add(const char *name, size_t len,$/;"	f	file:
wakelocks_gc	power/wakelock.c	/^static inline void wakelocks_gc(void) {}$/;"	f	file:
wakelocks_gc	power/wakelock.c	/^static void wakelocks_gc(void)$/;"	f	file:
wakelocks_gc_count	power/wakelock.c	/^static unsigned int wakelocks_gc_count;$/;"	v	file:
wakelocks_limit_exceeded	power/wakelock.c	/^static inline bool wakelocks_limit_exceeded(void) { return false; }$/;"	f	file:
wakelocks_limit_exceeded	power/wakelock.c	/^static inline bool wakelocks_limit_exceeded(void)$/;"	f	file:
wakelocks_lru_add	power/wakelock.c	/^static inline void wakelocks_lru_add(struct wakelock *wl) {}$/;"	f	file:
wakelocks_lru_add	power/wakelock.c	/^static inline void wakelocks_lru_add(struct wakelock *wl)$/;"	f	file:
wakelocks_lru_most_recent	power/wakelock.c	/^static inline void wakelocks_lru_most_recent(struct wakelock *wl) {}$/;"	f	file:
wakelocks_lru_most_recent	power/wakelock.c	/^static inline void wakelocks_lru_most_recent(struct wakelock *wl)$/;"	f	file:
wakelocks_tree	power/wakelock.c	/^static struct rb_root wakelocks_tree = RB_ROOT;$/;"	v	typeref:struct:rb_root	file:
wakeme_after_rcu	rcu/update.c	/^EXPORT_SYMBOL_GPL(wakeme_after_rcu);$/;"	v
wakeme_after_rcu	rcu/update.c	/^void wakeme_after_rcu(struct rcu_head *head)$/;"	f
wakeup	events/internal.h	/^	local_t				wakeup;		\/* wakeup stamp      *\/$/;"	m	struct:ring_buffer
wakeup	irq/irqdesc.c	/^IRQ_ATTR_RO(wakeup);$/;"	v
wakeup_busy	trace/trace_sched_wakeup.c	/^static bool wakeup_busy;$/;"	v	file:
wakeup_count	power/main.c	/^power_attr(wakeup_count);$/;"	v
wakeup_count_show	power/main.c	/^static ssize_t wakeup_count_show(struct kobject *kobj,$/;"	f	file:
wakeup_count_store	power/main.c	/^static ssize_t wakeup_count_store(struct kobject *kobj,$/;"	f	file:
wakeup_cpu	trace/trace_sched_wakeup.c	/^static int			wakeup_cpu;$/;"	v	file:
wakeup_current_cpu	trace/trace_sched_wakeup.c	/^static int			wakeup_current_cpu;$/;"	v	file:
wakeup_display_graph	trace/trace_sched_wakeup.c	/^static int wakeup_display_graph(struct trace_array *tr, int set)$/;"	f	file:
wakeup_dl	trace/trace_sched_wakeup.c	/^static int			wakeup_dl;$/;"	v	file:
wakeup_dl_tracer_init	trace/trace_sched_wakeup.c	/^static int wakeup_dl_tracer_init(struct trace_array *tr)$/;"	f	file:
wakeup_flag_changed	trace/trace_sched_wakeup.c	/^static int wakeup_flag_changed(struct trace_array *tr, u32 mask, int set)$/;"	f	file:
wakeup_full	trace/ring_buffer.c	/^	bool				wakeup_full;$/;"	m	struct:rb_irq_work	file:
wakeup_function_set	trace/trace_sched_wakeup.c	/^static int wakeup_function_set(struct trace_array *tr, u32 mask, int set)$/;"	f	file:
wakeup_gran	sched/fair.c	/^static unsigned long wakeup_gran(struct sched_entity *se)$/;"	f	file:
wakeup_graph_entry	trace/trace_sched_wakeup.c	/^static int wakeup_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
wakeup_graph_return	trace/trace_sched_wakeup.c	/^static void wakeup_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
wakeup_interval	trace/ring_buffer_benchmark.c	/^static int wakeup_interval = 100;$/;"	v	file:
wakeup_lock	trace/trace_sched_wakeup.c	/^static arch_spinlock_t wakeup_lock =$/;"	v	file:
wakeup_preempt_entity	sched/fair.c	/^wakeup_preempt_entity(struct sched_entity *curr, struct sched_entity *se)$/;"	f	file:
wakeup_print_header	trace/trace_sched_wakeup.c	/^static void wakeup_print_header(struct seq_file *s)$/;"	f	file:
wakeup_print_line	trace/trace_sched_wakeup.c	/^static enum print_line_t wakeup_print_line(struct trace_iterator *iter)$/;"	f	file:
wakeup_prio	trace/trace_sched_wakeup.c	/^static unsigned			wakeup_prio = -1;$/;"	v	file:
wakeup_readers	relay.c	/^static void wakeup_readers(struct irq_work *work)$/;"	f	file:
wakeup_reset	trace/trace_sched_wakeup.c	/^static void wakeup_reset(struct trace_array *tr)$/;"	f	file:
wakeup_rt	trace/trace_sched_wakeup.c	/^static int			wakeup_rt;$/;"	v	file:
wakeup_rt_tracer_init	trace/trace_sched_wakeup.c	/^static int wakeup_rt_tracer_init(struct trace_array *tr)$/;"	f	file:
wakeup_show	irq/irqdesc.c	/^static ssize_t wakeup_show(struct kobject *kobj,$/;"	f	file:
wakeup_softirqd	softirq.c	/^static void wakeup_softirqd(void)$/;"	f	file:
wakeup_task	trace/trace_sched_wakeup.c	/^static struct task_struct	*wakeup_task;$/;"	v	typeref:struct:task_struct	file:
wakeup_test_data	trace/trace_selftest.c	/^struct wakeup_test_data {$/;"	s	file:
wakeup_trace	trace/trace_sched_wakeup.c	/^static struct trace_array	*wakeup_trace;$/;"	v	typeref:struct:trace_array	file:
wakeup_trace_close	trace/trace_sched_wakeup.c	/^static void wakeup_trace_close(struct trace_iterator *iter) { }$/;"	f	file:
wakeup_trace_close	trace/trace_sched_wakeup.c	/^static void wakeup_trace_close(struct trace_iterator *iter)$/;"	f	file:
wakeup_trace_open	trace/trace_sched_wakeup.c	/^static void wakeup_trace_open(struct trace_iterator *iter) { }$/;"	f	file:
wakeup_trace_open	trace/trace_sched_wakeup.c	/^static void wakeup_trace_open(struct trace_iterator *iter)$/;"	f	file:
wakeup_tracer_call	trace/trace_sched_wakeup.c	/^wakeup_tracer_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
wakeup_tracer_init	trace/trace_sched_wakeup.c	/^static int wakeup_tracer_init(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_reset	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_reset(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_start	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_start(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_stop	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_stop(struct trace_array *tr)$/;"	f	file:
walk_iomem_res_desc	resource.c	/^EXPORT_SYMBOL_GPL(walk_iomem_res_desc);$/;"	v
walk_iomem_res_desc	resource.c	/^int walk_iomem_res_desc(unsigned long desc, unsigned long flags, u64 start,$/;"	f
walk_mem_res	resource.c	/^int walk_mem_res(u64 start, u64 end, void *arg,$/;"	f
walk_process_tree	fork.c	/^void walk_process_tree(struct task_struct *top, proc_visitor visitor, void *data)$/;"	f
walk_system_ram_range	resource.c	/^int walk_system_ram_range(unsigned long start_pfn, unsigned long nr_pages,$/;"	f
walk_system_ram_res	resource.c	/^int walk_system_ram_res(u64 start, u64 end, void *arg,$/;"	f
walk_tg_tree	sched/sched.h	/^static inline int walk_tg_tree(tg_visitor down, tg_visitor up, void *data)$/;"	f
walk_tg_tree_from	sched/core.c	/^int walk_tg_tree_from(struct task_group *from,$/;"	f
wants_signal	signal.c	/^static inline bool wants_signal(int sig, struct task_struct *p)$/;"	f	file:
warn	module.c	/^	bool warn;$/;"	m	struct:find_symbol_arg	file:
warn_args	panic.c	/^struct warn_args {$/;"	s	file:
warn_deprecated_v2	capability.c	/^static void warn_deprecated_v2(void)$/;"	f	file:
warn_failed_init_tracer	trace/trace_selftest.c	/^static inline void warn_failed_init_tracer(struct tracer *trace, int init_ret)$/;"	f	file:
warn_legacy_capability_use	capability.c	/^static void warn_legacy_capability_use(void)$/;"	f	file:
warn_no_thread	irq/handle.c	/^static void warn_no_thread(unsigned int irq, struct irqaction *action)$/;"	f	file:
warn_on_bintable	sysctl_binary.c	/^static void warn_on_bintable(const int *name, int nlen)$/;"	f	file:
warn_slowpath_fmt	panic.c	/^EXPORT_SYMBOL(warn_slowpath_fmt);$/;"	v
warn_slowpath_fmt	panic.c	/^void warn_slowpath_fmt(const char *file, int line, const char *fmt, ...)$/;"	f
warn_slowpath_fmt_taint	panic.c	/^EXPORT_SYMBOL(warn_slowpath_fmt_taint);$/;"	v
warn_slowpath_fmt_taint	panic.c	/^void warn_slowpath_fmt_taint(const char *file, int line,$/;"	f
warn_slowpath_null	panic.c	/^EXPORT_SYMBOL(warn_slowpath_null);$/;"	v
warn_slowpath_null	panic.c	/^void warn_slowpath_null(const char *file, int line)$/;"	f
warn_sysctl_write	sysctl.c	/^static void warn_sysctl_write(struct ctl_table *table)$/;"	f	file:
watchdog	hung_task.c	/^static int watchdog(void *dummy)$/;"	f	file:
watchdog	sched/rt.c	/^static inline void watchdog(struct rq *rq, struct task_struct *p) { }$/;"	f	file:
watchdog	sched/rt.c	/^static void watchdog(struct rq *rq, struct task_struct *p)$/;"	f	file:
watchdog	time/clocksource.c	/^static struct clocksource *watchdog;$/;"	v	typeref:struct:clocksource	file:
watchdog_check_timestamp	watchdog_hld.c	/^static bool watchdog_check_timestamp(void)$/;"	f	file:
watchdog_check_timestamp	watchdog_hld.c	/^static inline bool watchdog_check_timestamp(void)$/;"	f	file:
watchdog_cpumask_bits	watchdog.c	/^unsigned long *watchdog_cpumask_bits = cpumask_bits(&watchdog_cpumask);$/;"	v
watchdog_cpus	watchdog_hld.c	/^static atomic_t watchdog_cpus = ATOMIC_INIT(0);$/;"	v	file:
watchdog_disable	watchdog.c	/^static void watchdog_disable(unsigned int cpu)$/;"	f	file:
watchdog_enable	watchdog.c	/^static void watchdog_enable(unsigned int cpu)$/;"	f	file:
watchdog_enabled	watchdog.c	/^unsigned long __read_mostly watchdog_enabled;$/;"	v
watchdog_interrupt_count	watchdog.c	/^static void watchdog_interrupt_count(void)$/;"	f	file:
watchdog_nmi_disable	watchdog.c	/^void __weak watchdog_nmi_disable(unsigned int cpu)$/;"	f
watchdog_nmi_enable	watchdog.c	/^int __weak watchdog_nmi_enable(unsigned int cpu)$/;"	f
watchdog_nmi_probe	watchdog.c	/^int __weak __init watchdog_nmi_probe(void)$/;"	f
watchdog_nmi_start	watchdog.c	/^void __weak watchdog_nmi_start(void) { }$/;"	f
watchdog_nmi_stop	watchdog.c	/^void __weak watchdog_nmi_stop(void) { }$/;"	f
watchdog_overflow_callback	watchdog_hld.c	/^static void watchdog_overflow_callback(struct perf_event *event,$/;"	f	file:
watchdog_reset_pending	time/clocksource.c	/^static atomic_t watchdog_reset_pending;$/;"	v	file:
watchdog_running	time/clocksource.c	/^static int watchdog_running;$/;"	v	file:
watchdog_task	hung_task.c	/^static struct task_struct *watchdog_task;$/;"	v	typeref:struct:task_struct	file:
watchdog_thresh	watchdog.c	/^int __read_mostly watchdog_thresh = 10;$/;"	v
watchdog_thresh_setup	watchdog.c	/^static int __init watchdog_thresh_setup(char *str)$/;"	f	file:
watchdog_timer	time/clocksource.c	/^static struct timer_list watchdog_timer;$/;"	v	typeref:struct:timer_list	file:
watchdog_timer_fn	watchdog.c	/^static enum hrtimer_restart watchdog_timer_fn(struct hrtimer *hrtimer)$/;"	f	file:
watchdog_ts	workqueue.c	/^	unsigned long		watchdog_ts;	\/* L: watchdog timestamp *\/$/;"	m	struct:worker_pool	file:
watchdog_update_hrtimer_threshold	watchdog_hld.c	/^void watchdog_update_hrtimer_threshold(u64 period)$/;"	f
watchdog_user_enabled	watchdog.c	/^int __read_mostly watchdog_user_enabled = 1;$/;"	v
watches	audit_watch.c	/^	struct list_head	watches; \/* anchor for audit_watch->wlist *\/$/;"	m	struct:audit_parent	typeref:struct:audit_parent::list_head	file:
watermark	events/internal.h	/^	long				watermark;	\/* wakeup watermark  *\/$/;"	m	struct:ring_buffer
wd_hw_attr	watchdog_hld.c	/^static struct perf_event_attr wd_hw_attr = {$/;"	v	typeref:struct:perf_event_attr	file:
what2act	trace/blktrace.c	/^} what2act[] = {$/;"	v	typeref:struct:__anon38	file:
when_to_branch	trace/trace_events_filter.c	/^	int			when_to_branch;$/;"	m	struct:prog_entry	file:
while_each_subsys_mask	cgroup/cgroup.c	699;"	d	file:
while_for_each_event_file	trace/trace_events.c	70;"	d	file:
while_for_each_ftrace_op	trace/ftrace_internal.h	23;"	d
while_for_each_ftrace_rec	trace/ftrace.c	1519;"	d	file:
width_fops	trace/trace_hwlat.c	/^static const struct file_operations width_fops = {$/;"	v	typeref:struct:file_operations	file:
will_become_orphaned_pgrp	exit.c	/^static int will_become_orphaned_pgrp(struct pid *pgrp,$/;"	f	file:
window_fops	trace/trace_hwlat.c	/^static const struct file_operations window_fops = {$/;"	v	typeref:struct:file_operations	file:
window_reset	sched/psi.c	/^static void window_reset(struct psi_window *win, u64 now, u64 value,$/;"	f	file:
window_update	sched/psi.c	/^static u64 window_update(struct psi_window *win, u64 now, u64 value)$/;"	f	file:
within	locking/lockdep.c	/^static inline int within(const void *addr, void *start, unsigned long size)$/;"	f	file:
within	module.c	/^static inline int within(unsigned long addr, void *start, unsigned long size)$/;"	f	file:
within_kprobe_blacklist	kprobes.c	/^bool within_kprobe_blacklist(unsigned long addr)$/;"	f
within_margin	sched/fair.c	/^static inline bool within_margin(int value, int margin)$/;"	f	file:
within_notrace_func	trace/trace_kprobe.c	/^static bool within_notrace_func(struct trace_kprobe *tk)$/;"	f	file:
within_notrace_func	trace/trace_kprobe.c	384;"	d	file:
wlist	audit_watch.c	/^	struct list_head	wlist;	\/* entry in parent->watches list *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::list_head	file:
wo_flags	exit.c	/^	int			wo_flags;$/;"	m	struct:wait_opts	file:
wo_info	exit.c	/^	struct waitid_info	*wo_info;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::waitid_info	file:
wo_pid	exit.c	/^	struct pid		*wo_pid;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::pid	file:
wo_rusage	exit.c	/^	struct rusage		*wo_rusage;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::rusage	file:
wo_stat	exit.c	/^	int			wo_stat;$/;"	m	struct:wait_opts	file:
wo_type	exit.c	/^	enum pid_type		wo_type;$/;"	m	struct:wait_opts	typeref:enum:wait_opts::pid_type	file:
woken_wake_function	sched/wait.c	/^EXPORT_SYMBOL(woken_wake_function);$/;"	v
woken_wake_function	sched/wait.c	/^int woken_wake_function(struct wait_queue_entry *wq_entry, unsigned mode, int sync, void *key)$/;"	f
work	acct.c	/^	struct work_struct	work;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::work_struct	file:
work	async.c	/^	struct work_struct	work;$/;"	m	struct:async_entry	typeref:struct:async_entry::work_struct	file:
work	cgroup/cpuset.c	/^	struct work_struct	work;$/;"	m	struct:cpuset_migrate_mm_work	typeref:struct:cpuset_migrate_mm_work::work_struct	file:
work	events/internal.h	/^	struct work_struct		work;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::work_struct
work	kthread.c	/^	struct kthread_work	work;$/;"	m	struct:kthread_flush_work	typeref:struct:kthread_flush_work::kthread_work	file:
work	locking/test-ww_mutex.c	/^	struct work_struct work;$/;"	m	struct:stress	typeref:struct:stress::work_struct	file:
work	locking/test-ww_mutex.c	/^	struct work_struct work;$/;"	m	struct:test_abba	typeref:struct:test_abba::work_struct	file:
work	locking/test-ww_mutex.c	/^	struct work_struct work;$/;"	m	struct:test_cycle	typeref:struct:test_cycle::work_struct	file:
work	locking/test-ww_mutex.c	/^	struct work_struct work;$/;"	m	struct:test_mutex	typeref:struct:test_mutex::work_struct	file:
work	printk/printk_safe.c	/^	struct irq_work		work;	\/* IRQ work that flushes the buffer *\/$/;"	m	struct:printk_safe_seq_buf	typeref:struct:printk_safe_seq_buf::irq_work	file:
work	sched/core.c	/^	struct delayed_work	work;$/;"	m	struct:tick_work	typeref:struct:tick_work::delayed_work	file:
work	sched/cpufreq_schedutil.c	/^	struct			kthread_work work;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::kthread_work	file:
work	smp.c	/^	struct work_struct	work;$/;"	m	struct:smp_call_on_cpu_struct	typeref:struct:smp_call_on_cpu_struct::work_struct	file:
work	trace/ring_buffer.c	/^	struct irq_work			work;$/;"	m	struct:rb_irq_work	typeref:struct:rb_irq_work::irq_work	file:
work	workqueue.c	/^	struct work_struct	*work;$/;"	m	struct:cwt_wait	typeref:struct:cwt_wait::work_struct	file:
work	workqueue.c	/^	struct work_struct	work;$/;"	m	struct:wq_barrier	typeref:struct:wq_barrier::work_struct	file:
work	workqueue.c	/^	struct work_struct work;$/;"	m	struct:work_for_cpu	typeref:struct:work_for_cpu::work_struct	file:
work_busy	workqueue.c	/^EXPORT_SYMBOL_GPL(work_busy);$/;"	v
work_busy	workqueue.c	/^unsigned int work_busy(struct work_struct *work)$/;"	f
work_color	workqueue.c	/^	int			work_color;	\/* L: current color *\/$/;"	m	struct:pool_workqueue	file:
work_color	workqueue.c	/^	int			work_color;	\/* WQ: current work color *\/$/;"	m	struct:workqueue_struct	file:
work_color_to_flags	workqueue.c	/^static unsigned int work_color_to_flags(int color)$/;"	f	file:
work_debug_descr	workqueue.c	/^static struct debug_obj_descr work_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
work_debug_descr	workqueue.c	/^static struct debug_obj_descr work_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
work_debug_hint	workqueue.c	/^static void *work_debug_hint(void *addr)$/;"	f	file:
work_exited	task_work.c	/^static struct callback_head work_exited; \/* all we need is ->next == NULL *\/$/;"	v	typeref:struct:callback_head	file:
work_fixup_free	workqueue.c	/^static bool work_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
work_fixup_init	workqueue.c	/^static bool work_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
work_for_cpu	workqueue.c	/^struct work_for_cpu {$/;"	s	file:
work_for_cpu_fn	workqueue.c	/^static void work_for_cpu_fn(struct work_struct *work)$/;"	f	file:
work_in_progress	sched/cpufreq_schedutil.c	/^	bool			work_in_progress;$/;"	m	struct:sugov_policy	file:
work_is_canceling	workqueue.c	/^static bool work_is_canceling(struct work_struct *work)$/;"	f	file:
work_is_static_object	workqueue.c	/^static bool work_is_static_object(void *addr)$/;"	f	file:
work_lock	sched/cpufreq_schedutil.c	/^	struct			mutex work_lock;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::mutex	file:
work_next_color	workqueue.c	/^static int work_next_color(int color)$/;"	f	file:
work_on_cpu	workqueue.c	/^EXPORT_SYMBOL_GPL(work_on_cpu);$/;"	v
work_on_cpu	workqueue.c	/^long work_on_cpu(int cpu, long (*fn)(void *), void *arg)$/;"	f
work_on_cpu_safe	workqueue.c	/^EXPORT_SYMBOL_GPL(work_on_cpu_safe);$/;"	v
work_on_cpu_safe	workqueue.c	/^long work_on_cpu_safe(int cpu, long (*fn)(void *), void *arg)$/;"	f
worker	sched/cpufreq_schedutil.c	/^	struct			kthread_worker worker;$/;"	m	struct:sugov_policy	typeref:struct:sugov_policy::kthread_worker	file:
worker	workqueue_internal.h	/^struct worker {$/;"	s
worker_attach_to_pool	workqueue.c	/^static void worker_attach_to_pool(struct worker *worker,$/;"	f	file:
worker_clr_flags	workqueue.c	/^static inline void worker_clr_flags(struct worker *worker, unsigned int flags)$/;"	f	file:
worker_detach_from_pool	workqueue.c	/^static void worker_detach_from_pool(struct worker *worker)$/;"	f	file:
worker_enter_idle	workqueue.c	/^static void worker_enter_idle(struct worker *worker)$/;"	f	file:
worker_ida	workqueue.c	/^	struct ida		worker_ida;	\/* worker IDs for task name *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::ida	file:
worker_leave_idle	workqueue.c	/^static void worker_leave_idle(struct worker *worker)$/;"	f	file:
worker_pool	workqueue.c	/^struct worker_pool {$/;"	s	file:
worker_pool_assign_id	workqueue.c	/^static int worker_pool_assign_id(struct worker_pool *pool)$/;"	f	file:
worker_set_flags	workqueue.c	/^static inline void worker_set_flags(struct worker *worker, unsigned int flags)$/;"	f	file:
worker_thread	workqueue.c	/^static int worker_thread(void *__worker)$/;"	f	file:
workers	workqueue.c	/^	struct list_head	workers;	\/* A: attached workers *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::list_head	file:
worklist	workqueue.c	/^	struct list_head	worklist;	\/* L: list of pending works *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::list_head	file:
workqueue_apply_unbound_cpumask	workqueue.c	/^static int workqueue_apply_unbound_cpumask(void)$/;"	f	file:
workqueue_congested	workqueue.c	/^EXPORT_SYMBOL_GPL(workqueue_congested);$/;"	v
workqueue_congested	workqueue.c	/^bool workqueue_congested(int cpu, struct workqueue_struct *wq)$/;"	f
workqueue_freezing	workqueue.c	/^static bool workqueue_freezing;		\/* PL: have wqs started freezing? *\/$/;"	v	file:
workqueue_init	workqueue.c	/^int __init workqueue_init(void)$/;"	f
workqueue_init_early	workqueue.c	/^int __init workqueue_init_early(void)$/;"	f
workqueue_offline_cpu	workqueue.c	/^int workqueue_offline_cpu(unsigned int cpu)$/;"	f
workqueue_online_cpu	workqueue.c	/^int workqueue_online_cpu(unsigned int cpu)$/;"	f
workqueue_prepare_cpu	workqueue.c	/^int workqueue_prepare_cpu(unsigned int cpu)$/;"	f
workqueue_select_cpu_near	workqueue.c	/^static int workqueue_select_cpu_near(int node)$/;"	f	file:
workqueue_set_max_active	workqueue.c	/^EXPORT_SYMBOL_GPL(workqueue_set_max_active);$/;"	v
workqueue_set_max_active	workqueue.c	/^void workqueue_set_max_active(struct workqueue_struct *wq, int max_active)$/;"	f
workqueue_set_unbound_cpumask	workqueue.c	/^int workqueue_set_unbound_cpumask(cpumask_var_t cpumask)$/;"	f
workqueue_struct	workqueue.c	/^struct workqueue_struct {$/;"	s	file:
workqueue_sysfs_register	workqueue.c	/^int workqueue_sysfs_register(struct workqueue_struct *wq)$/;"	f
workqueue_sysfs_unregister	workqueue.c	/^static void workqueue_sysfs_unregister(struct workqueue_struct *wq)	{ }$/;"	f	file:
workqueue_sysfs_unregister	workqueue.c	/^static void workqueue_sysfs_unregister(struct workqueue_struct *wq)$/;"	f	file:
works	stop_machine.c	/^	struct list_head	works;		\/* list of pending works *\/$/;"	m	struct:cpu_stopper	typeref:struct:cpu_stopper::list_head	file:
wq	events/uprobes.c	/^	wait_queue_head_t 		wq;		\/* if all slots are busy *\/$/;"	m	struct:xol_area	file:
wq	locking/test-ww_mutex.c	/^struct workqueue_struct *wq;$/;"	v	typeref:struct:workqueue_struct
wq	workqueue.c	/^	struct workqueue_struct		*wq;$/;"	m	struct:wq_device	typeref:struct:wq_device::workqueue_struct	file:
wq	workqueue.c	/^	struct workqueue_struct	*wq;		\/* target workqueue *\/$/;"	m	struct:apply_wqattrs_ctx	typeref:struct:apply_wqattrs_ctx::workqueue_struct	file:
wq	workqueue.c	/^	struct workqueue_struct *wq;		\/* I: the owning workqueue *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::workqueue_struct	file:
wq_barrier	workqueue.c	/^struct wq_barrier {$/;"	s	file:
wq_barrier_func	workqueue.c	/^static void wq_barrier_func(struct work_struct *work)$/;"	f	file:
wq_calc_node_cpumask	workqueue.c	/^static bool wq_calc_node_cpumask(const struct workqueue_attrs *attrs, int node,$/;"	f	file:
wq_clamp_max_active	workqueue.c	/^static int wq_clamp_max_active(int max_active, unsigned int flags,$/;"	f	file:
wq_cpumask_show	workqueue.c	/^static ssize_t wq_cpumask_show(struct device *dev,$/;"	f	file:
wq_cpumask_store	workqueue.c	/^static ssize_t wq_cpumask_store(struct device *dev,$/;"	f	file:
wq_debug_force_rr_cpu	workqueue.c	/^static bool wq_debug_force_rr_cpu = false;$/;"	v	file:
wq_debug_force_rr_cpu	workqueue.c	/^static bool wq_debug_force_rr_cpu = true;$/;"	v	file:
wq_dev	workqueue.c	/^	struct wq_device	*wq_dev;	\/* I: for sysfs interface *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::wq_device	file:
wq_device	workqueue.c	/^struct wq_device {$/;"	s	file:
wq_device_release	workqueue.c	/^static void wq_device_release(struct device *dev)$/;"	f	file:
wq_disable_numa	workqueue.c	/^static bool wq_disable_numa;$/;"	v	file:
wq_flusher	workqueue.c	/^struct wq_flusher {$/;"	s	file:
wq_free_lockdep	workqueue.c	/^static void wq_free_lockdep(struct workqueue_struct *wq)$/;"	f	file:
wq_init_lockdep	workqueue.c	/^static void wq_init_lockdep(struct workqueue_struct *wq)$/;"	f	file:
wq_nice_show	workqueue.c	/^static ssize_t wq_nice_show(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_nice_store	workqueue.c	/^static ssize_t wq_nice_store(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_numa_enabled	workqueue.c	/^static bool wq_numa_enabled;		\/* unbound NUMA affinity enabled *\/$/;"	v	file:
wq_numa_init	workqueue.c	/^static void __init wq_numa_init(void)$/;"	f	file:
wq_numa_possible_cpumask	workqueue.c	/^static cpumask_var_t *wq_numa_possible_cpumask;$/;"	v	file:
wq_numa_show	workqueue.c	/^static ssize_t wq_numa_show(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_numa_store	workqueue.c	/^static ssize_t wq_numa_store(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_online	workqueue.c	/^static bool wq_online;			\/* can kworkers be created yet? *\/$/;"	v	file:
wq_pool_ids_show	workqueue.c	/^static ssize_t wq_pool_ids_show(struct device *dev,$/;"	f	file:
wq_power_efficient	workqueue.c	/^static bool wq_power_efficient = IS_ENABLED(CONFIG_WQ_POWER_EFFICIENT_DEFAULT);$/;"	v	file:
wq_select_unbound_cpu	workqueue.c	/^static int wq_select_unbound_cpu(int cpu)$/;"	f	file:
wq_subsys	workqueue.c	/^static struct bus_type wq_subsys = {$/;"	v	typeref:struct:bus_type	file:
wq_sysfs	workqueue.c	/^ATTRIBUTE_GROUPS(wq_sysfs);$/;"	v
wq_sysfs_attrs	workqueue.c	/^static struct attribute *wq_sysfs_attrs[] = {$/;"	v	typeref:struct:attribute	file:
wq_sysfs_cpumask_attr	workqueue.c	/^static struct device_attribute wq_sysfs_cpumask_attr =$/;"	v	typeref:struct:device_attribute	file:
wq_sysfs_init	workqueue.c	/^core_initcall(wq_sysfs_init);$/;"	v
wq_sysfs_init	workqueue.c	/^static int __init wq_sysfs_init(void)$/;"	f	file:
wq_sysfs_prep_attrs	workqueue.c	/^static struct workqueue_attrs *wq_sysfs_prep_attrs(struct workqueue_struct *wq)$/;"	f	file:
wq_sysfs_unbound_attrs	workqueue.c	/^static struct device_attribute wq_sysfs_unbound_attrs[] = {$/;"	v	typeref:struct:device_attribute	file:
wq_unbound_cpumask	workqueue.c	/^static cpumask_var_t wq_unbound_cpumask;$/;"	v	file:
wq_unbound_cpumask_show	workqueue.c	/^static ssize_t wq_unbound_cpumask_show(struct device *dev,$/;"	f	file:
wq_unbound_cpumask_store	workqueue.c	/^static ssize_t wq_unbound_cpumask_store(struct device *dev,$/;"	f	file:
wq_unregister_lockdep	workqueue.c	/^static void wq_unregister_lockdep(struct workqueue_struct *wq)$/;"	f	file:
wq_update_unbound_numa	workqueue.c	/^static void wq_update_unbound_numa(struct workqueue_struct *wq, int cpu,$/;"	f	file:
wq_update_unbound_numa_attrs_buf	workqueue.c	/^static struct workqueue_attrs *wq_update_unbound_numa_attrs_buf;$/;"	v	typeref:struct:workqueue_attrs	file:
wq_watchdog_init	workqueue.c	/^static inline void wq_watchdog_init(void) { }$/;"	f	file:
wq_watchdog_init	workqueue.c	/^static void wq_watchdog_init(void)$/;"	f	file:
wq_watchdog_param_set_thresh	workqueue.c	/^static int wq_watchdog_param_set_thresh(const char *val,$/;"	f	file:
wq_watchdog_reset_touched	workqueue.c	/^static void wq_watchdog_reset_touched(void)$/;"	f	file:
wq_watchdog_set_thresh	workqueue.c	/^static void wq_watchdog_set_thresh(unsigned long thresh)$/;"	f	file:
wq_watchdog_thresh	workqueue.c	/^static unsigned long wq_watchdog_thresh = 30;$/;"	v	file:
wq_watchdog_thresh_ops	workqueue.c	/^static const struct kernel_param_ops wq_watchdog_thresh_ops = {$/;"	v	typeref:struct:kernel_param_ops	file:
wq_watchdog_timer	workqueue.c	/^static struct timer_list wq_watchdog_timer;$/;"	v	typeref:struct:timer_list	file:
wq_watchdog_timer_fn	workqueue.c	/^static void wq_watchdog_timer_fn(struct timer_list *unused)$/;"	f	file:
wq_watchdog_touch	workqueue.c	/^notrace void wq_watchdog_touch(int cpu)$/;"	f
wq_watchdog_touched	workqueue.c	/^static unsigned long wq_watchdog_touched = INITIAL_JIFFIES;$/;"	v	file:
wq_worker_comm	workqueue.c	/^void wq_worker_comm(char *buf, size_t size, struct task_struct *task)$/;"	f
wq_worker_last_func	workqueue.c	/^work_func_t wq_worker_last_func(struct task_struct *task)$/;"	f
wq_worker_running	workqueue.c	/^void wq_worker_running(struct task_struct *task)$/;"	f
wq_worker_sleeping	workqueue.c	/^void wq_worker_sleeping(struct task_struct *task)$/;"	f
wqattrs_equal	workqueue.c	/^static bool wqattrs_equal(const struct workqueue_attrs *a,$/;"	f	file:
wqattrs_hash	workqueue.c	/^static u32 wqattrs_hash(const struct workqueue_attrs *attrs)$/;"	f	file:
wqh	seccomp.c	/^	wait_queue_head_t wqh;$/;"	m	struct:notification	file:
wrap_kt	time/sched_clock.c	/^	ktime_t			wrap_kt;$/;"	m	struct:clock_data	file:
wrap_max	sched/clock.c	/^static inline u64 wrap_max(u64 x, u64 y)$/;"	f	file:
wrap_min	sched/clock.c	/^static inline u64 wrap_min(u64 x, u64 y)$/;"	f	file:
write	trace/ring_buffer.c	/^	local_t		 write;		\/* index for next write *\/$/;"	m	struct:buffer_page	file:
write_actions_logged	seccomp.c	/^static int write_actions_logged(struct ctl_table *ro_table, void __user *buffer,$/;"	f	file:
write_comp_data	kcov.c	/^static void notrace write_comp_data(u64 type, u64 arg1, u64 arg2, u64 ip)$/;"	f	file:
write_cpuhp_fail	cpu.c	/^static ssize_t write_cpuhp_fail(struct device *dev,$/;"	f	file:
write_cpuhp_target	cpu.c	/^static ssize_t write_cpuhp_target(struct device *dev,$/;"	f	file:
write_delay	locking/locktorture.c	/^	void (*write_delay)(struct torture_random_state *trsp);$/;"	m	struct:lock_torture_ops	file:
write_enabled_file_bool	kprobes.c	/^static ssize_t write_enabled_file_bool(struct file *file,$/;"	f	file:
write_irq_affinity	irq/proc.c	/^static ssize_t write_irq_affinity(int type, struct file *file,$/;"	f	file:
write_iteration	trace/ring_buffer_benchmark.c	/^static unsigned int write_iteration = 50;$/;"	v	file:
write_mem_msg	debug/gdbstub.c	/^static int write_mem_msg(int binary)$/;"	f	file:
write_page	power/swap.c	/^static int write_page(void *buf, sector_t offset, struct hib_bio_batch *hb)$/;"	f	file:
write_profile	profile.c	/^static ssize_t write_profile(struct file *file, const char __user *buf,$/;"	f	file:
write_stamp	trace/ring_buffer.c	/^	u64				write_stamp;$/;"	m	struct:ring_buffer_per_cpu	file:
writelock	locking/locktorture.c	/^	int (*writelock)(void);$/;"	m	struct:lock_torture_ops	file:
writer_durations	rcu/rcuperf.c	/^static u64 **writer_durations;$/;"	v	file:
writer_n_durations	rcu/rcuperf.c	/^static int *writer_n_durations;$/;"	v	file:
writer_task	rcu/rcutorture.c	/^static struct task_struct *writer_task;$/;"	v	typeref:struct:task_struct	file:
writer_tasks	locking/locktorture.c	/^static struct task_struct **writer_tasks;$/;"	v	typeref:struct:task_struct	file:
writer_tasks	rcu/rcuperf.c	/^static struct task_struct **writer_tasks;$/;"	v	typeref:struct:task_struct	file:
writer_wait_state	locking/rwsem.c	/^enum writer_wait_state {$/;"	g	file:
writeunlock	locking/locktorture.c	/^	void (*writeunlock)(void);$/;"	m	struct:lock_torture_ops	file:
wrk	power/swap.c	/^	unsigned char wrk[LZO1X_1_MEM_COMPRESS];  \/* compression workspace *\/$/;"	m	struct:cmp_data	file:
ws	power/wakelock.c	/^	struct wakeup_source	ws;$/;"	m	struct:wakelock	typeref:struct:wakelock::wakeup_source	file:
ws	time/alarmtimer.c	/^static struct wakeup_source *ws;$/;"	v	typeref:struct:wakeup_source	file:
ww_mutex_deadlock_injection	locking/mutex.c	/^ww_mutex_deadlock_injection(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)$/;"	f	file:
ww_mutex_lock	locking/mutex.c	/^EXPORT_SYMBOL(ww_mutex_lock);$/;"	v
ww_mutex_lock	locking/mutex.c	/^EXPORT_SYMBOL_GPL(ww_mutex_lock);$/;"	v
ww_mutex_lock	locking/mutex.c	/^ww_mutex_lock(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)$/;"	f
ww_mutex_lock_acquired	locking/mutex.c	/^ww_mutex_lock_acquired(struct ww_mutex *ww, struct ww_acquire_ctx *ww_ctx)$/;"	f	file:
ww_mutex_lock_interruptible	locking/mutex.c	/^EXPORT_SYMBOL(ww_mutex_lock_interruptible);$/;"	v
ww_mutex_lock_interruptible	locking/mutex.c	/^EXPORT_SYMBOL_GPL(ww_mutex_lock_interruptible);$/;"	v
ww_mutex_lock_interruptible	locking/mutex.c	/^ww_mutex_lock_interruptible(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)$/;"	f
ww_mutex_lock_ops	locking/locktorture.c	/^static struct lock_torture_ops ww_mutex_lock_ops = {$/;"	v	typeref:struct:lock_torture_ops	file:
ww_mutex_set_context_fastpath	locking/mutex.c	/^ww_mutex_set_context_fastpath(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)$/;"	f	file:
ww_mutex_spin_on_owner	locking/mutex.c	/^bool ww_mutex_spin_on_owner(struct mutex *lock, struct ww_acquire_ctx *ww_ctx,$/;"	f	file:
ww_mutex_unlock	locking/mutex.c	/^EXPORT_SYMBOL(ww_mutex_unlock);$/;"	v
ww_mutex_unlock	locking/mutex.c	/^void __sched ww_mutex_unlock(struct ww_mutex *lock)$/;"	f
x16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x16);$/;"	v
x32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x32);$/;"	v
x64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x64);$/;"	v
x8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x8);$/;"	v
xacct_add_tsk	tsacct.c	/^void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)$/;"	f
xchg_tail	locking/qspinlock.c	/^static __always_inline u32 xchg_tail(struct qspinlock *lock, u32 tail)$/;"	f	file:
xdp_bulk_queue	bpf/cpumap.c	/^struct xdp_bulk_queue {$/;"	s	file:
xdp_bulk_queue	bpf/devmap.c	/^struct xdp_bulk_queue {$/;"	s	file:
xdp_bulk_tx	bpf/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(xdp_bulk_tx);$/;"	v
xdp_exception	bpf/core.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(xdp_exception);$/;"	v
xol_add_vma	events/uprobes.c	/^static int xol_add_vma(struct mm_struct *mm, struct xol_area *area)$/;"	f	file:
xol_area	events/uprobes.c	/^struct xol_area {$/;"	s	file:
xol_free_insn_slot	events/uprobes.c	/^static void xol_free_insn_slot(struct task_struct *tsk)$/;"	f	file:
xol_get_insn_slot	events/uprobes.c	/^static unsigned long xol_get_insn_slot(struct uprobe *uprobe)$/;"	f	file:
xol_mapping	events/uprobes.c	/^	struct vm_special_mapping	xol_mapping;$/;"	m	struct:xol_area	typeref:struct:xol_area::vm_special_mapping	file:
xol_take_insn_slot	events/uprobes.c	/^static unsigned long xol_take_insn_slot(struct xol_area *area)$/;"	f	file:
xsk_map	bpf/xskmap.c	/^	struct xdp_sock **xsk_map;$/;"	m	struct:xsk_map	typeref:struct:xsk_map::xdp_sock	file:
xsk_map	bpf/xskmap.c	/^struct xsk_map {$/;"	s	file:
xsk_map_alloc	bpf/xskmap.c	/^static struct bpf_map *xsk_map_alloc(union bpf_attr *attr)$/;"	f	file:
xsk_map_delete_elem	bpf/xskmap.c	/^static int xsk_map_delete_elem(struct bpf_map *map, void *key)$/;"	f	file:
xsk_map_free	bpf/xskmap.c	/^static void xsk_map_free(struct bpf_map *map)$/;"	f	file:
xsk_map_get_next_key	bpf/xskmap.c	/^static int xsk_map_get_next_key(struct bpf_map *map, void *key, void *next_key)$/;"	f	file:
xsk_map_lookup_elem	bpf/xskmap.c	/^static void *xsk_map_lookup_elem(struct bpf_map *map, void *key)$/;"	f	file:
xsk_map_lookup_elem_sys_only	bpf/xskmap.c	/^static void *xsk_map_lookup_elem_sys_only(struct bpf_map *map, void *key)$/;"	f	file:
xsk_map_ops	bpf/xskmap.c	/^const struct bpf_map_ops xsk_map_ops = {$/;"	v	typeref:struct:bpf_map_ops
xsk_map_update_elem	bpf/xskmap.c	/^static int xsk_map_update_elem(struct bpf_map *map, void *key, void *value,$/;"	f	file:
xtime_update	time/timekeeping.c	/^void xtime_update(unsigned long ticks)$/;"	f
yield	sched/core.c	/^EXPORT_SYMBOL(yield);$/;"	v
yield	sched/core.c	/^void __sched yield(void)$/;"	f
yield_task	sched/sched.h	/^	void (*yield_task)   (struct rq *rq);$/;"	m	struct:sched_class
yield_task_dl	sched/deadline.c	/^static void yield_task_dl(struct rq *rq)$/;"	f	file:
yield_task_fair	sched/fair.c	/^static void yield_task_fair(struct rq *rq)$/;"	f	file:
yield_task_rt	sched/rt.c	/^static void yield_task_rt(struct rq *rq)$/;"	f	file:
yield_task_stop	sched/stop_task.c	/^static void yield_task_stop(struct rq *rq)$/;"	f	file:
yield_to	sched/core.c	/^EXPORT_SYMBOL_GPL(yield_to);$/;"	v
yield_to	sched/core.c	/^int __sched yield_to(struct task_struct *p, bool preempt)$/;"	f
yield_to_task	sched/sched.h	/^	bool (*yield_to_task)(struct rq *rq, struct task_struct *p, bool preempt);$/;"	m	struct:sched_class
yield_to_task_fair	sched/fair.c	/^static bool yield_to_task_fair(struct rq *rq, struct task_struct *p, bool preempt)$/;"	f	file:
yld_count	sched/sched.h	/^	unsigned int		yld_count;$/;"	m	struct:rq
zap_class	locking/lockdep.c	/^static void zap_class(struct pending_free *pf, struct lock_class *class)$/;"	f	file:
zap_other_threads	signal.c	/^int zap_other_threads(struct task_struct *p)$/;"	f
zap_pid_ns_processes	pid_namespace.c	/^void zap_pid_ns_processes(struct pid_namespace *pid_ns)$/;"	f
zapped	locking/lockdep.c	/^	struct list_head zapped;$/;"	m	struct:pending_free	typeref:struct:pending_free::list_head	file:
zero_cpu_stall_ticks	rcu/tree_stall.h	/^static void zero_cpu_stall_ticks(struct rcu_data *rdp)$/;"	f
zero_ul	sysctl.c	/^static unsigned long zero_ul;$/;"	v	file:
zone	power/snapshot.c	/^	struct mem_zone_bm_rtree *zone;$/;"	m	struct:bm_position	typeref:struct:bm_position::mem_zone_bm_rtree	file:
zones	power/snapshot.c	/^	struct list_head zones;$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::list_head	file:
